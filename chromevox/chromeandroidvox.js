var goog = goog || {};
goog.global = this;
goog.isDef = function(val) {
  return void 0 !== val;
};
goog.exportPath_ = function(name, opt_object, opt_objectToExportTo) {
  var parts = name.split("."), cur = opt_objectToExportTo || goog.global;
  parts[0] in cur || !cur.execScript || cur.execScript("var " + parts[0]);
  for (var part;parts.length && (part = parts.shift());) {
    !parts.length && goog.isDef(opt_object) ? cur[part] = opt_object : cur = cur[part] ? cur[part] : cur[part] = {};
  }
};
goog.define = function(name, defaultValue) {
  var value = defaultValue;
  goog.exportPath_(name, value);
};
goog.DEBUG = !1;
goog.LOCALE = "en";
goog.TRUSTED_SITE = !0;
goog.STRICT_MODE_COMPATIBLE = !1;
goog.DISALLOW_TEST_ONLY_CODE = !goog.DEBUG;
goog.ENABLE_CHROME_APP_SAFE_SCRIPT_LOADING = !1;
goog.provide = function(name) {
  if (goog.isInModuleLoader_()) {
    throw Error("goog.provide can not be used within a goog.module.");
  }
  goog.constructNamespace_(name);
};
goog.constructNamespace_ = function(name, opt_obj) {
  goog.exportPath_(name, opt_obj);
};
goog.VALID_MODULE_RE_ = /^[a-zA-Z_$][a-zA-Z0-9._$]*$/;
goog.module = function(name) {
  if (!goog.isString(name) || !name || -1 == name.search(goog.VALID_MODULE_RE_)) {
    throw Error("Invalid module identifier");
  }
  if (!goog.isInModuleLoader_()) {
    throw Error("Module " + name + " has been loaded incorrectly.");
  }
  if (goog.moduleLoaderState_.moduleName) {
    throw Error("goog.module may only be called once per module.");
  }
  goog.moduleLoaderState_.moduleName = name;
};
goog.module.get = function(name) {
  return goog.module.getInternal_(name);
};
goog.module.getInternal_ = function() {
};
goog.moduleLoaderState_ = null;
goog.isInModuleLoader_ = function() {
  return null != goog.moduleLoaderState_;
};
goog.module.declareLegacyNamespace = function() {
  goog.moduleLoaderState_.declareLegacyNamespace = !0;
};
goog.setTestOnly = function(opt_message) {
  if (goog.DISALLOW_TEST_ONLY_CODE) {
    throw opt_message = opt_message || "", Error("Importing test-only code into non-debug environment" + (opt_message ? ": " + opt_message : "."));
  }
};
goog.forwardDeclare = function() {
};
goog.getObjectByName = function(name, opt_obj) {
  for (var parts = name.split("."), cur = opt_obj || goog.global, part;part = parts.shift();) {
    if (goog.isDefAndNotNull(cur[part])) {
      cur = cur[part];
    } else {
      return null;
    }
  }
  return cur;
};
goog.globalize = function(obj, opt_global) {
  var global = opt_global || goog.global, x;
  for (x in obj) {
    global[x] = obj[x];
  }
};
goog.addDependency = function(relPath, provides, requires, opt_loadFlags) {
  if (goog.DEPENDENCIES_ENABLED) {
    var provide, require, path = relPath.replace(/\\/g, "/"), deps = goog.dependencies_;
    opt_loadFlags && "boolean" !== typeof opt_loadFlags || (opt_loadFlags = opt_loadFlags ? {module:"goog"} : {});
    for (var i = 0;provide = provides[i];i++) {
      deps.nameToPath[provide] = path, deps.pathIsModule[path] = "goog" == opt_loadFlags.module;
    }
    for (var j = 0;require = requires[j];j++) {
      path in deps.requires || (deps.requires[path] = {}), deps.requires[path][require] = !0;
    }
  }
};
goog.useStrictRequires = !1;
goog.ENABLE_DEBUG_LOADER = !0;
goog.logToConsole_ = function(msg) {
  goog.global.console && goog.global.console.error(msg);
};
goog.require = function() {
};
goog.basePath = "";
goog.nullFunction = function() {
};
goog.abstractMethod = function() {
  throw Error("unimplemented abstract method");
};
goog.addSingletonGetter = function(ctor) {
  ctor.getInstance = function() {
    if (ctor.instance_) {
      return ctor.instance_;
    }
    goog.DEBUG && (goog.instantiatedSingletons_[goog.instantiatedSingletons_.length] = ctor);
    return ctor.instance_ = new ctor;
  };
};
goog.instantiatedSingletons_ = [];
goog.LOAD_MODULE_USING_EVAL = !0;
goog.SEAL_MODULE_EXPORTS = goog.DEBUG;
goog.loadedModules_ = {};
goog.DEPENDENCIES_ENABLED = !1;
goog.DEPENDENCIES_ENABLED && (goog.dependencies_ = {pathIsModule:{}, nameToPath:{}, requires:{}, visited:{}, written:{}, deferred:{}}, goog.inHtmlDocument_ = function() {
  var doc = goog.global.document;
  return null != doc && "write" in doc;
}, goog.findBasePath_ = function() {
  if (goog.isDef(goog.global.CLOSURE_BASE_PATH)) {
    goog.basePath = goog.global.CLOSURE_BASE_PATH;
  } else {
    if (goog.inHtmlDocument_()) {
      for (var doc = goog.global.document, scripts = doc.getElementsByTagName("SCRIPT"), i = scripts.length - 1;0 <= i;--i) {
        var script = scripts[i], src = script.src, qmark = src.lastIndexOf("?"), l = -1 == qmark ? src.length : qmark;
        if ("base.js" == src.substr(l - 7, 7)) {
          goog.basePath = src.substr(0, l - 7);
          break;
        }
      }
    }
  }
}, goog.importScript_ = function(src, opt_sourceText) {
  var importScript = goog.global.CLOSURE_IMPORT_SCRIPT || goog.writeScriptTag_;
  importScript(src, opt_sourceText) && (goog.dependencies_.written[src] = !0);
}, goog.IS_OLD_IE_ = !(goog.global.atob || !goog.global.document || !goog.global.document.all), goog.importModule_ = function(src) {
  var bootstrap = 'goog.retrieveAndExecModule_("' + src + '");';
  goog.importScript_("", bootstrap) && (goog.dependencies_.written[src] = !0);
}, goog.queuedModules_ = [], goog.wrapModule_ = function(srcUrl, scriptText) {
  return goog.LOAD_MODULE_USING_EVAL && goog.isDef(goog.global.JSON) ? "goog.loadModule(" + goog.global.JSON.stringify(scriptText + "\n//# sourceURL=" + srcUrl + "\n") + ");" : 'goog.loadModule(function(exports) {"use strict";' + scriptText + "\n;return exports});\n//# sourceURL=" + srcUrl + "\n";
}, goog.loadQueuedModules_ = function() {
  var count = goog.queuedModules_.length;
  if (0 < count) {
    var queue = goog.queuedModules_;
    goog.queuedModules_ = [];
    for (var i = 0;i < count;i++) {
      var path = queue[i];
      goog.maybeProcessDeferredPath_(path);
    }
  }
}, goog.maybeProcessDeferredDep_ = function(name) {
  if (goog.isDeferredModule_(name) && goog.allDepsAreAvailable_(name)) {
    var path = goog.getPathFromDeps_(name);
    goog.maybeProcessDeferredPath_(goog.basePath + path);
  }
}, goog.isDeferredModule_ = function(name) {
  var path = goog.getPathFromDeps_(name);
  if (path && goog.dependencies_.pathIsModule[path]) {
    var abspath = goog.basePath + path;
    return abspath in goog.dependencies_.deferred;
  }
  return !1;
}, goog.allDepsAreAvailable_ = function(name) {
  var path = goog.getPathFromDeps_(name);
  if (path && path in goog.dependencies_.requires) {
    for (var requireName in goog.dependencies_.requires[path]) {
      if (!goog.isProvided_(requireName) && !goog.isDeferredModule_(requireName)) {
        return !1;
      }
    }
  }
  return !0;
}, goog.maybeProcessDeferredPath_ = function(abspath) {
  if (abspath in goog.dependencies_.deferred) {
    var src = goog.dependencies_.deferred[abspath];
    delete goog.dependencies_.deferred[abspath];
    goog.globalEval(src);
  }
}, goog.loadModuleFromUrl = function(url) {
  goog.retrieveAndExecModule_(url);
}, goog.loadModule = function(moduleDef) {
  var previousState = goog.moduleLoaderState_;
  try {
    goog.moduleLoaderState_ = {moduleName:void 0, declareLegacyNamespace:!1};
    var exports;
    if (goog.isFunction(moduleDef)) {
      exports = moduleDef.call(goog.global, {});
    } else {
      if (goog.isString(moduleDef)) {
        exports = goog.loadModuleFromSource_.call(goog.global, moduleDef);
      } else {
        throw Error("Invalid module definition");
      }
    }
    var moduleName = goog.moduleLoaderState_.moduleName;
    if (!goog.isString(moduleName) || !moduleName) {
      throw Error('Invalid module name "' + moduleName + '"');
    }
    goog.moduleLoaderState_.declareLegacyNamespace ? goog.constructNamespace_(moduleName, exports) : goog.SEAL_MODULE_EXPORTS && Object.seal && Object.seal(exports);
    goog.loadedModules_[moduleName] = exports;
  } finally {
    goog.moduleLoaderState_ = previousState;
  }
}, goog.loadModuleFromSource_ = function(JSCompiler_OptimizeArgumentsArray_p0) {
  var exports = {};
  eval(JSCompiler_OptimizeArgumentsArray_p0);
  return exports;
}, goog.writeScriptSrcNode_ = function(src) {
  goog.global.document.write('<script type="text/javascript" src="' + src + '">\x3c/script>');
}, goog.appendScriptSrcNode_ = function(src) {
  var doc = goog.global.document, scriptEl = doc.createElement("script");
  scriptEl.type = "text/javascript";
  scriptEl.src = src;
  scriptEl.defer = !1;
  scriptEl.async = !1;
  doc.head.appendChild(scriptEl);
}, goog.writeScriptTag_ = function(src, opt_sourceText) {
  if (goog.inHtmlDocument_()) {
    var doc = goog.global.document;
    if (!goog.ENABLE_CHROME_APP_SAFE_SCRIPT_LOADING && "complete" == doc.readyState) {
      var isDeps = /\bdeps.js$/.test(src);
      if (isDeps) {
        return !1;
      }
      throw Error('Cannot write "' + src + '" after document load');
    }
    var isOldIE = goog.IS_OLD_IE_;
    if (void 0 === opt_sourceText) {
      if (isOldIE) {
        var state = " onreadystatechange='goog.onScriptLoad_(this, " + ++goog.lastNonModuleScriptIndex_ + ")' ";
        doc.write('<script type="text/javascript" src="' + src + '"' + state + ">\x3c/script>");
      } else {
        goog.ENABLE_CHROME_APP_SAFE_SCRIPT_LOADING ? goog.appendScriptSrcNode_(src) : goog.writeScriptSrcNode_(src);
      }
    } else {
      doc.write('<script type="text/javascript">' + opt_sourceText + "\x3c/script>");
    }
    return !0;
  }
  return !1;
}, goog.lastNonModuleScriptIndex_ = 0, goog.onScriptLoad_ = function(script, scriptIndex) {
  "complete" == script.readyState && goog.lastNonModuleScriptIndex_ == scriptIndex && goog.loadQueuedModules_();
  return !0;
}, goog.writeScripts_ = function(pathToLoad) {
  function visitNode(path) {
    if (!(path in deps.written || path in deps.visited)) {
      deps.visited[path] = !0;
      if (path in deps.requires) {
        for (var requireName in deps.requires[path]) {
          if (!goog.isProvided_(requireName)) {
            if (requireName in deps.nameToPath) {
              visitNode(deps.nameToPath[requireName]);
            } else {
              throw Error("Undefined nameToPath for " + requireName);
            }
          }
        }
      }
      path in seenScript || (seenScript[path] = !0, scripts.push(path));
    }
  }
  var scripts = [], seenScript = {}, deps = goog.dependencies_;
  visitNode(pathToLoad);
  for (var i = 0;i < scripts.length;i++) {
    var path$$0 = scripts[i];
    goog.dependencies_.written[path$$0] = !0;
  }
  var moduleState = goog.moduleLoaderState_;
  goog.moduleLoaderState_ = null;
  for (i = 0;i < scripts.length;i++) {
    if (path$$0 = scripts[i]) {
      deps.pathIsModule[path$$0] ? goog.importModule_(goog.basePath + path$$0) : goog.importScript_(goog.basePath + path$$0);
    } else {
      throw goog.moduleLoaderState_ = moduleState, Error("Undefined script input");
    }
  }
  goog.moduleLoaderState_ = moduleState;
}, goog.getPathFromDeps_ = function(rule) {
  return rule in goog.dependencies_.nameToPath ? goog.dependencies_.nameToPath[rule] : null;
}, goog.findBasePath_(), goog.global.CLOSURE_NO_DEPS || goog.importScript_(goog.basePath + "deps.js"));
goog.normalizePath_ = function(path) {
  for (var components = path.split("/"), i = 0;i < components.length;) {
    "." == components[i] ? components.splice(i, 1) : i && ".." == components[i] && components[i - 1] && ".." != components[i - 1] ? components.splice(--i, 2) : i++;
  }
  return components.join("/");
};
goog.loadFileSync_ = function(src) {
  if (goog.global.CLOSURE_LOAD_FILE_SYNC) {
    return goog.global.CLOSURE_LOAD_FILE_SYNC(src);
  }
  var xhr = new goog.global.XMLHttpRequest;
  xhr.open("get", src, !1);
  xhr.send();
  return xhr.responseText;
};
goog.retrieveAndExecModule_ = function() {
};
goog.typeOf = function(value) {
  var s = typeof value;
  if ("object" == s) {
    if (value) {
      if (value instanceof Array) {
        return "array";
      }
      if (value instanceof Object) {
        return s;
      }
      var className = Object.prototype.toString.call(value);
      if ("[object Window]" == className) {
        return "object";
      }
      if ("[object Array]" == className || "number" == typeof value.length && "undefined" != typeof value.splice && "undefined" != typeof value.propertyIsEnumerable && !value.propertyIsEnumerable("splice")) {
        return "array";
      }
      if ("[object Function]" == className || "undefined" != typeof value.call && "undefined" != typeof value.propertyIsEnumerable && !value.propertyIsEnumerable("call")) {
        return "function";
      }
    } else {
      return "null";
    }
  } else {
    if ("function" == s && "undefined" == typeof value.call) {
      return "object";
    }
  }
  return s;
};
goog.isNull = function(val) {
  return null === val;
};
goog.isDefAndNotNull = function(val) {
  return null != val;
};
goog.isArray = function(val) {
  return "array" == goog.typeOf(val);
};
goog.isArrayLike = function(val) {
  var type = goog.typeOf(val);
  return "array" == type || "object" == type && "number" == typeof val.length;
};
goog.isDateLike = function(val) {
  return goog.isObject(val) && "function" == typeof val.getFullYear;
};
goog.isString = function(val) {
  return "string" == typeof val;
};
goog.isBoolean = function(val) {
  return "boolean" == typeof val;
};
goog.isNumber = function(val) {
  return "number" == typeof val;
};
goog.isFunction = function(val) {
  return "function" == goog.typeOf(val);
};
goog.isObject = function(val) {
  var type = typeof val;
  return "object" == type && null != val || "function" == type;
};
goog.getUid = function(obj) {
  return obj[goog.UID_PROPERTY_] || (obj[goog.UID_PROPERTY_] = ++goog.uidCounter_);
};
goog.hasUid = function(obj) {
  return !!obj[goog.UID_PROPERTY_];
};
goog.removeUid = function(obj) {
  null !== obj && "removeAttribute" in obj && obj.removeAttribute(goog.UID_PROPERTY_);
  try {
    delete obj[goog.UID_PROPERTY_];
  } catch (ex) {
  }
};
goog.UID_PROPERTY_ = "closure_uid_" + (1E9 * Math.random() >>> 0);
goog.uidCounter_ = 0;
goog.getHashCode = goog.getUid;
goog.removeHashCode = goog.removeUid;
goog.cloneObject = function(obj) {
  var type = goog.typeOf(obj);
  if ("object" == type || "array" == type) {
    if (obj.clone) {
      return obj.clone();
    }
    var clone = "array" == type ? [] : {}, key;
    for (key in obj) {
      clone[key] = goog.cloneObject(obj[key]);
    }
    return clone;
  }
  return obj;
};
goog.bindNative_ = function(fn, selfObj, var_args) {
  return fn.call.apply(fn.bind, arguments);
};
goog.bindJs_ = function(fn, selfObj, var_args) {
  if (!fn) {
    throw Error();
  }
  if (2 < arguments.length) {
    var boundArgs = Array.prototype.slice.call(arguments, 2);
    return function() {
      var newArgs = Array.prototype.slice.call(arguments);
      Array.prototype.unshift.apply(newArgs, boundArgs);
      return fn.apply(selfObj, newArgs);
    };
  }
  return function() {
    return fn.apply(selfObj, arguments);
  };
};
goog.bind = function(fn, selfObj, var_args) {
  Function.prototype.bind && -1 != Function.prototype.bind.toString().indexOf("native code") ? goog.bind = goog.bindNative_ : goog.bind = goog.bindJs_;
  return goog.bind.apply(null, arguments);
};
goog.partial = function(fn, var_args) {
  var args = Array.prototype.slice.call(arguments, 1);
  return function() {
    var newArgs = args.slice();
    newArgs.push.apply(newArgs, arguments);
    return fn.apply(this, newArgs);
  };
};
goog.mixin = function(target, source) {
  for (var x in source) {
    target[x] = source[x];
  }
};
goog.now = goog.TRUSTED_SITE && Date.now || function() {
  return +new Date;
};
goog.globalEval = function(script) {
  if (goog.global.execScript) {
    goog.global.execScript(script, "JavaScript");
  } else {
    if (goog.global.eval) {
      if (null == goog.evalWorksForGlobals_) {
        if (goog.global.eval("var _evalTest_ = 1;"), "undefined" != typeof goog.global._evalTest_) {
          try {
            delete goog.global._evalTest_;
          } catch (ignore) {
          }
          goog.evalWorksForGlobals_ = !0;
        } else {
          goog.evalWorksForGlobals_ = !1;
        }
      }
      if (goog.evalWorksForGlobals_) {
        goog.global.eval(script);
      } else {
        var doc = goog.global.document, scriptElt = doc.createElement("SCRIPT");
        scriptElt.type = "text/javascript";
        scriptElt.defer = !1;
        scriptElt.appendChild(doc.createTextNode(script));
        doc.body.appendChild(scriptElt);
        doc.body.removeChild(scriptElt);
      }
    } else {
      throw Error("goog.globalEval not available");
    }
  }
};
goog.evalWorksForGlobals_ = null;
goog.getCssName = function(className, opt_modifier) {
  var getMapping = function(cssName) {
    return goog.cssNameMapping_[cssName] || cssName;
  }, renameByParts = function(cssName) {
    for (var parts = cssName.split("-"), mapped = [], i = 0;i < parts.length;i++) {
      mapped.push(getMapping(parts[i]));
    }
    return mapped.join("-");
  }, rename;
  rename = goog.cssNameMapping_ ? "BY_WHOLE" == goog.cssNameMappingStyle_ ? getMapping : renameByParts : function(a) {
    return a;
  };
  return opt_modifier ? className + "-" + rename(opt_modifier) : rename(className);
};
goog.setCssNameMapping = function(mapping, opt_style) {
  goog.cssNameMapping_ = mapping;
  goog.cssNameMappingStyle_ = opt_style;
};
goog.getMsg = function(str, opt_values) {
  opt_values && (str = str.replace(/\{\$([^}]+)}/g, function(match, key) {
    return null != opt_values && key in opt_values ? opt_values[key] : match;
  }));
  return str;
};
goog.getMsgWithFallback = function(a) {
  return a;
};
goog.exportSymbol = function(publicPath, object, opt_objectToExportTo) {
  goog.exportPath_(publicPath, object, opt_objectToExportTo);
};
goog.exportProperty = function(object, publicName, symbol) {
  object[publicName] = symbol;
};
goog.inherits = function(childCtor, parentCtor) {
  function tempCtor() {
  }
  tempCtor.prototype = parentCtor.prototype;
  childCtor.superClass_ = parentCtor.prototype;
  childCtor.prototype = new tempCtor;
  childCtor.prototype.constructor = childCtor;
  childCtor.base = function(me, methodName, var_args) {
    for (var args = Array(arguments.length - 2), i = 2;i < arguments.length;i++) {
      args[i - 2] = arguments[i];
    }
    return parentCtor.prototype[methodName].apply(me, args);
  };
};
goog.base = function(me, opt_methodName, var_args) {
  var caller = arguments.callee.caller;
  if (goog.STRICT_MODE_COMPATIBLE || goog.DEBUG && !caller) {
    throw Error("arguments.caller not defined.  goog.base() cannot be used with strict mode code. See http://www.ecma-international.org/ecma-262/5.1/#sec-C");
  }
  if (caller.superClass_) {
    for (var ctorArgs = Array(arguments.length - 1), i = 1;i < arguments.length;i++) {
      ctorArgs[i - 1] = arguments[i];
    }
    return caller.superClass_.constructor.apply(me, ctorArgs);
  }
  for (var args = Array(arguments.length - 2), i = 2;i < arguments.length;i++) {
    args[i - 2] = arguments[i];
  }
  for (var foundCaller = !1, ctor = me.constructor;ctor;ctor = ctor.superClass_ && ctor.superClass_.constructor) {
    if (ctor.prototype[opt_methodName] === caller) {
      foundCaller = !0;
    } else {
      if (foundCaller) {
        return ctor.prototype[opt_methodName].apply(me, args);
      }
    }
  }
  if (me[opt_methodName] === caller) {
    return me.constructor.prototype[opt_methodName].apply(me, args);
  }
  throw Error("goog.base called from a method of one name to a method of a different name");
};
goog.scope = function(fn) {
  if (goog.isInModuleLoader_()) {
    throw Error("goog.scope is not supported within a goog.module.");
  }
  fn.call(goog.global);
};
goog.defineClass = function(superClass, def) {
  var constructor = def.constructor, statics = def.statics;
  constructor && constructor != Object.prototype.constructor || (constructor = function() {
    throw Error("cannot instantiate an interface (no constructor defined).");
  });
  var cls = goog.defineClass.createSealingConstructor_(constructor, superClass);
  superClass && goog.inherits(cls, superClass);
  delete def.constructor;
  delete def.statics;
  goog.defineClass.applyProperties_(cls.prototype, def);
  null != statics && (statics instanceof Function ? statics(cls) : goog.defineClass.applyProperties_(cls, statics));
  return cls;
};
goog.defineClass.SEAL_CLASS_INSTANCES = goog.DEBUG;
goog.defineClass.createSealingConstructor_ = function(ctr, superClass) {
  if (goog.defineClass.SEAL_CLASS_INSTANCES && Object.seal instanceof Function) {
    if (superClass && superClass.prototype && superClass.prototype[goog.UNSEALABLE_CONSTRUCTOR_PROPERTY_]) {
      return ctr;
    }
    var wrappedCtr = function() {
      var instance = ctr.apply(this, arguments) || this;
      instance[goog.UID_PROPERTY_] = instance[goog.UID_PROPERTY_];
      this.constructor === wrappedCtr && Object.seal(instance);
      return instance;
    };
    return wrappedCtr;
  }
  return ctr;
};
goog.defineClass.OBJECT_PROTOTYPE_FIELDS_ = "constructor hasOwnProperty isPrototypeOf propertyIsEnumerable toLocaleString toString valueOf".split(" ");
goog.defineClass.applyProperties_ = function(target, source) {
  for (var key in source) {
    Object.prototype.hasOwnProperty.call(source, key) && (target[key] = source[key]);
  }
  for (var i = 0;i < goog.defineClass.OBJECT_PROTOTYPE_FIELDS_.length;i++) {
    key = goog.defineClass.OBJECT_PROTOTYPE_FIELDS_[i], Object.prototype.hasOwnProperty.call(source, key) && (target[key] = source[key]);
  }
};
goog.tagUnsealableClass = function() {
};
goog.UNSEALABLE_CONSTRUCTOR_PROPERTY_ = "goog_defineClass_legacy_unsealable";
var cvox = {VERBOSITY_VERBOSE:0, VERBOSITY_BRIEF:1, ChromeVox:function() {
}};
cvox.ChromeVox.host = null;
cvox.ChromeVox.msgs = null;
cvox.ChromeVox.isActive = !0;
cvox.ChromeVox.version = null;
cvox.ChromeVox.earcons = null;
cvox.ChromeVox.navigationManager = null;
cvox.ChromeVox.serializer = null;
cvox.ChromeVox.isStickyOn = !1;
cvox.ChromeVox.keyPrefixOn = !1;
cvox.ChromeVox.verbosity = cvox.VERBOSITY_VERBOSE;
cvox.ChromeVox.typingEcho = 0;
cvox.ChromeVox.keyEcho = {};
cvox.ChromeVox.position = {};
cvox.ChromeVox.isChromeOS = -1 != navigator.userAgent.indexOf("CrOS");
cvox.ChromeVox.isMac = -1 != navigator.platform.indexOf("Mac");
cvox.ChromeVox.modKeyStr = cvox.ChromeVox.isChromeOS ? "Shift+Search" : cvox.ChromeVox.isMac ? "Ctrl+Cmd" : "Shift+Alt";
cvox.ChromeVox.sequenceSwitchKeyCodes = [];
cvox.ChromeVox.visitedUrls = {};
cvox.ChromeVox.markInUserCommand = function() {
};
cvox.ChromeVox.syncToNode = function() {
};
cvox.ChromeVox.speakNode = function() {
};
cvox.ChromeVox.executeUserCommand = function() {
};
cvox.ChromeVox.entireDocumentIsHidden = !1;
cvox.ChromeVox.storeOn = function(store) {
  store.isStickyOn = cvox.ChromeVox.isStickyOn;
  cvox.ChromeVox.navigationManager.storeOn(store);
};
cvox.ChromeVox.readFrom = function(store) {
  cvox.ChromeVox.isStickyOn = store.isStickyOn;
  cvox.ChromeVox.navigationManager.readFrom(store);
};
cvox.Cursor = function(node, index, text) {
  this.node = node;
  this.index = index;
  this.text = text;
};
cvox.Cursor.prototype.clone = function() {
  return new cvox.Cursor(this.node, this.index, this.text);
};
cvox.Cursor.prototype.copyFrom = function(otherCursor) {
  this.node = otherCursor.node;
  this.index = otherCursor.index;
  this.text = otherCursor.text;
};
cvox.Cursor.prototype.equals = function(rhs) {
  return this.node == rhs.node && this.index == rhs.index && this.text == rhs.text;
};
goog.debug = {};
goog.debug.Error = function(opt_msg) {
  if (Error.captureStackTrace) {
    Error.captureStackTrace(this, goog.debug.Error);
  } else {
    var stack = Error().stack;
    stack && (this.stack = stack);
  }
  opt_msg && (this.message = String(opt_msg));
};
goog.inherits(goog.debug.Error, Error);
goog.debug.Error.prototype.name = "CustomError";
goog.dom = {};
goog.dom.NodeType = {ELEMENT:1, ATTRIBUTE:2, TEXT:3, CDATA_SECTION:4, ENTITY_REFERENCE:5, ENTITY:6, PROCESSING_INSTRUCTION:7, COMMENT:8, DOCUMENT:9, DOCUMENT_TYPE:10, DOCUMENT_FRAGMENT:11, NOTATION:12};
goog.string = {};
goog.string.DETECT_DOUBLE_ESCAPING = !1;
goog.string.FORCE_NON_DOM_HTML_UNESCAPING = !1;
goog.string.Unicode = {NBSP:"\u00a0"};
goog.string.startsWith = function(str, prefix) {
  return 0 == str.lastIndexOf(prefix, 0);
};
goog.string.endsWith = function(str, suffix) {
  var l = str.length - suffix.length;
  return 0 <= l && str.indexOf(suffix, l) == l;
};
goog.string.caseInsensitiveStartsWith = function(str, prefix) {
  return 0 == goog.string.caseInsensitiveCompare(prefix, str.substr(0, prefix.length));
};
goog.string.caseInsensitiveEndsWith = function(str, suffix) {
  return 0 == goog.string.caseInsensitiveCompare(suffix, str.substr(str.length - suffix.length, suffix.length));
};
goog.string.caseInsensitiveEquals = function(str1, str2) {
  return str1.toLowerCase() == str2.toLowerCase();
};
goog.string.subs = function(str, var_args) {
  for (var splitParts = str.split("%s"), returnString = "", subsArguments = Array.prototype.slice.call(arguments, 1);subsArguments.length && 1 < splitParts.length;) {
    returnString += splitParts.shift() + subsArguments.shift();
  }
  return returnString + splitParts.join("%s");
};
goog.string.collapseWhitespace = function(str) {
  return str.replace(/[\s\xa0]+/g, " ").replace(/^\s+|\s+$/g, "");
};
goog.string.isEmptyOrWhitespace = function(str) {
  return /^[\s\xa0]*$/.test(str);
};
goog.string.isEmptyString = function(str) {
  return 0 == str.length;
};
goog.string.isEmpty = goog.string.isEmptyOrWhitespace;
goog.string.isEmptyOrWhitespaceSafe = function(str) {
  return goog.string.isEmptyOrWhitespace(goog.string.makeSafe(str));
};
goog.string.isEmptySafe = goog.string.isEmptyOrWhitespaceSafe;
goog.string.isBreakingWhitespace = function(str) {
  return !/[^\t\n\r ]/.test(str);
};
goog.string.isAlpha = function(str) {
  return !/[^a-zA-Z]/.test(str);
};
goog.string.isNumeric = function(str) {
  return !/[^0-9]/.test(str);
};
goog.string.isAlphaNumeric = function(str) {
  return !/[^a-zA-Z0-9]/.test(str);
};
goog.string.isSpace = function(ch) {
  return " " == ch;
};
goog.string.isUnicodeChar = function(ch) {
  return 1 == ch.length && " " <= ch && "~" >= ch || "\u0080" <= ch && "\ufffd" >= ch;
};
goog.string.stripNewlines = function(str) {
  return str.replace(/(\r\n|\r|\n)+/g, " ");
};
goog.string.canonicalizeNewlines = function(str) {
  return str.replace(/(\r\n|\r|\n)/g, "\n");
};
goog.string.normalizeWhitespace = function(str) {
  return str.replace(/\xa0|\s/g, " ");
};
goog.string.normalizeSpaces = function(str) {
  return str.replace(/\xa0|[ \t]+/g, " ");
};
goog.string.collapseBreakingSpaces = function(str) {
  return str.replace(/[\t\r\n ]+/g, " ").replace(/^[\t\r\n ]+|[\t\r\n ]+$/g, "");
};
goog.string.trim = goog.TRUSTED_SITE && String.prototype.trim ? function(str) {
  return str.trim();
} : function(str) {
  return str.replace(/^[\s\xa0]+|[\s\xa0]+$/g, "");
};
goog.string.trimLeft = function(str) {
  return str.replace(/^[\s\xa0]+/, "");
};
goog.string.trimRight = function(str) {
  return str.replace(/[\s\xa0]+$/, "");
};
goog.string.caseInsensitiveCompare = function(str1, str2) {
  var test1 = String(str1).toLowerCase(), test2 = String(str2).toLowerCase();
  return test1 < test2 ? -1 : test1 == test2 ? 0 : 1;
};
goog.string.numberAwareCompare_ = function(str1, str2, tokenizerRegExp) {
  if (str1 == str2) {
    return 0;
  }
  if (!str1) {
    return -1;
  }
  if (!str2) {
    return 1;
  }
  for (var tokens1 = str1.toLowerCase().match(tokenizerRegExp), tokens2 = str2.toLowerCase().match(tokenizerRegExp), count = Math.min(tokens1.length, tokens2.length), i = 0;i < count;i++) {
    var a = tokens1[i], b = tokens2[i];
    if (a != b) {
      var num1 = parseInt(a, 10);
      if (!isNaN(num1)) {
        var num2 = parseInt(b, 10);
        if (!isNaN(num2) && num1 - num2) {
          return num1 - num2;
        }
      }
      return a < b ? -1 : 1;
    }
  }
  return tokens1.length != tokens2.length ? tokens1.length - tokens2.length : str1 < str2 ? -1 : 1;
};
goog.string.intAwareCompare = function(str1, str2) {
  return goog.string.numberAwareCompare_(str1, str2, /\d+|\D+/g);
};
goog.string.floatAwareCompare = function(str1, str2) {
  return goog.string.numberAwareCompare_(str1, str2, /\d+|\.\d+|\D+/g);
};
goog.string.numerateCompare = goog.string.floatAwareCompare;
goog.string.urlEncode = function(str) {
  return encodeURIComponent(String(str));
};
goog.string.urlDecode = function(str) {
  return decodeURIComponent(str.replace(/\+/g, " "));
};
goog.string.newLineToBr = function(str, opt_xml) {
  return str.replace(/(\r\n|\r|\n)/g, opt_xml ? "<br />" : "<br>");
};
goog.string.htmlEscape = function(str, opt_isLikelyToContainHtmlChars) {
  if (opt_isLikelyToContainHtmlChars) {
    str = str.replace(goog.string.AMP_RE_, "&amp;").replace(goog.string.LT_RE_, "&lt;").replace(goog.string.GT_RE_, "&gt;").replace(goog.string.QUOT_RE_, "&quot;").replace(goog.string.SINGLE_QUOTE_RE_, "&#39;").replace(goog.string.NULL_RE_, "&#0;"), goog.string.DETECT_DOUBLE_ESCAPING && (str = str.replace(goog.string.E_RE_, "&#101;"));
  } else {
    if (!goog.string.ALL_RE_.test(str)) {
      return str;
    }
    -1 != str.indexOf("&") && (str = str.replace(goog.string.AMP_RE_, "&amp;"));
    -1 != str.indexOf("<") && (str = str.replace(goog.string.LT_RE_, "&lt;"));
    -1 != str.indexOf(">") && (str = str.replace(goog.string.GT_RE_, "&gt;"));
    -1 != str.indexOf('"') && (str = str.replace(goog.string.QUOT_RE_, "&quot;"));
    -1 != str.indexOf("'") && (str = str.replace(goog.string.SINGLE_QUOTE_RE_, "&#39;"));
    -1 != str.indexOf("\x00") && (str = str.replace(goog.string.NULL_RE_, "&#0;"));
    goog.string.DETECT_DOUBLE_ESCAPING && -1 != str.indexOf("e") && (str = str.replace(goog.string.E_RE_, "&#101;"));
  }
  return str;
};
goog.string.AMP_RE_ = /&/g;
goog.string.LT_RE_ = /</g;
goog.string.GT_RE_ = />/g;
goog.string.QUOT_RE_ = /"/g;
goog.string.SINGLE_QUOTE_RE_ = /'/g;
goog.string.NULL_RE_ = /\x00/g;
goog.string.E_RE_ = /e/g;
goog.string.ALL_RE_ = goog.string.DETECT_DOUBLE_ESCAPING ? /[\x00&<>"'e]/ : /[\x00&<>"']/;
goog.string.unescapeEntities = function(str) {
  return goog.string.contains(str, "&") ? !goog.string.FORCE_NON_DOM_HTML_UNESCAPING && "document" in goog.global ? goog.string.unescapeEntitiesUsingDom_(str) : goog.string.unescapePureXmlEntities_(str) : str;
};
goog.string.unescapeEntitiesWithDocument = function(str, document) {
  return goog.string.contains(str, "&") ? goog.string.unescapeEntitiesUsingDom_(str, document) : str;
};
goog.string.unescapeEntitiesUsingDom_ = function(str, opt_document) {
  var seen = {"&amp;":"&", "&lt;":"<", "&gt;":">", "&quot;":'"'}, div;
  div = opt_document ? opt_document.createElement("div") : goog.global.document.createElement("div");
  return str.replace(goog.string.HTML_ENTITY_PATTERN_, function(s, entity) {
    var value = seen[s];
    if (value) {
      return value;
    }
    if ("#" == entity.charAt(0)) {
      var n = Number("0" + entity.substr(1));
      isNaN(n) || (value = String.fromCharCode(n));
    }
    value || (div.innerHTML = s + " ", value = div.firstChild.nodeValue.slice(0, -1));
    return seen[s] = value;
  });
};
goog.string.unescapePureXmlEntities_ = function(str) {
  return str.replace(/&([^;]+);/g, function(s, entity) {
    switch(entity) {
      case "amp":
        return "&";
      case "lt":
        return "<";
      case "gt":
        return ">";
      case "quot":
        return '"';
      default:
        if ("#" == entity.charAt(0)) {
          var n = Number("0" + entity.substr(1));
          if (!isNaN(n)) {
            return String.fromCharCode(n);
          }
        }
        return s;
    }
  });
};
goog.string.HTML_ENTITY_PATTERN_ = /&([^;\s<&]+);?/g;
goog.string.whitespaceEscape = function(str, opt_xml) {
  return goog.string.newLineToBr(str.replace(/  /g, " &#160;"), opt_xml);
};
goog.string.preserveSpaces = function(str) {
  return str.replace(/(^|[\n ]) /g, "$1" + goog.string.Unicode.NBSP);
};
goog.string.stripQuotes = function(str, quoteChars) {
  for (var length = quoteChars.length, i = 0;i < length;i++) {
    var quoteChar = 1 == length ? quoteChars : quoteChars.charAt(i);
    if (str.charAt(0) == quoteChar && str.charAt(str.length - 1) == quoteChar) {
      return str.substring(1, str.length - 1);
    }
  }
  return str;
};
goog.string.truncate = function(str, chars, opt_protectEscapedCharacters) {
  opt_protectEscapedCharacters && (str = goog.string.unescapeEntities(str));
  str.length > chars && (str = str.substring(0, chars - 3) + "...");
  opt_protectEscapedCharacters && (str = goog.string.htmlEscape(str));
  return str;
};
goog.string.truncateMiddle = function(str, chars, opt_protectEscapedCharacters, opt_trailingChars) {
  opt_protectEscapedCharacters && (str = goog.string.unescapeEntities(str));
  if (opt_trailingChars && str.length > chars) {
    opt_trailingChars > chars && (opt_trailingChars = chars);
    var endPoint = str.length - opt_trailingChars, startPoint = chars - opt_trailingChars;
    str = str.substring(0, startPoint) + "..." + str.substring(endPoint);
  } else {
    if (str.length > chars) {
      var half = Math.floor(chars / 2), endPos = str.length - half, half = half + chars % 2;
      str = str.substring(0, half) + "..." + str.substring(endPos);
    }
  }
  opt_protectEscapedCharacters && (str = goog.string.htmlEscape(str));
  return str;
};
goog.string.specialEscapeChars_ = {"\x00":"\\0", "\b":"\\b", "\f":"\\f", "\n":"\\n", "\r":"\\r", "\t":"\\t", "\x0B":"\\x0B", '"':'\\"', "\\":"\\\\", "<":"<"};
goog.string.jsEscapeCache_ = {"'":"\\'"};
goog.string.quote = function(s) {
  s = String(s);
  for (var sb = ['"'], i = 0;i < s.length;i++) {
    var ch = s.charAt(i), cc = ch.charCodeAt(0);
    sb[i + 1] = goog.string.specialEscapeChars_[ch] || (31 < cc && 127 > cc ? ch : goog.string.escapeChar(ch));
  }
  sb.push('"');
  return sb.join("");
};
goog.string.escapeString = function(str) {
  for (var sb = [], i = 0;i < str.length;i++) {
    sb[i] = goog.string.escapeChar(str.charAt(i));
  }
  return sb.join("");
};
goog.string.escapeChar = function(c) {
  if (c in goog.string.jsEscapeCache_) {
    return goog.string.jsEscapeCache_[c];
  }
  if (c in goog.string.specialEscapeChars_) {
    return goog.string.jsEscapeCache_[c] = goog.string.specialEscapeChars_[c];
  }
  var rv = c, cc = c.charCodeAt(0);
  if (31 < cc && 127 > cc) {
    rv = c;
  } else {
    if (256 > cc) {
      if (rv = "\\x", 16 > cc || 256 < cc) {
        rv += "0";
      }
    } else {
      rv = "\\u", 4096 > cc && (rv += "0");
    }
    rv += cc.toString(16).toUpperCase();
  }
  return goog.string.jsEscapeCache_[c] = rv;
};
goog.string.contains = function(str, subString) {
  return -1 != str.indexOf(subString);
};
goog.string.caseInsensitiveContains = function(str, subString) {
  return goog.string.contains(str.toLowerCase(), subString.toLowerCase());
};
goog.string.countOf = function(s, ss) {
  return s && ss ? s.split(ss).length - 1 : 0;
};
goog.string.removeAt = function(s, index, stringLength) {
  var resultStr = s;
  0 <= index && index < s.length && 0 < stringLength && (resultStr = s.substr(0, index) + s.substr(index + stringLength, s.length - index - stringLength));
  return resultStr;
};
goog.string.remove = function(s, ss) {
  var re = new RegExp(goog.string.regExpEscape(ss), "");
  return s.replace(re, "");
};
goog.string.removeAll = function(s, ss) {
  var re = new RegExp(goog.string.regExpEscape(ss), "g");
  return s.replace(re, "");
};
goog.string.regExpEscape = function(s) {
  return String(s).replace(/([-()\[\]{}+?*.$\^|,:#<!\\])/g, "\\$1").replace(/\x08/g, "\\x08");
};
goog.string.repeat = String.prototype.repeat ? function(string, length) {
  return string.repeat(length);
} : function(string, length) {
  return Array(length + 1).join(string);
};
goog.string.padNumber = function(num, length, opt_precision) {
  var s = goog.isDef(opt_precision) ? num.toFixed(opt_precision) : String(num), index = s.indexOf(".");
  -1 == index && (index = s.length);
  return goog.string.repeat("0", Math.max(0, length - index)) + s;
};
goog.string.makeSafe = function(obj) {
  return null == obj ? "" : String(obj);
};
goog.string.buildString = function(var_args) {
  return Array.prototype.join.call(arguments, "");
};
goog.string.getRandomString = function() {
  return Math.floor(2147483648 * Math.random()).toString(36) + Math.abs(Math.floor(2147483648 * Math.random()) ^ goog.now()).toString(36);
};
goog.string.compareVersions = function(version1, version2) {
  for (var order = 0, v1Subs = goog.string.trim(String(version1)).split("."), v2Subs = goog.string.trim(String(version2)).split("."), subCount = Math.max(v1Subs.length, v2Subs.length), subIdx = 0;0 == order && subIdx < subCount;subIdx++) {
    var v1Sub = v1Subs[subIdx] || "", v2Sub = v2Subs[subIdx] || "", v1CompParser = /(\d*)(\D*)/g, v2CompParser = /(\d*)(\D*)/g;
    do {
      var v1Comp = v1CompParser.exec(v1Sub) || ["", "", ""], v2Comp = v2CompParser.exec(v2Sub) || ["", "", ""];
      if (0 == v1Comp[0].length && 0 == v2Comp[0].length) {
        break;
      }
      var v1CompNum = 0 == v1Comp[1].length ? 0 : parseInt(v1Comp[1], 10), v2CompNum = 0 == v2Comp[1].length ? 0 : parseInt(v2Comp[1], 10), order = goog.string.compareElements_(v1CompNum, v2CompNum) || goog.string.compareElements_(0 == v1Comp[2].length, 0 == v2Comp[2].length) || goog.string.compareElements_(v1Comp[2], v2Comp[2]);
    } while (0 == order);
  }
  return order;
};
goog.string.compareElements_ = function(left, right) {
  return left < right ? -1 : left > right ? 1 : 0;
};
goog.string.hashCode = function(str) {
  for (var result = 0, i = 0;i < str.length;++i) {
    result = 31 * result + str.charCodeAt(i) >>> 0;
  }
  return result;
};
goog.string.uniqueStringCounter_ = 2147483648 * Math.random() | 0;
goog.string.createUniqueString = function() {
  return "goog_" + goog.string.uniqueStringCounter_++;
};
goog.string.toNumber = function(str) {
  var num = Number(str);
  return 0 == num && goog.string.isEmptyOrWhitespace(str) ? NaN : num;
};
goog.string.isLowerCamelCase = function(str) {
  return /^[a-z]+([A-Z][a-z]*)*$/.test(str);
};
goog.string.isUpperCamelCase = function(str) {
  return /^([A-Z][a-z]*)+$/.test(str);
};
goog.string.toCamelCase = function(str) {
  return String(str).replace(/\-([a-z])/g, function(all, match) {
    return match.toUpperCase();
  });
};
goog.string.toSelectorCase = function(str) {
  return String(str).replace(/([A-Z])/g, "-$1").toLowerCase();
};
goog.string.toTitleCase = function(str, opt_delimiters) {
  var delimiters = goog.isString(opt_delimiters) ? goog.string.regExpEscape(opt_delimiters) : "\\s", delimiters = delimiters ? "|[" + delimiters + "]+" : "", regexp = new RegExp("(^" + delimiters + ")([a-z])", "g");
  return str.replace(regexp, function(all, p1, p2) {
    return p1 + p2.toUpperCase();
  });
};
goog.string.capitalize = function(str) {
  return String(str.charAt(0)).toUpperCase() + String(str.substr(1)).toLowerCase();
};
goog.string.parseInt = function(value) {
  isFinite(value) && (value = String(value));
  return goog.isString(value) ? /^\s*-?0x/i.test(value) ? parseInt(value, 16) : parseInt(value, 10) : NaN;
};
goog.string.splitLimit = function(str, separator, limit) {
  for (var parts = str.split(separator), returnVal = [];0 < limit && parts.length;) {
    returnVal.push(parts.shift()), limit--;
  }
  parts.length && returnVal.push(parts.join(separator));
  return returnVal;
};
goog.string.lastComponent = function(str, separators) {
  if (separators) {
    "string" == typeof separators && (separators = [separators]);
  } else {
    return str;
  }
  for (var lastSeparatorIndex = -1, i = 0;i < separators.length;i++) {
    if ("" != separators[i]) {
      var currentSeparatorIndex = str.lastIndexOf(separators[i]);
      currentSeparatorIndex > lastSeparatorIndex && (lastSeparatorIndex = currentSeparatorIndex);
    }
  }
  return -1 == lastSeparatorIndex ? str : str.slice(lastSeparatorIndex + 1);
};
goog.string.editDistance = function(a, b) {
  var v0 = [], v1 = [];
  if (a == b) {
    return 0;
  }
  if (!a.length || !b.length) {
    return Math.max(a.length, b.length);
  }
  for (var i = 0;i < b.length + 1;i++) {
    v0[i] = i;
  }
  for (i = 0;i < a.length;i++) {
    v1[0] = i + 1;
    for (var j = 0;j < b.length;j++) {
      var cost = Number(a[i] != b[j]);
      v1[j + 1] = Math.min(v1[j] + 1, v0[j + 1] + 1, v0[j] + cost);
    }
    for (j = 0;j < v0.length;j++) {
      v0[j] = v1[j];
    }
  }
  return v1[b.length];
};
goog.asserts = {};
goog.asserts.ENABLE_ASSERTS = goog.DEBUG;
goog.asserts.AssertionError = function(messagePattern, messageArgs) {
  messageArgs.unshift(messagePattern);
  goog.debug.Error.call(this, goog.string.subs.apply(null, messageArgs));
  messageArgs.shift();
};
goog.inherits(goog.asserts.AssertionError, goog.debug.Error);
goog.asserts.AssertionError.prototype.name = "AssertionError";
goog.asserts.DEFAULT_ERROR_HANDLER = function(e) {
  throw e;
};
goog.asserts.errorHandler_ = goog.asserts.DEFAULT_ERROR_HANDLER;
goog.asserts.doAssertFailure_ = function(defaultMessage, defaultArgs, givenMessage, givenArgs) {
  var message = "Assertion failed";
  if (givenMessage) {
    var message = message + (": " + givenMessage), args = givenArgs
  } else {
    defaultMessage && (message += ": " + defaultMessage, args = defaultArgs);
  }
  var e = new goog.asserts.AssertionError("" + message, args || []);
  goog.asserts.errorHandler_(e);
};
goog.asserts.setErrorHandler = function(errorHandler) {
  goog.asserts.ENABLE_ASSERTS && (goog.asserts.errorHandler_ = errorHandler);
};
goog.asserts.assert = function(condition, opt_message, var_args) {
  goog.asserts.ENABLE_ASSERTS && !condition && goog.asserts.doAssertFailure_("", null, opt_message, Array.prototype.slice.call(arguments, 2));
  return condition;
};
goog.asserts.fail = function(opt_message, var_args) {
  goog.asserts.ENABLE_ASSERTS && goog.asserts.errorHandler_(new goog.asserts.AssertionError("Failure" + (opt_message ? ": " + opt_message : ""), Array.prototype.slice.call(arguments, 1)));
};
goog.asserts.assertNumber = function(value, opt_message, var_args) {
  goog.asserts.ENABLE_ASSERTS && !goog.isNumber(value) && goog.asserts.doAssertFailure_("Expected number but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  return value;
};
goog.asserts.assertString = function(value, opt_message, var_args) {
  goog.asserts.ENABLE_ASSERTS && !goog.isString(value) && goog.asserts.doAssertFailure_("Expected string but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  return value;
};
goog.asserts.assertFunction = function(value, opt_message, var_args) {
  goog.asserts.ENABLE_ASSERTS && !goog.isFunction(value) && goog.asserts.doAssertFailure_("Expected function but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  return value;
};
goog.asserts.assertObject = function(value, opt_message, var_args) {
  goog.asserts.ENABLE_ASSERTS && !goog.isObject(value) && goog.asserts.doAssertFailure_("Expected object but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  return value;
};
goog.asserts.assertArray = function(value, opt_message, var_args) {
  goog.asserts.ENABLE_ASSERTS && !goog.isArray(value) && goog.asserts.doAssertFailure_("Expected array but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  return value;
};
goog.asserts.assertBoolean = function(value, opt_message, var_args) {
  goog.asserts.ENABLE_ASSERTS && !goog.isBoolean(value) && goog.asserts.doAssertFailure_("Expected boolean but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  return value;
};
goog.asserts.assertElement = function(value, opt_message, var_args) {
  !goog.asserts.ENABLE_ASSERTS || goog.isObject(value) && value.nodeType == goog.dom.NodeType.ELEMENT || goog.asserts.doAssertFailure_("Expected Element but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  return value;
};
goog.asserts.assertInstanceof = function(value, type, opt_message, var_args) {
  !goog.asserts.ENABLE_ASSERTS || value instanceof type || goog.asserts.doAssertFailure_("Expected instanceof %s but got %s.", [goog.asserts.getType_(type), goog.asserts.getType_(value)], opt_message, Array.prototype.slice.call(arguments, 3));
  return value;
};
goog.asserts.assertObjectPrototypeIsIntact = function() {
  for (var key in Object.prototype) {
    goog.asserts.fail(key + " should not be enumerable in Object.prototype.");
  }
};
goog.asserts.getType_ = function(value) {
  return value instanceof Function ? value.displayName || value.name || "unknown type name" : value instanceof Object ? value.constructor.displayName || value.constructor.name || Object.prototype.toString.call(value) : null === value ? "null" : typeof value;
};
goog.array = {};
goog.NATIVE_ARRAY_PROTOTYPES = goog.TRUSTED_SITE;
goog.array.ASSUME_NATIVE_FUNCTIONS = !1;
goog.array.peek = function(array) {
  return array[array.length - 1];
};
goog.array.last = goog.array.peek;
goog.array.indexOf = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || Array.prototype.indexOf) ? function(arr, obj, opt_fromIndex) {
  goog.asserts.assert(null != arr.length);
  return Array.prototype.indexOf.call(arr, obj, opt_fromIndex);
} : function(arr, obj, opt_fromIndex) {
  var fromIndex = null == opt_fromIndex ? 0 : 0 > opt_fromIndex ? Math.max(0, arr.length + opt_fromIndex) : opt_fromIndex;
  if (goog.isString(arr)) {
    return goog.isString(obj) && 1 == obj.length ? arr.indexOf(obj, fromIndex) : -1;
  }
  for (var i = fromIndex;i < arr.length;i++) {
    if (i in arr && arr[i] === obj) {
      return i;
    }
  }
  return -1;
};
goog.array.lastIndexOf = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || Array.prototype.lastIndexOf) ? function(arr, obj, opt_fromIndex) {
  goog.asserts.assert(null != arr.length);
  var fromIndex = null == opt_fromIndex ? arr.length - 1 : opt_fromIndex;
  return Array.prototype.lastIndexOf.call(arr, obj, fromIndex);
} : function(arr, obj, opt_fromIndex) {
  var fromIndex = null == opt_fromIndex ? arr.length - 1 : opt_fromIndex;
  0 > fromIndex && (fromIndex = Math.max(0, arr.length + fromIndex));
  if (goog.isString(arr)) {
    return goog.isString(obj) && 1 == obj.length ? arr.lastIndexOf(obj, fromIndex) : -1;
  }
  for (var i = fromIndex;0 <= i;i--) {
    if (i in arr && arr[i] === obj) {
      return i;
    }
  }
  return -1;
};
goog.array.forEach = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || Array.prototype.forEach) ? function(arr, f, opt_obj) {
  goog.asserts.assert(null != arr.length);
  Array.prototype.forEach.call(arr, f, opt_obj);
} : function(arr, f, opt_obj) {
  for (var l = arr.length, arr2 = goog.isString(arr) ? arr.split("") : arr, i = 0;i < l;i++) {
    i in arr2 && f.call(opt_obj, arr2[i], i, arr);
  }
};
goog.array.forEachRight = function(arr, f, opt_obj) {
  for (var l = arr.length, arr2 = goog.isString(arr) ? arr.split("") : arr, i = l - 1;0 <= i;--i) {
    i in arr2 && f.call(opt_obj, arr2[i], i, arr);
  }
};
goog.array.filter = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || Array.prototype.filter) ? function(arr, f, opt_obj) {
  goog.asserts.assert(null != arr.length);
  return Array.prototype.filter.call(arr, f, opt_obj);
} : function(arr, f, opt_obj) {
  for (var l = arr.length, res = [], resLength = 0, arr2 = goog.isString(arr) ? arr.split("") : arr, i = 0;i < l;i++) {
    if (i in arr2) {
      var val = arr2[i];
      f.call(opt_obj, val, i, arr) && (res[resLength++] = val);
    }
  }
  return res;
};
goog.array.map = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || Array.prototype.map) ? function(arr, f, opt_obj) {
  goog.asserts.assert(null != arr.length);
  return Array.prototype.map.call(arr, f, opt_obj);
} : function(arr, f, opt_obj) {
  for (var l = arr.length, res = Array(l), arr2 = goog.isString(arr) ? arr.split("") : arr, i = 0;i < l;i++) {
    i in arr2 && (res[i] = f.call(opt_obj, arr2[i], i, arr));
  }
  return res;
};
goog.array.reduce = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || Array.prototype.reduce) ? function(arr, f, val, opt_obj) {
  goog.asserts.assert(null != arr.length);
  opt_obj && (f = goog.bind(f, opt_obj));
  return Array.prototype.reduce.call(arr, f, val);
} : function(arr, f, val$$0, opt_obj) {
  var rval = val$$0;
  goog.array.forEach(arr, function(val, index) {
    rval = f.call(opt_obj, rval, val, index, arr);
  });
  return rval;
};
goog.array.reduceRight = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || Array.prototype.reduceRight) ? function(arr, f, val, opt_obj) {
  goog.asserts.assert(null != arr.length);
  goog.asserts.assert(null != f);
  opt_obj && (f = goog.bind(f, opt_obj));
  return Array.prototype.reduceRight.call(arr, f, val);
} : function(arr, f, val$$0, opt_obj) {
  var rval = val$$0;
  goog.array.forEachRight(arr, function(val, index) {
    rval = f.call(opt_obj, rval, val, index, arr);
  });
  return rval;
};
goog.array.some = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || Array.prototype.some) ? function(arr, f, opt_obj) {
  goog.asserts.assert(null != arr.length);
  return Array.prototype.some.call(arr, f, opt_obj);
} : function(arr, f, opt_obj) {
  for (var l = arr.length, arr2 = goog.isString(arr) ? arr.split("") : arr, i = 0;i < l;i++) {
    if (i in arr2 && f.call(opt_obj, arr2[i], i, arr)) {
      return !0;
    }
  }
  return !1;
};
goog.array.every = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || Array.prototype.every) ? function(arr, f, opt_obj) {
  goog.asserts.assert(null != arr.length);
  return Array.prototype.every.call(arr, f, opt_obj);
} : function(arr, f, opt_obj) {
  for (var l = arr.length, arr2 = goog.isString(arr) ? arr.split("") : arr, i = 0;i < l;i++) {
    if (i in arr2 && !f.call(opt_obj, arr2[i], i, arr)) {
      return !1;
    }
  }
  return !0;
};
goog.array.count = function(arr$$0, f, opt_obj) {
  var count = 0;
  goog.array.forEach(arr$$0, function(element, index, arr) {
    f.call(opt_obj, element, index, arr) && ++count;
  }, opt_obj);
  return count;
};
goog.array.find = function(arr, f, opt_obj) {
  var i = goog.array.findIndex(arr, f, opt_obj);
  return 0 > i ? null : goog.isString(arr) ? arr.charAt(i) : arr[i];
};
goog.array.findIndex = function(arr, f, opt_obj) {
  for (var l = arr.length, arr2 = goog.isString(arr) ? arr.split("") : arr, i = 0;i < l;i++) {
    if (i in arr2 && f.call(opt_obj, arr2[i], i, arr)) {
      return i;
    }
  }
  return -1;
};
goog.array.findRight = function(arr, f, opt_obj) {
  var i = goog.array.findIndexRight(arr, f, opt_obj);
  return 0 > i ? null : goog.isString(arr) ? arr.charAt(i) : arr[i];
};
goog.array.findIndexRight = function(arr, f, opt_obj) {
  for (var l = arr.length, arr2 = goog.isString(arr) ? arr.split("") : arr, i = l - 1;0 <= i;i--) {
    if (i in arr2 && f.call(opt_obj, arr2[i], i, arr)) {
      return i;
    }
  }
  return -1;
};
goog.array.contains = function(arr, obj) {
  return 0 <= goog.array.indexOf(arr, obj);
};
goog.array.isEmpty = function(arr) {
  return 0 == arr.length;
};
goog.array.clear = function(arr) {
  if (!goog.isArray(arr)) {
    for (var i = arr.length - 1;0 <= i;i--) {
      delete arr[i];
    }
  }
  arr.length = 0;
};
goog.array.insert = function(arr, obj) {
  goog.array.contains(arr, obj) || arr.push(obj);
};
goog.array.insertAt = function(arr, obj, opt_i) {
  goog.array.splice(arr, opt_i, 0, obj);
};
goog.array.insertArrayAt = function(arr, elementsToAdd, opt_i) {
  goog.partial(goog.array.splice, arr, opt_i, 0).apply(null, elementsToAdd);
};
goog.array.insertBefore = function(arr, obj, opt_obj2) {
  var i;
  2 == arguments.length || 0 > (i = goog.array.indexOf(arr, opt_obj2)) ? arr.push(obj) : goog.array.insertAt(arr, obj, i);
};
goog.array.remove = function(arr, obj) {
  var i = goog.array.indexOf(arr, obj), rv;
  (rv = 0 <= i) && goog.array.removeAt(arr, i);
  return rv;
};
goog.array.removeLast = function(arr, obj) {
  var i = goog.array.lastIndexOf(arr, obj);
  return 0 <= i ? (goog.array.removeAt(arr, i), !0) : !1;
};
goog.array.removeAt = function(arr, i) {
  goog.asserts.assert(null != arr.length);
  return 1 == Array.prototype.splice.call(arr, i, 1).length;
};
goog.array.removeIf = function(arr, f, opt_obj) {
  var i = goog.array.findIndex(arr, f, opt_obj);
  return 0 <= i ? (goog.array.removeAt(arr, i), !0) : !1;
};
goog.array.removeAllIf = function(arr, f, opt_obj) {
  var removedCount = 0;
  goog.array.forEachRight(arr, function(val, index) {
    f.call(opt_obj, val, index, arr) && goog.array.removeAt(arr, index) && removedCount++;
  });
  return removedCount;
};
goog.array.concat = function(var_args) {
  return Array.prototype.concat.apply(Array.prototype, arguments);
};
goog.array.join = function(var_args) {
  return Array.prototype.concat.apply(Array.prototype, arguments);
};
goog.array.toArray = function(object) {
  var length = object.length;
  if (0 < length) {
    for (var rv = Array(length), i = 0;i < length;i++) {
      rv[i] = object[i];
    }
    return rv;
  }
  return [];
};
goog.array.clone = goog.array.toArray;
goog.array.extend = function(arr1, var_args) {
  for (var i = 1;i < arguments.length;i++) {
    var arr2 = arguments[i];
    if (goog.isArrayLike(arr2)) {
      var len1 = arr1.length || 0, len2 = arr2.length || 0;
      arr1.length = len1 + len2;
      for (var j = 0;j < len2;j++) {
        arr1[len1 + j] = arr2[j];
      }
    } else {
      arr1.push(arr2);
    }
  }
};
goog.array.splice = function(arr, index, howMany, var_args) {
  goog.asserts.assert(null != arr.length);
  return Array.prototype.splice.apply(arr, goog.array.slice(arguments, 1));
};
goog.array.slice = function(arr, start, opt_end) {
  goog.asserts.assert(null != arr.length);
  return 2 >= arguments.length ? Array.prototype.slice.call(arr, start) : Array.prototype.slice.call(arr, start, opt_end);
};
goog.array.removeDuplicates = function(arr, opt_rv, opt_hashFn) {
  for (var returnArray = opt_rv || arr, defaultHashFn = function(item) {
    return goog.isObject(item) ? "o" + goog.getUid(item) : (typeof item).charAt(0) + item;
  }, hashFn = opt_hashFn || defaultHashFn, seen = {}, cursorInsert = 0, cursorRead = 0;cursorRead < arr.length;) {
    var current = arr[cursorRead++], key = hashFn(current);
    Object.prototype.hasOwnProperty.call(seen, key) || (seen[key] = !0, returnArray[cursorInsert++] = current);
  }
  returnArray.length = cursorInsert;
};
goog.array.binarySearch = function(arr, target, opt_compareFn) {
  return goog.array.binarySearch_(arr, opt_compareFn || goog.array.defaultCompare, !1, target);
};
goog.array.binarySelect = function(arr, evaluator, opt_obj) {
  return goog.array.binarySearch_(arr, evaluator, !0, void 0, opt_obj);
};
goog.array.binarySearch_ = function(arr, compareFn, isEvaluator, opt_target, opt_selfObj) {
  for (var left = 0, right = arr.length, found;left < right;) {
    var middle = left + right >> 1, compareResult;
    compareResult = isEvaluator ? compareFn.call(opt_selfObj, arr[middle], middle, arr) : compareFn(opt_target, arr[middle]);
    0 < compareResult ? left = middle + 1 : (right = middle, found = !compareResult);
  }
  return found ? left : ~left;
};
goog.array.sort = function(arr, opt_compareFn) {
  arr.sort(opt_compareFn || goog.array.defaultCompare);
};
goog.array.stableSort = function(arr, opt_compareFn) {
  function stableCompareFn(obj1, obj2) {
    return valueCompareFn(obj1.value, obj2.value) || obj1.index - obj2.index;
  }
  for (var compArr = Array(arr.length), i = 0;i < arr.length;i++) {
    compArr[i] = {index:i, value:arr[i]};
  }
  var valueCompareFn = opt_compareFn || goog.array.defaultCompare;
  goog.array.sort(compArr, stableCompareFn);
  for (i = 0;i < arr.length;i++) {
    arr[i] = compArr[i].value;
  }
};
goog.array.sortByKey = function(arr, keyFn, opt_compareFn) {
  var keyCompareFn = opt_compareFn || goog.array.defaultCompare;
  goog.array.sort(arr, function(a, b) {
    return keyCompareFn(keyFn(a), keyFn(b));
  });
};
goog.array.sortObjectsByKey = function(arr, key, opt_compareFn) {
  goog.array.sortByKey(arr, function(obj) {
    return obj[key];
  }, opt_compareFn);
};
goog.array.isSorted = function(arr, opt_compareFn, opt_strict) {
  for (var compare = opt_compareFn || goog.array.defaultCompare, i = 1;i < arr.length;i++) {
    var compareResult = compare(arr[i - 1], arr[i]);
    if (0 < compareResult || 0 == compareResult && opt_strict) {
      return !1;
    }
  }
  return !0;
};
goog.array.equals = function(arr1, arr2, opt_equalsFn) {
  if (!goog.isArrayLike(arr1) || !goog.isArrayLike(arr2) || arr1.length != arr2.length) {
    return !1;
  }
  for (var l = arr1.length, equalsFn = opt_equalsFn || goog.array.defaultCompareEquality, i = 0;i < l;i++) {
    if (!equalsFn(arr1[i], arr2[i])) {
      return !1;
    }
  }
  return !0;
};
goog.array.compare3 = function(arr1, arr2, opt_compareFn) {
  for (var compare = opt_compareFn || goog.array.defaultCompare, l = Math.min(arr1.length, arr2.length), i = 0;i < l;i++) {
    var result = compare(arr1[i], arr2[i]);
    if (0 != result) {
      return result;
    }
  }
  return goog.array.defaultCompare(arr1.length, arr2.length);
};
goog.array.defaultCompare = function(a, b) {
  return a > b ? 1 : a < b ? -1 : 0;
};
goog.array.inverseDefaultCompare = function(a, b) {
  return -goog.array.defaultCompare(a, b);
};
goog.array.defaultCompareEquality = function(a, b) {
  return a === b;
};
goog.array.binaryInsert = function(array, value, opt_compareFn) {
  var index = goog.array.binarySearch(array, value, opt_compareFn);
  return 0 > index ? (goog.array.insertAt(array, value, -(index + 1)), !0) : !1;
};
goog.array.binaryRemove = function(array, value, opt_compareFn) {
  var index = goog.array.binarySearch(array, value, opt_compareFn);
  return 0 <= index ? goog.array.removeAt(array, index) : !1;
};
goog.array.bucket = function(array, sorter, opt_obj) {
  for (var buckets = {}, i = 0;i < array.length;i++) {
    var value = array[i], key = sorter.call(opt_obj, value, i, array);
    if (goog.isDef(key)) {
      var bucket = buckets[key] || (buckets[key] = []);
      bucket.push(value);
    }
  }
  return buckets;
};
goog.array.toObject = function(arr, keyFunc, opt_obj) {
  var ret = {};
  goog.array.forEach(arr, function(element, index) {
    ret[keyFunc.call(opt_obj, element, index, arr)] = element;
  });
  return ret;
};
goog.array.range = function(startOrEnd, opt_end, opt_step) {
  var array = [], start = 0, end = startOrEnd, step = opt_step || 1;
  void 0 !== opt_end && (start = startOrEnd, end = opt_end);
  if (0 > step * (end - start)) {
    return [];
  }
  if (0 < step) {
    for (var i = start;i < end;i += step) {
      array.push(i);
    }
  } else {
    for (i = start;i > end;i += step) {
      array.push(i);
    }
  }
  return array;
};
goog.array.repeat = function(value, n) {
  for (var array = [], i = 0;i < n;i++) {
    array[i] = value;
  }
  return array;
};
goog.array.flatten = function(var_args) {
  for (var result = [], i = 0;i < arguments.length;i++) {
    var element = arguments[i];
    if (goog.isArray(element)) {
      for (var c = 0;c < element.length;c += 8192) {
        for (var chunk = goog.array.slice(element, c, c + 8192), recurseResult = goog.array.flatten.apply(null, chunk), r = 0;r < recurseResult.length;r++) {
          result.push(recurseResult[r]);
        }
      }
    } else {
      result.push(element);
    }
  }
  return result;
};
goog.array.rotate = function(array, n) {
  goog.asserts.assert(null != array.length);
  array.length && (n %= array.length, 0 < n ? Array.prototype.unshift.apply(array, array.splice(-n, n)) : 0 > n && Array.prototype.push.apply(array, array.splice(0, -n)));
  return array;
};
goog.array.moveItem = function(arr, fromIndex, toIndex) {
  goog.asserts.assert(0 <= fromIndex && fromIndex < arr.length);
  goog.asserts.assert(0 <= toIndex && toIndex < arr.length);
  var removedItems = Array.prototype.splice.call(arr, fromIndex, 1);
  Array.prototype.splice.call(arr, toIndex, 0, removedItems[0]);
};
goog.array.zip = function(var_args) {
  if (!arguments.length) {
    return [];
  }
  for (var result = [], minLen = arguments[0].length, i = 1;i < arguments.length;i++) {
    arguments[i].length < minLen && (minLen = arguments[i].length);
  }
  for (i = 0;i < minLen;i++) {
    for (var value = [], j = 0;j < arguments.length;j++) {
      value.push(arguments[j][i]);
    }
    result.push(value);
  }
  return result;
};
goog.array.shuffle = function(arr, opt_randFn) {
  for (var randFn = opt_randFn || Math.random, i = arr.length - 1;0 < i;i--) {
    var j = Math.floor(randFn() * (i + 1)), tmp = arr[i];
    arr[i] = arr[j];
    arr[j] = tmp;
  }
};
goog.array.copyByIndex = function(arr, index_arr) {
  var result = [];
  goog.array.forEach(index_arr, function(index) {
    result.push(arr[index]);
  });
  return result;
};
goog.math = {};
goog.math.randomInt = function(a) {
  return Math.floor(Math.random() * a);
};
goog.math.uniformRandom = function(a, b) {
  return a + Math.random() * (b - a);
};
goog.math.clamp = function(value, min, max) {
  return Math.min(Math.max(value, min), max);
};
goog.math.modulo = function(a, b) {
  var r = a % b;
  return 0 > r * b ? r + b : r;
};
goog.math.lerp = function(a, b, x) {
  return a + x * (b - a);
};
goog.math.nearlyEquals = function(a, b, opt_tolerance) {
  return Math.abs(a - b) <= (opt_tolerance || 1E-6);
};
goog.math.standardAngle = function(angle) {
  return goog.math.modulo(angle, 360);
};
goog.math.standardAngleInRadians = function(angle) {
  return goog.math.modulo(angle, 2 * Math.PI);
};
goog.math.toRadians = function(angleDegrees) {
  return angleDegrees * Math.PI / 180;
};
goog.math.toDegrees = function(angleRadians) {
  return 180 * angleRadians / Math.PI;
};
goog.math.angleDx = function(degrees, radius) {
  return radius * Math.cos(goog.math.toRadians(degrees));
};
goog.math.angleDy = function(degrees, radius) {
  return radius * Math.sin(goog.math.toRadians(degrees));
};
goog.math.angle = function(x1, y1, x2, y2) {
  return goog.math.standardAngle(goog.math.toDegrees(Math.atan2(y2 - y1, x2 - x1)));
};
goog.math.angleDifference = function(startAngle, endAngle) {
  var d = goog.math.standardAngle(endAngle) - goog.math.standardAngle(startAngle);
  180 < d ? d -= 360 : -180 >= d && (d = 360 + d);
  return d;
};
goog.math.sign = Math.sign || function(x) {
  return 0 < x ? 1 : 0 > x ? -1 : x;
};
goog.math.longestCommonSubsequence = function(array1, array2, opt_compareFn, opt_collectorFn) {
  for (var compare = opt_compareFn || function(a, b) {
    return a == b;
  }, collect = opt_collectorFn || function(i1) {
    return array1[i1];
  }, length1 = array1.length, length2 = array2.length, arr = [], i = 0;i < length1 + 1;i++) {
    arr[i] = [], arr[i][0] = 0;
  }
  for (var j = 0;j < length2 + 1;j++) {
    arr[0][j] = 0;
  }
  for (i = 1;i <= length1;i++) {
    for (j = 1;j <= length2;j++) {
      compare(array1[i - 1], array2[j - 1]) ? arr[i][j] = arr[i - 1][j - 1] + 1 : arr[i][j] = Math.max(arr[i - 1][j], arr[i][j - 1]);
    }
  }
  for (var result = [], i = length1, j = length2;0 < i && 0 < j;) {
    compare(array1[i - 1], array2[j - 1]) ? (result.unshift(collect(i - 1, j - 1)), i--, j--) : arr[i - 1][j] > arr[i][j - 1] ? i-- : j--;
  }
  return result;
};
goog.math.sum = function(var_args) {
  return goog.array.reduce(arguments, function(sum, value) {
    return sum + value;
  }, 0);
};
goog.math.average = function(var_args) {
  return goog.math.sum.apply(null, arguments) / arguments.length;
};
goog.math.sampleVariance = function(var_args) {
  var sampleSize = arguments.length;
  if (2 > sampleSize) {
    return 0;
  }
  var mean = goog.math.average.apply(null, arguments), variance = goog.math.sum.apply(null, goog.array.map(arguments, function(val) {
    return Math.pow(val - mean, 2);
  })) / (sampleSize - 1);
  return variance;
};
goog.math.standardDeviation = function(var_args) {
  return Math.sqrt(goog.math.sampleVariance.apply(null, arguments));
};
goog.math.isInt = function(num) {
  return isFinite(num) && 0 == num % 1;
};
goog.math.isFiniteNumber = function(num) {
  return isFinite(num) && !isNaN(num);
};
goog.math.isNegativeZero = function(num) {
  return 0 == num && 0 > 1 / num;
};
goog.math.log10Floor = function(num) {
  if (0 < num) {
    var x = Math.round(Math.log(num) * Math.LOG10E);
    return x - (parseFloat("1e" + x) > num ? 1 : 0);
  }
  return 0 == num ? -Infinity : NaN;
};
goog.math.safeFloor = function(num, opt_epsilon) {
  goog.asserts.assert(!goog.isDef(opt_epsilon) || 0 < opt_epsilon);
  return Math.floor(num + (opt_epsilon || 2E-15));
};
goog.math.safeCeil = function(num, opt_epsilon) {
  goog.asserts.assert(!goog.isDef(opt_epsilon) || 0 < opt_epsilon);
  return Math.ceil(num - (opt_epsilon || 2E-15));
};
goog.i18n = {};
goog.i18n.CompactNumberFormatSymbols_af = {COMPACT_DECIMAL_SHORT_PATTERN:{1E3:{other:"0"}, 1E4:{other:"0"}, 1E5:{other:"0"}, 1E6:{other:"0\u00a0m"}, 1E7:{other:"00\u00a0m"}, 1E8:{other:"000\u00a0m"}, 1E9:{other:"0\u00a0mjd"}, 1E10:{other:"00\u00a0mjd"}, 1E11:{other:"000\u00a0mjd"}, 1E12:{other:"0\u00a0bn"}, 1E13:{other:"00\u00a0bn"}, 1E14:{other:"000\u00a0bn"}}, COMPACT_DECIMAL_LONG_PATTERN:{1E3:{other:"0 duisend"}, 1E4:{other:"00 duisend"}, 1E5:{other:"000 duisend"}, 1E6:{other:"0 miljoen"}, 1E7:{other:"00 miljoen"}, 
1E8:{other:"000 miljoen"}, 1E9:{other:"0 miljard"}, 1E10:{other:"00 miljard"}, 1E11:{other:"000 miljard"}, 1E12:{other:"0 biljoen"}, 1E13:{other:"00 biljoen"}, 1E14:{other:"000 biljoen"}}};
goog.i18n.CompactNumberFormatSymbols_af_ZA = goog.i18n.CompactNumberFormatSymbols_af;
goog.i18n.CompactNumberFormatSymbols_am = {COMPACT_DECIMAL_SHORT_PATTERN:{1E3:{other:"0\u00a0\u123a"}, 1E4:{other:"00\u00a0\u123a"}, 1E5:{other:"000\u00a0\u123a"}, 1E6:{other:"0\u00a0\u121c\u1275\u122d"}, 1E7:{other:"00\u00a0\u121c\u1275\u122d"}, 1E8:{other:"000\u121c"}, 1E9:{other:"0\u00a0\u1262"}, 1E10:{other:"00\u00a0\u1262"}, 1E11:{other:"000\u00a0\u1262"}, 1E12:{other:"0\u00a0\u1275"}, 1E13:{other:"00\u00a0\u1275"}, 1E14:{other:"000\u00a0\u1275"}}, COMPACT_DECIMAL_LONG_PATTERN:{1E3:{other:"0 \u123a"}, 
1E4:{other:"00 \u123a"}, 1E5:{other:"000 \u123a"}, 1E6:{other:"0 \u121a\u120a\u12ee\u1295"}, 1E7:{other:"00 \u121a\u120a\u12ee\u1295"}, 1E8:{other:"000 \u121a\u120a\u12ee\u1295"}, 1E9:{other:"0 \u1262\u120a\u12ee\u1295"}, 1E10:{other:"00 \u1262\u120a\u12ee\u1295"}, 1E11:{other:"000 \u1262\u120a\u12ee\u1295"}, 1E12:{other:"0 \u1275\u122a\u120a\u12ee\u1295"}, 1E13:{other:"00 \u1275\u122a\u120a\u12ee\u1295"}, 1E14:{other:"000 \u1275\u122a\u120a\u12ee\u1295"}}};
goog.i18n.CompactNumberFormatSymbols_am_ET = goog.i18n.CompactNumberFormatSymbols_am;
goog.i18n.CompactNumberFormatSymbols_ar = {COMPACT_DECIMAL_SHORT_PATTERN:{1E3:{other:"0\u00a0\u0623\u0644\u0641"}, 1E4:{other:"00\u00a0\u0623\u0644\u0641"}, 1E5:{other:"000\u00a0\u0623\u0644\u0641"}, 1E6:{other:"0\u00a0\u0645\u0644\u064a\u0648"}, 1E7:{other:"00\u00a0\u0645\u0644\u064a\u0648"}, 1E8:{other:"000\u00a0\u0645\u0644\u064a\u0648"}, 1E9:{other:"0\u00a0\u0645\u0644\u064a\u0627"}, 1E10:{other:"00\u00a0\u0645\u0644\u064a\u0627"}, 1E11:{other:"000\u00a0\u0645\u0644\u064a\u0627"}, 1E12:{other:"0\u00a0\u062a\u0631\u0644\u064a\u0648"}, 
1E13:{other:"00\u00a0\u062a\u0631\u0644\u064a\u0648"}, 1E14:{other:"000\u00a0\u062a\u0631\u0644\u064a\u0648"}}, COMPACT_DECIMAL_LONG_PATTERN:{1E3:{other:"0 \u0623\u0644\u0641"}, 1E4:{other:"00 \u0623\u0644\u0641"}, 1E5:{other:"000 \u0623\u0644\u0641"}, 1E6:{other:"0 \u0645\u0644\u064a\u0648\u0646"}, 1E7:{other:"00 \u0645\u0644\u064a\u0648\u0646"}, 1E8:{other:"000 \u0645\u0644\u064a\u0648\u0646"}, 1E9:{other:"0 \u0645\u0644\u064a\u0627\u0631"}, 1E10:{other:"00 \u0645\u0644\u064a\u0627\u0631"}, 1E11:{other:"000 \u0645\u0644\u064a\u0627\u0631"}, 
1E12:{other:"0 \u062a\u0631\u064a\u0644\u064a\u0648\u0646"}, 1E13:{other:"00 \u062a\u0631\u064a\u0644\u064a\u0648\u0646"}, 1E14:{other:"000 \u062a\u0631\u064a\u0644\u064a\u0648\u0646"}}};
goog.i18n.CompactNumberFormatSymbols_ar_001 = goog.i18n.CompactNumberFormatSymbols_ar;
goog.i18n.CompactNumberFormatSymbols_ar_EG = goog.i18n.CompactNumberFormatSymbols_ar;
goog.i18n.CompactNumberFormatSymbols_ar_XB = goog.i18n.CompactNumberFormatSymbols_ar;
goog.i18n.CompactNumberFormatSymbols_az = {COMPACT_DECIMAL_SHORT_PATTERN:{1E3:{other:"0K"}, 1E4:{other:"00K"}, 1E5:{other:"000K"}, 1E6:{other:"0M"}, 1E7:{other:"00M"}, 1E8:{other:"000M"}, 1E9:{other:"0G"}, 1E10:{other:"00G"}, 1E11:{other:"000G"}, 1E12:{other:"0T"}, 1E13:{other:"00T"}, 1E14:{other:"000T"}}, COMPACT_DECIMAL_LONG_PATTERN:{1E3:{other:"0K"}, 1E4:{other:"00K"}, 1E5:{other:"000K"}, 1E6:{other:"0M"}, 1E7:{other:"00M"}, 1E8:{other:"000M"}, 1E9:{other:"0G"}, 1E10:{other:"00G"}, 1E11:{other:"000G"}, 
1E12:{other:"0T"}, 1E13:{other:"00T"}, 1E14:{other:"000T"}}};
goog.i18n.CompactNumberFormatSymbols_az_Latn = goog.i18n.CompactNumberFormatSymbols_az;
goog.i18n.CompactNumberFormatSymbols_az_Latn_AZ = goog.i18n.CompactNumberFormatSymbols_az;
goog.i18n.CompactNumberFormatSymbols_be = {COMPACT_DECIMAL_SHORT_PATTERN:{1E3:{other:"0\u00a0\u0442\u044b\u0441."}, 1E4:{other:"00\u00a0\u0442\u044b\u0441."}, 1E5:{other:"000\u00a0\u0442\u044b\u0441."}, 1E6:{other:"0\u00a0\u043c\u043b\u043d"}, 1E7:{other:"00\u00a0\u043c\u043b\u043d"}, 1E8:{other:"000\u00a0\u043c\u043b\u043d"}, 1E9:{other:"0\u00a0\u043c\u043b\u0440\u0434"}, 1E10:{other:"00\u00a0\u043c\u043b\u0440\u0434"}, 1E11:{other:"000\u00a0\u043c\u043b\u0440\u0434"}, 1E12:{other:"0\u00a0\u0442\u0440\u043b\u043d"}, 
1E13:{other:"00\u00a0\u0442\u0440\u043b\u043d"}, 1E14:{other:"000\u00a0\u0442\u0440\u043b\u043d"}}, COMPACT_DECIMAL_LONG_PATTERN:{1E3:{other:"0 \u0442\u044b\u0441\u044f\u0447\u044b"}, 1E4:{other:"00 \u0442\u044b\u0441\u044f\u0447\u044b"}, 1E5:{other:"000 \u0442\u044b\u0441\u044f\u0447\u044b"}, 1E6:{other:"0 \u043c\u0456\u043b\u044c\u0451\u043d\u0430"}, 1E7:{other:"00 \u043c\u0456\u043b\u044c\u0451\u043d\u0430"}, 1E8:{other:"000 \u043c\u0456\u043b\u044c\u0451\u043d\u0430"}, 1E9:{other:"0 \u043c\u0456\u043b\u044c\u044f\u0440\u0434\u0430"}, 
1E10:{other:"00 \u043c\u0456\u043b\u044c\u044f\u0440\u0434\u0430"}, 1E11:{other:"000 \u043c\u0456\u043b\u044c\u044f\u0440\u0434\u0430"}, 1E12:{other:"0 \u0442\u0440\u044b\u043b\u044c\u0451\u043d\u0430"}, 1E13:{other:"00 \u0442\u0440\u044b\u043b\u044c\u0451\u043d\u0430"}, 1E14:{other:"000 \u0442\u0440\u044b\u043b\u044c\u0451\u043d\u0430"}}};
goog.i18n.CompactNumberFormatSymbols_be_BY = goog.i18n.CompactNumberFormatSymbols_be;
goog.i18n.CompactNumberFormatSymbols_bg = {COMPACT_DECIMAL_SHORT_PATTERN:{1E3:{other:"0\u00a0\u0445\u0438\u043b."}, 1E4:{other:"00\u00a0\u0445\u0438\u043b."}, 1E5:{other:"000\u00a0\u0445\u0438\u043b."}, 1E6:{other:"0\u00a0\u043c\u043b\u043d."}, 1E7:{other:"00\u00a0\u043c\u043b\u043d."}, 1E8:{other:"000\u00a0\u043c\u043b\u043d"}, 1E9:{other:"0\u00a0\u043c\u043b\u0440\u0434."}, 1E10:{other:"00\u00a0\u043c\u043b\u0440\u0434."}, 1E11:{other:"000\u00a0\u043c\u043b\u0440\u0434."}, 1E12:{other:"0\u00a0\u0442\u0440\u043b\u043d."}, 
1E13:{other:"00\u00a0\u0442\u0440\u043b\u043d."}, 1E14:{other:"000\u00a0\u0442\u0440\u043b\u043d."}}, COMPACT_DECIMAL_LONG_PATTERN:{1E3:{other:"0 \u0445\u0438\u043b\u044f\u0434\u0438"}, 1E4:{other:"00 \u0445\u0438\u043b\u044f\u0434\u0438"}, 1E5:{other:"000 \u0445\u0438\u043b\u044f\u0434\u0438"}, 1E6:{other:"0 \u043c\u0438\u043b\u0438\u043e\u043d\u0430"}, 1E7:{other:"00 \u043c\u0438\u043b\u0438\u043e\u043d\u0430"}, 1E8:{other:"000 \u043c\u0438\u043b\u0438\u043e\u043d\u0430"}, 1E9:{other:"0 \u043c\u0438\u043b\u0438\u0430\u0440\u0434\u0430"}, 
1E10:{other:"00 \u043c\u0438\u043b\u0438\u0430\u0440\u0434\u0430"}, 1E11:{other:"000 \u043c\u0438\u043b\u0438\u0430\u0440\u0434\u0430"}, 1E12:{other:"0 \u0442\u0440\u0438\u043b\u0438\u043e\u043d\u0430"}, 1E13:{other:"00 \u0442\u0440\u0438\u043b\u0438\u043e\u043d\u0430"}, 1E14:{other:"000 \u0442\u0440\u0438\u043b\u0438\u043e\u043d\u0430"}}};
goog.i18n.CompactNumberFormatSymbols_bg_BG = goog.i18n.CompactNumberFormatSymbols_bg;
goog.i18n.CompactNumberFormatSymbols_bn = {COMPACT_DECIMAL_SHORT_PATTERN:{1E3:{other:"0\u00a0\u09b9\u09be\u099c\u09be\u09b0"}, 1E4:{other:"00\u00a0\u09b9\u09be\u099c\u09be\u09b0"}, 1E5:{other:"0\u00a0\u09b2\u09be\u0996"}, 1E6:{other:"0M"}, 1E7:{other:"00M"}, 1E8:{other:"000M"}, 1E9:{other:"0B"}, 1E10:{other:"00B"}, 1E11:{other:"000B"}, 1E12:{other:"0T"}, 1E13:{other:"00T"}, 1E14:{other:"000T"}}, COMPACT_DECIMAL_LONG_PATTERN:{1E3:{other:"0 \u09b9\u09be\u099c\u09be\u09b0"}, 1E4:{other:"00 \u09b9\u09be\u099c\u09be\u09b0"}, 
1E5:{other:"0 \u09b2\u09be\u0996"}, 1E6:{other:"0 \u09ae\u09bf\u09b2\u09bf\u09af\u09bc\u09a8"}, 1E7:{other:"00 \u09ae\u09bf\u09b2\u09bf\u09af\u09bc\u09a8"}, 1E8:{other:"000 \u09ae\u09bf\u09b2\u09bf\u09af\u09bc\u09a8"}, 1E9:{other:"0 \u09ac\u09bf\u09b2\u09bf\u09af\u09bc\u09a8"}, 1E10:{other:"00 \u09ac\u09bf\u09b2\u09bf\u09af\u09bc\u09a8"}, 1E11:{other:"000 \u09ac\u09bf\u09b2\u09bf\u09af\u09bc\u09a8"}, 1E12:{other:"0 \u099f\u09cd\u09b0\u09bf\u09b2\u09bf\u09af\u09bc\u09a8"}, 1E13:{other:"00 \u099f\u09cd\u09b0\u09bf\u09b2\u09bf\u09af\u09bc\u09a8"}, 
1E14:{other:"000 \u099f\u09cd\u09b0\u09bf\u09b2\u09bf\u09af\u09bc\u09a8"}}};
goog.i18n.CompactNumberFormatSymbols_bn_BD = goog.i18n.CompactNumberFormatSymbols_bn;
goog.i18n.CompactNumberFormatSymbols_br = {COMPACT_DECIMAL_SHORT_PATTERN:{1E3:{other:"0K"}, 1E4:{other:"00K"}, 1E5:{other:"000K"}, 1E6:{other:"0M"}, 1E7:{other:"00M"}, 1E8:{other:"000M"}, 1E9:{other:"0G"}, 1E10:{other:"00G"}, 1E11:{other:"000G"}, 1E12:{other:"0T"}, 1E13:{other:"00T"}, 1E14:{other:"000T"}}};
goog.i18n.CompactNumberFormatSymbols_br_FR = goog.i18n.CompactNumberFormatSymbols_br;
goog.i18n.CompactNumberFormatSymbols_bs = {COMPACT_DECIMAL_SHORT_PATTERN:{1E3:{other:"0\u00a0hilj."}, 1E4:{other:"00\u00a0hilj."}, 1E5:{other:"000\u00a0hilj."}, 1E6:{other:"0\u00a0mil."}, 1E7:{other:"00\u00a0mil."}, 1E8:{other:"000\u00a0mil."}, 1E9:{other:"0\u00a0mlr."}, 1E10:{other:"00\u00a0mlr."}, 1E11:{other:"000\u00a0mlr."}, 1E12:{other:"0\u00a0bil."}, 1E13:{other:"00\u00a0bil."}, 1E14:{other:"000\u00a0bil."}}, COMPACT_DECIMAL_LONG_PATTERN:{1E3:{other:"0 hiljada"}, 1E4:{other:"00 hiljada"}, 1E5:{other:"000 hiljada"}, 
1E6:{other:"0 miliona"}, 1E7:{other:"00 miliona"}, 1E8:{other:"000 miliona"}, 1E9:{other:"0 milijardi"}, 1E10:{other:"00 milijardi"}, 1E11:{other:"000 milijardi"}, 1E12:{other:"0 biliona"}, 1E13:{other:"00 biliona"}, 1E14:{other:"000 biliona"}}};
goog.i18n.CompactNumberFormatSymbols_bs_Latn = goog.i18n.CompactNumberFormatSymbols_bs;
goog.i18n.CompactNumberFormatSymbols_bs_Latn_BA = goog.i18n.CompactNumberFormatSymbols_bs;
goog.i18n.CompactNumberFormatSymbols_ca = {COMPACT_DECIMAL_SHORT_PATTERN:{1E3:{other:"0m"}, 1E4:{other:"00m"}, 1E5:{other:"000m"}, 1E6:{other:"0M"}, 1E7:{other:"00\u00a0M"}, 1E8:{other:"000\u00a0M"}, 1E9:{other:"0000\u00a0M"}, 1E10:{other:"00mM"}, 1E11:{other:"000mM"}, 1E12:{other:"0B"}, 1E13:{other:"00\u00a0B"}, 1E14:{other:"000\u00a0B"}}, COMPACT_DECIMAL_LONG_PATTERN:{1E3:{other:"0 milers"}, 1E4:{other:"00 milers"}, 1E5:{other:"000 milers"}, 1E6:{other:"0 milions"}, 1E7:{other:"00 milions"}, 1E8:{other:"000 milions"}, 
1E9:{other:"0 milers de milions"}, 1E10:{other:"00 milers de milions"}, 1E11:{other:"000 milers de milions"}, 1E12:{other:"0 bilions"}, 1E13:{other:"00 bilions"}, 1E14:{other:"000 bilions"}}};
goog.i18n.CompactNumberFormatSymbols_ca_AD = goog.i18n.CompactNumberFormatSymbols_ca;
goog.i18n.CompactNumberFormatSymbols_ca_ES = goog.i18n.CompactNumberFormatSymbols_ca;
goog.i18n.CompactNumberFormatSymbols_ca_ES_VALENCIA = goog.i18n.CompactNumberFormatSymbols_ca;
goog.i18n.CompactNumberFormatSymbols_ca_FR = goog.i18n.CompactNumberFormatSymbols_ca;
goog.i18n.CompactNumberFormatSymbols_ca_IT = goog.i18n.CompactNumberFormatSymbols_ca;
goog.i18n.CompactNumberFormatSymbols_chr = {COMPACT_DECIMAL_SHORT_PATTERN:{1E3:{other:"0K"}, 1E4:{other:"00K"}, 1E5:{other:"000K"}, 1E6:{other:"0M"}, 1E7:{other:"00M"}, 1E8:{other:"000M"}, 1E9:{other:"0G"}, 1E10:{other:"00G"}, 1E11:{other:"000G"}, 1E12:{other:"0T"}, 1E13:{other:"00T"}, 1E14:{other:"000T"}}};
goog.i18n.CompactNumberFormatSymbols_chr_US = goog.i18n.CompactNumberFormatSymbols_chr;
goog.i18n.CompactNumberFormatSymbols_cs = {COMPACT_DECIMAL_SHORT_PATTERN:{1E3:{other:"0\u00a0tis."}, 1E4:{other:"00\u00a0tis."}, 1E5:{other:"000\u00a0tis."}, 1E6:{other:"0\u00a0mil."}, 1E7:{other:"00\u00a0mil."}, 1E8:{other:"000\u00a0mil."}, 1E9:{other:"0\u00a0mld."}, 1E10:{other:"00\u00a0mld."}, 1E11:{other:"000\u00a0mld."}, 1E12:{other:"0\u00a0bil."}, 1E13:{other:"00\u00a0bil."}, 1E14:{other:"000\u00a0bil."}}, COMPACT_DECIMAL_LONG_PATTERN:{1E3:{other:"0 tis\u00edc"}, 1E4:{other:"00 tis\u00edc"}, 
1E5:{other:"000 tis\u00edc"}, 1E6:{other:"0 milion\u016f"}, 1E7:{other:"00 milion\u016f"}, 1E8:{other:"000 milion\u016f"}, 1E9:{other:"0 miliard"}, 1E10:{other:"00 miliard"}, 1E11:{other:"000 miliard"}, 1E12:{other:"0 bilion\u016f"}, 1E13:{other:"00 bilion\u016f"}, 1E14:{other:"000 bilion\u016f"}}};
goog.i18n.CompactNumberFormatSymbols_cs_CZ = goog.i18n.CompactNumberFormatSymbols_cs;
goog.i18n.CompactNumberFormatSymbols_cy = {COMPACT_DECIMAL_SHORT_PATTERN:{1E3:{other:"0K"}, 1E4:{other:"00K"}, 1E5:{other:"000K"}, 1E6:{other:"0M"}, 1E7:{other:"00M"}, 1E8:{other:"000M"}, 1E9:{other:"0B"}, 1E10:{other:"00B"}, 1E11:{other:"000B"}, 1E12:{other:"0T"}, 1E13:{other:"00T"}, 1E14:{other:"000T"}}, COMPACT_DECIMAL_LONG_PATTERN:{1E3:{other:"0 mil"}, 1E4:{other:"00 mil"}, 1E5:{other:"000 mil"}, 1E6:{other:"0 miliwn"}, 1E7:{other:"00 miliwn"}, 1E8:{other:"000 miliwn"}, 1E9:{other:"0 biliwn"}, 
1E10:{other:"00 biliwn"}, 1E11:{other:"000 biliwn"}, 1E12:{other:"0 triliwn"}, 1E13:{other:"00 triliwn"}, 1E14:{other:"000 triliwn"}}};
goog.i18n.CompactNumberFormatSymbols_cy_GB = goog.i18n.CompactNumberFormatSymbols_cy;
goog.i18n.CompactNumberFormatSymbols_da = {COMPACT_DECIMAL_SHORT_PATTERN:{1E3:{other:"0\u00a0td"}, 1E4:{other:"00\u00a0td"}, 1E5:{other:"000\u00a0td"}, 1E6:{other:"0\u00a0mio"}, 1E7:{other:"00\u00a0mio"}, 1E8:{other:"000\u00a0mio"}, 1E9:{other:"0\u00a0mia"}, 1E10:{other:"00\u00a0mia"}, 1E11:{other:"000\u00a0mia"}, 1E12:{other:"0\u00a0bio"}, 1E13:{other:"00\u00a0bio"}, 1E14:{other:"000\u00a0bio"}}, COMPACT_DECIMAL_LONG_PATTERN:{1E3:{other:"0 tusind"}, 1E4:{other:"00 tusind"}, 1E5:{other:"000 tusind"}, 
1E6:{other:"0 millioner"}, 1E7:{other:"00 millioner"}, 1E8:{other:"000 millioner"}, 1E9:{other:"0 milliarder"}, 1E10:{other:"00 milliarder"}, 1E11:{other:"000 milliarder"}, 1E12:{other:"0 billioner"}, 1E13:{other:"00 billioner"}, 1E14:{other:"000 billioner"}}};
goog.i18n.CompactNumberFormatSymbols_da_DK = goog.i18n.CompactNumberFormatSymbols_da;
goog.i18n.CompactNumberFormatSymbols_da_GL = goog.i18n.CompactNumberFormatSymbols_da;
goog.i18n.CompactNumberFormatSymbols_de = {COMPACT_DECIMAL_SHORT_PATTERN:{1E3:{other:"0\u00a0Tsd."}, 1E4:{other:"00\u00a0Tsd."}, 1E5:{other:"000\u00a0Tsd."}, 1E6:{other:"0\u00a0Mio."}, 1E7:{other:"00\u00a0Mio."}, 1E8:{other:"000\u00a0Mio."}, 1E9:{other:"0\u00a0Mrd."}, 1E10:{other:"00\u00a0Mrd."}, 1E11:{other:"000\u00a0Mrd."}, 1E12:{other:"0\u00a0Bio."}, 1E13:{other:"00\u00a0Bio."}, 1E14:{other:"000\u00a0Bio."}}, COMPACT_DECIMAL_LONG_PATTERN:{1E3:{other:"0 Tausend"}, 1E4:{other:"00 Tausend"}, 1E5:{other:"000 Tausend"}, 
1E6:{other:"0 Millionen"}, 1E7:{other:"00 Millionen"}, 1E8:{other:"000 Millionen"}, 1E9:{other:"0 Milliarden"}, 1E10:{other:"00 Milliarden"}, 1E11:{other:"000 Milliarden"}, 1E12:{other:"0 Billionen"}, 1E13:{other:"00 Billionen"}, 1E14:{other:"000 Billionen"}}};
goog.i18n.CompactNumberFormatSymbols_de_AT = {COMPACT_DECIMAL_SHORT_PATTERN:{1E3:{other:"0\u00a0Tsd."}, 1E4:{other:"00\u00a0Tsd."}, 1E5:{other:"000\u00a0Tsd."}, 1E6:{other:"0\u00a0Mio."}, 1E7:{other:"00\u00a0Mio."}, 1E8:{other:"000\u00a0Mio."}, 1E9:{other:"0\u00a0Mrd."}, 1E10:{other:"00\u00a0Mrd."}, 1E11:{other:"000\u00a0Mrd."}, 1E12:{other:"0\u00a0Bio."}, 1E13:{other:"00\u00a0Bio."}, 1E14:{other:"000\u00a0Bio."}}, COMPACT_DECIMAL_LONG_PATTERN:{1E3:{other:"0 Tausend"}, 1E4:{other:"00 Tausend"}, 1E5:{other:"000 Tausend"}, 
1E6:{other:"0 Millionen"}, 1E7:{other:"00 Millionen"}, 1E8:{other:"000 Millionen"}, 1E9:{other:"0 Milliarden"}, 1E10:{other:"00 Milliarden"}, 1E11:{other:"000 Milliarden"}, 1E12:{other:"0 Billionen"}, 1E13:{other:"00 Billionen"}, 1E14:{other:"000 Billionen"}}};
goog.i18n.CompactNumberFormatSymbols_de_BE = goog.i18n.CompactNumberFormatSymbols_de;
goog.i18n.CompactNumberFormatSymbols_de_CH = {COMPACT_DECIMAL_SHORT_PATTERN:{1E3:{other:"0\u00a0Tsd."}, 1E4:{other:"00\u00a0Tsd."}, 1E5:{other:"000\u00a0Tsd."}, 1E6:{other:"0\u00a0Mio."}, 1E7:{other:"00\u00a0Mio."}, 1E8:{other:"000\u00a0Mio."}, 1E9:{other:"0\u00a0Mrd."}, 1E10:{other:"00\u00a0Mrd."}, 1E11:{other:"000\u00a0Mrd."}, 1E12:{other:"0\u00a0Bio."}, 1E13:{other:"00\u00a0Bio."}, 1E14:{other:"000\u00a0Bio."}}, COMPACT_DECIMAL_LONG_PATTERN:{1E3:{other:"0 Tausend"}, 1E4:{other:"00 Tausend"}, 1E5:{other:"000 Tausend"}, 
1E6:{other:"0 Millionen"}, 1E7:{other:"00 Millionen"}, 1E8:{other:"000 Millionen"}, 1E9:{other:"0 Milliarden"}, 1E10:{other:"00 Milliarden"}, 1E11:{other:"000 Milliarden"}, 1E12:{other:"0 Billionen"}, 1E13:{other:"00 Billionen"}, 1E14:{other:"000 Billionen"}}};
goog.i18n.CompactNumberFormatSymbols_de_DE = goog.i18n.CompactNumberFormatSymbols_de;
goog.i18n.CompactNumberFormatSymbols_de_LU = goog.i18n.CompactNumberFormatSymbols_de;
goog.i18n.CompactNumberFormatSymbols_el = {COMPACT_DECIMAL_SHORT_PATTERN:{1E3:{other:"0\u00a0\u03c7\u03b9\u03bb."}, 1E4:{other:"00\u00a0\u03c7\u03b9\u03bb."}, 1E5:{other:"000\u00a0\u03c7\u03b9\u03bb."}, 1E6:{other:"0\u00a0\u03b5\u03ba."}, 1E7:{other:"00\u00a0\u03b5\u03ba."}, 1E8:{other:"000\u00a0\u03b5\u03ba."}, 1E9:{other:"0\u00a0\u03b4\u03b9\u03c3."}, 1E10:{other:"00\u00a0\u03b4\u03b9\u03c3."}, 1E11:{other:"000\u00a0\u03b4\u03b9\u03c3."}, 1E12:{other:"0\u00a0\u03c4\u03c1\u03b9\u03c3."}, 1E13:{other:"00\u00a0\u03c4\u03c1\u03b9\u03c3."}, 
1E14:{other:"000\u00a0\u03c4\u03c1\u03b9\u03c3."}}, COMPACT_DECIMAL_LONG_PATTERN:{1E3:{other:"0 \u03c7\u03b9\u03bb\u03b9\u03ac\u03b4\u03b5\u03c2"}, 1E4:{other:"00 \u03c7\u03b9\u03bb\u03b9\u03ac\u03b4\u03b5\u03c2"}, 1E5:{other:"000 \u03c7\u03b9\u03bb\u03b9\u03ac\u03b4\u03b5\u03c2"}, 1E6:{other:"0 \u03b5\u03ba\u03b1\u03c4\u03bf\u03bc\u03bc\u03cd\u03c1\u03b9\u03b1"}, 1E7:{other:"00 \u03b5\u03ba\u03b1\u03c4\u03bf\u03bc\u03bc\u03cd\u03c1\u03b9\u03b1"}, 1E8:{other:"000 \u03b5\u03ba\u03b1\u03c4\u03bf\u03bc\u03bc\u03cd\u03c1\u03b9\u03b1"}, 
1E9:{other:"0 \u03b4\u03b9\u03c3\u03b5\u03ba\u03b1\u03c4\u03bf\u03bc\u03bc\u03cd\u03c1\u03b9\u03b1"}, 1E10:{other:"00 \u03b4\u03b9\u03c3\u03b5\u03ba\u03b1\u03c4\u03bf\u03bc\u03bc\u03cd\u03c1\u03b9\u03b1"}, 1E11:{other:"000 \u03b4\u03b9\u03c3\u03b5\u03ba\u03b1\u03c4\u03bf\u03bc\u03bc\u03cd\u03c1\u03b9\u03b1"}, 1E12:{other:"0 \u03c4\u03c1\u03b9\u03c3\u03b5\u03ba\u03b1\u03c4\u03bf\u03bc\u03bc\u03cd\u03c1\u03b9\u03b1"}, 1E13:{other:"00 \u03c4\u03c1\u03b9\u03c3\u03b5\u03ba\u03b1\u03c4\u03bf\u03bc\u03bc\u03cd\u03c1\u03b9\u03b1"}, 
1E14:{other:"000 \u03c4\u03c1\u03b9\u03c3\u03b5\u03ba\u03b1\u03c4\u03bf\u03bc\u03bc\u03cd\u03c1\u03b9\u03b1"}}};
goog.i18n.CompactNumberFormatSymbols_el_CY = goog.i18n.CompactNumberFormatSymbols_el;
goog.i18n.CompactNumberFormatSymbols_el_GR = goog.i18n.CompactNumberFormatSymbols_el;
goog.i18n.CompactNumberFormatSymbols_en = {COMPACT_DECIMAL_SHORT_PATTERN:{1E3:{other:"0K"}, 1E4:{other:"00K"}, 1E5:{other:"000K"}, 1E6:{other:"0M"}, 1E7:{other:"00M"}, 1E8:{other:"000M"}, 1E9:{other:"0B"}, 1E10:{other:"00B"}, 1E11:{other:"000B"}, 1E12:{other:"0T"}, 1E13:{other:"00T"}, 1E14:{other:"000T"}}, COMPACT_DECIMAL_LONG_PATTERN:{1E3:{other:"0 thousand"}, 1E4:{other:"00 thousand"}, 1E5:{other:"000 thousand"}, 1E6:{other:"0 million"}, 1E7:{other:"00 million"}, 1E8:{other:"000 million"}, 1E9:{other:"0 billion"}, 
1E10:{other:"00 billion"}, 1E11:{other:"000 billion"}, 1E12:{other:"0 trillion"}, 1E13:{other:"00 trillion"}, 1E14:{other:"000 trillion"}}};
goog.i18n.CompactNumberFormatSymbols_en_001 = goog.i18n.CompactNumberFormatSymbols_en;
goog.i18n.CompactNumberFormatSymbols_en_AS = goog.i18n.CompactNumberFormatSymbols_en;
goog.i18n.CompactNumberFormatSymbols_en_AU = {COMPACT_DECIMAL_SHORT_PATTERN:{1E3:{other:"0K"}, 1E4:{other:"00K"}, 1E5:{other:"000K"}, 1E6:{other:"0M"}, 1E7:{other:"00M"}, 1E8:{other:"000M"}, 1E9:{other:"0B"}, 1E10:{other:"00B"}, 1E11:{other:"000B"}, 1E12:{other:"0T"}, 1E13:{other:"00T"}, 1E14:{other:"000T"}}, COMPACT_DECIMAL_LONG_PATTERN:{1E3:{other:"0 thousand"}, 1E4:{other:"00 thousand"}, 1E5:{other:"000 thousand"}, 1E6:{other:"0 million"}, 1E7:{other:"00 million"}, 1E8:{other:"000 million"}, 1E9:{other:"0 billion"}, 
1E10:{other:"00 billion"}, 1E11:{other:"000 billion"}, 1E12:{other:"0 trillion"}, 1E13:{other:"00 trillion"}, 1E14:{other:"000 trillion"}}};
goog.i18n.CompactNumberFormatSymbols_en_CA = {COMPACT_DECIMAL_SHORT_PATTERN:{1E3:{other:"0K"}, 1E4:{other:"00K"}, 1E5:{other:"000K"}, 1E6:{other:"0M"}, 1E7:{other:"00M"}, 1E8:{other:"000M"}, 1E9:{other:"0B"}, 1E10:{other:"00B"}, 1E11:{other:"000B"}, 1E12:{other:"0T"}, 1E13:{other:"00T"}, 1E14:{other:"000T"}}, COMPACT_DECIMAL_LONG_PATTERN:{1E3:{other:"0 thousand"}, 1E4:{other:"00 thousand"}, 1E5:{other:"000 thousand"}, 1E6:{other:"0 million"}, 1E7:{other:"00 million"}, 1E8:{other:"000 million"}, 1E9:{other:"0 billion"}, 
1E10:{other:"00 billion"}, 1E11:{other:"000 billion"}, 1E12:{other:"0 trillion"}, 1E13:{other:"00 trillion"}, 1E14:{other:"000 trillion"}}};
goog.i18n.CompactNumberFormatSymbols_en_DG = goog.i18n.CompactNumberFormatSymbols_en;
goog.i18n.CompactNumberFormatSymbols_en_FM = goog.i18n.CompactNumberFormatSymbols_en;
goog.i18n.CompactNumberFormatSymbols_en_GB = {COMPACT_DECIMAL_SHORT_PATTERN:{1E3:{other:"0K"}, 1E4:{other:"00K"}, 1E5:{other:"000K"}, 1E6:{other:"0M"}, 1E7:{other:"00M"}, 1E8:{other:"000M"}, 1E9:{other:"0B"}, 1E10:{other:"00B"}, 1E11:{other:"000B"}, 1E12:{other:"0T"}, 1E13:{other:"00T"}, 1E14:{other:"000T"}}, COMPACT_DECIMAL_LONG_PATTERN:{1E3:{other:"0 thousand"}, 1E4:{other:"00 thousand"}, 1E5:{other:"000 thousand"}, 1E6:{other:"0 million"}, 1E7:{other:"00 million"}, 1E8:{other:"000 million"}, 1E9:{other:"0 billion"}, 
1E10:{other:"00 billion"}, 1E11:{other:"000 billion"}, 1E12:{other:"0 trillion"}, 1E13:{other:"00 trillion"}, 1E14:{other:"000 trillion"}}};
goog.i18n.CompactNumberFormatSymbols_en_GU = goog.i18n.CompactNumberFormatSymbols_en;
goog.i18n.CompactNumberFormatSymbols_en_IE = {COMPACT_DECIMAL_SHORT_PATTERN:{1E3:{other:"0K"}, 1E4:{other:"00K"}, 1E5:{other:"000K"}, 1E6:{other:"0M"}, 1E7:{other:"00M"}, 1E8:{other:"000M"}, 1E9:{other:"0B"}, 1E10:{other:"00B"}, 1E11:{other:"000B"}, 1E12:{other:"0T"}, 1E13:{other:"00T"}, 1E14:{other:"000T"}}, COMPACT_DECIMAL_LONG_PATTERN:{1E3:{other:"0 thousand"}, 1E4:{other:"00 thousand"}, 1E5:{other:"000 thousand"}, 1E6:{other:"0 million"}, 1E7:{other:"00 million"}, 1E8:{other:"000 million"}, 1E9:{other:"0 billion"}, 
1E10:{other:"00 billion"}, 1E11:{other:"000 billion"}, 1E12:{other:"0 trillion"}, 1E13:{other:"00 trillion"}, 1E14:{other:"000 trillion"}}};
goog.i18n.CompactNumberFormatSymbols_en_IN = {COMPACT_DECIMAL_SHORT_PATTERN:{1E3:{other:"0K"}, 1E4:{other:"00K"}, 1E5:{other:"000K"}, 1E6:{other:"0M"}, 1E7:{other:"00M"}, 1E8:{other:"000M"}, 1E9:{other:"0B"}, 1E10:{other:"00B"}, 1E11:{other:"000B"}, 1E12:{other:"0T"}, 1E13:{other:"00T"}, 1E14:{other:"000T"}}, COMPACT_DECIMAL_LONG_PATTERN:{1E3:{other:"0 thousand"}, 1E4:{other:"00 thousand"}, 1E5:{other:"000 thousand"}, 1E6:{other:"0 million"}, 1E7:{other:"00 million"}, 1E8:{other:"000 million"}, 1E9:{other:"0 billion"}, 
1E10:{other:"00 billion"}, 1E11:{other:"000 billion"}, 1E12:{other:"0 trillion"}, 1E13:{other:"00 trillion"}, 1E14:{other:"000 trillion"}}};
goog.i18n.CompactNumberFormatSymbols_en_IO = goog.i18n.CompactNumberFormatSymbols_en;
goog.i18n.CompactNumberFormatSymbols_en_MH = goog.i18n.CompactNumberFormatSymbols_en;
goog.i18n.CompactNumberFormatSymbols_en_MP = goog.i18n.CompactNumberFormatSymbols_en;
goog.i18n.CompactNumberFormatSymbols_en_PR = goog.i18n.CompactNumberFormatSymbols_en;
goog.i18n.CompactNumberFormatSymbols_en_PW = goog.i18n.CompactNumberFormatSymbols_en;
goog.i18n.CompactNumberFormatSymbols_en_SG = {COMPACT_DECIMAL_SHORT_PATTERN:{1E3:{other:"0K"}, 1E4:{other:"00K"}, 1E5:{other:"000K"}, 1E6:{other:"0M"}, 1E7:{other:"00M"}, 1E8:{other:"000M"}, 1E9:{other:"0B"}, 1E10:{other:"00B"}, 1E11:{other:"000B"}, 1E12:{other:"0T"}, 1E13:{other:"00T"}, 1E14:{other:"000T"}}, COMPACT_DECIMAL_LONG_PATTERN:{1E3:{other:"0 thousand"}, 1E4:{other:"00 thousand"}, 1E5:{other:"000 thousand"}, 1E6:{other:"0 million"}, 1E7:{other:"00 million"}, 1E8:{other:"000 million"}, 1E9:{other:"0 billion"}, 
1E10:{other:"00 billion"}, 1E11:{other:"000 billion"}, 1E12:{other:"0 trillion"}, 1E13:{other:"00 trillion"}, 1E14:{other:"000 trillion"}}};
goog.i18n.CompactNumberFormatSymbols_en_TC = goog.i18n.CompactNumberFormatSymbols_en;
goog.i18n.CompactNumberFormatSymbols_en_UM = goog.i18n.CompactNumberFormatSymbols_en;
goog.i18n.CompactNumberFormatSymbols_en_US = goog.i18n.CompactNumberFormatSymbols_en;
goog.i18n.CompactNumberFormatSymbols_en_VG = goog.i18n.CompactNumberFormatSymbols_en;
goog.i18n.CompactNumberFormatSymbols_en_VI = goog.i18n.CompactNumberFormatSymbols_en;
goog.i18n.CompactNumberFormatSymbols_en_XA = goog.i18n.CompactNumberFormatSymbols_en;
goog.i18n.CompactNumberFormatSymbols_en_ZA = {COMPACT_DECIMAL_SHORT_PATTERN:{1E3:{other:"0K"}, 1E4:{other:"00K"}, 1E5:{other:"000K"}, 1E6:{other:"0M"}, 1E7:{other:"00M"}, 1E8:{other:"000M"}, 1E9:{other:"0B"}, 1E10:{other:"00B"}, 1E11:{other:"000B"}, 1E12:{other:"0T"}, 1E13:{other:"00T"}, 1E14:{other:"000T"}}, COMPACT_DECIMAL_LONG_PATTERN:{1E3:{other:"0 thousand"}, 1E4:{other:"00 thousand"}, 1E5:{other:"000 thousand"}, 1E6:{other:"0 million"}, 1E7:{other:"00 million"}, 1E8:{other:"000 million"}, 1E9:{other:"0 billion"}, 
1E10:{other:"00 billion"}, 1E11:{other:"000 billion"}, 1E12:{other:"0 trillion"}, 1E13:{other:"00 trillion"}, 1E14:{other:"000 trillion"}}};
goog.i18n.CompactNumberFormatSymbols_en_ZW = goog.i18n.CompactNumberFormatSymbols_en;
goog.i18n.CompactNumberFormatSymbols_es = {COMPACT_DECIMAL_SHORT_PATTERN:{1E3:{other:"0\u00a0K"}, 1E4:{other:"00\u00a0K"}, 1E5:{other:"000\u00a0K"}, 1E6:{other:"0\u00a0M"}, 1E7:{other:"00\u00a0M"}, 1E8:{other:"000\u00a0M"}, 1E9:{other:"0000\u00a0M"}, 1E10:{other:"00\u00a0MRD"}, 1E11:{other:"000\u00a0MRD"}, 1E12:{other:"0\u00a0B"}, 1E13:{other:"00\u00a0B"}, 1E14:{other:"000\u00a0B"}}, COMPACT_DECIMAL_LONG_PATTERN:{1E3:{other:"0 mil"}, 1E4:{other:"00 mil"}, 1E5:{other:"000 mil"}, 1E6:{other:"0 millones"}, 
1E7:{other:"00 millones"}, 1E8:{other:"000 millones"}, 1E9:{other:"0 mil millones"}, 1E10:{other:"00 mil millones"}, 1E11:{other:"000 mil millones"}, 1E12:{other:"0 billones"}, 1E13:{other:"00 billones"}, 1E14:{other:"000 billones"}}};
goog.i18n.CompactNumberFormatSymbols_es_419 = {COMPACT_DECIMAL_SHORT_PATTERN:{1E3:{other:"0"}, 1E4:{other:"00k"}, 1E5:{other:"000k"}, 1E6:{other:"0\u00a0M"}, 1E7:{other:"00\u00a0M"}, 1E8:{other:"000\u00a0M"}, 1E9:{other:"0k\u00a0M"}, 1E10:{other:"00k\u00a0M"}, 1E11:{other:"000k\u00a0M"}, 1E12:{other:"0\u00a0B"}, 1E13:{other:"00\u00a0B"}, 1E14:{other:"000\u00a0B"}}, COMPACT_DECIMAL_LONG_PATTERN:{1E3:{other:"0 mil"}, 1E4:{other:"00 mil"}, 1E5:{other:"000 mil"}, 1E6:{other:"0 millones"}, 1E7:{other:"00 millones"}, 
1E8:{other:"000 millones"}, 1E9:{other:"0 mil millones"}, 1E10:{other:"00 mil millones"}, 1E11:{other:"000 mil millones"}, 1E12:{other:"0 billones"}, 1E13:{other:"00 billones"}, 1E14:{other:"000 billones"}}};
goog.i18n.CompactNumberFormatSymbols_es_EA = goog.i18n.CompactNumberFormatSymbols_es;
goog.i18n.CompactNumberFormatSymbols_es_ES = goog.i18n.CompactNumberFormatSymbols_es;
goog.i18n.CompactNumberFormatSymbols_es_IC = goog.i18n.CompactNumberFormatSymbols_es;
goog.i18n.CompactNumberFormatSymbols_es_MX = {COMPACT_DECIMAL_SHORT_PATTERN:{1E3:{other:"0k"}, 1E4:{other:"00k"}, 1E5:{other:"000k"}, 1E6:{other:"0\u00a0M"}, 1E7:{other:"00\u00a0M"}, 1E8:{other:"000\u00a0M"}, 1E9:{other:"0k\u00a0M"}, 1E10:{other:"00k\u00a0M"}, 1E11:{other:"000k\u00a0M"}, 1E12:{other:"0\u00a0B"}, 1E13:{other:"00\u00a0B"}, 1E14:{other:"000\u00a0B"}}, COMPACT_DECIMAL_LONG_PATTERN:{1E3:{other:"0 mil"}, 1E4:{other:"00 mil"}, 1E5:{other:"000 mil"}, 1E6:{other:"0 millones"}, 1E7:{other:"00 millones"}, 
1E8:{other:"000 millones"}, 1E9:{other:"0 mil millones"}, 1E10:{other:"00 mil millones"}, 1E11:{other:"000 mil millones"}, 1E12:{other:"0 billones"}, 1E13:{other:"00 billones"}, 1E14:{other:"000 billones"}}};
goog.i18n.CompactNumberFormatSymbols_es_US = {COMPACT_DECIMAL_SHORT_PATTERN:{1E3:{other:"0"}, 1E4:{other:"00k"}, 1E5:{other:"000k"}, 1E6:{other:"0\u00a0M"}, 1E7:{other:"00\u00a0M"}, 1E8:{other:"000\u00a0M"}, 1E9:{other:"0k\u00a0M"}, 1E10:{other:"00k\u00a0M"}, 1E11:{other:"000k\u00a0M"}, 1E12:{other:"0\u00a0B"}, 1E13:{other:"00\u00a0B"}, 1E14:{other:"000\u00a0B"}}, COMPACT_DECIMAL_LONG_PATTERN:{1E3:{other:"0 mil"}, 1E4:{other:"00 mil"}, 1E5:{other:"000 mil"}, 1E6:{other:"0 millones"}, 1E7:{other:"00 millones"}, 
1E8:{other:"000 millones"}, 1E9:{other:"0 mil millones"}, 1E10:{other:"00 mil millones"}, 1E11:{other:"000 mil millones"}, 1E12:{other:"0 billones"}, 1E13:{other:"00 billones"}, 1E14:{other:"000 billones"}}};
goog.i18n.CompactNumberFormatSymbols_et = {COMPACT_DECIMAL_SHORT_PATTERN:{1E3:{other:"0\u00a0tuh"}, 1E4:{other:"00\u00a0tuh"}, 1E5:{other:"000\u00a0tuh"}, 1E6:{other:"0\u00a0mln"}, 1E7:{other:"00\u00a0mln"}, 1E8:{other:"000\u00a0mln"}, 1E9:{other:"0\u00a0mld"}, 1E10:{other:"00\u00a0mld"}, 1E11:{other:"000\u00a0mld"}, 1E12:{other:"0\u00a0trl"}, 1E13:{other:"00\u00a0trl"}, 1E14:{other:"000\u00a0trl"}}, COMPACT_DECIMAL_LONG_PATTERN:{1E3:{other:"0 tuhat"}, 1E4:{other:"00 tuhat"}, 1E5:{other:"000 tuhat"}, 
1E6:{other:"0 miljonit"}, 1E7:{other:"00 miljonit"}, 1E8:{other:"000 miljonit"}, 1E9:{other:"0 miljardit"}, 1E10:{other:"00 miljardit"}, 1E11:{other:"000 miljardit"}, 1E12:{other:"0 triljonit"}, 1E13:{other:"00 triljonit"}, 1E14:{other:"000 triljonit"}}};
goog.i18n.CompactNumberFormatSymbols_et_EE = goog.i18n.CompactNumberFormatSymbols_et;
goog.i18n.CompactNumberFormatSymbols_eu = {COMPACT_DECIMAL_SHORT_PATTERN:{1E3:{other:"0000"}, 1E4:{other:"00000"}, 1E5:{other:"000000"}, 1E6:{other:"0\u00a0M"}, 1E7:{other:"00\u00a0M"}, 1E8:{other:"000\u00a0M"}, 1E9:{other:"0000\u00a0M"}, 1E10:{other:"00000\u00a0M"}, 1E11:{other:"000000\u00a0M"}, 1E12:{other:"0\u00a0B"}, 1E13:{other:"00\u00a0B"}, 1E14:{other:"000\u00a0B"}}, COMPACT_DECIMAL_LONG_PATTERN:{1E3:{other:"0000"}, 1E4:{other:"00000"}, 1E5:{other:"000000"}, 1E6:{other:"0 milioi"}, 1E7:{other:"00 milioi"}, 
1E8:{other:"000 milioi"}, 1E9:{other:"0000 milioi"}, 1E10:{other:"00000 milioi"}, 1E11:{other:"000000 milioi"}, 1E12:{other:"0 bilioi"}, 1E13:{other:"00 bilioi"}, 1E14:{other:"000 bilioi"}}};
goog.i18n.CompactNumberFormatSymbols_eu_ES = goog.i18n.CompactNumberFormatSymbols_eu;
goog.i18n.CompactNumberFormatSymbols_fa = {COMPACT_DECIMAL_SHORT_PATTERN:{1E3:{other:"0\u00a0\u0647\u0632\u0627\u0631"}, 1E4:{other:"00\u00a0\u0647\u0632\u0627\u0631"}, 1E5:{other:"000\u00a0\u0647\u0632\u0627\u0631"}, 1E6:{other:"0\u00a0\u0645\u06cc\u0644\u06cc\u0648\u0646"}, 1E7:{other:"00\u00a0\u0645\u06cc\u0644\u06cc\u0648\u0646"}, 1E8:{other:"000\u00a0\u0645"}, 1E9:{other:"0\u00a0\u0645"}, 1E10:{other:"00\u00a0\u0645"}, 1E11:{other:"000\u00a0\u0645\u06cc\u0644\u06cc\u0627\u0631\u062f"}, 1E12:{other:"0\u00a0\u062a\u0631\u06cc\u0644\u06cc\u0648\u0646"}, 
1E13:{other:"00\u00a0\u062a"}, 1E14:{other:"000\u00a0\u062a"}}, COMPACT_DECIMAL_LONG_PATTERN:{1E3:{other:"0 \u0647\u0632\u0627\u0631"}, 1E4:{other:"00 \u0647\u0632\u0627\u0631"}, 1E5:{other:"000 \u0647\u0632\u0627\u0631"}, 1E6:{other:"0 \u0645\u06cc\u0644\u06cc\u0648\u0646"}, 1E7:{other:"00 \u0645\u06cc\u0644\u06cc\u0648\u0646"}, 1E8:{other:"000 \u0645\u06cc\u0644\u06cc\u0648\u0646"}, 1E9:{other:"0 \u0645\u06cc\u0644\u06cc\u0627\u0631\u062f"}, 1E10:{other:"00 \u0645\u06cc\u0644\u06cc\u0627\u0631\u062f"}, 
1E11:{other:"000 \u0645\u06cc\u0644\u06cc\u0627\u0631\u062f"}, 1E12:{other:"0 \u0647\u0632\u0627\u0631\u0645\u06cc\u0644\u06cc\u0627\u0631\u062f"}, 1E13:{other:"00 \u0647\u0632\u0627\u0631\u0645\u06cc\u0644\u06cc\u0627\u0631\u062f"}, 1E14:{other:"000 \u0647\u0632\u0627\u0631\u0645\u06cc\u0644\u06cc\u0627\u0631\u062f"}}};
goog.i18n.CompactNumberFormatSymbols_fa_IR = goog.i18n.CompactNumberFormatSymbols_fa;
goog.i18n.CompactNumberFormatSymbols_fi = {COMPACT_DECIMAL_SHORT_PATTERN:{1E3:{other:"0\u00a0t."}, 1E4:{other:"00\u00a0t."}, 1E5:{other:"000\u00a0t."}, 1E6:{other:"0\u00a0milj."}, 1E7:{other:"00\u00a0milj."}, 1E8:{other:"000\u00a0milj."}, 1E9:{other:"0\u00a0mrd."}, 1E10:{other:"00\u00a0mrd."}, 1E11:{other:"000\u00a0mrd."}, 1E12:{other:"0\u00a0bilj."}, 1E13:{other:"00\u00a0bilj."}, 1E14:{other:"000\u00a0bilj."}}, COMPACT_DECIMAL_LONG_PATTERN:{1E3:{other:"0 tuhatta"}, 1E4:{other:"00 tuhatta"}, 1E5:{other:"000 tuhatta"}, 
1E6:{other:"0 miljoonaa"}, 1E7:{other:"00 miljoonaa"}, 1E8:{other:"000 miljoonaa"}, 1E9:{other:"0 miljardia"}, 1E10:{other:"00 miljardia"}, 1E11:{other:"000 miljardia"}, 1E12:{other:"0 biljoonaa"}, 1E13:{other:"00 biljoonaa"}, 1E14:{other:"000 biljoonaa"}}};
goog.i18n.CompactNumberFormatSymbols_fi_FI = goog.i18n.CompactNumberFormatSymbols_fi;
goog.i18n.CompactNumberFormatSymbols_fil = {COMPACT_DECIMAL_SHORT_PATTERN:{1E3:{other:"0K"}, 1E4:{other:"00K"}, 1E5:{other:"000K"}, 1E6:{other:"0M"}, 1E7:{other:"00M"}, 1E8:{other:"000M"}, 1E9:{other:"0B"}, 1E10:{other:"00B"}, 1E11:{other:"000B"}, 1E12:{other:"0T"}, 1E13:{other:"00T"}, 1E14:{other:"000T"}}, COMPACT_DECIMAL_LONG_PATTERN:{1E3:{other:"0 na libo"}, 1E4:{other:"00 na libo"}, 1E5:{other:"000 na libo"}, 1E6:{other:"0 na milyon"}, 1E7:{other:"00 na milyon"}, 1E8:{other:"000 na milyon"}, 
1E9:{other:"0 na bilyon"}, 1E10:{other:"00 na bilyon"}, 1E11:{other:"000 na bilyon"}, 1E12:{other:"0 na trilyon"}, 1E13:{other:"00 na trilyon"}, 1E14:{other:"000 na trilyon"}}};
goog.i18n.CompactNumberFormatSymbols_fil_PH = goog.i18n.CompactNumberFormatSymbols_fil;
goog.i18n.CompactNumberFormatSymbols_fr = {COMPACT_DECIMAL_SHORT_PATTERN:{1E3:{other:"0\u00a0k"}, 1E4:{other:"00\u00a0k"}, 1E5:{other:"000\u00a0k"}, 1E6:{other:"0\u00a0M"}, 1E7:{other:"00\u00a0M"}, 1E8:{other:"000\u00a0M"}, 1E9:{other:"0\u00a0Md"}, 1E10:{other:"00\u00a0Md"}, 1E11:{other:"000\u00a0Md"}, 1E12:{other:"0\u00a0Bn"}, 1E13:{other:"00\u00a0Bn"}, 1E14:{other:"000\u00a0Bn"}}, COMPACT_DECIMAL_LONG_PATTERN:{1E3:{other:"0 mille"}, 1E4:{other:"00 mille"}, 1E5:{other:"000 mille"}, 1E6:{other:"0 millions"}, 
1E7:{other:"00 millions"}, 1E8:{other:"000 millions"}, 1E9:{other:"0 milliards"}, 1E10:{other:"00 milliards"}, 1E11:{other:"000 milliards"}, 1E12:{other:"0 billions"}, 1E13:{other:"00 billions"}, 1E14:{other:"000 billions"}}};
goog.i18n.CompactNumberFormatSymbols_fr_BL = goog.i18n.CompactNumberFormatSymbols_fr;
goog.i18n.CompactNumberFormatSymbols_fr_CA = {COMPACT_DECIMAL_SHORT_PATTERN:{1E3:{other:"0\u00a0k"}, 1E4:{other:"00\u00a0k"}, 1E5:{other:"000\u00a0k"}, 1E6:{other:"0\u00a0M"}, 1E7:{other:"00\u00a0M"}, 1E8:{other:"000\u00a0M"}, 1E9:{other:"0\u00a0G"}, 1E10:{other:"00\u00a0G"}, 1E11:{other:"000\u00a0G"}, 1E12:{other:"0\u00a0T"}, 1E13:{other:"00\u00a0T"}, 1E14:{other:"000\u00a0T"}}, COMPACT_DECIMAL_LONG_PATTERN:{1E3:{other:"0 mille"}, 1E4:{other:"00 mille"}, 1E5:{other:"000 mille"}, 1E6:{other:"0 millions"}, 
1E7:{other:"00 millions"}, 1E8:{other:"000 millions"}, 1E9:{other:"0 milliards"}, 1E10:{other:"00 milliards"}, 1E11:{other:"000 milliards"}, 1E12:{other:"0 billions"}, 1E13:{other:"00 billions"}, 1E14:{other:"000 billions"}}};
goog.i18n.CompactNumberFormatSymbols_fr_FR = goog.i18n.CompactNumberFormatSymbols_fr;
goog.i18n.CompactNumberFormatSymbols_fr_GF = goog.i18n.CompactNumberFormatSymbols_fr;
goog.i18n.CompactNumberFormatSymbols_fr_GP = goog.i18n.CompactNumberFormatSymbols_fr;
goog.i18n.CompactNumberFormatSymbols_fr_MC = goog.i18n.CompactNumberFormatSymbols_fr;
goog.i18n.CompactNumberFormatSymbols_fr_MF = goog.i18n.CompactNumberFormatSymbols_fr;
goog.i18n.CompactNumberFormatSymbols_fr_MQ = goog.i18n.CompactNumberFormatSymbols_fr;
goog.i18n.CompactNumberFormatSymbols_fr_PM = goog.i18n.CompactNumberFormatSymbols_fr;
goog.i18n.CompactNumberFormatSymbols_fr_RE = goog.i18n.CompactNumberFormatSymbols_fr;
goog.i18n.CompactNumberFormatSymbols_fr_YT = goog.i18n.CompactNumberFormatSymbols_fr;
goog.i18n.CompactNumberFormatSymbols_ga = {COMPACT_DECIMAL_SHORT_PATTERN:{1E3:{other:"0k"}, 1E4:{other:"00k"}, 1E5:{other:"000k"}, 1E6:{other:"0M"}, 1E7:{other:"00M"}, 1E8:{other:"000M"}, 1E9:{other:"0B"}, 1E10:{other:"00B"}, 1E11:{other:"000B"}, 1E12:{other:"0T"}, 1E13:{other:"00T"}, 1E14:{other:"000T"}}, COMPACT_DECIMAL_LONG_PATTERN:{1E3:{other:"0 m\u00edle"}, 1E4:{other:"00 m\u00edle"}, 1E5:{other:"000 m\u00edle"}, 1E6:{other:"0 milli\u00fan"}, 1E7:{other:"00 milli\u00fan"}, 1E8:{other:"000 milli\u00fan"}, 
1E9:{other:"0 billi\u00fan"}, 1E10:{other:"00 billi\u00fan"}, 1E11:{other:"000 billi\u00fan"}, 1E12:{other:"0 trilli\u00fan"}, 1E13:{other:"00 trilli\u00fan"}, 1E14:{other:"000 trilli\u00fan"}}};
goog.i18n.CompactNumberFormatSymbols_ga_IE = goog.i18n.CompactNumberFormatSymbols_ga;
goog.i18n.CompactNumberFormatSymbols_gl = {COMPACT_DECIMAL_SHORT_PATTERN:{1E3:{other:"0K"}, 1E4:{other:"00K"}, 1E5:{other:"000K"}, 1E6:{other:"0M"}, 1E7:{other:"00M"}, 1E8:{other:"000M"}, 1E9:{other:"0k\u00a0M"}, 1E10:{other:"00k\u00a0M"}, 1E11:{other:"000k\u00a0M"}, 1E12:{other:"0\u00a0B"}, 1E13:{other:"00\u00a0B"}, 1E14:{other:"000\u00a0B"}}, COMPACT_DECIMAL_LONG_PATTERN:{1E3:{other:"0 mil"}, 1E4:{other:"00 mil"}, 1E5:{other:"000 mil"}, 1E6:{other:"0 mill\u00f3ns"}, 1E7:{other:"00 mill\u00f3ns"}, 
1E8:{other:"000 mill\u00f3ns"}, 1E9:{other:"0 mil mill\u00f3ns"}, 1E10:{other:"00 mil mill\u00f3ns"}, 1E11:{other:"000 mil mill\u00f3ns"}, 1E12:{other:"0 bill\u00f3ns"}, 1E13:{other:"00 bill\u00f3ns"}, 1E14:{other:"000 bill\u00f3ns"}}};
goog.i18n.CompactNumberFormatSymbols_gl_ES = goog.i18n.CompactNumberFormatSymbols_gl;
goog.i18n.CompactNumberFormatSymbols_gsw = {COMPACT_DECIMAL_SHORT_PATTERN:{1E3:{other:"0\u00a0tsd"}, 1E4:{other:"00\u00a0tsd"}, 1E5:{other:"000\u00a0tsd"}, 1E6:{other:"0\u00a0Mio"}, 1E7:{other:"00\u00a0Mio"}, 1E8:{other:"000\u00a0Mio"}, 1E9:{other:"0\u00a0Mrd"}, 1E10:{other:"00\u00a0Mrd"}, 1E11:{other:"000\u00a0Mrd"}, 1E12:{other:"0\u00a0Bio"}, 1E13:{other:"00\u00a0Bio"}, 1E14:{other:"000\u00a0Bio"}}, COMPACT_DECIMAL_LONG_PATTERN:{1E3:{other:"0 tausend"}, 1E4:{other:"00 tausend"}, 1E5:{other:"000 tausend"}, 
1E6:{other:"0 Millionen"}, 1E7:{other:"00 Millionen"}, 1E8:{other:"000 Millionen"}, 1E9:{other:"0 Milliarden"}, 1E10:{other:"00 Milliarden"}, 1E11:{other:"000 Milliarden"}, 1E12:{other:"0 Billionen"}, 1E13:{other:"00 Billionen"}, 1E14:{other:"000 Billionen"}}};
goog.i18n.CompactNumberFormatSymbols_gsw_CH = goog.i18n.CompactNumberFormatSymbols_gsw;
goog.i18n.CompactNumberFormatSymbols_gsw_LI = goog.i18n.CompactNumberFormatSymbols_gsw;
goog.i18n.CompactNumberFormatSymbols_gu = {COMPACT_DECIMAL_SHORT_PATTERN:{1E3:{other:"0\u00a0\u0ab9\u0a9c\u0abe\u0ab0"}, 1E4:{other:"00\u00a0\u0ab9\u0a9c\u0abe\u0ab0"}, 1E5:{other:"0\u00a0\u0ab2\u0abe\u0a96"}, 1E6:{other:"00\u00a0\u0ab2\u0abe\u0a96"}, 1E7:{other:"0\u00a0\u0a95\u0ab0\u0acb\u0aa1"}, 1E8:{other:"00\u00a0\u0a95\u0ab0\u0acb\u0aa1"}, 1E9:{other:"0\u00a0\u0a85\u0aac\u0a9c"}, 1E10:{other:"00\u00a0\u0a85\u0aac\u0a9c"}, 1E11:{other:"0\u00a0\u0aa8\u0abf\u0a96\u0ab0\u0acd\u0ab5"}, 1E12:{other:"0\u00a0\u0aae\u0ab9\u0abe\u0aaa\u0aa6\u0acd\u0aae"}, 
1E13:{other:"0\u00a0\u0ab6\u0a82\u0a95\u0ac1"}, 1E14:{other:"0\u00a0\u0a9c\u0ab2\u0aa7\u0abf"}}, COMPACT_DECIMAL_LONG_PATTERN:{1E3:{other:"0 \u0ab9\u0a9c\u0abe\u0ab0"}, 1E4:{other:"00 \u0ab9\u0a9c\u0abe\u0ab0"}, 1E5:{other:"0 \u0ab2\u0abe\u0a96"}, 1E6:{other:"00 \u0ab2\u0abe\u0a96"}, 1E7:{other:"0 \u0a95\u0ab0\u0acb\u0aa1"}, 1E8:{other:"00 \u0a95\u0ab0\u0acb\u0aa1"}, 1E9:{other:"0 \u0a85\u0aac\u0a9c"}, 1E10:{other:"00 \u0a85\u0aac\u0a9c"}, 1E11:{other:"0 \u0aa8\u0abf\u0a96\u0ab0\u0acd\u0ab5"}, 1E12:{other:"0 \u0aae\u0ab9\u0abe\u0aaa\u0aa6\u0acd\u0aae"}, 
1E13:{other:"0 \u0ab6\u0a82\u0a95\u0ac1"}, 1E14:{other:"0 \u0a9c\u0ab2\u0aa7\u0abf"}}};
goog.i18n.CompactNumberFormatSymbols_gu_IN = goog.i18n.CompactNumberFormatSymbols_gu;
goog.i18n.CompactNumberFormatSymbols_haw = {COMPACT_DECIMAL_SHORT_PATTERN:{1E3:{other:"0K"}, 1E4:{other:"00K"}, 1E5:{other:"000K"}, 1E6:{other:"0M"}, 1E7:{other:"00M"}, 1E8:{other:"000M"}, 1E9:{other:"0G"}, 1E10:{other:"00G"}, 1E11:{other:"000G"}, 1E12:{other:"0T"}, 1E13:{other:"00T"}, 1E14:{other:"000T"}}};
goog.i18n.CompactNumberFormatSymbols_haw_US = goog.i18n.CompactNumberFormatSymbols_haw;
goog.i18n.CompactNumberFormatSymbols_he = {COMPACT_DECIMAL_SHORT_PATTERN:{1E3:{other:"\u200f0\u00a0\u05d0\u05dc\u05e3"}, 1E4:{other:"\u200f00\u00a0\u05d0\u05dc\u05e3"}, 1E5:{other:"\u200f000\u00a0\u05d0\u05dc\u05e3"}, 1E6:{other:"\u200f0\u00a0\u05de\u05d9\u05dc\u05f3"}, 1E7:{other:"\u200f00\u00a0\u05de\u05d9\u05dc\u05f3"}, 1E8:{other:"\u200f000\u00a0\u05de\u05d9\u05dc\u05f3"}, 1E9:{other:"0B"}, 1E10:{other:"00B"}, 1E11:{other:"000B"}, 1E12:{other:"0T"}, 1E13:{other:"00T"}, 1E14:{other:"000T"}}, COMPACT_DECIMAL_LONG_PATTERN:{1E3:{other:"\u200f0 \u05d0\u05dc\u05e3"}, 
1E4:{other:"\u200f00 \u05d0\u05dc\u05e3"}, 1E5:{other:"\u200f000 \u05d0\u05dc\u05e3"}, 1E6:{other:"\u200f0 \u05de\u05d9\u05dc\u05d9\u05d5\u05df"}, 1E7:{other:"\u200f00 \u05de\u05d9\u05dc\u05d9\u05d5\u05df"}, 1E8:{other:"\u200f000 \u05de\u05d9\u05dc\u05d9\u05d5\u05df"}, 1E9:{other:"\u200f0 \u05de\u05d9\u05dc\u05d9\u05d0\u05e8\u05d3"}, 1E10:{other:"\u200f00 \u05de\u05d9\u05dc\u05d9\u05d0\u05e8\u05d3"}, 1E11:{other:"\u200f000 \u05de\u05d9\u05dc\u05d9\u05d0\u05e8\u05d3"}, 1E12:{other:"\u200f0 \u05d8\u05e8\u05d9\u05dc\u05d9\u05d5\u05df"}, 
1E13:{other:"\u200f00 \u05d8\u05e8\u05d9\u05dc\u05d9\u05d5\u05df"}, 1E14:{other:"\u200f000 \u05d8\u05e8\u05d9\u05dc\u05d9\u05d5\u05df"}}};
goog.i18n.CompactNumberFormatSymbols_he_IL = goog.i18n.CompactNumberFormatSymbols_he;
goog.i18n.CompactNumberFormatSymbols_hi = {COMPACT_DECIMAL_SHORT_PATTERN:{1E3:{other:"0\u00a0\u0939\u091c\u093c\u093e\u0930"}, 1E4:{other:"00\u00a0\u0939\u091c\u093c\u093e\u0930"}, 1E5:{other:"0\u00a0\u0932\u093e\u0916"}, 1E6:{other:"00\u00a0\u0932\u093e\u0916"}, 1E7:{other:"0\u00a0\u0915."}, 1E8:{other:"00\u00a0\u0915."}, 1E9:{other:"0\u00a0\u0905."}, 1E10:{other:"00\u00a0\u0905."}, 1E11:{other:"0\u00a0\u0916."}, 1E12:{other:"00\u00a0\u0916."}, 1E13:{other:"0\u00a0\u0928\u0940\u0932"}, 1E14:{other:"00\u00a0\u0928\u0940\u0932"}}, 
COMPACT_DECIMAL_LONG_PATTERN:{1E3:{other:"0 \u0939\u091c\u093c\u093e\u0930"}, 1E4:{other:"00 \u0939\u091c\u093c\u093e\u0930"}, 1E5:{other:"0 \u0932\u093e\u0916"}, 1E6:{other:"00 \u0932\u093e\u0916"}, 1E7:{other:"0 \u0915\u0930\u094b\u0921\u093c"}, 1E8:{other:"00 \u0915\u0930\u094b\u0921\u093c"}, 1E9:{other:"0 \u0905\u0930\u092c"}, 1E10:{other:"00 \u0905\u0930\u092c"}, 1E11:{other:"0 \u0916\u0930\u092c"}, 1E12:{other:"00 \u0916\u0930\u092c"}, 1E13:{other:"000 \u0916\u0930\u092c"}, 1E14:{other:"0000 \u0916\u0930\u092c"}}};
goog.i18n.CompactNumberFormatSymbols_hi_IN = goog.i18n.CompactNumberFormatSymbols_hi;
goog.i18n.CompactNumberFormatSymbols_hr = {COMPACT_DECIMAL_SHORT_PATTERN:{1E3:{other:"0\u00a0tis."}, 1E4:{other:"00\u00a0tis."}, 1E5:{other:"000\u00a0tis."}, 1E6:{other:"0\u00a0mil."}, 1E7:{other:"00\u00a0mil."}, 1E8:{other:"000\u00a0mil."}, 1E9:{other:"0\u00a0mlr."}, 1E10:{other:"00\u00a0mlr."}, 1E11:{other:"000\u00a0mlr."}, 1E12:{other:"0\u00a0bil."}, 1E13:{other:"00\u00a0bil."}, 1E14:{other:"000\u00a0bil."}}, COMPACT_DECIMAL_LONG_PATTERN:{1E3:{other:"0 tisu\u0107a"}, 1E4:{other:"00 tisu\u0107a"}, 
1E5:{other:"000 tisu\u0107a"}, 1E6:{other:"0 milijuna"}, 1E7:{other:"00 milijuna"}, 1E8:{other:"000 milijuna"}, 1E9:{other:"0 milijardi"}, 1E10:{other:"00 milijardi"}, 1E11:{other:"000 milijardi"}, 1E12:{other:"0 bilijuna"}, 1E13:{other:"00 bilijuna"}, 1E14:{other:"000 bilijuna"}}};
goog.i18n.CompactNumberFormatSymbols_hr_HR = goog.i18n.CompactNumberFormatSymbols_hr;
goog.i18n.CompactNumberFormatSymbols_hu = {COMPACT_DECIMAL_SHORT_PATTERN:{1E3:{other:"0\u00a0E"}, 1E4:{other:"00\u00a0E"}, 1E5:{other:"000\u00a0E"}, 1E6:{other:"0\u00a0M"}, 1E7:{other:"00\u00a0M"}, 1E8:{other:"000\u00a0M"}, 1E9:{other:"0\u00a0Mrd"}, 1E10:{other:"00\u00a0Mrd"}, 1E11:{other:"000\u00a0Mrd"}, 1E12:{other:"0\u00a0B"}, 1E13:{other:"00\u00a0B"}, 1E14:{other:"000\u00a0B"}}, COMPACT_DECIMAL_LONG_PATTERN:{1E3:{other:"0 ezer"}, 1E4:{other:"00 ezer"}, 1E5:{other:"000 ezer"}, 1E6:{other:"0 milli\u00f3"}, 
1E7:{other:"00 milli\u00f3"}, 1E8:{other:"000 milli\u00f3"}, 1E9:{other:"0 milli\u00e1rd"}, 1E10:{other:"00 milli\u00e1rd"}, 1E11:{other:"000 milli\u00e1rd"}, 1E12:{other:"0 billi\u00f3"}, 1E13:{other:"00 billi\u00f3"}, 1E14:{other:"000 billi\u00f3"}}};
goog.i18n.CompactNumberFormatSymbols_hu_HU = goog.i18n.CompactNumberFormatSymbols_hu;
goog.i18n.CompactNumberFormatSymbols_hy = {COMPACT_DECIMAL_SHORT_PATTERN:{1E3:{other:"0\u00a0\u0570\u0566\u0580"}, 1E4:{other:"00\u00a0\u0570\u0566\u0580"}, 1E5:{other:"000\u00a0\u0570\u0566\u0580"}, 1E6:{other:"0\u00a0\u0574\u056c\u0576"}, 1E7:{other:"00\u00a0\u0574\u056c\u0576"}, 1E8:{other:"000\u00a0\u0574\u056c\u0576"}, 1E9:{other:"0\u00a0\u0574\u056c\u0580\u0564"}, 1E10:{other:"00\u00a0\u0574\u056c\u0580\u0564"}, 1E11:{other:"000\u00a0\u0574\u056c\u0580\u0564"}, 1E12:{other:"0\u00a0\u057f\u0580\u056c\u0576"}, 
1E13:{other:"00\u00a0\u057f\u0580\u056c\u0576"}, 1E14:{other:"000\u00a0\u057f\u0580\u056c\u0576"}}, COMPACT_DECIMAL_LONG_PATTERN:{1E3:{other:"0 \u0570\u0561\u0566\u0561\u0580"}, 1E4:{other:"00 \u0570\u0561\u0566\u0561\u0580"}, 1E5:{other:"000 \u0570\u0561\u0566\u0561\u0580"}, 1E6:{other:"0 \u0574\u056b\u056c\u056b\u0578\u0576"}, 1E7:{other:"00 \u0574\u056b\u056c\u056b\u0578\u0576"}, 1E8:{other:"000 \u0574\u056b\u056c\u056b\u0578\u0576"}, 1E9:{other:"0 \u0574\u056b\u056c\u056b\u0561\u0580\u0564"}, 
1E10:{other:"00 \u0574\u056b\u056c\u056b\u0561\u0580\u0564"}, 1E11:{other:"000 \u0574\u056b\u056c\u056b\u0561\u0580\u0564"}, 1E12:{other:"0 \u057f\u0580\u056b\u056c\u056b\u0578\u0576"}, 1E13:{other:"00 \u057f\u0580\u056b\u056c\u056b\u0578\u0576"}, 1E14:{other:"000 \u057f\u0580\u056b\u056c\u056b\u0578\u0576"}}};
goog.i18n.CompactNumberFormatSymbols_hy_AM = goog.i18n.CompactNumberFormatSymbols_hy;
goog.i18n.CompactNumberFormatSymbols_id = {COMPACT_DECIMAL_SHORT_PATTERN:{1E3:{other:"0"}, 1E4:{other:"00\u00a0rb"}, 1E5:{other:"000\u00a0rb"}, 1E6:{other:"0\u00a0jt"}, 1E7:{other:"00\u00a0jt"}, 1E8:{other:"000\u00a0jt"}, 1E9:{other:"0\u00a0M"}, 1E10:{other:"00\u00a0M"}, 1E11:{other:"000\u00a0M"}, 1E12:{other:"0\u00a0T"}, 1E13:{other:"00\u00a0T"}, 1E14:{other:"000\u00a0T"}}, COMPACT_DECIMAL_LONG_PATTERN:{1E3:{other:"0 ribu"}, 1E4:{other:"00 ribu"}, 1E5:{other:"000 ribu"}, 1E6:{other:"0 juta"}, 1E7:{other:"00 juta"}, 
1E8:{other:"000 juta"}, 1E9:{other:"0 miliar"}, 1E10:{other:"00 miliar"}, 1E11:{other:"000 miliar"}, 1E12:{other:"0 triliun"}, 1E13:{other:"00 triliun"}, 1E14:{other:"000 triliun"}}};
goog.i18n.CompactNumberFormatSymbols_id_ID = goog.i18n.CompactNumberFormatSymbols_id;
goog.i18n.CompactNumberFormatSymbols_in = {COMPACT_DECIMAL_SHORT_PATTERN:{1E3:{other:"0"}, 1E4:{other:"00\u00a0rb"}, 1E5:{other:"000\u00a0rb"}, 1E6:{other:"0\u00a0jt"}, 1E7:{other:"00\u00a0jt"}, 1E8:{other:"000\u00a0jt"}, 1E9:{other:"0\u00a0M"}, 1E10:{other:"00\u00a0M"}, 1E11:{other:"000\u00a0M"}, 1E12:{other:"0\u00a0T"}, 1E13:{other:"00\u00a0T"}, 1E14:{other:"000\u00a0T"}}, COMPACT_DECIMAL_LONG_PATTERN:{1E3:{other:"0 ribu"}, 1E4:{other:"00 ribu"}, 1E5:{other:"000 ribu"}, 1E6:{other:"0 juta"}, 1E7:{other:"00 juta"}, 
1E8:{other:"000 juta"}, 1E9:{other:"0 miliar"}, 1E10:{other:"00 miliar"}, 1E11:{other:"000 miliar"}, 1E12:{other:"0 triliun"}, 1E13:{other:"00 triliun"}, 1E14:{other:"000 triliun"}}};
goog.i18n.CompactNumberFormatSymbols_is = {COMPACT_DECIMAL_SHORT_PATTERN:{1E3:{other:"0\u00a0\u00fe."}, 1E4:{other:"00\u00a0\u00fe."}, 1E5:{other:"000\u00a0\u00fe."}, 1E6:{other:"0\u00a0m."}, 1E7:{other:"00\u00a0m."}, 1E8:{other:"000\u00a0m."}, 1E9:{other:"0\u00a0ma."}, 1E10:{other:"00\u00a0ma."}, 1E11:{other:"000\u00a0ma."}, 1E12:{other:"0\u00a0bn"}, 1E13:{other:"00\u00a0bn"}, 1E14:{other:"000\u00a0bn"}}, COMPACT_DECIMAL_LONG_PATTERN:{1E3:{other:"0 \u00fe\u00fasund"}, 1E4:{other:"00 \u00fe\u00fasund"}, 
1E5:{other:"000 \u00fe\u00fasund"}, 1E6:{other:"0 millj\u00f3nir"}, 1E7:{other:"00 millj\u00f3nir"}, 1E8:{other:"000 millj\u00f3nir"}, 1E9:{other:"0 milljar\u00f0ar"}, 1E10:{other:"00 milljar\u00f0ar"}, 1E11:{other:"000 milljar\u00f0ar"}, 1E12:{other:"0 billj\u00f3nir"}, 1E13:{other:"00 billj\u00f3nir"}, 1E14:{other:"000 billj\u00f3nir"}}};
goog.i18n.CompactNumberFormatSymbols_is_IS = goog.i18n.CompactNumberFormatSymbols_is;
goog.i18n.CompactNumberFormatSymbols_it = {COMPACT_DECIMAL_SHORT_PATTERN:{1E3:{other:"0"}, 1E4:{other:"0"}, 1E5:{other:"0"}, 1E6:{other:"0\u00a0Mln"}, 1E7:{other:"00\u00a0Mln"}, 1E8:{other:"000\u00a0Mln"}, 1E9:{other:"0\u00a0Mld"}, 1E10:{other:"00\u00a0Mld"}, 1E11:{other:"000\u00a0Mld"}, 1E12:{other:"0\u00a0Bln"}, 1E13:{other:"00\u00a0Bln"}, 1E14:{other:"000\u00a0Bln"}}, COMPACT_DECIMAL_LONG_PATTERN:{1E3:{other:"0 mila"}, 1E4:{other:"00 mila"}, 1E5:{other:"000 mila"}, 1E6:{other:"0 milioni"}, 1E7:{other:"00 milioni"}, 
1E8:{other:"000 milioni"}, 1E9:{other:"0 miliardi"}, 1E10:{other:"00 miliardi"}, 1E11:{other:"000 miliardi"}, 1E12:{other:"0 mila miliardi"}, 1E13:{other:"00 mila miliardi"}, 1E14:{other:"000 mila miliardi"}}};
goog.i18n.CompactNumberFormatSymbols_it_IT = goog.i18n.CompactNumberFormatSymbols_it;
goog.i18n.CompactNumberFormatSymbols_it_SM = goog.i18n.CompactNumberFormatSymbols_it;
goog.i18n.CompactNumberFormatSymbols_iw = {COMPACT_DECIMAL_SHORT_PATTERN:{1E3:{other:"\u200f0\u00a0\u05d0\u05dc\u05e3"}, 1E4:{other:"\u200f00\u00a0\u05d0\u05dc\u05e3"}, 1E5:{other:"\u200f000\u00a0\u05d0\u05dc\u05e3"}, 1E6:{other:"\u200f0\u00a0\u05de\u05d9\u05dc\u05f3"}, 1E7:{other:"\u200f00\u00a0\u05de\u05d9\u05dc\u05f3"}, 1E8:{other:"\u200f000\u00a0\u05de\u05d9\u05dc\u05f3"}, 1E9:{other:"0B"}, 1E10:{other:"00B"}, 1E11:{other:"000B"}, 1E12:{other:"0T"}, 1E13:{other:"00T"}, 1E14:{other:"000T"}}, COMPACT_DECIMAL_LONG_PATTERN:{1E3:{other:"\u200f0 \u05d0\u05dc\u05e3"}, 
1E4:{other:"\u200f00 \u05d0\u05dc\u05e3"}, 1E5:{other:"\u200f000 \u05d0\u05dc\u05e3"}, 1E6:{other:"\u200f0 \u05de\u05d9\u05dc\u05d9\u05d5\u05df"}, 1E7:{other:"\u200f00 \u05de\u05d9\u05dc\u05d9\u05d5\u05df"}, 1E8:{other:"\u200f000 \u05de\u05d9\u05dc\u05d9\u05d5\u05df"}, 1E9:{other:"\u200f0 \u05de\u05d9\u05dc\u05d9\u05d0\u05e8\u05d3"}, 1E10:{other:"\u200f00 \u05de\u05d9\u05dc\u05d9\u05d0\u05e8\u05d3"}, 1E11:{other:"\u200f000 \u05de\u05d9\u05dc\u05d9\u05d0\u05e8\u05d3"}, 1E12:{other:"\u200f0 \u05d8\u05e8\u05d9\u05dc\u05d9\u05d5\u05df"}, 
1E13:{other:"\u200f00 \u05d8\u05e8\u05d9\u05dc\u05d9\u05d5\u05df"}, 1E14:{other:"\u200f000 \u05d8\u05e8\u05d9\u05dc\u05d9\u05d5\u05df"}}};
goog.i18n.CompactNumberFormatSymbols_ja = {COMPACT_DECIMAL_SHORT_PATTERN:{1E3:{other:"0"}, 1E4:{other:"0\u4e07"}, 1E5:{other:"00\u4e07"}, 1E6:{other:"000\u4e07"}, 1E7:{other:"0000\u4e07"}, 1E8:{other:"0\u5104"}, 1E9:{other:"00\u5104"}, 1E10:{other:"000\u5104"}, 1E11:{other:"0000\u5104"}, 1E12:{other:"0\u5146"}, 1E13:{other:"00\u5146"}, 1E14:{other:"000\u5146"}}, COMPACT_DECIMAL_LONG_PATTERN:{1E3:{other:"0"}, 1E4:{other:"0\u4e07"}, 1E5:{other:"00\u4e07"}, 1E6:{other:"000\u4e07"}, 1E7:{other:"0000\u4e07"}, 
1E8:{other:"0\u5104"}, 1E9:{other:"00\u5104"}, 1E10:{other:"000\u5104"}, 1E11:{other:"0000\u5104"}, 1E12:{other:"0\u5146"}, 1E13:{other:"00\u5146"}, 1E14:{other:"000\u5146"}}};
goog.i18n.CompactNumberFormatSymbols_ja_JP = goog.i18n.CompactNumberFormatSymbols_ja;
goog.i18n.CompactNumberFormatSymbols_ka = {COMPACT_DECIMAL_SHORT_PATTERN:{1E3:{other:"0\u00a0\u10d0\u10d7."}, 1E4:{other:"00\u00a0\u10d0\u10d7."}, 1E5:{other:"000\u00a0\u10d0\u10d7."}, 1E6:{other:"0\u00a0\u10db\u10da\u10dc."}, 1E7:{other:"00\u00a0\u10db\u10da\u10dc."}, 1E8:{other:"000\u00a0\u10db\u10da\u10dc."}, 1E9:{other:"0\u00a0\u10db\u10da\u10e0\u10d3."}, 1E10:{other:"00\u00a0\u10db\u10da\u10e0\u10d3."}, 1E11:{other:"000\u00a0\u10db\u10da\u10e0."}, 1E12:{other:"0\u00a0\u10e2\u10e0\u10da."}, 1E13:{other:"00\u00a0\u10e2\u10e0\u10da."}, 
1E14:{other:"000\u00a0\u10e2\u10e0\u10da."}}, COMPACT_DECIMAL_LONG_PATTERN:{1E3:{other:"0 \u10d0\u10d7\u10d0\u10e1\u10d8"}, 1E4:{other:"00 \u10d0\u10d7\u10d0\u10e1\u10d8"}, 1E5:{other:"000 \u10d0\u10d7\u10d0\u10e1\u10d8"}, 1E6:{other:"0 \u10db\u10d8\u10da\u10d8\u10dd\u10dc\u10d8"}, 1E7:{other:"00 \u10db\u10d8\u10da\u10d8\u10dd\u10dc\u10d8"}, 1E8:{other:"000 \u10db\u10d8\u10da\u10d8\u10dd\u10dc\u10d8"}, 1E9:{other:"0 \u10db\u10d8\u10da\u10d8\u10d0\u10e0\u10d3\u10d8"}, 1E10:{other:"00 \u10db\u10d8\u10da\u10d8\u10d0\u10e0\u10d3\u10d8"}, 
1E11:{other:"000 \u10db\u10d8\u10da\u10d8\u10d0\u10e0\u10d3\u10d8"}, 1E12:{other:"0 \u10e2\u10e0\u10d8\u10da\u10d8\u10dd\u10dc\u10d8"}, 1E13:{other:"00 \u10e2\u10e0\u10d8\u10da\u10d8\u10dd\u10dc\u10d8"}, 1E14:{other:"000 \u10e2\u10e0\u10d8\u10da\u10d8\u10dd\u10dc\u10d8"}}};
goog.i18n.CompactNumberFormatSymbols_ka_GE = goog.i18n.CompactNumberFormatSymbols_ka;
goog.i18n.CompactNumberFormatSymbols_kk = {COMPACT_DECIMAL_SHORT_PATTERN:{1E3:{other:"0\u00a0\u043c\u044b\u04a3"}, 1E4:{other:"00\u00a0\u043c\u044b\u04a3"}, 1E5:{other:"000\u00a0\u043c\u044b\u04a3"}, 1E6:{other:"0\u00a0\u043c\u043b\u043d"}, 1E7:{other:"00\u00a0\u043c\u043b\u043d"}, 1E8:{other:"000\u00a0\u043c\u043b\u043d"}, 1E9:{other:"0\u00a0\u043c\u043b\u0440\u0434"}, 1E10:{other:"00\u00a0\u043c\u043b\u0440\u0434"}, 1E11:{other:"000\u00a0\u043c\u043b\u0440\u0434"}, 1E12:{other:"0\u00a0\u0442\u0440\u043b\u043d"}, 
1E13:{other:"00\u00a0\u0442\u0440\u043b\u043d"}, 1E14:{other:"000\u00a0\u0442\u0440\u043b\u043d"}}, COMPACT_DECIMAL_LONG_PATTERN:{1E3:{other:"0 \u043c\u044b\u04a3"}, 1E4:{other:"00 \u043c\u044b\u04a3"}, 1E5:{other:"000 \u043c\u044b\u04a3"}, 1E6:{other:"0 \u043c\u0438\u043b\u043b\u0438\u043e\u043d"}, 1E7:{other:"00 \u043c\u0438\u043b\u043b\u0438\u043e\u043d"}, 1E8:{other:"000 \u043c\u0438\u043b\u043b\u0438\u043e\u043d"}, 1E9:{other:"0 \u043c\u0438\u043b\u043b\u0438\u0430\u0440\u0434"}, 1E10:{other:"00 \u043c\u0438\u043b\u043b\u0438\u0430\u0440\u0434"}, 
1E11:{other:"000 \u043c\u0438\u043b\u043b\u0438\u0430\u0440\u0434"}, 1E12:{other:"0 \u0442\u0440\u0438\u043b\u043b\u0438\u043e\u043d"}, 1E13:{other:"00 \u0442\u0440\u0438\u043b\u043b\u0438\u043e\u043d"}, 1E14:{other:"000 \u0442\u0440\u0438\u043b\u043b\u0438\u043e\u043d"}}};
goog.i18n.CompactNumberFormatSymbols_kk_KZ = goog.i18n.CompactNumberFormatSymbols_kk;
goog.i18n.CompactNumberFormatSymbols_km = {COMPACT_DECIMAL_SHORT_PATTERN:{1E3:{other:"0\u1796\u17b6\u1793\u17cb"}, 1E4:{other:"0\u200b\u1798\u17ba\u17bb\u1793"}, 1E5:{other:"0\u179f\u17c2\u1793"}, 1E6:{other:"0\u179b\u17b6\u1793"}, 1E7:{other:"0\u200b\u178a\u1794\u17cb\u200b\u179b\u17b6\u1793"}, 1E8:{other:"0\u200b\u179a\u1799\u179b\u17b6\u1793"}, 1E9:{other:"0\u200b\u1780\u17c4\u178a\u17b7"}, 1E10:{other:"0\u200b\u178a\u1794\u17cb\u200b\u1780\u17c4\u178a\u17b7"}, 1E11:{other:"0\u200b\u179a\u1799\u200b\u1780\u17c4\u178a\u17b7"}, 
1E12:{other:"0\u200b\u1796\u17b6\u1793\u17cb\u200b\u1780\u17c4\u178a\u17b7"}, 1E13:{other:"0\u200b\u1798\u17ba\u17bb\u1793\u200b\u1780\u17c4\u178a\u17b7"}, 1E14:{other:"0\u200b\u179f\u17c2\u1793\u200b\u1780\u17c4\u178a\u17b7"}}, COMPACT_DECIMAL_LONG_PATTERN:{1E3:{other:"0\u1796\u17b6\u1793\u17cb"}, 1E4:{other:"0\u200b\u1798\u17ba\u17bb\u1793"}, 1E5:{other:"0\u179f\u17c2\u1793"}, 1E6:{other:"0\u179b\u17b6\u1793"}, 1E7:{other:"0\u200b\u178a\u1794\u17cb\u200b\u179b\u17b6\u1793"}, 1E8:{other:"0\u200b\u179a\u1799\u179b\u17b6\u1793"}, 
1E9:{other:"0\u200b\u1780\u17c4\u178a\u17b7"}, 1E10:{other:"0\u200b\u178a\u1794\u17cb\u200b\u1780\u17c4\u178a\u17b7"}, 1E11:{other:"0\u200b\u179a\u1799\u200b\u1780\u17c4\u178a\u17b7"}, 1E12:{other:"0\u200b\u1796\u17b6\u1793\u17cb\u200b\u1780\u17c4\u178a\u17b7"}, 1E13:{other:"0\u200b\u1798\u17ba\u17bb\u1793\u200b\u1780\u17c4\u178a\u17b7"}, 1E14:{other:"0\u200b\u179f\u17c2\u1793\u200b\u1780\u17c4\u178a\u17b7"}}};
goog.i18n.CompactNumberFormatSymbols_km_KH = goog.i18n.CompactNumberFormatSymbols_km;
goog.i18n.CompactNumberFormatSymbols_kn = {COMPACT_DECIMAL_SHORT_PATTERN:{1E3:{other:"0\u0cb8\u0cbe"}, 1E4:{other:"00\u0cb8\u0cbe"}, 1E5:{other:"000\u0cb8\u0cbe"}, 1E6:{other:"0\u0cae\u0cbf"}, 1E7:{other:"00\u0cae\u0cbf"}, 1E8:{other:"000\u0cae\u0cbf"}, 1E9:{other:"0\u0cac\u0cbf"}, 1E10:{other:"00\u0cac\u0cbf"}, 1E11:{other:"000\u0cac\u0cbf"}, 1E12:{other:"0\u0c9f\u0ccd\u0cb0\u0cbf"}, 1E13:{other:"00\u0c9f\u0ccd\u0cb0\u0cbf"}, 1E14:{other:"000\u0c9f\u0ccd\u0cb0\u0cbf"}}, COMPACT_DECIMAL_LONG_PATTERN:{1E3:{other:"0 \u0cb8\u0cbe\u0cb5\u0cbf\u0cb0"}, 
1E4:{other:"00 \u0cb8\u0cbe\u0cb5\u0cbf\u0cb0"}, 1E5:{other:"000 \u0cb8\u0cbe\u0cb5\u0cbf\u0cb0"}, 1E6:{other:"0 \u0cae\u0cbf\u0cb2\u0cbf\u0caf\u0ca8\u0ccd"}, 1E7:{other:"00 \u0cae\u0cbf\u0cb2\u0cbf\u0caf\u0ca8\u0ccd"}, 1E8:{other:"000 \u0cae\u0cbf\u0cb2\u0cbf\u0caf\u0ca8\u0ccd"}, 1E9:{other:"0 \u0cac\u0cbf\u0cb2\u0cbf\u0caf\u0ca8\u0ccd"}, 1E10:{other:"00 \u0cac\u0cbf\u0cb2\u0cbf\u0caf\u0ca8\u0ccd"}, 1E11:{other:"000 \u0cac\u0cbf\u0cb2\u0cbf\u0caf\u0ca8\u0ccd"}, 1E12:{other:"0 \u0c9f\u0ccd\u0cb0\u0cbf\u0cb2\u0cbf\u0caf\u0ca8\u0ccd\u200c"}, 
1E13:{other:"00 \u0c9f\u0ccd\u0cb0\u0cbf\u0cb2\u0cbf\u0caf\u0ca8\u0ccd\u200c"}, 1E14:{other:"000 \u0c9f\u0ccd\u0cb0\u0cbf\u0cb2\u0cbf\u0caf\u0ca8\u0ccd\u200c"}}};
goog.i18n.CompactNumberFormatSymbols_kn_IN = goog.i18n.CompactNumberFormatSymbols_kn;
goog.i18n.CompactNumberFormatSymbols_ko = {COMPACT_DECIMAL_SHORT_PATTERN:{1E3:{other:"0"}, 1E4:{other:"0\ub9cc"}, 1E5:{other:"00\ub9cc"}, 1E6:{other:"000\ub9cc"}, 1E7:{other:"0000\ub9cc"}, 1E8:{other:"0\uc5b5"}, 1E9:{other:"00\uc5b5"}, 1E10:{other:"000\uc5b5"}, 1E11:{other:"0000\uc5b5"}, 1E12:{other:"0\uc870"}, 1E13:{other:"00\uc870"}, 1E14:{other:"000\uc870"}}, COMPACT_DECIMAL_LONG_PATTERN:{1E3:{other:"0"}, 1E4:{other:"0\ub9cc"}, 1E5:{other:"00\ub9cc"}, 1E6:{other:"000\ub9cc"}, 1E7:{other:"0000\ub9cc"}, 
1E8:{other:"0\uc5b5"}, 1E9:{other:"00\uc5b5"}, 1E10:{other:"000\uc5b5"}, 1E11:{other:"0000\uc5b5"}, 1E12:{other:"0\uc870"}, 1E13:{other:"00\uc870"}, 1E14:{other:"000\uc870"}}};
goog.i18n.CompactNumberFormatSymbols_ko_KR = goog.i18n.CompactNumberFormatSymbols_ko;
goog.i18n.CompactNumberFormatSymbols_ky = {COMPACT_DECIMAL_SHORT_PATTERN:{1E3:{other:"0\u00a0\u043c\u0438\u04ca"}, 1E4:{other:"00\u00a0\u043c\u0438\u04ca"}, 1E5:{other:"000\u00a0\u043c\u0438\u04ca"}, 1E6:{other:"0\u00a0\u043c\u043b\u043d"}, 1E7:{other:"00\u00a0\u043c\u043b\u043d"}, 1E8:{other:"000\u00a0\u043c\u043b\u043d"}, 1E9:{other:"0\u00a0\u043c\u043b\u0434"}, 1E10:{other:"00\u00a0\u043c\u043b\u0434"}, 1E11:{other:"000\u00a0\u043c\u043b\u0434"}, 1E12:{other:"0\u00a0\u0442\u0440\u043d"}, 1E13:{other:"00\u00a0\u0442\u0440\u043d"}, 
1E14:{other:"000\u00a0\u0442\u0440\u043d"}}, COMPACT_DECIMAL_LONG_PATTERN:{1E3:{other:"0 \u043c\u0438\u04ca"}, 1E4:{other:"00 \u043c\u0438\u04ca"}, 1E5:{other:"000 \u043c\u0438\u04ca"}, 1E6:{other:"0 \u043c\u0438\u043b\u043b\u0438\u043e\u043d"}, 1E7:{other:"00 \u043c\u0438\u043b\u043b\u0438\u043e\u043d"}, 1E8:{other:"000 \u043c\u0438\u043b\u043b\u0438\u043e\u043d"}, 1E9:{other:"0 \u043c\u0438\u043b\u043b\u0438\u0430\u0440\u0434"}, 1E10:{other:"00 \u043c\u0438\u043b\u043b\u0438\u0430\u0440\u0434"}, 
1E11:{other:"000 \u043c\u0438\u043b\u043b\u0438\u0430\u0440\u0434"}, 1E12:{other:"0 \u0442\u0440\u0438\u043b\u043b\u0438\u043e\u043d"}, 1E13:{other:"00 \u0442\u0440\u0438\u043b\u043b\u0438\u043e\u043d"}, 1E14:{other:"000 \u0442\u0440\u0438\u043b\u043b\u0438\u043e\u043d"}}};
goog.i18n.CompactNumberFormatSymbols_ky_KG = goog.i18n.CompactNumberFormatSymbols_ky;
goog.i18n.CompactNumberFormatSymbols_ln = {COMPACT_DECIMAL_SHORT_PATTERN:{1E3:{other:"0K"}, 1E4:{other:"00K"}, 1E5:{other:"000K"}, 1E6:{other:"0M"}, 1E7:{other:"00M"}, 1E8:{other:"000M"}, 1E9:{other:"0G"}, 1E10:{other:"00G"}, 1E11:{other:"000G"}, 1E12:{other:"0T"}, 1E13:{other:"00T"}, 1E14:{other:"000T"}}};
goog.i18n.CompactNumberFormatSymbols_ln_CD = goog.i18n.CompactNumberFormatSymbols_ln;
goog.i18n.CompactNumberFormatSymbols_lo = {COMPACT_DECIMAL_SHORT_PATTERN:{1E3:{other:"0\u0e9e\u0eb1\u0e99"}, 1E4:{other:"00\u0e9e\u0eb1\u0e99"}, 1E5:{other:"000\u0e9e\u0eb1\u0e99"}, 1E6:{other:"0\u0ea5\u0ec9\u0eb2\u0e99"}, 1E7:{other:"00\u0ea5\u0ec9\u0eb2\u0e99"}, 1E8:{other:"000\u0ea5\u0ec9\u0eb2\u0e99"}, 1E9:{other:"0\u0e95\u0eb7\u0ec9"}, 1E10:{other:"00\u0e95\u0eb7\u0ec9"}, 1E11:{other:"000\u0e95\u0eb7\u0ec9"}, 1E12:{other:"0000\u0e95\u0eb7\u0ec9"}, 1E13:{other:"00\u0e9e\u0eb1\u0e99\u0e95\u0eb7\u0ec9"}, 
1E14:{other:"000\u0e9e\u0eb1\u0e99\u0e95\u0eb7\u0ec9"}}, COMPACT_DECIMAL_LONG_PATTERN:{1E3:{other:"0\u0e9e\u0eb1\u0e99"}, 1E4:{other:"00\u0e9e\u0eb1\u0e99"}, 1E5:{other:"000\u0e9e\u0eb1\u0e99"}, 1E6:{other:"0\u0ea5\u0ec9\u0eb2\u0e99"}, 1E7:{other:"00\u0ea5\u0ec9\u0eb2\u0e99"}, 1E8:{other:"000\u0ea5\u0ec9\u0eb2\u0e99"}, 1E9:{other:"0\u0e9e\u0eb1\u0e99\u0ea5\u0ec9\u0eb2\u0e99"}, 1E10:{other:"00\u0e9e\u0eb1\u0e99\u0ea5\u0ec9\u0eb2\u0e99"}, 1E11:{other:"000\u0e9e\u0eb1\u0e99\u0ea5\u0ec9\u0eb2\u0e99"}, 
1E12:{other:"0000\u0e9e\u0eb1\u0e99\u0ea5\u0ec9\u0eb2\u0e99"}, 1E13:{other:"00\u0ea5\u0ec9\u0eb2\u0e99\u0ea5\u0ec9\u0eb2\u0e99"}, 1E14:{other:"000\u0ea5\u0ec9\u0eb2\u0e99\u0ea5\u0ec9\u0eb2\u0e99"}}};
goog.i18n.CompactNumberFormatSymbols_lo_LA = goog.i18n.CompactNumberFormatSymbols_lo;
goog.i18n.CompactNumberFormatSymbols_lt = {COMPACT_DECIMAL_SHORT_PATTERN:{1E3:{other:"0\u00a0t\u016bkst."}, 1E4:{other:"00\u00a0t\u016bkst."}, 1E5:{other:"000\u00a0t\u016bkst."}, 1E6:{other:"0\u00a0mln."}, 1E7:{other:"00\u00a0mln."}, 1E8:{other:"000\u00a0mln."}, 1E9:{other:"0\u00a0mlrd."}, 1E10:{other:"00\u00a0mlrd."}, 1E11:{other:"000\u00a0mlrd."}, 1E12:{other:"0\u00a0trln."}, 1E13:{other:"00\u00a0trln."}, 1E14:{other:"000\u00a0trln."}}, COMPACT_DECIMAL_LONG_PATTERN:{1E3:{other:"0 t\u016bkstan\u010di\u0173"}, 
1E4:{other:"00 t\u016bkstan\u010di\u0173"}, 1E5:{other:"000 t\u016bkstan\u010di\u0173"}, 1E6:{other:"0 milijon\u0173"}, 1E7:{other:"00 milijon\u0173"}, 1E8:{other:"000 milijon\u0173"}, 1E9:{other:"0 milijard\u0173"}, 1E10:{other:"00 milijard\u0173"}, 1E11:{other:"000 milijard\u0173"}, 1E12:{other:"0 trilijon\u0173"}, 1E13:{other:"00 trilijon\u0173"}, 1E14:{other:"000 trilijon\u0173"}}};
goog.i18n.CompactNumberFormatSymbols_lt_LT = goog.i18n.CompactNumberFormatSymbols_lt;
goog.i18n.CompactNumberFormatSymbols_lv = {COMPACT_DECIMAL_SHORT_PATTERN:{1E3:{other:"0\u00a0t\u016bkst."}, 1E4:{other:"00\u00a0t\u016bkst."}, 1E5:{other:"000\u00a0t\u016bkst."}, 1E6:{other:"0\u00a0milj."}, 1E7:{other:"00\u00a0milj."}, 1E8:{other:"000\u00a0milj."}, 1E9:{other:"0\u00a0mljrd."}, 1E10:{other:"00\u00a0mljrd."}, 1E11:{other:"000\u00a0mljrd."}, 1E12:{other:"0\u00a0trilj."}, 1E13:{other:"00\u00a0trilj."}, 1E14:{other:"000\u00a0trilj."}}, COMPACT_DECIMAL_LONG_PATTERN:{1E3:{other:"0 t\u016bksto\u0161i"}, 
1E4:{other:"00 t\u016bksto\u0161i"}, 1E5:{other:"000 t\u016bksto\u0161i"}, 1E6:{other:"0 miljoni"}, 1E7:{other:"00 miljoni"}, 1E8:{other:"000 miljoni"}, 1E9:{other:"0 miljardi"}, 1E10:{other:"00 miljardi"}, 1E11:{other:"000 miljardi"}, 1E12:{other:"0 triljoni"}, 1E13:{other:"00 triljoni"}, 1E14:{other:"000 triljoni"}}};
goog.i18n.CompactNumberFormatSymbols_lv_LV = goog.i18n.CompactNumberFormatSymbols_lv;
goog.i18n.CompactNumberFormatSymbols_mk = {COMPACT_DECIMAL_SHORT_PATTERN:{1E3:{other:"0\u00a0\u0438\u043b\u0458."}, 1E4:{other:"00\u00a0\u0438\u043b\u0458."}, 1E5:{other:"000\u00a0\u0438\u043b\u0458."}, 1E6:{other:"0\u00a0\u043c\u0438\u043b."}, 1E7:{other:"00\u00a0\u043c\u0438\u043b."}, 1E8:{other:"000\u00a0\u041c"}, 1E9:{other:"0\u00a0\u043c\u0438\u043b\u0458."}, 1E10:{other:"00\u00a0\u043c\u0438\u043b\u0458."}, 1E11:{other:"000\u00a0\u043c\u0438\u043b\u0458."}, 1E12:{other:"0\u00a0\u0442\u0440\u0438\u043b."}, 
1E13:{other:"00\u00a0\u0442\u0440\u0438\u043b."}, 1E14:{other:"000\u00a0\u0442\u0440\u0438\u043b."}}, COMPACT_DECIMAL_LONG_PATTERN:{1E3:{other:"0 \u0438\u043b\u0458\u0430\u0434\u0438"}, 1E4:{other:"00 \u0438\u043b\u0458\u0430\u0434\u0438"}, 1E5:{other:"000 \u0438\u043b\u0458\u0430\u0434\u0438"}, 1E6:{other:"0 \u043c\u0438\u043b\u0438\u043e\u043d\u0438"}, 1E7:{other:"00 \u043c\u0438\u043b\u0438\u043e\u043d\u0438"}, 1E8:{other:"000 \u043c\u0438\u043b\u0438\u043e\u043d\u0438"}, 1E9:{other:"0 \u043c\u0438\u043b\u0438\u0458\u0430\u0440\u0434\u0438"}, 
1E10:{other:"00 \u043c\u0438\u043b\u0438\u0458\u0430\u0440\u0434\u0438"}, 1E11:{other:"000 \u043c\u0438\u043b\u0438\u0458\u0430\u0440\u0434\u0438"}, 1E12:{other:"0 \u0442\u0440\u0438\u043b\u0438\u043e\u043d\u0438"}, 1E13:{other:"00 \u0442\u0440\u0438\u043b\u0438\u043e\u043d\u0438"}, 1E14:{other:"000 \u0442\u0440\u0438\u043b\u0438\u043e\u043d\u0438"}}};
goog.i18n.CompactNumberFormatSymbols_mk_MK = goog.i18n.CompactNumberFormatSymbols_mk;
goog.i18n.CompactNumberFormatSymbols_ml = {COMPACT_DECIMAL_SHORT_PATTERN:{1E3:{other:"0K"}, 1E4:{other:"00K"}, 1E5:{other:"000K"}, 1E6:{other:"0M"}, 1E7:{other:"00M"}, 1E8:{other:"000M"}, 1E9:{other:"0B"}, 1E10:{other:"00B"}, 1E11:{other:"000B"}, 1E12:{other:"0T"}, 1E13:{other:"00T"}, 1E14:{other:"000T"}}, COMPACT_DECIMAL_LONG_PATTERN:{1E3:{other:"0 \u0d06\u0d2f\u0d3f\u0d30\u0d02"}, 1E4:{other:"00 \u0d06\u0d2f\u0d3f\u0d30\u0d02"}, 1E5:{other:"000 \u0d06\u0d2f\u0d3f\u0d30\u0d02"}, 1E6:{other:"0 \u0d26\u0d36\u0d32\u0d15\u0d4d\u0d37\u0d02"}, 
1E7:{other:"00 \u0d26\u0d36\u0d32\u0d15\u0d4d\u0d37\u0d02"}, 1E8:{other:"000 \u0d26\u0d36\u0d32\u0d15\u0d4d\u0d37\u0d02"}, 1E9:{other:"0 \u0d32\u0d15\u0d4d\u0d37\u0d02 \u0d15\u0d4b\u0d1f\u0d3f"}, 1E10:{other:"00 \u0d32\u0d15\u0d4d\u0d37\u0d02 \u0d15\u0d4b\u0d1f\u0d3f"}, 1E11:{other:"000 \u0d32\u0d15\u0d4d\u0d37\u0d02 \u0d15\u0d4b\u0d1f\u0d3f"}, 1E12:{other:"0 \u0d1f\u0d4d\u0d30\u0d3f\u0d32\u0d4d\u0d2f\u0d7a"}, 1E13:{other:"00 \u0d1f\u0d4d\u0d30\u0d3f\u0d32\u0d4d\u0d2f\u0d7a"}, 1E14:{other:"000 \u0d1f\u0d4d\u0d30\u0d3f\u0d32\u0d4d\u0d2f\u0d7a"}}};
goog.i18n.CompactNumberFormatSymbols_ml_IN = goog.i18n.CompactNumberFormatSymbols_ml;
goog.i18n.CompactNumberFormatSymbols_mn = {COMPACT_DECIMAL_SHORT_PATTERN:{1E3:{other:"0\u041c"}, 1E4:{other:"00\u041c"}, 1E5:{other:"000\u041c"}, 1E6:{other:"0\u0421"}, 1E7:{other:"00\u0421"}, 1E8:{other:"000\u0421"}, 1E9:{other:"0\u0422"}, 1E10:{other:"00\u0422"}, 1E11:{other:"000\u0422"}, 1E12:{other:"0\u0418\u041d"}, 1E13:{other:"00\u0418\u041d"}, 1E14:{other:"000\u0418\u041d"}}, COMPACT_DECIMAL_LONG_PATTERN:{1E3:{other:"0 \u043c\u044f\u043d\u0433\u0430"}, 1E4:{other:"00 \u043c\u044f\u043d\u0433\u0430"}, 
1E5:{other:"000 \u043c\u044f\u043d\u0433\u0430"}, 1E6:{other:"0 \u0441\u0430\u044f"}, 1E7:{other:"00 \u0441\u0430\u044f"}, 1E8:{other:"000 \u0441\u0430\u044f"}, 1E9:{other:"0 \u0442\u044d\u0440\u0431\u0443\u043c"}, 1E10:{other:"00 \u0442\u044d\u0440\u0431\u0443\u043c"}, 1E11:{other:"000 \u0442\u044d\u0440\u0431\u0443\u043c"}, 1E12:{other:"0 \u0438\u0445 \u043d\u0430\u044f\u0434"}, 1E13:{other:"00 \u0438\u0445 \u043d\u0430\u044f\u0434"}, 1E14:{other:"000 \u0438\u0445 \u043d\u0430\u044f\u0434"}}};
goog.i18n.CompactNumberFormatSymbols_mn_MN = goog.i18n.CompactNumberFormatSymbols_mn;
goog.i18n.CompactNumberFormatSymbols_mr = {COMPACT_DECIMAL_SHORT_PATTERN:{1E3:{other:"0\u00a0\u0939"}, 1E4:{other:"00\u00a0\u0939"}, 1E5:{other:"0\u00a0\u0932\u093e\u0916"}, 1E6:{other:"00\u00a0\u0932\u093e\u0916"}, 1E7:{other:"0\u00a0\u0915\u094b\u091f\u0940"}, 1E8:{other:"00\u00a0\u0915\u094b\u091f\u0940"}, 1E9:{other:"0\u00a0\u0905\u092c\u094d\u091c"}, 1E10:{other:"00\u00a0\u0905\u092c\u094d\u091c"}, 1E11:{other:"0\u00a0\u0916\u0930\u094d\u0935"}, 1E12:{other:"00\u00a0\u0916\u0930\u094d\u0935"}, 
1E13:{other:"0\u00a0\u092a\u0926\u094d\u092e"}, 1E14:{other:"00\u00a0\u092a\u0926\u094d\u092e"}}, COMPACT_DECIMAL_LONG_PATTERN:{1E3:{other:"0 \u0939\u091c\u093e\u0930"}, 1E4:{other:"00 \u0939\u091c\u093e\u0930"}, 1E5:{other:"000 \u0939\u091c\u093e\u0930"}, 1E6:{other:"0 \u0926\u0936\u0932\u0915\u094d\u0937"}, 1E7:{other:"00 \u0926\u0936\u0932\u0915\u094d\u0937"}, 1E8:{other:"000 \u0926\u0936\u0932\u0915\u094d\u0937"}, 1E9:{other:"0 \u092e\u0939\u093e\u092a\u0926\u094d\u092e"}, 1E10:{other:"00 \u092e\u0939\u093e\u092a\u0926\u094d\u092e"}, 
1E11:{other:"000 \u092e\u0939\u093e\u092a\u0926\u094d\u092e"}, 1E12:{other:"0 \u0916\u0930\u092c"}, 1E13:{other:"00 \u0916\u0930\u092c"}, 1E14:{other:"000 \u0916\u0930\u092c"}}};
goog.i18n.CompactNumberFormatSymbols_mr_IN = goog.i18n.CompactNumberFormatSymbols_mr;
goog.i18n.CompactNumberFormatSymbols_ms = {COMPACT_DECIMAL_SHORT_PATTERN:{1E3:{other:"0K"}, 1E4:{other:"00K"}, 1E5:{other:"000K"}, 1E6:{other:"0J"}, 1E7:{other:"00J"}, 1E8:{other:"000J"}, 1E9:{other:"0B"}, 1E10:{other:"00B"}, 1E11:{other:"000B"}, 1E12:{other:"0T"}, 1E13:{other:"00T"}, 1E14:{other:"000T"}}, COMPACT_DECIMAL_LONG_PATTERN:{1E3:{other:"0 ribu"}, 1E4:{other:"00 ribu"}, 1E5:{other:"000 ribu"}, 1E6:{other:"0 juta"}, 1E7:{other:"00 juta"}, 1E8:{other:"000 juta"}, 1E9:{other:"0 bilion"}, 1E10:{other:"00 bilion"}, 
1E11:{other:"000 bilion"}, 1E12:{other:"0 trilion"}, 1E13:{other:"00 trilion"}, 1E14:{other:"000 trilion"}}};
goog.i18n.CompactNumberFormatSymbols_ms_MY = goog.i18n.CompactNumberFormatSymbols_ms;
goog.i18n.CompactNumberFormatSymbols_mt = {COMPACT_DECIMAL_SHORT_PATTERN:{1E3:{other:"0K"}, 1E4:{other:"00K"}, 1E5:{other:"000K"}, 1E6:{other:"0M"}, 1E7:{other:"00M"}, 1E8:{other:"000M"}, 1E9:{other:"0G"}, 1E10:{other:"00G"}, 1E11:{other:"000G"}, 1E12:{other:"0T"}, 1E13:{other:"00T"}, 1E14:{other:"000T"}}};
goog.i18n.CompactNumberFormatSymbols_mt_MT = goog.i18n.CompactNumberFormatSymbols_mt;
goog.i18n.CompactNumberFormatSymbols_my = {COMPACT_DECIMAL_SHORT_PATTERN:{1E3:{other:"0\u1011\u1031\u102c\u1004\u103a"}, 1E4:{other:"0\u101e\u1031\u102c\u1004\u103a\u1038"}, 1E5:{other:"0\u101e\u102d\u1014\u103a\u1038"}, 1E6:{other:"0\u101e\u1014\u103a\u1038"}, 1E7:{other:"0\u1000\u102f\u100b\u1031"}, 1E8:{other:"00\u1000\u102f\u100b\u1031"}, 1E9:{other:"\u1000\u102f\u100b\u1031000"}, 1E10:{other:"\u1000\u102f\u100b\u10310000"}, 1E11:{other:"0000\u1000\u102f\u100b\u1031"}, 1E12:{other:"\u1000\u102f\u100b\u10310\u101e\u102d\u1014\u103a\u1038"}, 
1E13:{other:"\u1000\u102f\u100b\u10310\u101e\u1014\u103a\u1038"}, 1E14:{other:"0\u1000\u1031\u102c\u100b\u102d"}}, COMPACT_DECIMAL_LONG_PATTERN:{1E3:{other:"0\u1011\u1031\u102c\u1004\u103a"}, 1E4:{other:"0\u101e\u1031\u102c\u1004\u103a\u1038"}, 1E5:{other:"0\u101e\u102d\u1014\u103a\u1038"}, 1E6:{other:"0\u101e\u1014\u103a\u1038"}, 1E7:{other:"0\u1000\u102f\u100b\u1031"}, 1E8:{other:"00\u1000\u102f\u100b\u1031"}, 1E9:{other:"000\u1000\u102f\u100b\u1031"}, 1E10:{other:"0000\u1000\u102f\u100b\u1031"}, 
1E11:{other:"00000\u1000\u102f\u100b\u1031"}, 1E12:{other:"000000\u1000\u102f\u100b\u1031"}, 1E13:{other:"0000000\u1000\u102f\u100b\u1031"}, 1E14:{other:"0\u1000\u1031\u102c\u100b\u102d"}}};
goog.i18n.CompactNumberFormatSymbols_my_MM = goog.i18n.CompactNumberFormatSymbols_my;
goog.i18n.CompactNumberFormatSymbols_nb = {COMPACT_DECIMAL_SHORT_PATTERN:{1E3:{other:"0\u00a0K"}, 1E4:{other:"00\u00a0K"}, 1E5:{other:"000\u00a0K"}, 1E6:{other:"0\u00a0mill"}, 1E7:{other:"00\u00a0mill"}, 1E8:{other:"000\u00a0mill"}, 1E9:{other:"0\u00a0mrd"}, 1E10:{other:"00\u00a0mrd"}, 1E11:{other:"000\u00a0mrd"}, 1E12:{other:"0\u00a0bill"}, 1E13:{other:"00\u00a0bill"}, 1E14:{other:"000\u00a0bill"}}, COMPACT_DECIMAL_LONG_PATTERN:{1E3:{other:"0 tusen"}, 1E4:{other:"00 tusen"}, 1E5:{other:"000 tusen"}, 
1E6:{other:"0 millioner"}, 1E7:{other:"00 millioner"}, 1E8:{other:"000 millioner"}, 1E9:{other:"0 milliarder"}, 1E10:{other:"00 milliarder"}, 1E11:{other:"000 milliarder"}, 1E12:{other:"0 billioner"}, 1E13:{other:"00 billioner"}, 1E14:{other:"000 billioner"}}};
goog.i18n.CompactNumberFormatSymbols_nb_NO = goog.i18n.CompactNumberFormatSymbols_nb;
goog.i18n.CompactNumberFormatSymbols_nb_SJ = goog.i18n.CompactNumberFormatSymbols_nb;
goog.i18n.CompactNumberFormatSymbols_ne = {COMPACT_DECIMAL_SHORT_PATTERN:{1E3:{other:"0\u00a0\u0939\u091c\u093e\u0930"}, 1E4:{other:"00\u00a0\u0939\u091c\u093e\u0930"}, 1E5:{other:"0\u00a0\u0932\u093e\u0916"}, 1E6:{other:"00\u00a0\u0932\u093e\u0916"}, 1E7:{other:"0\u00a0\u0915\u0930\u094b\u0921"}, 1E8:{other:"00\u00a0\u0915\u0930\u094b\u0921"}, 1E9:{other:"0\u00a0\u0905\u0930\u092c"}, 1E10:{other:"00\u00a0\u0905\u0930\u092c"}, 1E11:{other:"0\u00a0\u0916\u0930\u092c"}, 1E12:{other:"00\u00a0\u0916\u0930\u092c"}, 
1E13:{other:"0\u00a0\u0936\u0902\u0916"}, 1E14:{other:"00\u00a0\u0936\u0902\u0916"}}, COMPACT_DECIMAL_LONG_PATTERN:{1E3:{other:"0 \u0939\u091c\u093e\u0930"}, 1E4:{other:"00 \u0939\u091c\u093e\u0930"}, 1E5:{other:"0 \u0932\u093e\u0916"}, 1E6:{other:"0 \u0915\u0930\u094b\u0921"}, 1E7:{other:"00 \u0915\u0930\u094b\u0921"}, 1E8:{other:"000 \u0915\u0930\u094b\u0921"}, 1E9:{other:"0 \u0905\u0930\u094d\u092c"}, 1E10:{other:"00 \u0905\u0930\u094d\u092c"}, 1E11:{other:"000 \u0905\u0930\u092c"}, 1E12:{other:"0 \u0916\u0930\u094d\u092c"}, 
1E13:{other:"0 \u0936\u0902\u0916"}, 1E14:{other:"00 \u0936\u0902\u0916"}}};
goog.i18n.CompactNumberFormatSymbols_ne_NP = goog.i18n.CompactNumberFormatSymbols_ne;
goog.i18n.CompactNumberFormatSymbols_nl = {COMPACT_DECIMAL_SHORT_PATTERN:{1E3:{other:"0K"}, 1E4:{other:"00K"}, 1E5:{other:"000K"}, 1E6:{other:"0\u00a0mln."}, 1E7:{other:"00\u00a0mln."}, 1E8:{other:"000\u00a0mln."}, 1E9:{other:"0\u00a0mld."}, 1E10:{other:"00\u00a0mld."}, 1E11:{other:"000\u00a0mld."}, 1E12:{other:"0\u00a0bln."}, 1E13:{other:"00\u00a0bln."}, 1E14:{other:"000\u00a0bln."}}, COMPACT_DECIMAL_LONG_PATTERN:{1E3:{other:"0 duizend"}, 1E4:{other:"00 duizend"}, 1E5:{other:"000 duizend"}, 1E6:{other:"0 miljoen"}, 
1E7:{other:"00 miljoen"}, 1E8:{other:"000 miljoen"}, 1E9:{other:"0 miljard"}, 1E10:{other:"00 miljard"}, 1E11:{other:"000 miljard"}, 1E12:{other:"0 biljoen"}, 1E13:{other:"00 biljoen"}, 1E14:{other:"000 biljoen"}}};
goog.i18n.CompactNumberFormatSymbols_nl_NL = goog.i18n.CompactNumberFormatSymbols_nl;
goog.i18n.CompactNumberFormatSymbols_no = {COMPACT_DECIMAL_SHORT_PATTERN:{1E3:{other:"0\u00a0K"}, 1E4:{other:"00\u00a0K"}, 1E5:{other:"000\u00a0K"}, 1E6:{other:"0\u00a0mill"}, 1E7:{other:"00\u00a0mill"}, 1E8:{other:"000\u00a0mill"}, 1E9:{other:"0\u00a0mrd"}, 1E10:{other:"00\u00a0mrd"}, 1E11:{other:"000\u00a0mrd"}, 1E12:{other:"0\u00a0bill"}, 1E13:{other:"00\u00a0bill"}, 1E14:{other:"000\u00a0bill"}}, COMPACT_DECIMAL_LONG_PATTERN:{1E3:{other:"0 tusen"}, 1E4:{other:"00 tusen"}, 1E5:{other:"000 tusen"}, 
1E6:{other:"0 millioner"}, 1E7:{other:"00 millioner"}, 1E8:{other:"000 millioner"}, 1E9:{other:"0 milliarder"}, 1E10:{other:"00 milliarder"}, 1E11:{other:"000 milliarder"}, 1E12:{other:"0 billioner"}, 1E13:{other:"00 billioner"}, 1E14:{other:"000 billioner"}}};
goog.i18n.CompactNumberFormatSymbols_no_NO = goog.i18n.CompactNumberFormatSymbols_no;
goog.i18n.CompactNumberFormatSymbols_or = {COMPACT_DECIMAL_SHORT_PATTERN:{1E3:{other:"0K"}, 1E4:{other:"00K"}, 1E5:{other:"000K"}, 1E6:{other:"0M"}, 1E7:{other:"00M"}, 1E8:{other:"000M"}, 1E9:{other:"0G"}, 1E10:{other:"00G"}, 1E11:{other:"000G"}, 1E12:{other:"0T"}, 1E13:{other:"00T"}, 1E14:{other:"000T"}}};
goog.i18n.CompactNumberFormatSymbols_or_IN = goog.i18n.CompactNumberFormatSymbols_or;
goog.i18n.CompactNumberFormatSymbols_pa = {COMPACT_DECIMAL_SHORT_PATTERN:{1E3:{other:"0\u00a0\u0a39\u0a1c\u0a3c\u0a3e\u0a30"}, 1E4:{other:"00\u00a0\u0a39\u0a1c\u0a3c\u0a3e\u0a30"}, 1E5:{other:"0\u00a0\u0a32\u0a71\u0a16"}, 1E6:{other:"00\u00a0\u0a32\u0a71\u0a16"}, 1E7:{other:"0\u00a0\u0a15\u0a30\u0a4b\u0a5c"}, 1E8:{other:"00\u00a0\u0a15\u0a30\u0a4b\u0a5c"}, 1E9:{other:"0\u00a0\u0a05\u0a30\u0a2c"}, 1E10:{other:"00\u00a0\u0a05\u0a30\u0a2c"}, 1E11:{other:"0\u00a0\u0a16\u0a30\u0a2c"}, 1E12:{other:"00\u00a0\u0a16\u0a30\u0a2c"}, 
1E13:{other:"0\u00a0\u0a28\u0a40\u0a32"}, 1E14:{other:"00\u00a0\u0a28\u0a40\u0a32"}}, COMPACT_DECIMAL_LONG_PATTERN:{1E3:{other:"0 \u0a39\u0a1c\u0a3c\u0a3e\u0a30"}, 1E4:{other:"00 \u0a39\u0a1c\u0a3c\u0a3e\u0a30"}, 1E5:{other:"0 \u0a32\u0a71\u0a16"}, 1E6:{other:"00 \u0a32\u0a71\u0a16"}, 1E7:{other:"0 \u0a15\u0a30\u0a4b\u0a5c"}, 1E8:{other:"00 \u0a15\u0a30\u0a4b\u0a5c"}, 1E9:{other:"0 \u0a05\u0a30\u0a2c"}, 1E10:{other:"00 \u0a05\u0a30\u0a2c"}, 1E11:{other:"0 \u0a16\u0a30\u0a2c"}, 1E12:{other:"00 \u0a16\u0a30\u0a2c"}, 
1E13:{other:"0 \u0a28\u0a40\u0a32"}, 1E14:{other:"00 \u0a28\u0a40\u0a32"}}};
goog.i18n.CompactNumberFormatSymbols_pa_Guru = goog.i18n.CompactNumberFormatSymbols_pa;
goog.i18n.CompactNumberFormatSymbols_pa_Guru_IN = goog.i18n.CompactNumberFormatSymbols_pa;
goog.i18n.CompactNumberFormatSymbols_pl = {COMPACT_DECIMAL_SHORT_PATTERN:{1E3:{other:"0\u00a0tys."}, 1E4:{other:"00\u00a0tys."}, 1E5:{other:"000\u00a0tys."}, 1E6:{other:"0\u00a0mln"}, 1E7:{other:"00\u00a0mln"}, 1E8:{other:"000\u00a0mln"}, 1E9:{other:"0\u00a0mld"}, 1E10:{other:"00\u00a0mld"}, 1E11:{other:"000\u00a0mld"}, 1E12:{other:"0\u00a0bln"}, 1E13:{other:"00\u00a0bln"}, 1E14:{other:"000\u00a0bln"}}, COMPACT_DECIMAL_LONG_PATTERN:{1E3:{other:"0 tysi\u0105ca"}, 1E4:{other:"00 tysi\u0105ca"}, 1E5:{other:"000 tysi\u0105ca"}, 
1E6:{other:"0 miliona"}, 1E7:{other:"00 miliona"}, 1E8:{other:"000 miliona"}, 1E9:{other:"0 miliarda"}, 1E10:{other:"00 miliarda"}, 1E11:{other:"000 miliarda"}, 1E12:{other:"0 biliona"}, 1E13:{other:"00 biliona"}, 1E14:{other:"000 biliona"}}};
goog.i18n.CompactNumberFormatSymbols_pl_PL = goog.i18n.CompactNumberFormatSymbols_pl;
goog.i18n.CompactNumberFormatSymbols_pt = {COMPACT_DECIMAL_SHORT_PATTERN:{1E3:{other:"0\u00a0mil"}, 1E4:{other:"00\u00a0mil"}, 1E5:{other:"000\u00a0mil"}, 1E6:{other:"0\u00a0mi"}, 1E7:{other:"00\u00a0mi"}, 1E8:{other:"000\u00a0mi"}, 1E9:{other:"0\u00a0bi"}, 1E10:{other:"00\u00a0bi"}, 1E11:{other:"000\u00a0bi"}, 1E12:{other:"0\u00a0tri"}, 1E13:{other:"00\u00a0tri"}, 1E14:{other:"000\u00a0tri"}}, COMPACT_DECIMAL_LONG_PATTERN:{1E3:{other:"0 mil"}, 1E4:{other:"00 mil"}, 1E5:{other:"000 mil"}, 1E6:{other:"0 milh\u00f5es"}, 
1E7:{other:"00 milh\u00f5es"}, 1E8:{other:"000 milh\u00f5es"}, 1E9:{other:"0 bilh\u00f5es"}, 1E10:{other:"00 bilh\u00f5es"}, 1E11:{other:"000 bilh\u00f5es"}, 1E12:{other:"0 trilh\u00f5es"}, 1E13:{other:"00 trilh\u00f5es"}, 1E14:{other:"000 trilh\u00f5es"}}};
goog.i18n.CompactNumberFormatSymbols_pt_BR = goog.i18n.CompactNumberFormatSymbols_pt;
goog.i18n.CompactNumberFormatSymbols_pt_PT = {COMPACT_DECIMAL_SHORT_PATTERN:{1E3:{other:"0\u00a0mil"}, 1E4:{other:"00\u00a0mil"}, 1E5:{other:"000\u00a0mil"}, 1E6:{other:"0\u00a0M"}, 1E7:{other:"00\u00a0M"}, 1E8:{other:"000\u00a0M"}, 1E9:{other:"0\u00a0mM"}, 1E10:{other:"00\u00a0mM"}, 1E11:{other:"000\u00a0mM"}, 1E12:{other:"0\u00a0Bi"}, 1E13:{other:"00\u00a0Bi"}, 1E14:{other:"000\u00a0Bi"}}, COMPACT_DECIMAL_LONG_PATTERN:{1E3:{other:"0 mil"}, 1E4:{other:"00 mil"}, 1E5:{other:"000 mil"}, 1E6:{other:"0 milh\u00f5es"}, 
1E7:{other:"00 milh\u00f5es"}, 1E8:{other:"000 milh\u00f5es"}, 1E9:{other:"0 mil milh\u00f5es"}, 1E10:{other:"00 mil milh\u00f5es"}, 1E11:{other:"000 mil milh\u00f5es"}, 1E12:{other:"0 bili\u00f5es"}, 1E13:{other:"00 bili\u00f5es"}, 1E14:{other:"000 bili\u00f5es"}}};
goog.i18n.CompactNumberFormatSymbols_ro = {COMPACT_DECIMAL_SHORT_PATTERN:{1E3:{other:"0\u00a0K"}, 1E4:{other:"00\u00a0K"}, 1E5:{other:"000\u00a0K"}, 1E6:{other:"0\u00a0mil."}, 1E7:{other:"00\u00a0mil."}, 1E8:{other:"000\u00a0mil."}, 1E9:{other:"0\u00a0mld."}, 1E10:{other:"00\u00a0mld."}, 1E11:{other:"000\u00a0mld."}, 1E12:{other:"0\u00a0tril."}, 1E13:{other:"00\u00a0tril."}, 1E14:{other:"000\u00a0tril."}}, COMPACT_DECIMAL_LONG_PATTERN:{1E3:{other:"0 de mii"}, 1E4:{other:"00 de mii"}, 1E5:{other:"000 de mii"}, 
1E6:{other:"0 de milioane"}, 1E7:{other:"00 de milioane"}, 1E8:{other:"000 de milioane"}, 1E9:{other:"0 de miliarde"}, 1E10:{other:"00 de miliarde"}, 1E11:{other:"000 de miliarde"}, 1E12:{other:"0 de trilioane"}, 1E13:{other:"00 de trilioane"}, 1E14:{other:"000 de trilioane"}}};
goog.i18n.CompactNumberFormatSymbols_ro_RO = goog.i18n.CompactNumberFormatSymbols_ro;
goog.i18n.CompactNumberFormatSymbols_ru = {COMPACT_DECIMAL_SHORT_PATTERN:{1E3:{other:"0\u00a0\u0442\u044b\u0441."}, 1E4:{other:"00\u00a0\u0442\u044b\u0441."}, 1E5:{other:"000\u00a0\u0442\u044b\u0441."}, 1E6:{other:"0\u00a0\u043c\u043b\u043d"}, 1E7:{other:"00\u00a0\u043c\u043b\u043d"}, 1E8:{other:"000\u00a0\u043c\u043b\u043d"}, 1E9:{other:"0\u00a0\u043c\u043b\u0440\u0434"}, 1E10:{other:"00\u00a0\u043c\u043b\u0440\u0434"}, 1E11:{other:"000\u00a0\u043c\u043b\u0440\u0434"}, 1E12:{other:"0\u00a0\u0442\u0440\u043b\u043d"}, 
1E13:{other:"00\u00a0\u0442\u0440\u043b\u043d"}, 1E14:{other:"000\u00a0\u0442\u0440\u043b\u043d"}}, COMPACT_DECIMAL_LONG_PATTERN:{1E3:{other:"0 \u0442\u044b\u0441\u044f\u0447\u0438"}, 1E4:{other:"00 \u0442\u044b\u0441\u044f\u0447\u0438"}, 1E5:{other:"000 \u0442\u044b\u0441\u044f\u0447\u0438"}, 1E6:{other:"0 \u043c\u0438\u043b\u043b\u0438\u043e\u043d\u0430"}, 1E7:{other:"00 \u043c\u0438\u043b\u043b\u0438\u043e\u043d\u0430"}, 1E8:{other:"000 \u043c\u0438\u043b\u043b\u0438\u043e\u043d\u0430"}, 1E9:{other:"0 \u043c\u0438\u043b\u043b\u0438\u0430\u0440\u0434\u0430"}, 
1E10:{other:"00 \u043c\u0438\u043b\u043b\u0438\u0430\u0440\u0434\u0430"}, 1E11:{other:"000 \u043c\u0438\u043b\u043b\u0438\u0430\u0440\u0434\u0430"}, 1E12:{other:"0 \u0442\u0440\u0438\u043b\u043b\u0438\u043e\u043d\u0430"}, 1E13:{other:"00 \u0442\u0440\u0438\u043b\u043b\u0438\u043e\u043d\u0430"}, 1E14:{other:"000 \u0442\u0440\u0438\u043b\u043b\u0438\u043e\u043d\u0430"}}};
goog.i18n.CompactNumberFormatSymbols_ru_RU = goog.i18n.CompactNumberFormatSymbols_ru;
goog.i18n.CompactNumberFormatSymbols_si = {COMPACT_DECIMAL_SHORT_PATTERN:{1E3:{other:"\u0daf0"}, 1E4:{other:"\u0daf00"}, 1E5:{other:"\u0daf000"}, 1E6:{other:"\u0db8\u0dd20"}, 1E7:{other:"\u0db8\u0dd200"}, 1E8:{other:"\u0db8\u0dd2000"}, 1E9:{other:"\u0db6\u0dd20"}, 1E10:{other:"\u0db6\u0dd200"}, 1E11:{other:"\u0db6\u0dd2000"}, 1E12:{other:"\u0da7\u0dca\u200d\u0dbb\u0dd20"}, 1E13:{other:"\u0da7\u0dca\u200d\u0dbb\u0dd200"}, 1E14:{other:"\u0da7\u0dca\u200d\u0dbb\u0dd2000"}}, COMPACT_DECIMAL_LONG_PATTERN:{1E3:{other:"\u0daf\u0dc4\u0dc3 0"}, 
1E4:{other:"\u0daf\u0dc4\u0dc3 00"}, 1E5:{other:"\u0daf\u0dc4\u0dc3 000"}, 1E6:{other:"\u0db8\u0dd2\u0dbd\u0dd2\u0dba\u0db1 0"}, 1E7:{other:"\u0db8\u0dd2\u0dbd\u0dd2\u0dba\u0db1 00"}, 1E8:{other:"\u0db8\u0dd2\u0dbd\u0dd2\u0dba\u0db1 000"}, 1E9:{other:"\u0db6\u0dd2\u0dbd\u0dd2\u0dba\u0db1 0"}, 1E10:{other:"\u0db6\u0dd2\u0dbd\u0dd2\u0dba\u0db1 00"}, 1E11:{other:"\u0db6\u0dd2\u0dbd\u0dd2\u0dba\u0db1 000"}, 1E12:{other:"\u0da7\u0dca\u200d\u0dbb\u0dd2\u0dbd\u0dd2\u0dba\u0db1 0"}, 1E13:{other:"\u0da7\u0dca\u200d\u0dbb\u0dd2\u0dbd\u0dd2\u0dba\u0db1 00"}, 
1E14:{other:"\u0da7\u0dca\u200d\u0dbb\u0dd2\u0dbd\u0dd2\u0dba\u0db1 000"}}};
goog.i18n.CompactNumberFormatSymbols_si_LK = goog.i18n.CompactNumberFormatSymbols_si;
goog.i18n.CompactNumberFormatSymbols_sk = {COMPACT_DECIMAL_SHORT_PATTERN:{1E3:{other:"0\u00a0tis."}, 1E4:{other:"00\u00a0tis."}, 1E5:{other:"000\u00a0tis."}, 1E6:{other:"0\u00a0mil."}, 1E7:{other:"00\u00a0mil."}, 1E8:{other:"000\u00a0mil."}, 1E9:{other:"0\u00a0mld."}, 1E10:{other:"00\u00a0mld."}, 1E11:{other:"000\u00a0mld."}, 1E12:{other:"0\u00a0bil."}, 1E13:{other:"00\u00a0bil."}, 1E14:{other:"000\u00a0bil."}}, COMPACT_DECIMAL_LONG_PATTERN:{1E3:{other:"0 tis\u00edc"}, 1E4:{other:"00 tis\u00edc"}, 
1E5:{other:"000 tis\u00edc"}, 1E6:{other:"0 mili\u00f3nov"}, 1E7:{other:"00 mili\u00f3nov"}, 1E8:{other:"000 mili\u00f3nov"}, 1E9:{other:"0 mili\u00e1rd"}, 1E10:{other:"00 mili\u00e1rd"}, 1E11:{other:"000 mili\u00e1rd"}, 1E12:{other:"0 bili\u00f3nov"}, 1E13:{other:"00 bili\u00f3nov"}, 1E14:{other:"000 bili\u00f3nov"}}};
goog.i18n.CompactNumberFormatSymbols_sk_SK = goog.i18n.CompactNumberFormatSymbols_sk;
goog.i18n.CompactNumberFormatSymbols_sl = {COMPACT_DECIMAL_SHORT_PATTERN:{1E3:{other:"0\u00a0tis."}, 1E4:{other:"00\u00a0tis."}, 1E5:{other:"000\u00a0tis."}, 1E6:{other:"0\u00a0mio."}, 1E7:{other:"00\u00a0mio."}, 1E8:{other:"000\u00a0mio."}, 1E9:{other:"0\u00a0mrd."}, 1E10:{other:"00\u00a0mrd."}, 1E11:{other:"000\u00a0mrd."}, 1E12:{other:"0\u00a0bil."}, 1E13:{other:"00\u00a0bil."}, 1E14:{other:"000\u00a0bil."}}, COMPACT_DECIMAL_LONG_PATTERN:{1E3:{other:"0 tiso\u010d"}, 1E4:{other:"00 tiso\u010d"}, 
1E5:{other:"000 tiso\u010d"}, 1E6:{other:"0 milijonov"}, 1E7:{other:"00 milijonov"}, 1E8:{other:"000 milijonov"}, 1E9:{other:"0 milijard"}, 1E10:{other:"00 milijard"}, 1E11:{other:"000 milijard"}, 1E12:{other:"0 bilijonov"}, 1E13:{other:"00 bilijonov"}, 1E14:{other:"000 bilijonov"}}};
goog.i18n.CompactNumberFormatSymbols_sl_SI = goog.i18n.CompactNumberFormatSymbols_sl;
goog.i18n.CompactNumberFormatSymbols_sq = {COMPACT_DECIMAL_SHORT_PATTERN:{1E3:{other:"0\u00a0mij\u00eb"}, 1E4:{other:"00\u00a0mij\u00eb"}, 1E5:{other:"000\u00a0mij\u00eb"}, 1E6:{other:"0\u00a0Mln"}, 1E7:{other:"00\u00a0Mln"}, 1E8:{other:"000\u00a0Mln"}, 1E9:{other:"0\u00a0Mld"}, 1E10:{other:"00\u00a0Mld"}, 1E11:{other:"000\u00a0Mld"}, 1E12:{other:"0\u00a0Bln"}, 1E13:{other:"00\u00a0Bln"}, 1E14:{other:"000\u00a0Bln"}}, COMPACT_DECIMAL_LONG_PATTERN:{1E3:{other:"0 mij\u00eb"}, 1E4:{other:"00 mij\u00eb"}, 
1E5:{other:"000 mij\u00eb"}, 1E6:{other:"0 milion"}, 1E7:{other:"00 milion"}, 1E8:{other:"000 milion"}, 1E9:{other:"0 miliard"}, 1E10:{other:"00 miliard"}, 1E11:{other:"000 miliard"}, 1E12:{other:"0 bilion"}, 1E13:{other:"00 bilion"}, 1E14:{other:"000 bilion"}}};
goog.i18n.CompactNumberFormatSymbols_sq_AL = goog.i18n.CompactNumberFormatSymbols_sq;
goog.i18n.CompactNumberFormatSymbols_sr = {COMPACT_DECIMAL_SHORT_PATTERN:{1E3:{other:"0\u00a0\u0445\u0438\u0459."}, 1E4:{other:"00\u00a0\u0445\u0438\u0459."}, 1E5:{other:"000\u00a0\u0445\u0438\u0459."}, 1E6:{other:"0\u00a0\u043c\u0438\u043b."}, 1E7:{other:"00\u00a0\u043c\u0438\u043b."}, 1E8:{other:"000\u00a0\u043c\u0438\u043b."}, 1E9:{other:"0\u00a0\u043c\u043b\u0440\u0434."}, 1E10:{other:"00\u00a0\u043c\u043b\u0440\u0434."}, 1E11:{other:"000\u00a0\u043c\u043b\u0440\u0434."}, 1E12:{other:"0\u00a0\u0431\u0438\u043b."}, 
1E13:{other:"00\u00a0\u0431\u0438\u043b."}, 1E14:{other:"000\u00a0\u0431\u0438\u043b."}}, COMPACT_DECIMAL_LONG_PATTERN:{1E3:{other:"0 \u0445\u0438\u0459\u0430\u0434\u0430"}, 1E4:{other:"00 \u0445\u0438\u0459\u0430\u0434\u0430"}, 1E5:{other:"000 \u0445\u0438\u0459\u0430\u0434\u0430"}, 1E6:{other:"0 \u043c\u0438\u043b\u0438\u043e\u043d\u0430"}, 1E7:{other:"00 \u043c\u0438\u043b\u0438\u043e\u043d\u0430"}, 1E8:{other:"000 \u043c\u0438\u043b\u0438\u043e\u043d\u0430"}, 1E9:{other:"0 \u043c\u0438\u043b\u0438\u0458\u0430\u0440\u0434\u0438"}, 
1E10:{other:"00 \u043c\u0438\u043b\u0438\u0458\u0430\u0440\u0434\u0438"}, 1E11:{other:"000 \u043c\u0438\u043b\u0438\u0458\u0430\u0440\u0434\u0438"}, 1E12:{other:"0 \u0442\u0440\u0438\u043b\u0438\u043e\u043d\u0430"}, 1E13:{other:"00 \u0442\u0440\u0438\u043b\u0438\u043e\u043d\u0430"}, 1E14:{other:"000 \u0442\u0440\u0438\u043b\u0438\u043e\u043d\u0430"}}};
goog.i18n.CompactNumberFormatSymbols_sr_Cyrl = goog.i18n.CompactNumberFormatSymbols_sr;
goog.i18n.CompactNumberFormatSymbols_sr_Cyrl_RS = goog.i18n.CompactNumberFormatSymbols_sr;
goog.i18n.CompactNumberFormatSymbols_sr_Latn = {COMPACT_DECIMAL_SHORT_PATTERN:{1E3:{other:"0\u00a0hilj."}, 1E4:{other:"00\u00a0hilj."}, 1E5:{other:"000\u00a0hilj."}, 1E6:{other:"0\u00a0mil."}, 1E7:{other:"00\u00a0mil."}, 1E8:{other:"000\u00a0mil."}, 1E9:{other:"0\u00a0mlrd."}, 1E10:{other:"00\u00a0mlrd."}, 1E11:{other:"000\u00a0mlrd."}, 1E12:{other:"0\u00a0bil."}, 1E13:{other:"00\u00a0bil."}, 1E14:{other:"000\u00a0bil."}}, COMPACT_DECIMAL_LONG_PATTERN:{1E3:{other:"0 hiljada"}, 1E4:{other:"00 hiljada"}, 
1E5:{other:"000 hiljada"}, 1E6:{other:"0 miliona"}, 1E7:{other:"00 miliona"}, 1E8:{other:"000 miliona"}, 1E9:{other:"0 milijardi"}, 1E10:{other:"00 milijardi"}, 1E11:{other:"000 milijardi"}, 1E12:{other:"0 triliona"}, 1E13:{other:"00 triliona"}, 1E14:{other:"000 triliona"}}};
goog.i18n.CompactNumberFormatSymbols_sr_Latn_RS = goog.i18n.CompactNumberFormatSymbols_sr_Latn;
goog.i18n.CompactNumberFormatSymbols_sv = {COMPACT_DECIMAL_SHORT_PATTERN:{1E3:{other:"0\u00a0tn"}, 1E4:{other:"00\u00a0tn"}, 1E5:{other:"000\u00a0tn"}, 1E6:{other:"0\u00a0mn"}, 1E7:{other:"00\u00a0mn"}, 1E8:{other:"000\u00a0mn"}, 1E9:{other:"0\u00a0md"}, 1E10:{other:"00\u00a0md"}, 1E11:{other:"000\u00a0md"}, 1E12:{other:"0\u00a0bn"}, 1E13:{other:"00\u00a0bn"}, 1E14:{other:"000\u00a0bn"}}, COMPACT_DECIMAL_LONG_PATTERN:{1E3:{other:"0 tusen"}, 1E4:{other:"00 tusen"}, 1E5:{other:"000 tusen"}, 1E6:{other:"0 miljoner"}, 
1E7:{other:"00 miljoner"}, 1E8:{other:"000 miljoner"}, 1E9:{other:"0 miljarder"}, 1E10:{other:"00 miljarder"}, 1E11:{other:"000 miljarder"}, 1E12:{other:"0 biljoner"}, 1E13:{other:"00 biljoner"}, 1E14:{other:"000 biljoner"}}};
goog.i18n.CompactNumberFormatSymbols_sv_SE = goog.i18n.CompactNumberFormatSymbols_sv;
goog.i18n.CompactNumberFormatSymbols_sw = {COMPACT_DECIMAL_SHORT_PATTERN:{1E3:{other:"elfu\u00a00"}, 1E4:{other:"elfu\u00a000"}, 1E5:{other:"elfu\u00a0000"}, 1E6:{other:"M0"}, 1E7:{other:"M00"}, 1E8:{other:"M000"}, 1E9:{other:"B0"}, 1E10:{other:"B00"}, 1E11:{other:"B000"}, 1E12:{other:"T0"}, 1E13:{other:"T00"}, 1E14:{other:"T000"}}, COMPACT_DECIMAL_LONG_PATTERN:{1E3:{other:"Elfu 0"}, 1E4:{other:"Elfu 00"}, 1E5:{other:"Elfu 000"}, 1E6:{other:"Milioni 0"}, 1E7:{other:"Milioni 00"}, 1E8:{other:"Milioni 000"}, 
1E9:{other:"Bilioni 0"}, 1E10:{other:"Bilioni 00"}, 1E11:{other:"Bilioni 000"}, 1E12:{other:"Trilioni 0"}, 1E13:{other:"Trilioni 00"}, 1E14:{other:"Trilioni 000"}}};
goog.i18n.CompactNumberFormatSymbols_sw_TZ = goog.i18n.CompactNumberFormatSymbols_sw;
goog.i18n.CompactNumberFormatSymbols_ta = {COMPACT_DECIMAL_SHORT_PATTERN:{1E3:{other:"0\u0b86"}, 1E4:{other:"00\u0b86"}, 1E5:{other:"000\u0b86"}, 1E6:{other:"0\u0bae\u0bbf"}, 1E7:{other:"00\u0bae\u0bbf"}, 1E8:{other:"000\u0bae\u0bbf"}, 1E9:{other:"0\u0baa\u0bbf"}, 1E10:{other:"00\u0baa\u0bbf"}, 1E11:{other:"000\u0baa\u0bbf"}, 1E12:{other:"0\u0b9f\u0bbf"}, 1E13:{other:"00\u0b9f\u0bbf"}, 1E14:{other:"000\u0b9f\u0bbf"}}, COMPACT_DECIMAL_LONG_PATTERN:{1E3:{other:"0 \u0b86\u0baf\u0bbf\u0bb0\u0bae\u0bcd"}, 
1E4:{other:"00 \u0b86\u0baf\u0bbf\u0bb0\u0bae\u0bcd"}, 1E5:{other:"000 \u0b86\u0baf\u0bbf\u0bb0\u0bae\u0bcd"}, 1E6:{other:"0 \u0bae\u0bbf\u0bb2\u0bcd\u0bb2\u0bbf\u0baf\u0ba9\u0bcd"}, 1E7:{other:"00 \u0bae\u0bbf\u0bb2\u0bcd\u0bb2\u0bbf\u0baf\u0ba9\u0bcd"}, 1E8:{other:"000 \u0bae\u0bbf\u0bb2\u0bcd\u0bb2\u0bbf\u0baf\u0ba9\u0bcd"}, 1E9:{other:"0 \u0baa\u0bbf\u0bb2\u0bcd\u0bb2\u0bbf\u0baf\u0ba9\u0bcd"}, 1E10:{other:"00 \u0baa\u0bbf\u0bb2\u0bcd\u0bb2\u0bbf\u0baf\u0ba9\u0bcd"}, 1E11:{other:"000 \u0baa\u0bbf\u0bb2\u0bcd\u0bb2\u0bbf\u0baf\u0ba9\u0bcd"}, 
1E12:{other:"0 \u0b9f\u0bbf\u0bb0\u0bbf\u0bb2\u0bcd\u0bb2\u0bbf\u0baf\u0ba9\u0bcd"}, 1E13:{other:"00 \u0b9f\u0bbf\u0bb0\u0bbf\u0bb2\u0bcd\u0bb2\u0bbf\u0baf\u0ba9\u0bcd"}, 1E14:{other:"000 \u0b9f\u0bbf\u0bb0\u0bbf\u0bb2\u0bcd\u0bb2\u0bbf\u0baf\u0ba9\u0bcd"}}};
goog.i18n.CompactNumberFormatSymbols_ta_IN = goog.i18n.CompactNumberFormatSymbols_ta;
goog.i18n.CompactNumberFormatSymbols_te = {COMPACT_DECIMAL_SHORT_PATTERN:{1E3:{other:"0\u0c35\u0c47"}, 1E4:{other:"00\u0c35\u0c47"}, 1E5:{other:"000\u0c35\u0c47"}, 1E6:{other:"0\u0c2e\u0c3f"}, 1E7:{other:"00\u0c2e\u0c3f"}, 1E8:{other:"000\u0c2e\u0c3f"}, 1E9:{other:"0\u0c2c\u0c3f"}, 1E10:{other:"00\u0c2c\u0c3f"}, 1E11:{other:"000\u0c2c\u0c3f"}, 1E12:{other:"0\u0c1f\u0c4d\u0c30\u0c3f"}, 1E13:{other:"00\u0c1f\u0c4d\u0c30\u0c3f"}, 1E14:{other:"000\u0c1f\u0c4d\u0c30\u0c3f"}}, COMPACT_DECIMAL_LONG_PATTERN:{1E3:{other:"0 \u0c35\u0c47\u0c32\u0c41"}, 
1E4:{other:"00 \u0c35\u0c47\u0c32\u0c41"}, 1E5:{other:"000 \u0c35\u0c47\u0c32\u0c41"}, 1E6:{other:"0 \u0c2e\u0c3f\u0c32\u0c3f\u0c2f\u0c28\u0c4d\u0c32\u0c41"}, 1E7:{other:"00 \u0c2e\u0c3f\u0c32\u0c3f\u0c2f\u0c28\u0c4d\u0c32\u0c41"}, 1E8:{other:"000 \u0c2e\u0c3f\u0c32\u0c3f\u0c2f\u0c28\u0c4d\u0c32\u0c41"}, 1E9:{other:"0 \u0c2c\u0c3f\u0c32\u0c3f\u0c2f\u0c28\u0c4d\u0c32\u0c41"}, 1E10:{other:"00 \u0c2c\u0c3f\u0c32\u0c3f\u0c2f\u0c28\u0c4d\u0c32\u0c41"}, 1E11:{other:"000 \u0c2c\u0c3f\u0c32\u0c3f\u0c2f\u0c28\u0c4d\u0c32\u0c41"}, 
1E12:{other:"0 \u0c1f\u0c4d\u0c30\u0c3f\u0c32\u0c3f\u0c2f\u0c28\u0c4d\u0c32\u0c41"}, 1E13:{other:"00 \u0c1f\u0c4d\u0c30\u0c3f\u0c32\u0c3f\u0c2f\u0c28\u0c4d\u0c32\u0c41"}, 1E14:{other:"000 \u0c1f\u0c4d\u0c30\u0c3f\u0c32\u0c3f\u0c2f\u0c28\u0c4d\u0c32\u0c41"}}};
goog.i18n.CompactNumberFormatSymbols_te_IN = goog.i18n.CompactNumberFormatSymbols_te;
goog.i18n.CompactNumberFormatSymbols_th = {COMPACT_DECIMAL_SHORT_PATTERN:{1E3:{other:"0\u00a0\u0e1e."}, 1E4:{other:"0\u00a0\u0e21."}, 1E5:{other:"0\u00a0\u0e2a."}, 1E6:{other:"0\u00a0\u0e25."}, 1E7:{other:"00\u00a0\u0e25."}, 1E8:{other:"000\u00a0\u0e25."}, 1E9:{other:"0\u00a0\u0e1e.\u0e25."}, 1E10:{other:"0\u00a0\u0e21.\u0e25."}, 1E11:{other:"0\u00a0\u0e2a.\u0e25."}, 1E12:{other:"0\u00a0\u0e25.\u0e25."}, 1E13:{other:"00\u00a0\u0e25.\u0e25."}, 1E14:{other:"000\u00a0\u0e25.\u0e25."}}, COMPACT_DECIMAL_LONG_PATTERN:{1E3:{other:"0 \u0e1e\u0e31\u0e19"}, 
1E4:{other:"0 \u0e2b\u0e21\u0e37\u0e48\u0e19"}, 1E5:{other:"0 \u0e41\u0e2a\u0e19"}, 1E6:{other:"0 \u0e25\u0e49\u0e32\u0e19"}, 1E7:{other:"00 \u0e25\u0e49\u0e32\u0e19"}, 1E8:{other:"000 \u0e25\u0e49\u0e32\u0e19"}, 1E9:{other:"0 \u0e1e\u0e31\u0e19\u0e25\u0e49\u0e32\u0e19"}, 1E10:{other:"0 \u0e2b\u0e21\u0e37\u0e48\u0e19\u0e25\u0e49\u0e32\u0e19"}, 1E11:{other:"0 \u0e41\u0e2a\u0e19\u0e25\u0e49\u0e32\u0e19"}, 1E12:{other:"0 \u0e25\u0e49\u0e32\u0e19\u0e25\u0e49\u0e32\u0e19"}, 1E13:{other:"00 \u0e25\u0e49\u0e32\u0e19\u0e25\u0e49\u0e32\u0e19"}, 
1E14:{other:"000 \u0e25\u0e49\u0e32\u0e19\u0e25\u0e49\u0e32\u0e19"}}};
goog.i18n.CompactNumberFormatSymbols_th_TH = goog.i18n.CompactNumberFormatSymbols_th;
goog.i18n.CompactNumberFormatSymbols_tl = {COMPACT_DECIMAL_SHORT_PATTERN:{1E3:{other:"0K"}, 1E4:{other:"00K"}, 1E5:{other:"000K"}, 1E6:{other:"0M"}, 1E7:{other:"00M"}, 1E8:{other:"000M"}, 1E9:{other:"0B"}, 1E10:{other:"00B"}, 1E11:{other:"000B"}, 1E12:{other:"0T"}, 1E13:{other:"00T"}, 1E14:{other:"000T"}}, COMPACT_DECIMAL_LONG_PATTERN:{1E3:{other:"0 na libo"}, 1E4:{other:"00 na libo"}, 1E5:{other:"000 na libo"}, 1E6:{other:"0 na milyon"}, 1E7:{other:"00 na milyon"}, 1E8:{other:"000 na milyon"}, 1E9:{other:"0 na bilyon"}, 
1E10:{other:"00 na bilyon"}, 1E11:{other:"000 na bilyon"}, 1E12:{other:"0 na trilyon"}, 1E13:{other:"00 na trilyon"}, 1E14:{other:"000 na trilyon"}}};
goog.i18n.CompactNumberFormatSymbols_tr = {COMPACT_DECIMAL_SHORT_PATTERN:{1E3:{other:"0"}, 1E4:{other:"00\u00a0B"}, 1E5:{other:"000\u00a0B"}, 1E6:{other:"0\u00a0Mn"}, 1E7:{other:"00\u00a0Mn"}, 1E8:{other:"000\u00a0Mn"}, 1E9:{other:"0\u00a0Mr"}, 1E10:{other:"00\u00a0Mr"}, 1E11:{other:"000\u00a0Mr"}, 1E12:{other:"0\u00a0Tn"}, 1E13:{other:"00\u00a0Tn"}, 1E14:{other:"000\u00a0Tn"}}, COMPACT_DECIMAL_LONG_PATTERN:{1E3:{other:"0 bin"}, 1E4:{other:"00 bin"}, 1E5:{other:"000 bin"}, 1E6:{other:"0 milyon"}, 
1E7:{other:"00 milyon"}, 1E8:{other:"000 milyon"}, 1E9:{other:"0 milyar"}, 1E10:{other:"00 milyar"}, 1E11:{other:"000 milyar"}, 1E12:{other:"0 trilyon"}, 1E13:{other:"00 trilyon"}, 1E14:{other:"000 trilyon"}}};
goog.i18n.CompactNumberFormatSymbols_tr_TR = goog.i18n.CompactNumberFormatSymbols_tr;
goog.i18n.CompactNumberFormatSymbols_uk = {COMPACT_DECIMAL_SHORT_PATTERN:{1E3:{other:"0\u00a0\u0442\u0438\u0441."}, 1E4:{other:"00\u00a0\u0442\u0438\u0441."}, 1E5:{other:"000\u00a0\u0442\u0438\u0441."}, 1E6:{other:"0\u00a0\u043c\u043b\u043d"}, 1E7:{other:"00\u00a0\u043c\u043b\u043d"}, 1E8:{other:"000\u00a0\u043c\u043b\u043d"}, 1E9:{other:"0\u00a0\u043c\u043b\u0440\u0434"}, 1E10:{other:"00\u00a0\u043c\u043b\u0440\u0434"}, 1E11:{other:"000\u00a0\u043c\u043b\u0440\u0434"}, 1E12:{other:"0\u00a0\u0442\u0440\u043b\u043d"}, 
1E13:{other:"00\u00a0\u0442\u0440\u043b\u043d"}, 1E14:{other:"000\u00a0\u0442\u0440\u043b\u043d"}}, COMPACT_DECIMAL_LONG_PATTERN:{1E3:{other:"0 \u0442\u0438\u0441\u044f\u0447\u0456"}, 1E4:{other:"00 \u0442\u0438\u0441\u044f\u0447\u0456"}, 1E5:{other:"000 \u0442\u0438\u0441\u044f\u0447\u0456"}, 1E6:{other:"0 \u043c\u0456\u043b\u044c\u0439\u043e\u043d\u0430"}, 1E7:{other:"00 \u043c\u0456\u043b\u044c\u0439\u043e\u043d\u0430"}, 1E8:{other:"000 \u043c\u0456\u043b\u044c\u0439\u043e\u043d\u0430"}, 1E9:{other:"0 \u043c\u0456\u043b\u044c\u044f\u0440\u0434\u0430"}, 
1E10:{other:"00 \u043c\u0456\u043b\u044c\u044f\u0440\u0434\u0430"}, 1E11:{other:"000 \u043c\u0456\u043b\u044c\u044f\u0440\u0434\u0430"}, 1E12:{other:"0 \u0442\u0440\u0438\u043b\u044c\u0439\u043e\u043d\u0430"}, 1E13:{other:"00 \u0442\u0440\u0438\u043b\u044c\u0439\u043e\u043d\u0430"}, 1E14:{other:"000 \u0442\u0440\u0438\u043b\u044c\u0439\u043e\u043d\u0430"}}};
goog.i18n.CompactNumberFormatSymbols_uk_UA = goog.i18n.CompactNumberFormatSymbols_uk;
goog.i18n.CompactNumberFormatSymbols_ur = {COMPACT_DECIMAL_SHORT_PATTERN:{1E3:{other:"0\u00a0\u06c1\u0632\u0627\u0631"}, 1E4:{other:"00\u00a0\u06c1\u0632\u0627\u0631"}, 1E5:{other:"0\u00a0\u0644\u0627\u06a9\u06be"}, 1E6:{other:"00\u00a0\u0644\u0627\u06a9\u06be"}, 1E7:{other:"0\u00a0\u06a9\u0631\u0648\u0691"}, 1E8:{other:"00\u00a0\u06a9\u0631\u0648\u0691"}, 1E9:{other:"0\u00a0\u0627\u0631\u0628"}, 1E10:{other:"00\u00a0\u0627\u0631\u0628"}, 1E11:{other:"0\u00a0\u06a9\u06be\u0631\u0628"}, 1E12:{other:"00\u00a0\u06a9\u06be\u0631\u0628"}, 
1E13:{other:"00\u00a0\u0679\u0631\u06cc\u0644\u06cc\u0646"}, 1E14:{other:"000\u00a0\u0679\u0631\u06cc\u0644\u06cc\u0646"}}, COMPACT_DECIMAL_LONG_PATTERN:{1E3:{other:"0 \u06c1\u0632\u0627\u0631"}, 1E4:{other:"00 \u06c1\u0632\u0627\u0631"}, 1E5:{other:"0 \u0644\u0627\u06a9\u06be"}, 1E6:{other:"00 \u0644\u0627\u06a9\u06be"}, 1E7:{other:"0 \u06a9\u0631\u0648\u0691"}, 1E8:{other:"00 \u06a9\u0631\u0648\u0691"}, 1E9:{other:"0 \u0627\u0631\u0628"}, 1E10:{other:"00 \u0627\u0631\u0628"}, 1E11:{other:"0 \u06a9\u06be\u0631\u0628"}, 
1E12:{other:"00 \u06a9\u06be\u0631\u0628"}, 1E13:{other:"00 \u0679\u0631\u06cc\u0644\u06cc\u0646"}, 1E14:{other:"000 \u0679\u0631\u06cc\u0644\u06cc\u0646"}}};
goog.i18n.CompactNumberFormatSymbols_ur_PK = goog.i18n.CompactNumberFormatSymbols_ur;
goog.i18n.CompactNumberFormatSymbols_uz = {COMPACT_DECIMAL_SHORT_PATTERN:{1E3:{other:"0\u00a0ming"}, 1E4:{other:"00\u00a0ming"}, 1E5:{other:"000\u00a0ming"}, 1E6:{other:"0\u00a0mln"}, 1E7:{other:"00\u00a0mln"}, 1E8:{other:"000\u00a0mln"}, 1E9:{other:"0\u00a0mlrd"}, 1E10:{other:"00\u00a0mlrd"}, 1E11:{other:"000\u00a0mlrd"}, 1E12:{other:"0\u00a0trln"}, 1E13:{other:"00\u00a0trln"}, 1E14:{other:"000\u00a0trln"}}, COMPACT_DECIMAL_LONG_PATTERN:{1E3:{other:"0 ming"}, 1E4:{other:"00 ming"}, 1E5:{other:"000 ming"}, 
1E6:{other:"0 million"}, 1E7:{other:"00 million"}, 1E8:{other:"000 million"}, 1E9:{other:"0 milliard"}, 1E10:{other:"00 milliard"}, 1E11:{other:"000 milliard"}, 1E12:{other:"0 trillion"}, 1E13:{other:"00 trillion"}, 1E14:{other:"000 trillion"}}};
goog.i18n.CompactNumberFormatSymbols_uz_Latn = goog.i18n.CompactNumberFormatSymbols_uz;
goog.i18n.CompactNumberFormatSymbols_uz_Latn_UZ = goog.i18n.CompactNumberFormatSymbols_uz;
goog.i18n.CompactNumberFormatSymbols_vi = {COMPACT_DECIMAL_SHORT_PATTERN:{1E3:{other:"0\u00a0N"}, 1E4:{other:"00\u00a0N"}, 1E5:{other:"000\u00a0N"}, 1E6:{other:"0\u00a0Tr"}, 1E7:{other:"00\u00a0Tr"}, 1E8:{other:"000\u00a0Tr"}, 1E9:{other:"0\u00a0T"}, 1E10:{other:"00\u00a0T"}, 1E11:{other:"000\u00a0T"}, 1E12:{other:"0\u00a0NT"}, 1E13:{other:"00\u00a0NT"}, 1E14:{other:"000\u00a0NT"}}, COMPACT_DECIMAL_LONG_PATTERN:{1E3:{other:"0 ngh\u00ecn"}, 1E4:{other:"00 ngh\u00ecn"}, 1E5:{other:"000 ngh\u00ecn"}, 
1E6:{other:"0 tri\u1ec7u"}, 1E7:{other:"00 tri\u1ec7u"}, 1E8:{other:"000 tri\u1ec7u"}, 1E9:{other:"0 t\u1ef7"}, 1E10:{other:"00 t\u1ef7"}, 1E11:{other:"000 t\u1ef7"}, 1E12:{other:"0 ngh\u00ecn t\u1ef7"}, 1E13:{other:"00 ngh\u00ecn t\u1ef7"}, 1E14:{other:"000 ngh\u00ecn t\u1ef7"}}};
goog.i18n.CompactNumberFormatSymbols_vi_VN = goog.i18n.CompactNumberFormatSymbols_vi;
goog.i18n.CompactNumberFormatSymbols_zh = {COMPACT_DECIMAL_SHORT_PATTERN:{1E3:{other:"0"}, 1E4:{other:"0\u4e07"}, 1E5:{other:"00\u4e07"}, 1E6:{other:"000\u4e07"}, 1E7:{other:"0000\u4e07"}, 1E8:{other:"0\u4ebf"}, 1E9:{other:"00\u4ebf"}, 1E10:{other:"000\u4ebf"}, 1E11:{other:"0000\u4ebf"}, 1E12:{other:"0\u5146"}, 1E13:{other:"00\u5146"}, 1E14:{other:"000\u5146"}}, COMPACT_DECIMAL_LONG_PATTERN:{1E3:{other:"0"}, 1E4:{other:"0\u4e07"}, 1E5:{other:"00\u4e07"}, 1E6:{other:"000\u4e07"}, 1E7:{other:"0000\u4e07"}, 
1E8:{other:"0\u4ebf"}, 1E9:{other:"00\u4ebf"}, 1E10:{other:"000\u4ebf"}, 1E11:{other:"0000\u4ebf"}, 1E12:{other:"0\u5146"}, 1E13:{other:"00\u5146"}, 1E14:{other:"000\u5146"}}};
goog.i18n.CompactNumberFormatSymbols_zh_CN = goog.i18n.CompactNumberFormatSymbols_zh;
goog.i18n.CompactNumberFormatSymbols_zh_HK = {COMPACT_DECIMAL_SHORT_PATTERN:{1E3:{other:"0K"}, 1E4:{other:"00K"}, 1E5:{other:"000K"}, 1E6:{other:"0M"}, 1E7:{other:"00M"}, 1E8:{other:"000M"}, 1E9:{other:"0B"}, 1E10:{other:"00B"}, 1E11:{other:"000B"}, 1E12:{other:"0T"}, 1E13:{other:"00T"}, 1E14:{other:"000T"}}, COMPACT_DECIMAL_LONG_PATTERN:{1E3:{other:"0"}, 1E4:{other:"0\u842c"}, 1E5:{other:"00\u842c"}, 1E6:{other:"000\u842c"}, 1E7:{other:"0000\u842c"}, 1E8:{other:"0\u5104"}, 1E9:{other:"00\u5104"}, 
1E10:{other:"000\u5104"}, 1E11:{other:"0000\u5104"}, 1E12:{other:"0\u5146"}, 1E13:{other:"00\u5146"}, 1E14:{other:"000\u5146"}}};
goog.i18n.CompactNumberFormatSymbols_zh_Hans = goog.i18n.CompactNumberFormatSymbols_zh;
goog.i18n.CompactNumberFormatSymbols_zh_Hans_CN = goog.i18n.CompactNumberFormatSymbols_zh;
goog.i18n.CompactNumberFormatSymbols_zh_TW = {COMPACT_DECIMAL_SHORT_PATTERN:{1E3:{other:"0"}, 1E4:{other:"0\u842c"}, 1E5:{other:"00\u842c"}, 1E6:{other:"000\u842c"}, 1E7:{other:"0000\u842c"}, 1E8:{other:"0\u5104"}, 1E9:{other:"00\u5104"}, 1E10:{other:"000\u5104"}, 1E11:{other:"0000\u5104"}, 1E12:{other:"0\u5146"}, 1E13:{other:"00\u5146"}, 1E14:{other:"000\u5146"}}, COMPACT_DECIMAL_LONG_PATTERN:{1E3:{other:"0"}, 1E4:{other:"0\u842c"}, 1E5:{other:"00\u842c"}, 1E6:{other:"000\u842c"}, 1E7:{other:"0000\u842c"}, 
1E8:{other:"0\u5104"}, 1E9:{other:"00\u5104"}, 1E10:{other:"000\u5104"}, 1E11:{other:"0000\u5104"}, 1E12:{other:"0\u5146"}, 1E13:{other:"00\u5146"}, 1E14:{other:"000\u5146"}}};
goog.i18n.CompactNumberFormatSymbols_zu = {COMPACT_DECIMAL_SHORT_PATTERN:{1E3:{other:"0K"}, 1E4:{other:"00K"}, 1E5:{other:"000K"}, 1E6:{other:"0M"}, 1E7:{other:"00M"}, 1E8:{other:"000M"}, 1E9:{other:"0B"}, 1E10:{other:"00B"}, 1E11:{other:"000B"}, 1E12:{other:"0T"}, 1E13:{other:"00T"}, 1E14:{other:"000T"}}, COMPACT_DECIMAL_LONG_PATTERN:{1E3:{other:"0 inkulungwane"}, 1E4:{other:"00 inkulungwane"}, 1E5:{other:"000 inkulungwane"}, 1E6:{other:"0 isigidi"}, 1E7:{other:"00 isigidi"}, 1E8:{other:"000 isigidi"}, 
1E9:{other:"0 isigidi sezigidi"}, 1E10:{other:"00 isigidi sezigidi"}, 1E11:{other:"000 isigidi sezigidi"}, 1E12:{other:"0 isigidintathu"}, 1E13:{other:"00 isigidintathu"}, 1E14:{other:"000 isigidintathu"}}};
goog.i18n.CompactNumberFormatSymbols_zu_ZA = goog.i18n.CompactNumberFormatSymbols_zu;
goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_en;
"af" == goog.LOCALE && (goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_af);
if ("af_ZA" == goog.LOCALE || "af-ZA" == goog.LOCALE) {
  goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_af;
}
"am" == goog.LOCALE && (goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_am);
if ("am_ET" == goog.LOCALE || "am-ET" == goog.LOCALE) {
  goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_am;
}
"ar" == goog.LOCALE && (goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_ar);
if ("ar_001" == goog.LOCALE || "ar-001" == goog.LOCALE) {
  goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_ar;
}
if ("ar_EG" == goog.LOCALE || "ar-EG" == goog.LOCALE) {
  goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_ar;
}
if ("ar_XB" == goog.LOCALE || "ar-XB" == goog.LOCALE) {
  goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_ar;
}
"az" == goog.LOCALE && (goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_az);
if ("az_Latn" == goog.LOCALE || "az-Latn" == goog.LOCALE) {
  goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_az;
}
if ("az_Latn_AZ" == goog.LOCALE || "az-Latn-AZ" == goog.LOCALE) {
  goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_az;
}
"be" == goog.LOCALE && (goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_be);
if ("be_BY" == goog.LOCALE || "be-BY" == goog.LOCALE) {
  goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_be;
}
"bg" == goog.LOCALE && (goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_bg);
if ("bg_BG" == goog.LOCALE || "bg-BG" == goog.LOCALE) {
  goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_bg;
}
"bn" == goog.LOCALE && (goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_bn);
if ("bn_BD" == goog.LOCALE || "bn-BD" == goog.LOCALE) {
  goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_bn;
}
"br" == goog.LOCALE && (goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_br);
if ("br_FR" == goog.LOCALE || "br-FR" == goog.LOCALE) {
  goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_br;
}
"bs" == goog.LOCALE && (goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_bs);
if ("bs_Latn" == goog.LOCALE || "bs-Latn" == goog.LOCALE) {
  goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_bs;
}
if ("bs_Latn_BA" == goog.LOCALE || "bs-Latn-BA" == goog.LOCALE) {
  goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_bs;
}
"ca" == goog.LOCALE && (goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_ca);
if ("ca_AD" == goog.LOCALE || "ca-AD" == goog.LOCALE) {
  goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_ca;
}
if ("ca_ES" == goog.LOCALE || "ca-ES" == goog.LOCALE) {
  goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_ca;
}
if ("ca_ES_VALENCIA" == goog.LOCALE || "ca-ES-VALENCIA" == goog.LOCALE) {
  goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_ca;
}
if ("ca_FR" == goog.LOCALE || "ca-FR" == goog.LOCALE) {
  goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_ca;
}
if ("ca_IT" == goog.LOCALE || "ca-IT" == goog.LOCALE) {
  goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_ca;
}
"chr" == goog.LOCALE && (goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_chr);
if ("chr_US" == goog.LOCALE || "chr-US" == goog.LOCALE) {
  goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_chr;
}
"cs" == goog.LOCALE && (goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_cs);
if ("cs_CZ" == goog.LOCALE || "cs-CZ" == goog.LOCALE) {
  goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_cs;
}
"cy" == goog.LOCALE && (goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_cy);
if ("cy_GB" == goog.LOCALE || "cy-GB" == goog.LOCALE) {
  goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_cy;
}
"da" == goog.LOCALE && (goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_da);
if ("da_DK" == goog.LOCALE || "da-DK" == goog.LOCALE) {
  goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_da;
}
if ("da_GL" == goog.LOCALE || "da-GL" == goog.LOCALE) {
  goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_da;
}
"de" == goog.LOCALE && (goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_de);
if ("de_AT" == goog.LOCALE || "de-AT" == goog.LOCALE) {
  goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_de_AT;
}
if ("de_BE" == goog.LOCALE || "de-BE" == goog.LOCALE) {
  goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_de;
}
if ("de_CH" == goog.LOCALE || "de-CH" == goog.LOCALE) {
  goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_de_CH;
}
if ("de_DE" == goog.LOCALE || "de-DE" == goog.LOCALE) {
  goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_de;
}
if ("de_LU" == goog.LOCALE || "de-LU" == goog.LOCALE) {
  goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_de;
}
"el" == goog.LOCALE && (goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_el);
if ("el_CY" == goog.LOCALE || "el-CY" == goog.LOCALE) {
  goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_el;
}
if ("el_GR" == goog.LOCALE || "el-GR" == goog.LOCALE) {
  goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_el;
}
"en" == goog.LOCALE && (goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_en);
if ("en_001" == goog.LOCALE || "en-001" == goog.LOCALE) {
  goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_en;
}
if ("en_AS" == goog.LOCALE || "en-AS" == goog.LOCALE) {
  goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_en;
}
if ("en_AU" == goog.LOCALE || "en-AU" == goog.LOCALE) {
  goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_en_AU;
}
if ("en_CA" == goog.LOCALE || "en-CA" == goog.LOCALE) {
  goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_en_CA;
}
if ("en_DG" == goog.LOCALE || "en-DG" == goog.LOCALE) {
  goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_en;
}
if ("en_FM" == goog.LOCALE || "en-FM" == goog.LOCALE) {
  goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_en;
}
if ("en_GB" == goog.LOCALE || "en-GB" == goog.LOCALE) {
  goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_en_GB;
}
if ("en_GU" == goog.LOCALE || "en-GU" == goog.LOCALE) {
  goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_en;
}
if ("en_IE" == goog.LOCALE || "en-IE" == goog.LOCALE) {
  goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_en_IE;
}
if ("en_IN" == goog.LOCALE || "en-IN" == goog.LOCALE) {
  goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_en_IN;
}
if ("en_IO" == goog.LOCALE || "en-IO" == goog.LOCALE) {
  goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_en;
}
if ("en_MH" == goog.LOCALE || "en-MH" == goog.LOCALE) {
  goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_en;
}
if ("en_MP" == goog.LOCALE || "en-MP" == goog.LOCALE) {
  goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_en;
}
if ("en_PR" == goog.LOCALE || "en-PR" == goog.LOCALE) {
  goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_en;
}
if ("en_PW" == goog.LOCALE || "en-PW" == goog.LOCALE) {
  goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_en;
}
if ("en_SG" == goog.LOCALE || "en-SG" == goog.LOCALE) {
  goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_en_SG;
}
if ("en_TC" == goog.LOCALE || "en-TC" == goog.LOCALE) {
  goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_en;
}
if ("en_UM" == goog.LOCALE || "en-UM" == goog.LOCALE) {
  goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_en;
}
if ("en_US" == goog.LOCALE || "en-US" == goog.LOCALE) {
  goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_en;
}
if ("en_VG" == goog.LOCALE || "en-VG" == goog.LOCALE) {
  goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_en;
}
if ("en_VI" == goog.LOCALE || "en-VI" == goog.LOCALE) {
  goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_en;
}
if ("en_XA" == goog.LOCALE || "en-XA" == goog.LOCALE) {
  goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_en;
}
if ("en_ZA" == goog.LOCALE || "en-ZA" == goog.LOCALE) {
  goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_en_ZA;
}
if ("en_ZW" == goog.LOCALE || "en-ZW" == goog.LOCALE) {
  goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_en;
}
"es" == goog.LOCALE && (goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_es);
if ("es_419" == goog.LOCALE || "es-419" == goog.LOCALE) {
  goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_es_419;
}
if ("es_EA" == goog.LOCALE || "es-EA" == goog.LOCALE) {
  goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_es;
}
if ("es_ES" == goog.LOCALE || "es-ES" == goog.LOCALE) {
  goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_es;
}
if ("es_IC" == goog.LOCALE || "es-IC" == goog.LOCALE) {
  goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_es;
}
if ("es_MX" == goog.LOCALE || "es-MX" == goog.LOCALE) {
  goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_es_MX;
}
if ("es_US" == goog.LOCALE || "es-US" == goog.LOCALE) {
  goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_es_US;
}
"et" == goog.LOCALE && (goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_et);
if ("et_EE" == goog.LOCALE || "et-EE" == goog.LOCALE) {
  goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_et;
}
"eu" == goog.LOCALE && (goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_eu);
if ("eu_ES" == goog.LOCALE || "eu-ES" == goog.LOCALE) {
  goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_eu;
}
"fa" == goog.LOCALE && (goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_fa);
if ("fa_IR" == goog.LOCALE || "fa-IR" == goog.LOCALE) {
  goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_fa;
}
"fi" == goog.LOCALE && (goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_fi);
if ("fi_FI" == goog.LOCALE || "fi-FI" == goog.LOCALE) {
  goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_fi;
}
"fil" == goog.LOCALE && (goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_fil);
if ("fil_PH" == goog.LOCALE || "fil-PH" == goog.LOCALE) {
  goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_fil;
}
"fr" == goog.LOCALE && (goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_fr);
if ("fr_BL" == goog.LOCALE || "fr-BL" == goog.LOCALE) {
  goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_fr;
}
if ("fr_CA" == goog.LOCALE || "fr-CA" == goog.LOCALE) {
  goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_fr_CA;
}
if ("fr_FR" == goog.LOCALE || "fr-FR" == goog.LOCALE) {
  goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_fr;
}
if ("fr_GF" == goog.LOCALE || "fr-GF" == goog.LOCALE) {
  goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_fr;
}
if ("fr_GP" == goog.LOCALE || "fr-GP" == goog.LOCALE) {
  goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_fr;
}
if ("fr_MC" == goog.LOCALE || "fr-MC" == goog.LOCALE) {
  goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_fr;
}
if ("fr_MF" == goog.LOCALE || "fr-MF" == goog.LOCALE) {
  goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_fr;
}
if ("fr_MQ" == goog.LOCALE || "fr-MQ" == goog.LOCALE) {
  goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_fr;
}
if ("fr_PM" == goog.LOCALE || "fr-PM" == goog.LOCALE) {
  goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_fr;
}
if ("fr_RE" == goog.LOCALE || "fr-RE" == goog.LOCALE) {
  goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_fr;
}
if ("fr_YT" == goog.LOCALE || "fr-YT" == goog.LOCALE) {
  goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_fr;
}
"ga" == goog.LOCALE && (goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_ga);
if ("ga_IE" == goog.LOCALE || "ga-IE" == goog.LOCALE) {
  goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_ga;
}
"gl" == goog.LOCALE && (goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_gl);
if ("gl_ES" == goog.LOCALE || "gl-ES" == goog.LOCALE) {
  goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_gl;
}
"gsw" == goog.LOCALE && (goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_gsw);
if ("gsw_CH" == goog.LOCALE || "gsw-CH" == goog.LOCALE) {
  goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_gsw;
}
if ("gsw_LI" == goog.LOCALE || "gsw-LI" == goog.LOCALE) {
  goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_gsw;
}
"gu" == goog.LOCALE && (goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_gu);
if ("gu_IN" == goog.LOCALE || "gu-IN" == goog.LOCALE) {
  goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_gu;
}
"haw" == goog.LOCALE && (goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_haw);
if ("haw_US" == goog.LOCALE || "haw-US" == goog.LOCALE) {
  goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_haw;
}
"he" == goog.LOCALE && (goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_he);
if ("he_IL" == goog.LOCALE || "he-IL" == goog.LOCALE) {
  goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_he;
}
"hi" == goog.LOCALE && (goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_hi);
if ("hi_IN" == goog.LOCALE || "hi-IN" == goog.LOCALE) {
  goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_hi;
}
"hr" == goog.LOCALE && (goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_hr);
if ("hr_HR" == goog.LOCALE || "hr-HR" == goog.LOCALE) {
  goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_hr;
}
"hu" == goog.LOCALE && (goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_hu);
if ("hu_HU" == goog.LOCALE || "hu-HU" == goog.LOCALE) {
  goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_hu;
}
"hy" == goog.LOCALE && (goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_hy);
if ("hy_AM" == goog.LOCALE || "hy-AM" == goog.LOCALE) {
  goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_hy;
}
"id" == goog.LOCALE && (goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_id);
if ("id_ID" == goog.LOCALE || "id-ID" == goog.LOCALE) {
  goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_id;
}
"in" == goog.LOCALE && (goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_in);
"is" == goog.LOCALE && (goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_is);
if ("is_IS" == goog.LOCALE || "is-IS" == goog.LOCALE) {
  goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_is;
}
"it" == goog.LOCALE && (goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_it);
if ("it_IT" == goog.LOCALE || "it-IT" == goog.LOCALE) {
  goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_it;
}
if ("it_SM" == goog.LOCALE || "it-SM" == goog.LOCALE) {
  goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_it;
}
"iw" == goog.LOCALE && (goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_iw);
"ja" == goog.LOCALE && (goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_ja);
if ("ja_JP" == goog.LOCALE || "ja-JP" == goog.LOCALE) {
  goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_ja;
}
"ka" == goog.LOCALE && (goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_ka);
if ("ka_GE" == goog.LOCALE || "ka-GE" == goog.LOCALE) {
  goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_ka;
}
"kk" == goog.LOCALE && (goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_kk);
if ("kk_KZ" == goog.LOCALE || "kk-KZ" == goog.LOCALE) {
  goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_kk;
}
"km" == goog.LOCALE && (goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_km);
if ("km_KH" == goog.LOCALE || "km-KH" == goog.LOCALE) {
  goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_km;
}
"kn" == goog.LOCALE && (goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_kn);
if ("kn_IN" == goog.LOCALE || "kn-IN" == goog.LOCALE) {
  goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_kn;
}
"ko" == goog.LOCALE && (goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_ko);
if ("ko_KR" == goog.LOCALE || "ko-KR" == goog.LOCALE) {
  goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_ko;
}
"ky" == goog.LOCALE && (goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_ky);
if ("ky_KG" == goog.LOCALE || "ky-KG" == goog.LOCALE) {
  goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_ky;
}
"ln" == goog.LOCALE && (goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_ln);
if ("ln_CD" == goog.LOCALE || "ln-CD" == goog.LOCALE) {
  goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_ln;
}
"lo" == goog.LOCALE && (goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_lo);
if ("lo_LA" == goog.LOCALE || "lo-LA" == goog.LOCALE) {
  goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_lo;
}
"lt" == goog.LOCALE && (goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_lt);
if ("lt_LT" == goog.LOCALE || "lt-LT" == goog.LOCALE) {
  goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_lt;
}
"lv" == goog.LOCALE && (goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_lv);
if ("lv_LV" == goog.LOCALE || "lv-LV" == goog.LOCALE) {
  goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_lv;
}
"mk" == goog.LOCALE && (goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_mk);
if ("mk_MK" == goog.LOCALE || "mk-MK" == goog.LOCALE) {
  goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_mk;
}
"ml" == goog.LOCALE && (goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_ml);
if ("ml_IN" == goog.LOCALE || "ml-IN" == goog.LOCALE) {
  goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_ml;
}
"mn" == goog.LOCALE && (goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_mn);
if ("mn_MN" == goog.LOCALE || "mn-MN" == goog.LOCALE) {
  goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_mn;
}
"mr" == goog.LOCALE && (goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_mr);
if ("mr_IN" == goog.LOCALE || "mr-IN" == goog.LOCALE) {
  goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_mr;
}
"ms" == goog.LOCALE && (goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_ms);
if ("ms_MY" == goog.LOCALE || "ms-MY" == goog.LOCALE) {
  goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_ms;
}
"mt" == goog.LOCALE && (goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_mt);
if ("mt_MT" == goog.LOCALE || "mt-MT" == goog.LOCALE) {
  goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_mt;
}
"my" == goog.LOCALE && (goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_my);
if ("my_MM" == goog.LOCALE || "my-MM" == goog.LOCALE) {
  goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_my;
}
"nb" == goog.LOCALE && (goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_nb);
if ("nb_NO" == goog.LOCALE || "nb-NO" == goog.LOCALE) {
  goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_nb;
}
if ("nb_SJ" == goog.LOCALE || "nb-SJ" == goog.LOCALE) {
  goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_nb;
}
"ne" == goog.LOCALE && (goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_ne);
if ("ne_NP" == goog.LOCALE || "ne-NP" == goog.LOCALE) {
  goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_ne;
}
"nl" == goog.LOCALE && (goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_nl);
if ("nl_NL" == goog.LOCALE || "nl-NL" == goog.LOCALE) {
  goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_nl;
}
"no" == goog.LOCALE && (goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_no);
if ("no_NO" == goog.LOCALE || "no-NO" == goog.LOCALE) {
  goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_no;
}
"or" == goog.LOCALE && (goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_or);
if ("or_IN" == goog.LOCALE || "or-IN" == goog.LOCALE) {
  goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_or;
}
"pa" == goog.LOCALE && (goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_pa);
if ("pa_Guru" == goog.LOCALE || "pa-Guru" == goog.LOCALE) {
  goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_pa;
}
if ("pa_Guru_IN" == goog.LOCALE || "pa-Guru-IN" == goog.LOCALE) {
  goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_pa;
}
"pl" == goog.LOCALE && (goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_pl);
if ("pl_PL" == goog.LOCALE || "pl-PL" == goog.LOCALE) {
  goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_pl;
}
"pt" == goog.LOCALE && (goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_pt);
if ("pt_BR" == goog.LOCALE || "pt-BR" == goog.LOCALE) {
  goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_pt;
}
if ("pt_PT" == goog.LOCALE || "pt-PT" == goog.LOCALE) {
  goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_pt_PT;
}
"ro" == goog.LOCALE && (goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_ro);
if ("ro_RO" == goog.LOCALE || "ro-RO" == goog.LOCALE) {
  goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_ro;
}
"ru" == goog.LOCALE && (goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_ru);
if ("ru_RU" == goog.LOCALE || "ru-RU" == goog.LOCALE) {
  goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_ru;
}
"si" == goog.LOCALE && (goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_si);
if ("si_LK" == goog.LOCALE || "si-LK" == goog.LOCALE) {
  goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_si;
}
"sk" == goog.LOCALE && (goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_sk);
if ("sk_SK" == goog.LOCALE || "sk-SK" == goog.LOCALE) {
  goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_sk;
}
"sl" == goog.LOCALE && (goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_sl);
if ("sl_SI" == goog.LOCALE || "sl-SI" == goog.LOCALE) {
  goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_sl;
}
"sq" == goog.LOCALE && (goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_sq);
if ("sq_AL" == goog.LOCALE || "sq-AL" == goog.LOCALE) {
  goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_sq;
}
"sr" == goog.LOCALE && (goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_sr);
if ("sr_Cyrl" == goog.LOCALE || "sr-Cyrl" == goog.LOCALE) {
  goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_sr;
}
if ("sr_Cyrl_RS" == goog.LOCALE || "sr-Cyrl-RS" == goog.LOCALE) {
  goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_sr;
}
if ("sr_Latn" == goog.LOCALE || "sr-Latn" == goog.LOCALE) {
  goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_sr_Latn;
}
if ("sr_Latn_RS" == goog.LOCALE || "sr-Latn-RS" == goog.LOCALE) {
  goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_sr_Latn;
}
"sv" == goog.LOCALE && (goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_sv);
if ("sv_SE" == goog.LOCALE || "sv-SE" == goog.LOCALE) {
  goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_sv;
}
"sw" == goog.LOCALE && (goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_sw);
if ("sw_TZ" == goog.LOCALE || "sw-TZ" == goog.LOCALE) {
  goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_sw;
}
"ta" == goog.LOCALE && (goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_ta);
if ("ta_IN" == goog.LOCALE || "ta-IN" == goog.LOCALE) {
  goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_ta;
}
"te" == goog.LOCALE && (goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_te);
if ("te_IN" == goog.LOCALE || "te-IN" == goog.LOCALE) {
  goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_te;
}
"th" == goog.LOCALE && (goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_th);
if ("th_TH" == goog.LOCALE || "th-TH" == goog.LOCALE) {
  goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_th;
}
"tl" == goog.LOCALE && (goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_tl);
"tr" == goog.LOCALE && (goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_tr);
if ("tr_TR" == goog.LOCALE || "tr-TR" == goog.LOCALE) {
  goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_tr;
}
"uk" == goog.LOCALE && (goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_uk);
if ("uk_UA" == goog.LOCALE || "uk-UA" == goog.LOCALE) {
  goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_uk;
}
"ur" == goog.LOCALE && (goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_ur);
if ("ur_PK" == goog.LOCALE || "ur-PK" == goog.LOCALE) {
  goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_ur;
}
"uz" == goog.LOCALE && (goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_uz);
if ("uz_Latn" == goog.LOCALE || "uz-Latn" == goog.LOCALE) {
  goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_uz;
}
if ("uz_Latn_UZ" == goog.LOCALE || "uz-Latn-UZ" == goog.LOCALE) {
  goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_uz;
}
"vi" == goog.LOCALE && (goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_vi);
if ("vi_VN" == goog.LOCALE || "vi-VN" == goog.LOCALE) {
  goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_vi;
}
"zh" == goog.LOCALE && (goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_zh);
if ("zh_CN" == goog.LOCALE || "zh-CN" == goog.LOCALE) {
  goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_zh;
}
if ("zh_HK" == goog.LOCALE || "zh-HK" == goog.LOCALE) {
  goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_zh_HK;
}
if ("zh_Hans" == goog.LOCALE || "zh-Hans" == goog.LOCALE) {
  goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_zh;
}
if ("zh_Hans_CN" == goog.LOCALE || "zh-Hans-CN" == goog.LOCALE) {
  goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_zh;
}
if ("zh_TW" == goog.LOCALE || "zh-TW" == goog.LOCALE) {
  goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_zh_TW;
}
"zu" == goog.LOCALE && (goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_zu);
if ("zu_ZA" == goog.LOCALE || "zu-ZA" == goog.LOCALE) {
  goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_zu;
}
;goog.i18n.currency = {};
goog.i18n.currency.PRECISION_MASK_ = 7;
goog.i18n.currency.POSITION_FLAG_ = 16;
goog.i18n.currency.SPACE_FLAG_ = 32;
goog.i18n.currency.tier2Enabled_ = !1;
goog.i18n.currency.addTier2Support = function() {
  if (!goog.i18n.currency.tier2Enabled_) {
    for (var key in goog.i18n.currency.CurrencyInfoTier2) {
      goog.i18n.currency.CurrencyInfo[key] = goog.i18n.currency.CurrencyInfoTier2[key];
    }
    goog.i18n.currency.tier2Enabled_ = !0;
  }
};
goog.i18n.currency.getGlobalCurrencyPattern = function(currencyCode) {
  var info = goog.i18n.currency.CurrencyInfo[currencyCode], patternNum = info[0];
  return currencyCode == info[1] ? goog.i18n.currency.getCurrencyPattern_(patternNum, info[1]) : currencyCode + " " + goog.i18n.currency.getCurrencyPattern_(patternNum, info[1]);
};
goog.i18n.currency.getGlobalCurrencySign = function(currencyCode) {
  var info = goog.i18n.currency.CurrencyInfo[currencyCode];
  return currencyCode == info[1] ? currencyCode : currencyCode + " " + info[1];
};
goog.i18n.currency.getLocalCurrencyPattern = function(currencyCode) {
  var info = goog.i18n.currency.CurrencyInfo[currencyCode];
  return goog.i18n.currency.getCurrencyPattern_(info[0], info[1]);
};
goog.i18n.currency.getLocalCurrencySign = function(currencyCode) {
  return goog.i18n.currency.CurrencyInfo[currencyCode][1];
};
goog.i18n.currency.getPortableCurrencyPattern = function(currencyCode) {
  var info = goog.i18n.currency.CurrencyInfo[currencyCode];
  return goog.i18n.currency.getCurrencyPattern_(info[0], info[2]);
};
goog.i18n.currency.getPortableCurrencySign = function(currencyCode) {
  return goog.i18n.currency.CurrencyInfo[currencyCode][2];
};
goog.i18n.currency.isPrefixSignPosition = function(currencyCode) {
  return 0 == (goog.i18n.currency.CurrencyInfo[currencyCode][0] & goog.i18n.currency.POSITION_FLAG_);
};
goog.i18n.currency.getCurrencyPattern_ = function(patternNum, sign) {
  var strParts = ["#,##0"], precision = patternNum & goog.i18n.currency.PRECISION_MASK_;
  if (0 < precision) {
    strParts.push(".");
    for (var i = 0;i < precision;i++) {
      strParts.push("0");
    }
  }
  0 == (patternNum & goog.i18n.currency.POSITION_FLAG_) ? (strParts.unshift(patternNum & goog.i18n.currency.SPACE_FLAG_ ? "' " : "'"), strParts.unshift(sign), strParts.unshift("'")) : strParts.push(patternNum & goog.i18n.currency.SPACE_FLAG_ ? " '" : "'", sign, "'");
  return strParts.join("");
};
goog.i18n.currency.adjustPrecision = function(pattern, currencyCode) {
  var strParts = ["0"], info = goog.i18n.currency.CurrencyInfo[currencyCode], precision = info[0] & goog.i18n.currency.PRECISION_MASK_;
  if (0 < precision) {
    strParts.push(".");
    for (var i = 0;i < precision;i++) {
      strParts.push("0");
    }
  }
  return pattern.replace(/0.00/g, strParts.join(""));
};
goog.i18n.currency.CurrencyInfo = {AED:[2, "dh", "\u062f.\u0625.", "DH"], ALL:[0, "Lek", "Lek"], AUD:[2, "$", "AU$"], BDT:[2, "\u09f3", "Tk"], BGN:[2, "lev", "lev"], BRL:[2, "R$", "R$"], CAD:[2, "$", "C$"], CDF:[2, "FrCD", "CDF"], CHF:[2, "CHF", "CHF"], CLP:[0, "$", "CL$"], CNY:[2, "\u00a5", "RMB\u00a5"], COP:[32, "$", "COL$"], CRC:[0, "\u20a1", "CR\u20a1"], CZK:[50, "K\u010d", "K\u010d"], DKK:[50, "kr.", "kr."], DOP:[2, "RD$", "RD$"], EGP:[2, "\u00a3", "LE"], ETB:[2, "Birr", "Birr"], EUR:[2, "\u20ac", 
"\u20ac"], GBP:[2, "\u00a3", "GB\u00a3"], HKD:[2, "$", "HK$"], HRK:[2, "kn", "kn"], HUF:[34, "Ft", "Ft"], IDR:[0, "Rp", "Rp"], ILS:[34, "\u20aa", "IL\u20aa"], INR:[2, "\u20b9", "Rs"], IRR:[0, "Rial", "IRR"], ISK:[0, "kr", "kr"], JMD:[2, "$", "JA$"], JPY:[0, "\u00a5", "JP\u00a5"], KRW:[0, "\u20a9", "KR\u20a9"], LKR:[2, "Rs", "SLRs"], LTL:[2, "Lt", "Lt"], MNT:[0, "\u20ae", "MN\u20ae"], MVR:[2, "Rf", "MVR"], MXN:[2, "$", "Mex$"], MYR:[2, "RM", "RM"], NOK:[50, "kr", "NOkr"], PAB:[2, "B/.", "B/."], PEN:[2, 
"S/.", "S/."], PHP:[2, "\u20b1", "Php"], PKR:[0, "Rs", "PKRs."], PLN:[50, "z\u0142", "z\u0142"], RON:[2, "RON", "RON"], RSD:[0, "din", "RSD"], RUB:[50, "\u20bd", "RUB"], SAR:[2, "Rial", "Rial"], SEK:[50, "kr", "kr"], SGD:[2, "$", "S$"], THB:[2, "\u0e3f", "THB"], TRY:[2, "TL", "YTL"], TWD:[2, "NT$", "NT$"], TZS:[0, "TSh", "TSh"], UAH:[2, "\u0433\u0440\u043d.", "UAH"], USD:[2, "$", "US$"], UYU:[2, "$", "$U"], VND:[48, "\u20ab", "VN\u20ab"], YER:[0, "Rial", "Rial"], ZAR:[2, "R", "ZAR"]};
goog.i18n.currency.CurrencyInfoTier2 = {AFN:[48, "Af.", "AFN"], AMD:[32, "Dram", "dram"], ANG:[2, "NAf.", "ANG"], AOA:[2, "Kz", "Kz"], ARS:[34, "$", "AR$"], AWG:[2, "Afl.", "Afl."], AZN:[34, "\u20bc", "AZN"], BAM:[2, "KM", "KM"], BBD:[2, "$", "Bds$"], BHD:[3, "din", "din"], BIF:[0, "FBu", "FBu"], BMD:[2, "$", "BD$"], BND:[2, "$", "B$"], BOB:[2, "Bs", "Bs"], BSD:[2, "$", "BS$"], BTN:[2, "Nu.", "Nu."], BWP:[2, "P", "pula"], BYR:[48, "p.", "BYR"], BZD:[2, "$", "BZ$"], CUC:[1, "$", "CUC$"], CUP:[2, "$", 
"CU$"], CVE:[2, "CVE", "Esc"], DJF:[0, "Fdj", "Fdj"], DZD:[2, "din", "din"], ERN:[2, "Nfk", "Nfk"], FJD:[2, "$", "FJ$"], FKP:[2, "\u00a3", "FK\u00a3"], GEL:[2, "GEL", "GEL"], GHS:[2, "GHS", "GHS"], GIP:[2, "\u00a3", "GI\u00a3"], GMD:[2, "GMD", "GMD"], GNF:[0, "FG", "FG"], GTQ:[2, "Q", "GTQ"], GYD:[0, "$", "GY$"], HNL:[2, "L", "HNL"], HTG:[2, "HTG", "HTG"], IQD:[0, "din", "IQD"], JOD:[3, "din", "JOD"], KES:[2, "Ksh", "Ksh"], KGS:[2, "KGS", "KGS"], KHR:[2, "Riel", "KHR"], KMF:[0, "CF", "KMF"], KPW:[0, 
"\u20a9KP", "KPW"], KWD:[3, "din", "KWD"], KYD:[2, "$", "KY$"], KZT:[2, "\u20b8", "KZT"], LAK:[0, "\u20ad", "\u20ad"], LBP:[0, "L\u00a3", "LBP"], LRD:[2, "$", "L$"], LSL:[2, "LSL", "LSL"], LYD:[3, "din", "LD"], MAD:[2, "dh", "MAD"], MDL:[2, "MDL", "MDL"], MGA:[0, "Ar", "MGA"], MKD:[2, "din", "MKD"], MMK:[0, "K", "MMK"], MOP:[2, "MOP", "MOP$"], MRO:[0, "MRO", "MRO"], MUR:[0, "MURs", "MURs"], MWK:[2, "MWK", "MWK"], MZN:[2, "MTn", "MTn"], NAD:[2, "$", "N$"], NGN:[2, "\u20a6", "NG\u20a6"], NIO:[2, "C$", 
"C$"], NPR:[2, "Rs", "NPRs"], NZD:[2, "$", "NZ$"], OMR:[3, "Rial", "OMR"], PGK:[2, "PGK", "PGK"], PYG:[16, "Gs.", "PYG"], QAR:[2, "Rial", "QR"], RWF:[0, "RF", "RF"], SBD:[2, "$", "SI$"], SCR:[2, "SCR", "SCR"], SDG:[2, "SDG", "SDG"], SHP:[2, "\u00a3", "SH\u00a3"], SLL:[0, "SLL", "SLL"], SOS:[0, "SOS", "SOS"], SRD:[2, "$", "SR$"], SSP:[2, "\u00a3", "SSP"], STD:[0, "Db", "Db"], SYP:[0, "\u00a3", "SY\u00a3"], SZL:[2, "SZL", "SZL"], TJS:[2, "Som", "TJS"], TND:[3, "din", "DT"], TOP:[2, "T$", "T$"], TTD:[2, 
"$", "TT$"], UGX:[0, "UGX", "UGX"], UZS:[0, "so\u02bcm", "UZS"], VEF:[2, "Bs", "Bs"], VUV:[0, "VUV", "VUV"], WST:[2, "WST", "WST"], XAF:[0, "FCFA", "FCFA"], XCD:[2, "$", "EC$"], XOF:[0, "CFA", "CFA"], XPF:[0, "FCFP", "FCFP"], ZMW:[0, "ZMW", "ZMW"], ZWD:[0, "$", "Z$"]};
goog.i18n.NumberFormatSymbols_af = {DECIMAL_SEP:",", GROUP_SEP:"\u00a0", PERCENT:"%", ZERO_DIGIT:"0", PLUS_SIGN:"+", MINUS_SIGN:"-", EXP_SYMBOL:"E", PERMILL:"\u2030", INFINITY:"\u221e", NAN:"NaN", DECIMAL_PATTERN:"#,##0.###", SCIENTIFIC_PATTERN:"#E0", PERCENT_PATTERN:"#,##0%", CURRENCY_PATTERN:"\u00a4#,##0.00", DEF_CURRENCY_CODE:"ZAR"};
goog.i18n.NumberFormatSymbols_af_ZA = goog.i18n.NumberFormatSymbols_af;
goog.i18n.NumberFormatSymbols_am = {DECIMAL_SEP:".", GROUP_SEP:",", PERCENT:"%", ZERO_DIGIT:"0", PLUS_SIGN:"+", MINUS_SIGN:"-", EXP_SYMBOL:"E", PERMILL:"\u2030", INFINITY:"\u221e", NAN:"NaN", DECIMAL_PATTERN:"#,##0.###", SCIENTIFIC_PATTERN:"#E0", PERCENT_PATTERN:"#,##0%", CURRENCY_PATTERN:"\u00a4#,##0.00", DEF_CURRENCY_CODE:"ETB"};
goog.i18n.NumberFormatSymbols_am_ET = goog.i18n.NumberFormatSymbols_am;
goog.i18n.NumberFormatSymbols_ar = {DECIMAL_SEP:"\u066b", GROUP_SEP:"\u066c", PERCENT:"\u066a", ZERO_DIGIT:"\u0660", PLUS_SIGN:"\u200f+", MINUS_SIGN:"\u200f-", EXP_SYMBOL:"\u0627\u0633", PERMILL:"\u0609", INFINITY:"\u221e", NAN:"\u0644\u064a\u0633\u00a0\u0631\u0642\u0645", DECIMAL_PATTERN:"#,##0.###", SCIENTIFIC_PATTERN:"#E0", PERCENT_PATTERN:"#,##0%", CURRENCY_PATTERN:"\u00a4\u00a0#,##0.00", DEF_CURRENCY_CODE:"EGP"};
goog.i18n.NumberFormatSymbols_ar_001 = goog.i18n.NumberFormatSymbols_ar;
goog.i18n.NumberFormatSymbols_ar_EG = goog.i18n.NumberFormatSymbols_ar;
goog.i18n.NumberFormatSymbols_ar_XB = goog.i18n.NumberFormatSymbols_ar;
goog.i18n.NumberFormatSymbols_az = {DECIMAL_SEP:",", GROUP_SEP:".", PERCENT:"%", ZERO_DIGIT:"0", PLUS_SIGN:"+", MINUS_SIGN:"-", EXP_SYMBOL:"E", PERMILL:"\u2030", INFINITY:"\u221e", NAN:"NaN", DECIMAL_PATTERN:"#,##0.###", SCIENTIFIC_PATTERN:"#E0", PERCENT_PATTERN:"#,##0%", CURRENCY_PATTERN:"\u00a4\u00a0#,##0.00", DEF_CURRENCY_CODE:"AZN"};
goog.i18n.NumberFormatSymbols_az_Latn = goog.i18n.NumberFormatSymbols_az;
goog.i18n.NumberFormatSymbols_az_Latn_AZ = goog.i18n.NumberFormatSymbols_az;
goog.i18n.NumberFormatSymbols_be = {DECIMAL_SEP:",", GROUP_SEP:"\u00a0", PERCENT:"%", ZERO_DIGIT:"0", PLUS_SIGN:"+", MINUS_SIGN:"-", EXP_SYMBOL:"E", PERMILL:"\u2030", INFINITY:"\u221e", NAN:"NaN", DECIMAL_PATTERN:"#,##0.###", SCIENTIFIC_PATTERN:"#E0", PERCENT_PATTERN:"#,##0\u00a0%", CURRENCY_PATTERN:"#,##0.00\u00a0\u00a4", DEF_CURRENCY_CODE:"BYR"};
goog.i18n.NumberFormatSymbols_be_BY = goog.i18n.NumberFormatSymbols_be;
goog.i18n.NumberFormatSymbols_bg = {DECIMAL_SEP:",", GROUP_SEP:"\u00a0", PERCENT:"%", ZERO_DIGIT:"0", PLUS_SIGN:"+", MINUS_SIGN:"-", EXP_SYMBOL:"E", PERMILL:"\u2030", INFINITY:"\u221e", NAN:"NaN", DECIMAL_PATTERN:"#,##0.###", SCIENTIFIC_PATTERN:"#E0", PERCENT_PATTERN:"#,##0%", CURRENCY_PATTERN:"#,##0.00\u00a0\u00a4", DEF_CURRENCY_CODE:"BGN"};
goog.i18n.NumberFormatSymbols_bg_BG = goog.i18n.NumberFormatSymbols_bg;
goog.i18n.NumberFormatSymbols_bn = {DECIMAL_SEP:".", GROUP_SEP:",", PERCENT:"%", ZERO_DIGIT:"\u09e6", PLUS_SIGN:"+", MINUS_SIGN:"-", EXP_SYMBOL:"E", PERMILL:"\u2030", INFINITY:"\u221e", NAN:"\u09b8\u0982\u0996\u09cd\u09af\u09be\u00a0\u09a8\u09be", DECIMAL_PATTERN:"#,##,##0.###", SCIENTIFIC_PATTERN:"#E0", PERCENT_PATTERN:"#,##,##0%", CURRENCY_PATTERN:"#,##,##0.00\u00a4", DEF_CURRENCY_CODE:"BDT"};
goog.i18n.NumberFormatSymbols_bn_BD = goog.i18n.NumberFormatSymbols_bn;
goog.i18n.NumberFormatSymbols_br = {DECIMAL_SEP:",", GROUP_SEP:"\u00a0", PERCENT:"%", ZERO_DIGIT:"0", PLUS_SIGN:"+", MINUS_SIGN:"-", EXP_SYMBOL:"E", PERMILL:"\u2030", INFINITY:"\u221e", NAN:"NaN", DECIMAL_PATTERN:"#,##0.###", SCIENTIFIC_PATTERN:"#E0", PERCENT_PATTERN:"#,##0\u00a0%", CURRENCY_PATTERN:"#,##0.00\u00a0\u00a4", DEF_CURRENCY_CODE:"EUR"};
goog.i18n.NumberFormatSymbols_br_FR = goog.i18n.NumberFormatSymbols_br;
goog.i18n.NumberFormatSymbols_bs = {DECIMAL_SEP:",", GROUP_SEP:".", PERCENT:"%", ZERO_DIGIT:"0", PLUS_SIGN:"+", MINUS_SIGN:"-", EXP_SYMBOL:"E", PERMILL:"\u2030", INFINITY:"\u221e", NAN:"NaN", DECIMAL_PATTERN:"#,##0.###", SCIENTIFIC_PATTERN:"#E0", PERCENT_PATTERN:"#,##0%", CURRENCY_PATTERN:"#,##0.00\u00a0\u00a4", DEF_CURRENCY_CODE:"BAM"};
goog.i18n.NumberFormatSymbols_bs_Latn = goog.i18n.NumberFormatSymbols_bs;
goog.i18n.NumberFormatSymbols_bs_Latn_BA = goog.i18n.NumberFormatSymbols_bs;
goog.i18n.NumberFormatSymbols_ca = {DECIMAL_SEP:",", GROUP_SEP:".", PERCENT:"%", ZERO_DIGIT:"0", PLUS_SIGN:"+", MINUS_SIGN:"-", EXP_SYMBOL:"E", PERMILL:"\u2030", INFINITY:"\u221e", NAN:"NaN", DECIMAL_PATTERN:"#,##0.###", SCIENTIFIC_PATTERN:"#E0", PERCENT_PATTERN:"#,##0%", CURRENCY_PATTERN:"#,##0.00\u00a0\u00a4", DEF_CURRENCY_CODE:"EUR"};
goog.i18n.NumberFormatSymbols_ca_AD = goog.i18n.NumberFormatSymbols_ca;
goog.i18n.NumberFormatSymbols_ca_ES = goog.i18n.NumberFormatSymbols_ca;
goog.i18n.NumberFormatSymbols_ca_ES_VALENCIA = goog.i18n.NumberFormatSymbols_ca;
goog.i18n.NumberFormatSymbols_ca_FR = goog.i18n.NumberFormatSymbols_ca;
goog.i18n.NumberFormatSymbols_ca_IT = goog.i18n.NumberFormatSymbols_ca;
goog.i18n.NumberFormatSymbols_chr = {DECIMAL_SEP:".", GROUP_SEP:",", PERCENT:"%", ZERO_DIGIT:"0", PLUS_SIGN:"+", MINUS_SIGN:"-", EXP_SYMBOL:"E", PERMILL:"\u2030", INFINITY:"\u221e", NAN:"NaN", DECIMAL_PATTERN:"#,##0.###", SCIENTIFIC_PATTERN:"#E0", PERCENT_PATTERN:"#,##0%", CURRENCY_PATTERN:"\u00a4#,##0.00", DEF_CURRENCY_CODE:"USD"};
goog.i18n.NumberFormatSymbols_chr_US = goog.i18n.NumberFormatSymbols_chr;
goog.i18n.NumberFormatSymbols_cs = {DECIMAL_SEP:",", GROUP_SEP:"\u00a0", PERCENT:"%", ZERO_DIGIT:"0", PLUS_SIGN:"+", MINUS_SIGN:"-", EXP_SYMBOL:"E", PERMILL:"\u2030", INFINITY:"\u221e", NAN:"NaN", DECIMAL_PATTERN:"#,##0.###", SCIENTIFIC_PATTERN:"#E0", PERCENT_PATTERN:"#,##0\u00a0%", CURRENCY_PATTERN:"#,##0.00\u00a0\u00a4", DEF_CURRENCY_CODE:"CZK"};
goog.i18n.NumberFormatSymbols_cs_CZ = goog.i18n.NumberFormatSymbols_cs;
goog.i18n.NumberFormatSymbols_cy = {DECIMAL_SEP:".", GROUP_SEP:",", PERCENT:"%", ZERO_DIGIT:"0", PLUS_SIGN:"+", MINUS_SIGN:"-", EXP_SYMBOL:"E", PERMILL:"\u2030", INFINITY:"\u221e", NAN:"NaN", DECIMAL_PATTERN:"#,##0.###", SCIENTIFIC_PATTERN:"#E0", PERCENT_PATTERN:"#,##0%", CURRENCY_PATTERN:"\u00a4#,##0.00", DEF_CURRENCY_CODE:"GBP"};
goog.i18n.NumberFormatSymbols_cy_GB = goog.i18n.NumberFormatSymbols_cy;
goog.i18n.NumberFormatSymbols_da = {DECIMAL_SEP:",", GROUP_SEP:".", PERCENT:"%", ZERO_DIGIT:"0", PLUS_SIGN:"+", MINUS_SIGN:"-", EXP_SYMBOL:"E", PERMILL:"\u2030", INFINITY:"\u221e", NAN:"NaN", DECIMAL_PATTERN:"#,##0.###", SCIENTIFIC_PATTERN:"#E0", PERCENT_PATTERN:"#,##0\u00a0%", CURRENCY_PATTERN:"#,##0.00\u00a0\u00a4", DEF_CURRENCY_CODE:"DKK"};
goog.i18n.NumberFormatSymbols_da_DK = goog.i18n.NumberFormatSymbols_da;
goog.i18n.NumberFormatSymbols_da_GL = goog.i18n.NumberFormatSymbols_da;
goog.i18n.NumberFormatSymbols_de = {DECIMAL_SEP:",", GROUP_SEP:".", PERCENT:"%", ZERO_DIGIT:"0", PLUS_SIGN:"+", MINUS_SIGN:"-", EXP_SYMBOL:"E", PERMILL:"\u2030", INFINITY:"\u221e", NAN:"NaN", DECIMAL_PATTERN:"#,##0.###", SCIENTIFIC_PATTERN:"#E0", PERCENT_PATTERN:"#,##0\u00a0%", CURRENCY_PATTERN:"#,##0.00\u00a0\u00a4", DEF_CURRENCY_CODE:"EUR"};
goog.i18n.NumberFormatSymbols_de_AT = {DECIMAL_SEP:",", GROUP_SEP:"\u00a0", PERCENT:"%", ZERO_DIGIT:"0", PLUS_SIGN:"+", MINUS_SIGN:"-", EXP_SYMBOL:"E", PERMILL:"\u2030", INFINITY:"\u221e", NAN:"NaN", DECIMAL_PATTERN:"#,##0.###", SCIENTIFIC_PATTERN:"#E0", PERCENT_PATTERN:"#,##0\u00a0%", CURRENCY_PATTERN:"\u00a4\u00a0#,##0.00", DEF_CURRENCY_CODE:"EUR"};
goog.i18n.NumberFormatSymbols_de_BE = goog.i18n.NumberFormatSymbols_de;
goog.i18n.NumberFormatSymbols_de_CH = {DECIMAL_SEP:".", GROUP_SEP:"'", PERCENT:"%", ZERO_DIGIT:"0", PLUS_SIGN:"+", MINUS_SIGN:"-", EXP_SYMBOL:"E", PERMILL:"\u2030", INFINITY:"\u221e", NAN:"NaN", DECIMAL_PATTERN:"#,##0.###", SCIENTIFIC_PATTERN:"#E0", PERCENT_PATTERN:"#,##0%", CURRENCY_PATTERN:"\u00a4\u00a0#,##0.00;\u00a4-#,##0.00", DEF_CURRENCY_CODE:"CHF"};
goog.i18n.NumberFormatSymbols_de_DE = goog.i18n.NumberFormatSymbols_de;
goog.i18n.NumberFormatSymbols_de_LU = goog.i18n.NumberFormatSymbols_de;
goog.i18n.NumberFormatSymbols_el = {DECIMAL_SEP:",", GROUP_SEP:".", PERCENT:"%", ZERO_DIGIT:"0", PLUS_SIGN:"+", MINUS_SIGN:"-", EXP_SYMBOL:"e", PERMILL:"\u2030", INFINITY:"\u221e", NAN:"NaN", DECIMAL_PATTERN:"#,##0.###", SCIENTIFIC_PATTERN:"#E0", PERCENT_PATTERN:"#,##0%", CURRENCY_PATTERN:"#,##0.00\u00a0\u00a4", DEF_CURRENCY_CODE:"EUR"};
goog.i18n.NumberFormatSymbols_el_CY = goog.i18n.NumberFormatSymbols_el;
goog.i18n.NumberFormatSymbols_el_GR = goog.i18n.NumberFormatSymbols_el;
goog.i18n.NumberFormatSymbols_en = {DECIMAL_SEP:".", GROUP_SEP:",", PERCENT:"%", ZERO_DIGIT:"0", PLUS_SIGN:"+", MINUS_SIGN:"-", EXP_SYMBOL:"E", PERMILL:"\u2030", INFINITY:"\u221e", NAN:"NaN", DECIMAL_PATTERN:"#,##0.###", SCIENTIFIC_PATTERN:"#E0", PERCENT_PATTERN:"#,##0%", CURRENCY_PATTERN:"\u00a4#,##0.00", DEF_CURRENCY_CODE:"USD"};
goog.i18n.NumberFormatSymbols_en_001 = goog.i18n.NumberFormatSymbols_en;
goog.i18n.NumberFormatSymbols_en_AS = goog.i18n.NumberFormatSymbols_en;
goog.i18n.NumberFormatSymbols_en_AU = {DECIMAL_SEP:".", GROUP_SEP:",", PERCENT:"%", ZERO_DIGIT:"0", PLUS_SIGN:"+", MINUS_SIGN:"-", EXP_SYMBOL:"e", PERMILL:"\u2030", INFINITY:"\u221e", NAN:"NaN", DECIMAL_PATTERN:"#,##0.###", SCIENTIFIC_PATTERN:"#E0", PERCENT_PATTERN:"#,##0%", CURRENCY_PATTERN:"\u00a4#,##0.00", DEF_CURRENCY_CODE:"AUD"};
goog.i18n.NumberFormatSymbols_en_CA = {DECIMAL_SEP:".", GROUP_SEP:",", PERCENT:"%", ZERO_DIGIT:"0", PLUS_SIGN:"+", MINUS_SIGN:"-", EXP_SYMBOL:"E", PERMILL:"\u2030", INFINITY:"\u221e", NAN:"NaN", DECIMAL_PATTERN:"#,##0.###", SCIENTIFIC_PATTERN:"#E0", PERCENT_PATTERN:"#,##0%", CURRENCY_PATTERN:"\u00a4#,##0.00", DEF_CURRENCY_CODE:"CAD"};
goog.i18n.NumberFormatSymbols_en_DG = goog.i18n.NumberFormatSymbols_en;
goog.i18n.NumberFormatSymbols_en_FM = goog.i18n.NumberFormatSymbols_en;
goog.i18n.NumberFormatSymbols_en_GB = {DECIMAL_SEP:".", GROUP_SEP:",", PERCENT:"%", ZERO_DIGIT:"0", PLUS_SIGN:"+", MINUS_SIGN:"-", EXP_SYMBOL:"E", PERMILL:"\u2030", INFINITY:"\u221e", NAN:"NaN", DECIMAL_PATTERN:"#,##0.###", SCIENTIFIC_PATTERN:"#E0", PERCENT_PATTERN:"#,##0%", CURRENCY_PATTERN:"\u00a4#,##0.00", DEF_CURRENCY_CODE:"GBP"};
goog.i18n.NumberFormatSymbols_en_GU = goog.i18n.NumberFormatSymbols_en;
goog.i18n.NumberFormatSymbols_en_IE = {DECIMAL_SEP:".", GROUP_SEP:",", PERCENT:"%", ZERO_DIGIT:"0", PLUS_SIGN:"+", MINUS_SIGN:"-", EXP_SYMBOL:"E", PERMILL:"\u2030", INFINITY:"\u221e", NAN:"NaN", DECIMAL_PATTERN:"#,##0.###", SCIENTIFIC_PATTERN:"#E0", PERCENT_PATTERN:"#,##0%", CURRENCY_PATTERN:"\u00a4#,##0.00", DEF_CURRENCY_CODE:"EUR"};
goog.i18n.NumberFormatSymbols_en_IN = {DECIMAL_SEP:".", GROUP_SEP:",", PERCENT:"%", ZERO_DIGIT:"0", PLUS_SIGN:"+", MINUS_SIGN:"-", EXP_SYMBOL:"E", PERMILL:"\u2030", INFINITY:"\u221e", NAN:"NaN", DECIMAL_PATTERN:"#,##,##0.###", SCIENTIFIC_PATTERN:"#E0", PERCENT_PATTERN:"#,##,##0%", CURRENCY_PATTERN:"\u00a4\u00a0#,##,##0.00", DEF_CURRENCY_CODE:"INR"};
goog.i18n.NumberFormatSymbols_en_IO = goog.i18n.NumberFormatSymbols_en;
goog.i18n.NumberFormatSymbols_en_MH = goog.i18n.NumberFormatSymbols_en;
goog.i18n.NumberFormatSymbols_en_MP = goog.i18n.NumberFormatSymbols_en;
goog.i18n.NumberFormatSymbols_en_PR = goog.i18n.NumberFormatSymbols_en;
goog.i18n.NumberFormatSymbols_en_PW = goog.i18n.NumberFormatSymbols_en;
goog.i18n.NumberFormatSymbols_en_SG = {DECIMAL_SEP:".", GROUP_SEP:",", PERCENT:"%", ZERO_DIGIT:"0", PLUS_SIGN:"+", MINUS_SIGN:"-", EXP_SYMBOL:"E", PERMILL:"\u2030", INFINITY:"\u221e", NAN:"NaN", DECIMAL_PATTERN:"#,##0.###", SCIENTIFIC_PATTERN:"#E0", PERCENT_PATTERN:"#,##0%", CURRENCY_PATTERN:"\u00a4#,##0.00", DEF_CURRENCY_CODE:"SGD"};
goog.i18n.NumberFormatSymbols_en_TC = goog.i18n.NumberFormatSymbols_en;
goog.i18n.NumberFormatSymbols_en_UM = goog.i18n.NumberFormatSymbols_en;
goog.i18n.NumberFormatSymbols_en_US = goog.i18n.NumberFormatSymbols_en;
goog.i18n.NumberFormatSymbols_en_VG = goog.i18n.NumberFormatSymbols_en;
goog.i18n.NumberFormatSymbols_en_VI = goog.i18n.NumberFormatSymbols_en;
goog.i18n.NumberFormatSymbols_en_XA = goog.i18n.NumberFormatSymbols_en;
goog.i18n.NumberFormatSymbols_en_ZA = {DECIMAL_SEP:",", GROUP_SEP:"\u00a0", PERCENT:"%", ZERO_DIGIT:"0", PLUS_SIGN:"+", MINUS_SIGN:"-", EXP_SYMBOL:"E", PERMILL:"\u2030", INFINITY:"\u221e", NAN:"NaN", DECIMAL_PATTERN:"#,##0.###", SCIENTIFIC_PATTERN:"#E0", PERCENT_PATTERN:"#,##0%", CURRENCY_PATTERN:"\u00a4#,##0.00", DEF_CURRENCY_CODE:"ZAR"};
goog.i18n.NumberFormatSymbols_en_ZW = goog.i18n.NumberFormatSymbols_en;
goog.i18n.NumberFormatSymbols_es = {DECIMAL_SEP:",", GROUP_SEP:".", PERCENT:"%", ZERO_DIGIT:"0", PLUS_SIGN:"+", MINUS_SIGN:"-", EXP_SYMBOL:"E", PERMILL:"\u2030", INFINITY:"\u221e", NAN:"NaN", DECIMAL_PATTERN:"#,##0.###", SCIENTIFIC_PATTERN:"#E0", PERCENT_PATTERN:"#,##0\u00a0%", CURRENCY_PATTERN:"#,##0.00\u00a0\u00a4", DEF_CURRENCY_CODE:"EUR"};
goog.i18n.NumberFormatSymbols_es_419 = {DECIMAL_SEP:".", GROUP_SEP:",", PERCENT:"%", ZERO_DIGIT:"0", PLUS_SIGN:"+", MINUS_SIGN:"-", EXP_SYMBOL:"E", PERMILL:"\u2030", INFINITY:"\u221e", NAN:"NaN", DECIMAL_PATTERN:"#,##0.###", SCIENTIFIC_PATTERN:"#E0", PERCENT_PATTERN:"#,##0\u00a0%", CURRENCY_PATTERN:"\u00a4#,##0.00", DEF_CURRENCY_CODE:"MXN"};
goog.i18n.NumberFormatSymbols_es_EA = goog.i18n.NumberFormatSymbols_es;
goog.i18n.NumberFormatSymbols_es_ES = goog.i18n.NumberFormatSymbols_es;
goog.i18n.NumberFormatSymbols_es_IC = goog.i18n.NumberFormatSymbols_es;
goog.i18n.NumberFormatSymbols_es_MX = {DECIMAL_SEP:".", GROUP_SEP:",", PERCENT:"%", ZERO_DIGIT:"0", PLUS_SIGN:"+", MINUS_SIGN:"-", EXP_SYMBOL:"E", PERMILL:"\u2030", INFINITY:"\u221e", NAN:"NaN", DECIMAL_PATTERN:"#,##0.###", SCIENTIFIC_PATTERN:"#E0", PERCENT_PATTERN:"#,##0%", CURRENCY_PATTERN:"\u00a4#,##0.00", DEF_CURRENCY_CODE:"MXN"};
goog.i18n.NumberFormatSymbols_es_US = {DECIMAL_SEP:".", GROUP_SEP:",", PERCENT:"%", ZERO_DIGIT:"0", PLUS_SIGN:"+", MINUS_SIGN:"-", EXP_SYMBOL:"E", PERMILL:"\u2030", INFINITY:"\u221e", NAN:"NaN", DECIMAL_PATTERN:"#,##0.###", SCIENTIFIC_PATTERN:"#E0", PERCENT_PATTERN:"#,##0\u00a0%", CURRENCY_PATTERN:"\u00a4#,##0.00", DEF_CURRENCY_CODE:"USD"};
goog.i18n.NumberFormatSymbols_et = {DECIMAL_SEP:",", GROUP_SEP:"\u00a0", PERCENT:"%", ZERO_DIGIT:"0", PLUS_SIGN:"+", MINUS_SIGN:"\u2212", EXP_SYMBOL:"\u00d710^", PERMILL:"\u2030", INFINITY:"\u221e", NAN:"NaN", DECIMAL_PATTERN:"#,##0.###", SCIENTIFIC_PATTERN:"#E0", PERCENT_PATTERN:"#,##0%", CURRENCY_PATTERN:"#,##0.00\u00a0\u00a4", DEF_CURRENCY_CODE:"EUR"};
goog.i18n.NumberFormatSymbols_et_EE = goog.i18n.NumberFormatSymbols_et;
goog.i18n.NumberFormatSymbols_eu = {DECIMAL_SEP:",", GROUP_SEP:".", PERCENT:"%", ZERO_DIGIT:"0", PLUS_SIGN:"+", MINUS_SIGN:"-", EXP_SYMBOL:"E", PERMILL:"\u2030", INFINITY:"\u221e", NAN:"NaN", DECIMAL_PATTERN:"#,##0.###", SCIENTIFIC_PATTERN:"#E0", PERCENT_PATTERN:"%\u00a0#,##0", CURRENCY_PATTERN:"#,##0.00\u00a0\u00a4", DEF_CURRENCY_CODE:"EUR"};
goog.i18n.NumberFormatSymbols_eu_ES = goog.i18n.NumberFormatSymbols_eu;
goog.i18n.NumberFormatSymbols_fa = {DECIMAL_SEP:"\u066b", GROUP_SEP:"\u066c", PERCENT:"\u066a", ZERO_DIGIT:"\u06f0", PLUS_SIGN:"\u200e+\u200e", MINUS_SIGN:"\u200e\u2212", EXP_SYMBOL:"\u00d7\u06f1\u06f0^", PERMILL:"\u0609", INFINITY:"\u221e", NAN:"\u0646\u0627\u0639\u062f\u062f", DECIMAL_PATTERN:"#,##0.###", SCIENTIFIC_PATTERN:"#E0", PERCENT_PATTERN:"#,##0%", CURRENCY_PATTERN:"\u200e\u00a4#,##0.00", DEF_CURRENCY_CODE:"IRR"};
goog.i18n.NumberFormatSymbols_fa_IR = goog.i18n.NumberFormatSymbols_fa;
goog.i18n.NumberFormatSymbols_fi = {DECIMAL_SEP:",", GROUP_SEP:"\u00a0", PERCENT:"%", ZERO_DIGIT:"0", PLUS_SIGN:"+", MINUS_SIGN:"\u2212", EXP_SYMBOL:"E", PERMILL:"\u2030", INFINITY:"\u221e", NAN:"ep\u00e4luku", DECIMAL_PATTERN:"#,##0.###", SCIENTIFIC_PATTERN:"#E0", PERCENT_PATTERN:"#,##0\u00a0%", CURRENCY_PATTERN:"#,##0.00\u00a0\u00a4", DEF_CURRENCY_CODE:"EUR"};
goog.i18n.NumberFormatSymbols_fi_FI = goog.i18n.NumberFormatSymbols_fi;
goog.i18n.NumberFormatSymbols_fil = {DECIMAL_SEP:".", GROUP_SEP:",", PERCENT:"%", ZERO_DIGIT:"0", PLUS_SIGN:"+", MINUS_SIGN:"-", EXP_SYMBOL:"E", PERMILL:"\u2030", INFINITY:"\u221e", NAN:"NaN", DECIMAL_PATTERN:"#,##0.###", SCIENTIFIC_PATTERN:"#E0", PERCENT_PATTERN:"#,##0%", CURRENCY_PATTERN:"\u00a4#,##0.00", DEF_CURRENCY_CODE:"PHP"};
goog.i18n.NumberFormatSymbols_fil_PH = goog.i18n.NumberFormatSymbols_fil;
goog.i18n.NumberFormatSymbols_fr = {DECIMAL_SEP:",", GROUP_SEP:"\u00a0", PERCENT:"%", ZERO_DIGIT:"0", PLUS_SIGN:"+", MINUS_SIGN:"-", EXP_SYMBOL:"E", PERMILL:"\u2030", INFINITY:"\u221e", NAN:"NaN", DECIMAL_PATTERN:"#,##0.###", SCIENTIFIC_PATTERN:"#E0", PERCENT_PATTERN:"#,##0\u00a0%", CURRENCY_PATTERN:"#,##0.00\u00a0\u00a4", DEF_CURRENCY_CODE:"EUR"};
goog.i18n.NumberFormatSymbols_fr_BL = goog.i18n.NumberFormatSymbols_fr;
goog.i18n.NumberFormatSymbols_fr_CA = {DECIMAL_SEP:",", GROUP_SEP:"\u00a0", PERCENT:"%", ZERO_DIGIT:"0", PLUS_SIGN:"+", MINUS_SIGN:"-", EXP_SYMBOL:"E", PERMILL:"\u2030", INFINITY:"\u221e", NAN:"NaN", DECIMAL_PATTERN:"#,##0.###", SCIENTIFIC_PATTERN:"#E0", PERCENT_PATTERN:"#,##0\u00a0%", CURRENCY_PATTERN:"0\u00a0mn\u00a0\u00a4", DEF_CURRENCY_CODE:"CAD"};
goog.i18n.NumberFormatSymbols_fr_FR = goog.i18n.NumberFormatSymbols_fr;
goog.i18n.NumberFormatSymbols_fr_GF = goog.i18n.NumberFormatSymbols_fr;
goog.i18n.NumberFormatSymbols_fr_GP = goog.i18n.NumberFormatSymbols_fr;
goog.i18n.NumberFormatSymbols_fr_MC = goog.i18n.NumberFormatSymbols_fr;
goog.i18n.NumberFormatSymbols_fr_MF = goog.i18n.NumberFormatSymbols_fr;
goog.i18n.NumberFormatSymbols_fr_MQ = goog.i18n.NumberFormatSymbols_fr;
goog.i18n.NumberFormatSymbols_fr_PM = goog.i18n.NumberFormatSymbols_fr;
goog.i18n.NumberFormatSymbols_fr_RE = goog.i18n.NumberFormatSymbols_fr;
goog.i18n.NumberFormatSymbols_fr_YT = goog.i18n.NumberFormatSymbols_fr;
goog.i18n.NumberFormatSymbols_ga = {DECIMAL_SEP:".", GROUP_SEP:",", PERCENT:"%", ZERO_DIGIT:"0", PLUS_SIGN:"+", MINUS_SIGN:"-", EXP_SYMBOL:"E", PERMILL:"\u2030", INFINITY:"\u221e", NAN:"NaN", DECIMAL_PATTERN:"#,##0.###", SCIENTIFIC_PATTERN:"#E0", PERCENT_PATTERN:"#,##0%", CURRENCY_PATTERN:"\u00a4#,##0.00", DEF_CURRENCY_CODE:"EUR"};
goog.i18n.NumberFormatSymbols_ga_IE = goog.i18n.NumberFormatSymbols_ga;
goog.i18n.NumberFormatSymbols_gl = {DECIMAL_SEP:",", GROUP_SEP:".", PERCENT:"%", ZERO_DIGIT:"0", PLUS_SIGN:"+", MINUS_SIGN:"-", EXP_SYMBOL:"E", PERMILL:"\u2030", INFINITY:"\u221e", NAN:"NaN", DECIMAL_PATTERN:"#,##0.###", SCIENTIFIC_PATTERN:"#E0", PERCENT_PATTERN:"#,##0%", CURRENCY_PATTERN:"\u00a4#,##0.00", DEF_CURRENCY_CODE:"EUR"};
goog.i18n.NumberFormatSymbols_gl_ES = goog.i18n.NumberFormatSymbols_gl;
goog.i18n.NumberFormatSymbols_gsw = {DECIMAL_SEP:".", GROUP_SEP:"\u2019", PERCENT:"%", ZERO_DIGIT:"0", PLUS_SIGN:"+", MINUS_SIGN:"\u2212", EXP_SYMBOL:"E", PERMILL:"\u2030", INFINITY:"\u221e", NAN:"NaN", DECIMAL_PATTERN:"#,##0.###", SCIENTIFIC_PATTERN:"#E0", PERCENT_PATTERN:"#,##0\u00a0%", CURRENCY_PATTERN:"#,##0.00\u00a0\u00a4", DEF_CURRENCY_CODE:"CHF"};
goog.i18n.NumberFormatSymbols_gsw_CH = goog.i18n.NumberFormatSymbols_gsw;
goog.i18n.NumberFormatSymbols_gsw_LI = goog.i18n.NumberFormatSymbols_gsw;
goog.i18n.NumberFormatSymbols_gu = {DECIMAL_SEP:".", GROUP_SEP:",", PERCENT:"%", ZERO_DIGIT:"0", PLUS_SIGN:"+", MINUS_SIGN:"-", EXP_SYMBOL:"E", PERMILL:"\u2030", INFINITY:"\u221e", NAN:"NaN", DECIMAL_PATTERN:"#,##,##0.###", SCIENTIFIC_PATTERN:"[#E0]", PERCENT_PATTERN:"#,##,##0%", CURRENCY_PATTERN:"\u00a4#,##,##0.00", DEF_CURRENCY_CODE:"INR"};
goog.i18n.NumberFormatSymbols_gu_IN = goog.i18n.NumberFormatSymbols_gu;
goog.i18n.NumberFormatSymbols_haw = {DECIMAL_SEP:".", GROUP_SEP:",", PERCENT:"%", ZERO_DIGIT:"0", PLUS_SIGN:"+", MINUS_SIGN:"-", EXP_SYMBOL:"E", PERMILL:"\u2030", INFINITY:"\u221e", NAN:"NaN", DECIMAL_PATTERN:"#,##0.###", SCIENTIFIC_PATTERN:"#E0", PERCENT_PATTERN:"#,##0%", CURRENCY_PATTERN:"\u00a4#,##0.00", DEF_CURRENCY_CODE:"USD"};
goog.i18n.NumberFormatSymbols_haw_US = goog.i18n.NumberFormatSymbols_haw;
goog.i18n.NumberFormatSymbols_he = {DECIMAL_SEP:".", GROUP_SEP:",", PERCENT:"%", ZERO_DIGIT:"0", PLUS_SIGN:"\u200e+", MINUS_SIGN:"\u200e-", EXP_SYMBOL:"E", PERMILL:"\u2030", INFINITY:"\u221e", NAN:"NaN", DECIMAL_PATTERN:"#,##0.###", SCIENTIFIC_PATTERN:"#E0", PERCENT_PATTERN:"#,##0%", CURRENCY_PATTERN:"#,##0.00\u00a0\u00a4", DEF_CURRENCY_CODE:"ILS"};
goog.i18n.NumberFormatSymbols_he_IL = goog.i18n.NumberFormatSymbols_he;
goog.i18n.NumberFormatSymbols_hi = {DECIMAL_SEP:".", GROUP_SEP:",", PERCENT:"%", ZERO_DIGIT:"0", PLUS_SIGN:"+", MINUS_SIGN:"-", EXP_SYMBOL:"E", PERMILL:"\u2030", INFINITY:"\u221e", NAN:"NaN", DECIMAL_PATTERN:"#,##,##0.###", SCIENTIFIC_PATTERN:"[#E0]", PERCENT_PATTERN:"#,##,##0%", CURRENCY_PATTERN:"\u00a4#,##,##0.00", DEF_CURRENCY_CODE:"INR"};
goog.i18n.NumberFormatSymbols_hi_IN = goog.i18n.NumberFormatSymbols_hi;
goog.i18n.NumberFormatSymbols_hr = {DECIMAL_SEP:",", GROUP_SEP:".", PERCENT:"%", ZERO_DIGIT:"0", PLUS_SIGN:"+", MINUS_SIGN:"-", EXP_SYMBOL:"E", PERMILL:"\u2030", INFINITY:"\u221e", NAN:"NaN", DECIMAL_PATTERN:"#,##0.###", SCIENTIFIC_PATTERN:"#E0", PERCENT_PATTERN:"#,##0%", CURRENCY_PATTERN:"#,##0.00\u00a0\u00a4", DEF_CURRENCY_CODE:"HRK"};
goog.i18n.NumberFormatSymbols_hr_HR = goog.i18n.NumberFormatSymbols_hr;
goog.i18n.NumberFormatSymbols_hu = {DECIMAL_SEP:",", GROUP_SEP:"\u00a0", PERCENT:"%", ZERO_DIGIT:"0", PLUS_SIGN:"+", MINUS_SIGN:"-", EXP_SYMBOL:"E", PERMILL:"\u2030", INFINITY:"\u221e", NAN:"NaN", DECIMAL_PATTERN:"#,##0.###", SCIENTIFIC_PATTERN:"#E0", PERCENT_PATTERN:"#,##0%", CURRENCY_PATTERN:"#,##0.00\u00a0\u00a4", DEF_CURRENCY_CODE:"HUF"};
goog.i18n.NumberFormatSymbols_hu_HU = goog.i18n.NumberFormatSymbols_hu;
goog.i18n.NumberFormatSymbols_hy = {DECIMAL_SEP:",", GROUP_SEP:".", PERCENT:"%", ZERO_DIGIT:"0", PLUS_SIGN:"+", MINUS_SIGN:"-", EXP_SYMBOL:"E", PERMILL:"\u2030", INFINITY:"\u221e", NAN:"NaN", DECIMAL_PATTERN:"#0.###", SCIENTIFIC_PATTERN:"#E0", PERCENT_PATTERN:"#,##0%", CURRENCY_PATTERN:"\u00a4\u00a0#,##0.00", DEF_CURRENCY_CODE:"AMD"};
goog.i18n.NumberFormatSymbols_hy_AM = goog.i18n.NumberFormatSymbols_hy;
goog.i18n.NumberFormatSymbols_id = {DECIMAL_SEP:",", GROUP_SEP:".", PERCENT:"%", ZERO_DIGIT:"0", PLUS_SIGN:"+", MINUS_SIGN:"-", EXP_SYMBOL:"E", PERMILL:"\u2030", INFINITY:"\u221e", NAN:"NaN", DECIMAL_PATTERN:"#,##0.###", SCIENTIFIC_PATTERN:"#E0", PERCENT_PATTERN:"#,##0%", CURRENCY_PATTERN:"\u00a4#,##0.00", DEF_CURRENCY_CODE:"IDR"};
goog.i18n.NumberFormatSymbols_id_ID = goog.i18n.NumberFormatSymbols_id;
goog.i18n.NumberFormatSymbols_in = {DECIMAL_SEP:",", GROUP_SEP:".", PERCENT:"%", ZERO_DIGIT:"0", PLUS_SIGN:"+", MINUS_SIGN:"-", EXP_SYMBOL:"E", PERMILL:"\u2030", INFINITY:"\u221e", NAN:"NaN", DECIMAL_PATTERN:"#,##0.###", SCIENTIFIC_PATTERN:"#E0", PERCENT_PATTERN:"#,##0%", CURRENCY_PATTERN:"\u00a4#,##0.00", DEF_CURRENCY_CODE:"IDR"};
goog.i18n.NumberFormatSymbols_is = {DECIMAL_SEP:",", GROUP_SEP:".", PERCENT:"%", ZERO_DIGIT:"0", PLUS_SIGN:"+", MINUS_SIGN:"-", EXP_SYMBOL:"E", PERMILL:"\u2030", INFINITY:"\u221e", NAN:"NaN", DECIMAL_PATTERN:"#,##0.###", SCIENTIFIC_PATTERN:"#E0", PERCENT_PATTERN:"#,##0%", CURRENCY_PATTERN:"#,##0.00\u00a0\u00a4", DEF_CURRENCY_CODE:"ISK"};
goog.i18n.NumberFormatSymbols_is_IS = goog.i18n.NumberFormatSymbols_is;
goog.i18n.NumberFormatSymbols_it = {DECIMAL_SEP:",", GROUP_SEP:".", PERCENT:"%", ZERO_DIGIT:"0", PLUS_SIGN:"+", MINUS_SIGN:"-", EXP_SYMBOL:"E", PERMILL:"\u2030", INFINITY:"\u221e", NAN:"NaN", DECIMAL_PATTERN:"#,##0.###", SCIENTIFIC_PATTERN:"#E0", PERCENT_PATTERN:"#,##0%", CURRENCY_PATTERN:"#,##0.00\u00a0\u00a4", DEF_CURRENCY_CODE:"EUR"};
goog.i18n.NumberFormatSymbols_it_IT = goog.i18n.NumberFormatSymbols_it;
goog.i18n.NumberFormatSymbols_it_SM = goog.i18n.NumberFormatSymbols_it;
goog.i18n.NumberFormatSymbols_iw = {DECIMAL_SEP:".", GROUP_SEP:",", PERCENT:"%", ZERO_DIGIT:"0", PLUS_SIGN:"\u200e+", MINUS_SIGN:"\u200e-", EXP_SYMBOL:"E", PERMILL:"\u2030", INFINITY:"\u221e", NAN:"NaN", DECIMAL_PATTERN:"#,##0.###", SCIENTIFIC_PATTERN:"#E0", PERCENT_PATTERN:"#,##0%", CURRENCY_PATTERN:"#,##0.00\u00a0\u00a4", DEF_CURRENCY_CODE:"ILS"};
goog.i18n.NumberFormatSymbols_ja = {DECIMAL_SEP:".", GROUP_SEP:",", PERCENT:"%", ZERO_DIGIT:"0", PLUS_SIGN:"+", MINUS_SIGN:"-", EXP_SYMBOL:"E", PERMILL:"\u2030", INFINITY:"\u221e", NAN:"NaN", DECIMAL_PATTERN:"#,##0.###", SCIENTIFIC_PATTERN:"#E0", PERCENT_PATTERN:"#,##0%", CURRENCY_PATTERN:"\u00a4#,##0.00", DEF_CURRENCY_CODE:"JPY"};
goog.i18n.NumberFormatSymbols_ja_JP = goog.i18n.NumberFormatSymbols_ja;
goog.i18n.NumberFormatSymbols_ka = {DECIMAL_SEP:",", GROUP_SEP:"\u00a0", PERCENT:"%", ZERO_DIGIT:"0", PLUS_SIGN:"+", MINUS_SIGN:"-", EXP_SYMBOL:"E", PERMILL:"\u2030", INFINITY:"\u221e", NAN:"\u10d0\u10e0\u00a0\u10d0\u10e0\u10d8\u10e1\u00a0\u10e0\u10d8\u10ea\u10ee\u10d5\u10d8", DECIMAL_PATTERN:"#,##0.###", SCIENTIFIC_PATTERN:"#E0", PERCENT_PATTERN:"#,##0\u00a0%", CURRENCY_PATTERN:"#,##0.00\u00a0\u00a4", DEF_CURRENCY_CODE:"GEL"};
goog.i18n.NumberFormatSymbols_ka_GE = goog.i18n.NumberFormatSymbols_ka;
goog.i18n.NumberFormatSymbols_kk = {DECIMAL_SEP:",", GROUP_SEP:"\u00a0", PERCENT:"%", ZERO_DIGIT:"0", PLUS_SIGN:"+", MINUS_SIGN:"-", EXP_SYMBOL:"E", PERMILL:"\u2030", INFINITY:"\u221e", NAN:"NaN", DECIMAL_PATTERN:"#,##0.###", SCIENTIFIC_PATTERN:"#E0", PERCENT_PATTERN:"#,##0%", CURRENCY_PATTERN:"#,##0.00\u00a0\u00a4", DEF_CURRENCY_CODE:"KZT"};
goog.i18n.NumberFormatSymbols_kk_KZ = goog.i18n.NumberFormatSymbols_kk;
goog.i18n.NumberFormatSymbols_km = {DECIMAL_SEP:",", GROUP_SEP:".", PERCENT:"%", ZERO_DIGIT:"0", PLUS_SIGN:"+", MINUS_SIGN:"-", EXP_SYMBOL:"E", PERMILL:"\u2030", INFINITY:"\u221e", NAN:"NaN", DECIMAL_PATTERN:"#,##0.###", SCIENTIFIC_PATTERN:"#E0", PERCENT_PATTERN:"#,##0%", CURRENCY_PATTERN:"\u00a4#,##0.00", DEF_CURRENCY_CODE:"KHR"};
goog.i18n.NumberFormatSymbols_km_KH = goog.i18n.NumberFormatSymbols_km;
goog.i18n.NumberFormatSymbols_kn = {DECIMAL_SEP:".", GROUP_SEP:",", PERCENT:"%", ZERO_DIGIT:"0", PLUS_SIGN:"+", MINUS_SIGN:"-", EXP_SYMBOL:"E", PERMILL:"\u2030", INFINITY:"\u221e", NAN:"NaN", DECIMAL_PATTERN:"#,##0.###", SCIENTIFIC_PATTERN:"#E0", PERCENT_PATTERN:"#,##0%", CURRENCY_PATTERN:"\u00a4#,##0.00", DEF_CURRENCY_CODE:"INR"};
goog.i18n.NumberFormatSymbols_kn_IN = goog.i18n.NumberFormatSymbols_kn;
goog.i18n.NumberFormatSymbols_ko = {DECIMAL_SEP:".", GROUP_SEP:",", PERCENT:"%", ZERO_DIGIT:"0", PLUS_SIGN:"+", MINUS_SIGN:"-", EXP_SYMBOL:"E", PERMILL:"\u2030", INFINITY:"\u221e", NAN:"NaN", DECIMAL_PATTERN:"#,##0.###", SCIENTIFIC_PATTERN:"#E0", PERCENT_PATTERN:"#,##0%", CURRENCY_PATTERN:"\u00a4#,##0.00", DEF_CURRENCY_CODE:"KRW"};
goog.i18n.NumberFormatSymbols_ko_KR = goog.i18n.NumberFormatSymbols_ko;
goog.i18n.NumberFormatSymbols_ky = {DECIMAL_SEP:",", GROUP_SEP:"\u00a0", PERCENT:"%", ZERO_DIGIT:"0", PLUS_SIGN:"+", MINUS_SIGN:"-", EXP_SYMBOL:"E", PERMILL:"\u2030", INFINITY:"\u221e", NAN:"\u0441\u0430\u043d\u00a0\u044d\u043c\u0435\u0441", DECIMAL_PATTERN:"#,##0.###", SCIENTIFIC_PATTERN:"#E0", PERCENT_PATTERN:"#,##0%", CURRENCY_PATTERN:"#,##0.00\u00a0\u00a4", DEF_CURRENCY_CODE:"KGS"};
goog.i18n.NumberFormatSymbols_ky_KG = goog.i18n.NumberFormatSymbols_ky;
goog.i18n.NumberFormatSymbols_ln = {DECIMAL_SEP:",", GROUP_SEP:".", PERCENT:"%", ZERO_DIGIT:"0", PLUS_SIGN:"+", MINUS_SIGN:"-", EXP_SYMBOL:"E", PERMILL:"\u2030", INFINITY:"\u221e", NAN:"NaN", DECIMAL_PATTERN:"#,##0.###", SCIENTIFIC_PATTERN:"#E0", PERCENT_PATTERN:"#,##0%", CURRENCY_PATTERN:"#,##0.00\u00a0\u00a4", DEF_CURRENCY_CODE:"CDF"};
goog.i18n.NumberFormatSymbols_ln_CD = goog.i18n.NumberFormatSymbols_ln;
goog.i18n.NumberFormatSymbols_lo = {DECIMAL_SEP:",", GROUP_SEP:".", PERCENT:"%", ZERO_DIGIT:"0", PLUS_SIGN:"+", MINUS_SIGN:"-", EXP_SYMBOL:"E", PERMILL:"\u2030", INFINITY:"\u221e", NAN:"\u0e9a\u0ecd\u0ec8\u200b\u0ec1\u0ea1\u0ec8\u0e99\u200b\u0ec2\u0e95\u200b\u0ec0\u0ea5\u0e81", DECIMAL_PATTERN:"#,##0.###", SCIENTIFIC_PATTERN:"#", PERCENT_PATTERN:"#,##0%", CURRENCY_PATTERN:"\u00a4#,##0.00;\u00a4-#,##0.00", DEF_CURRENCY_CODE:"LAK"};
goog.i18n.NumberFormatSymbols_lo_LA = goog.i18n.NumberFormatSymbols_lo;
goog.i18n.NumberFormatSymbols_lt = {DECIMAL_SEP:",", GROUP_SEP:"\u00a0", PERCENT:"%", ZERO_DIGIT:"0", PLUS_SIGN:"+", MINUS_SIGN:"\u2212", EXP_SYMBOL:"\u00d710^", PERMILL:"\u2030", INFINITY:"\u221e", NAN:"NaN", DECIMAL_PATTERN:"#,##0.###", SCIENTIFIC_PATTERN:"#E0", PERCENT_PATTERN:"#,##0\u00a0%", CURRENCY_PATTERN:"#,##0.00\u00a0\u00a4", DEF_CURRENCY_CODE:"EUR"};
goog.i18n.NumberFormatSymbols_lt_LT = goog.i18n.NumberFormatSymbols_lt;
goog.i18n.NumberFormatSymbols_lv = {DECIMAL_SEP:",", GROUP_SEP:"\u00a0", PERCENT:"%", ZERO_DIGIT:"0", PLUS_SIGN:"+", MINUS_SIGN:"-", EXP_SYMBOL:"E", PERMILL:"\u2030", INFINITY:"\u221e", NAN:"nav\u00a0skaitlis", DECIMAL_PATTERN:"#,##0.###", SCIENTIFIC_PATTERN:"#E0", PERCENT_PATTERN:"#,##0%", CURRENCY_PATTERN:"#0.00\u00a0\u00a4", DEF_CURRENCY_CODE:"EUR"};
goog.i18n.NumberFormatSymbols_lv_LV = goog.i18n.NumberFormatSymbols_lv;
goog.i18n.NumberFormatSymbols_mk = {DECIMAL_SEP:",", GROUP_SEP:".", PERCENT:"%", ZERO_DIGIT:"0", PLUS_SIGN:"+", MINUS_SIGN:"-", EXP_SYMBOL:"E", PERMILL:"\u2030", INFINITY:"\u221e", NAN:"NaN", DECIMAL_PATTERN:"#,##0.###", SCIENTIFIC_PATTERN:"#E0", PERCENT_PATTERN:"#,##0%", CURRENCY_PATTERN:"\u00a4\u00a0#,##0.00", DEF_CURRENCY_CODE:"MKD"};
goog.i18n.NumberFormatSymbols_mk_MK = goog.i18n.NumberFormatSymbols_mk;
goog.i18n.NumberFormatSymbols_ml = {DECIMAL_SEP:".", GROUP_SEP:",", PERCENT:"%", ZERO_DIGIT:"0", PLUS_SIGN:"+", MINUS_SIGN:"-", EXP_SYMBOL:"E", PERMILL:"\u2030", INFINITY:"\u221e", NAN:"NaN", DECIMAL_PATTERN:"#,##,##0.###", SCIENTIFIC_PATTERN:"#E0", PERCENT_PATTERN:"#,##0%", CURRENCY_PATTERN:"\u00a4#,##0.00", DEF_CURRENCY_CODE:"INR"};
goog.i18n.NumberFormatSymbols_ml_IN = goog.i18n.NumberFormatSymbols_ml;
goog.i18n.NumberFormatSymbols_mn = {DECIMAL_SEP:".", GROUP_SEP:",", PERCENT:"%", ZERO_DIGIT:"0", PLUS_SIGN:"+", MINUS_SIGN:"-", EXP_SYMBOL:"E", PERMILL:"\u2030", INFINITY:"\u221e", NAN:"NaN", DECIMAL_PATTERN:"#,##0.###", SCIENTIFIC_PATTERN:"#E0", PERCENT_PATTERN:"#,##0%", CURRENCY_PATTERN:"\u00a4\u00a0#,##0.00", DEF_CURRENCY_CODE:"MNT"};
goog.i18n.NumberFormatSymbols_mn_MN = goog.i18n.NumberFormatSymbols_mn;
goog.i18n.NumberFormatSymbols_mr = {DECIMAL_SEP:".", GROUP_SEP:",", PERCENT:"%", ZERO_DIGIT:"\u0966", PLUS_SIGN:"+", MINUS_SIGN:"-", EXP_SYMBOL:"E", PERMILL:"\u2030", INFINITY:"\u221e", NAN:"NaN", DECIMAL_PATTERN:"#,##,##0.###", SCIENTIFIC_PATTERN:"[#E0]", PERCENT_PATTERN:"#,##0%", CURRENCY_PATTERN:"\u00a4#,##0.00", DEF_CURRENCY_CODE:"INR"};
goog.i18n.NumberFormatSymbols_mr_IN = goog.i18n.NumberFormatSymbols_mr;
goog.i18n.NumberFormatSymbols_ms = {DECIMAL_SEP:".", GROUP_SEP:",", PERCENT:"%", ZERO_DIGIT:"0", PLUS_SIGN:"+", MINUS_SIGN:"-", EXP_SYMBOL:"E", PERMILL:"\u2030", INFINITY:"\u221e", NAN:"NaN", DECIMAL_PATTERN:"#,##0.###", SCIENTIFIC_PATTERN:"#E0", PERCENT_PATTERN:"#,##0%", CURRENCY_PATTERN:"\u00a4#,##0.00", DEF_CURRENCY_CODE:"MYR"};
goog.i18n.NumberFormatSymbols_ms_MY = goog.i18n.NumberFormatSymbols_ms;
goog.i18n.NumberFormatSymbols_mt = {DECIMAL_SEP:".", GROUP_SEP:",", PERCENT:"%", ZERO_DIGIT:"0", PLUS_SIGN:"+", MINUS_SIGN:"-", EXP_SYMBOL:"E", PERMILL:"\u2030", INFINITY:"\u221e", NAN:"NaN", DECIMAL_PATTERN:"#,##0.###", SCIENTIFIC_PATTERN:"#E0", PERCENT_PATTERN:"#,##0%", CURRENCY_PATTERN:"\u00a4#,##0.00", DEF_CURRENCY_CODE:"EUR"};
goog.i18n.NumberFormatSymbols_mt_MT = goog.i18n.NumberFormatSymbols_mt;
goog.i18n.NumberFormatSymbols_my = {DECIMAL_SEP:".", GROUP_SEP:",", PERCENT:"%", ZERO_DIGIT:"\u1040", PLUS_SIGN:"+", MINUS_SIGN:"-", EXP_SYMBOL:"E", PERMILL:"\u2030", INFINITY:"\u221e", NAN:"\u1002\u100f\u1014\u103a\u1038\u1019\u101f\u102f\u1010\u103a\u101e\u1031\u102c", DECIMAL_PATTERN:"#,##0.###", SCIENTIFIC_PATTERN:"#E0", PERCENT_PATTERN:"#,##0%", CURRENCY_PATTERN:"\u00a4\u00a0#,##0.00", DEF_CURRENCY_CODE:"MMK"};
goog.i18n.NumberFormatSymbols_my_MM = goog.i18n.NumberFormatSymbols_my;
goog.i18n.NumberFormatSymbols_nb = {DECIMAL_SEP:",", GROUP_SEP:"\u00a0", PERCENT:"%", ZERO_DIGIT:"0", PLUS_SIGN:"+", MINUS_SIGN:"\u2212", EXP_SYMBOL:"E", PERMILL:"\u2030", INFINITY:"\u221e", NAN:"NaN", DECIMAL_PATTERN:"#,##0.###", SCIENTIFIC_PATTERN:"#E0", PERCENT_PATTERN:"#,##0\u00a0%", CURRENCY_PATTERN:"\u00a4\u00a0#,##0.00", DEF_CURRENCY_CODE:"NOK"};
goog.i18n.NumberFormatSymbols_nb_NO = goog.i18n.NumberFormatSymbols_nb;
goog.i18n.NumberFormatSymbols_nb_SJ = goog.i18n.NumberFormatSymbols_nb;
goog.i18n.NumberFormatSymbols_ne = {DECIMAL_SEP:".", GROUP_SEP:",", PERCENT:"%", ZERO_DIGIT:"\u0966", PLUS_SIGN:"+", MINUS_SIGN:"-", EXP_SYMBOL:"E", PERMILL:"\u2030", INFINITY:"\u221e", NAN:"NaN", DECIMAL_PATTERN:"#,##0.###", SCIENTIFIC_PATTERN:"#E0", PERCENT_PATTERN:"#,##0%", CURRENCY_PATTERN:"\u00a4\u00a0#,##0.00", DEF_CURRENCY_CODE:"NPR"};
goog.i18n.NumberFormatSymbols_ne_NP = goog.i18n.NumberFormatSymbols_ne;
goog.i18n.NumberFormatSymbols_nl = {DECIMAL_SEP:",", GROUP_SEP:".", PERCENT:"%", ZERO_DIGIT:"0", PLUS_SIGN:"+", MINUS_SIGN:"-", EXP_SYMBOL:"E", PERMILL:"\u2030", INFINITY:"\u221e", NAN:"NaN", DECIMAL_PATTERN:"#,##0.###", SCIENTIFIC_PATTERN:"#E0", PERCENT_PATTERN:"#,##0%", CURRENCY_PATTERN:"\u00a4\u00a0#,##0.00;\u00a4\u00a0-#,##0.00", DEF_CURRENCY_CODE:"EUR"};
goog.i18n.NumberFormatSymbols_nl_NL = goog.i18n.NumberFormatSymbols_nl;
goog.i18n.NumberFormatSymbols_no = {DECIMAL_SEP:",", GROUP_SEP:"\u00a0", PERCENT:"%", ZERO_DIGIT:"0", PLUS_SIGN:"+", MINUS_SIGN:"\u2212", EXP_SYMBOL:"E", PERMILL:"\u2030", INFINITY:"\u221e", NAN:"NaN", DECIMAL_PATTERN:"#,##0.###", SCIENTIFIC_PATTERN:"#E0", PERCENT_PATTERN:"#,##0\u00a0%", CURRENCY_PATTERN:"\u00a4\u00a0#,##0.00", DEF_CURRENCY_CODE:"NOK"};
goog.i18n.NumberFormatSymbols_no_NO = goog.i18n.NumberFormatSymbols_no;
goog.i18n.NumberFormatSymbols_or = {DECIMAL_SEP:".", GROUP_SEP:",", PERCENT:"%", ZERO_DIGIT:"0", PLUS_SIGN:"+", MINUS_SIGN:"-", EXP_SYMBOL:"E", PERMILL:"\u2030", INFINITY:"\u221e", NAN:"NaN", DECIMAL_PATTERN:"#,##,##0.###", SCIENTIFIC_PATTERN:"#E0", PERCENT_PATTERN:"#,##,##0%", CURRENCY_PATTERN:"\u00a4\u00a0#,##,##0.00", DEF_CURRENCY_CODE:"INR"};
goog.i18n.NumberFormatSymbols_or_IN = goog.i18n.NumberFormatSymbols_or;
goog.i18n.NumberFormatSymbols_pa = {DECIMAL_SEP:".", GROUP_SEP:",", PERCENT:"%", ZERO_DIGIT:"0", PLUS_SIGN:"+", MINUS_SIGN:"-", EXP_SYMBOL:"E", PERMILL:"\u2030", INFINITY:"\u221e", NAN:"NaN", DECIMAL_PATTERN:"#,##,##0.###", SCIENTIFIC_PATTERN:"[#E0]", PERCENT_PATTERN:"#,##,##0%", CURRENCY_PATTERN:"\u00a4#,##,##0.00", DEF_CURRENCY_CODE:"INR"};
goog.i18n.NumberFormatSymbols_pa_Guru = goog.i18n.NumberFormatSymbols_pa;
goog.i18n.NumberFormatSymbols_pa_Guru_IN = goog.i18n.NumberFormatSymbols_pa;
goog.i18n.NumberFormatSymbols_pl = {DECIMAL_SEP:",", GROUP_SEP:"\u00a0", PERCENT:"%", ZERO_DIGIT:"0", PLUS_SIGN:"+", MINUS_SIGN:"-", EXP_SYMBOL:"E", PERMILL:"\u2030", INFINITY:"\u221e", NAN:"NaN", DECIMAL_PATTERN:"#,##0.###", SCIENTIFIC_PATTERN:"#E0", PERCENT_PATTERN:"#,##0%", CURRENCY_PATTERN:"#,##0.00\u00a0\u00a4", DEF_CURRENCY_CODE:"PLN"};
goog.i18n.NumberFormatSymbols_pl_PL = goog.i18n.NumberFormatSymbols_pl;
goog.i18n.NumberFormatSymbols_pt = {DECIMAL_SEP:",", GROUP_SEP:".", PERCENT:"%", ZERO_DIGIT:"0", PLUS_SIGN:"+", MINUS_SIGN:"-", EXP_SYMBOL:"E", PERMILL:"\u2030", INFINITY:"\u221e", NAN:"NaN", DECIMAL_PATTERN:"#,##0.###", SCIENTIFIC_PATTERN:"#E0", PERCENT_PATTERN:"#,##0%", CURRENCY_PATTERN:"\u00a4#,##0.00", DEF_CURRENCY_CODE:"BRL"};
goog.i18n.NumberFormatSymbols_pt_BR = goog.i18n.NumberFormatSymbols_pt;
goog.i18n.NumberFormatSymbols_pt_PT = {DECIMAL_SEP:",", GROUP_SEP:"\u00a0", PERCENT:"%", ZERO_DIGIT:"0", PLUS_SIGN:"+", MINUS_SIGN:"-", EXP_SYMBOL:"E", PERMILL:"\u2030", INFINITY:"\u221e", NAN:"NaN", DECIMAL_PATTERN:"#,##0.###", SCIENTIFIC_PATTERN:"#E0", PERCENT_PATTERN:"#,##0%", CURRENCY_PATTERN:"#,##0.00\u00a0\u00a4", DEF_CURRENCY_CODE:"EUR"};
goog.i18n.NumberFormatSymbols_ro = {DECIMAL_SEP:",", GROUP_SEP:".", PERCENT:"%", ZERO_DIGIT:"0", PLUS_SIGN:"+", MINUS_SIGN:"-", EXP_SYMBOL:"E", PERMILL:"\u2030", INFINITY:"\u221e", NAN:"NaN", DECIMAL_PATTERN:"#,##0.###", SCIENTIFIC_PATTERN:"#E0", PERCENT_PATTERN:"#,##0\u00a0%", CURRENCY_PATTERN:"#,##0.00\u00a0\u00a4", DEF_CURRENCY_CODE:"RON"};
goog.i18n.NumberFormatSymbols_ro_RO = goog.i18n.NumberFormatSymbols_ro;
goog.i18n.NumberFormatSymbols_ru = {DECIMAL_SEP:",", GROUP_SEP:"\u00a0", PERCENT:"%", ZERO_DIGIT:"0", PLUS_SIGN:"+", MINUS_SIGN:"-", EXP_SYMBOL:"E", PERMILL:"\u2030", INFINITY:"\u221e", NAN:"\u043d\u0435\u00a0\u0447\u0438\u0441\u043b\u043e", DECIMAL_PATTERN:"#,##0.###", SCIENTIFIC_PATTERN:"#E0", PERCENT_PATTERN:"#,##0\u00a0%", CURRENCY_PATTERN:"#,##0.00\u00a0\u00a4", DEF_CURRENCY_CODE:"RUB"};
goog.i18n.NumberFormatSymbols_ru_RU = goog.i18n.NumberFormatSymbols_ru;
goog.i18n.NumberFormatSymbols_si = {DECIMAL_SEP:".", GROUP_SEP:",", PERCENT:"%", ZERO_DIGIT:"0", PLUS_SIGN:"+", MINUS_SIGN:"-", EXP_SYMBOL:"E", PERMILL:"\u2030", INFINITY:"\u221e", NAN:"NaN", DECIMAL_PATTERN:"#,##0.###", SCIENTIFIC_PATTERN:"#", PERCENT_PATTERN:"#,##0%", CURRENCY_PATTERN:"\u00a4#,##0.00", DEF_CURRENCY_CODE:"LKR"};
goog.i18n.NumberFormatSymbols_si_LK = goog.i18n.NumberFormatSymbols_si;
goog.i18n.NumberFormatSymbols_sk = {DECIMAL_SEP:",", GROUP_SEP:"\u00a0", PERCENT:"%", ZERO_DIGIT:"0", PLUS_SIGN:"+", MINUS_SIGN:"-", EXP_SYMBOL:"E", PERMILL:"\u2030", INFINITY:"\u221e", NAN:"NaN", DECIMAL_PATTERN:"#,##0.###", SCIENTIFIC_PATTERN:"#E0", PERCENT_PATTERN:"#,##0\u00a0%", CURRENCY_PATTERN:"#,##0.00\u00a0\u00a4", DEF_CURRENCY_CODE:"EUR"};
goog.i18n.NumberFormatSymbols_sk_SK = goog.i18n.NumberFormatSymbols_sk;
goog.i18n.NumberFormatSymbols_sl = {DECIMAL_SEP:",", GROUP_SEP:".", PERCENT:"%", ZERO_DIGIT:"0", PLUS_SIGN:"+", MINUS_SIGN:"-", EXP_SYMBOL:"e", PERMILL:"\u2030", INFINITY:"\u221e", NAN:"NaN", DECIMAL_PATTERN:"#,##0.###", SCIENTIFIC_PATTERN:"#E0", PERCENT_PATTERN:"#,##0%", CURRENCY_PATTERN:"#,##0.00\u00a0\u00a4", DEF_CURRENCY_CODE:"EUR"};
goog.i18n.NumberFormatSymbols_sl_SI = goog.i18n.NumberFormatSymbols_sl;
goog.i18n.NumberFormatSymbols_sq = {DECIMAL_SEP:",", GROUP_SEP:"\u00a0", PERCENT:"%", ZERO_DIGIT:"0", PLUS_SIGN:"+", MINUS_SIGN:"-", EXP_SYMBOL:"E", PERMILL:"\u2030", INFINITY:"\u221e", NAN:"NaN", DECIMAL_PATTERN:"#,##0.###", SCIENTIFIC_PATTERN:"#E0", PERCENT_PATTERN:"#,##0%", CURRENCY_PATTERN:"#,##0.00\u00a0\u00a4", DEF_CURRENCY_CODE:"ALL"};
goog.i18n.NumberFormatSymbols_sq_AL = goog.i18n.NumberFormatSymbols_sq;
goog.i18n.NumberFormatSymbols_sr = {DECIMAL_SEP:",", GROUP_SEP:".", PERCENT:"%", ZERO_DIGIT:"0", PLUS_SIGN:"+", MINUS_SIGN:"-", EXP_SYMBOL:"E", PERMILL:"\u2030", INFINITY:"\u221e", NAN:"NaN", DECIMAL_PATTERN:"#,##0.###", SCIENTIFIC_PATTERN:"#E0", PERCENT_PATTERN:"#,##0%", CURRENCY_PATTERN:"#,##0.00\u00a0\u00a4", DEF_CURRENCY_CODE:"RSD"};
goog.i18n.NumberFormatSymbols_sr_Cyrl = goog.i18n.NumberFormatSymbols_sr;
goog.i18n.NumberFormatSymbols_sr_Cyrl_RS = goog.i18n.NumberFormatSymbols_sr;
goog.i18n.NumberFormatSymbols_sr_Latn = {DECIMAL_SEP:",", GROUP_SEP:".", PERCENT:"%", ZERO_DIGIT:"0", PLUS_SIGN:"+", MINUS_SIGN:"-", EXP_SYMBOL:"E", PERMILL:"\u2030", INFINITY:"\u221e", NAN:"NaN", DECIMAL_PATTERN:"#,##0.###", SCIENTIFIC_PATTERN:"#E0", PERCENT_PATTERN:"#,##0%", CURRENCY_PATTERN:"#,##0.00\u00a0\u00a4", DEF_CURRENCY_CODE:"RSD"};
goog.i18n.NumberFormatSymbols_sr_Latn_RS = goog.i18n.NumberFormatSymbols_sr_Latn;
goog.i18n.NumberFormatSymbols_sv = {DECIMAL_SEP:",", GROUP_SEP:"\u00a0", PERCENT:"%", ZERO_DIGIT:"0", PLUS_SIGN:"+", MINUS_SIGN:"\u2212", EXP_SYMBOL:"\u00d710^", PERMILL:"\u2030", INFINITY:"\u221e", NAN:"\u00a4\u00a4\u00a4", DECIMAL_PATTERN:"#,##0.###", SCIENTIFIC_PATTERN:"#E0", PERCENT_PATTERN:"#,##0\u00a0%", CURRENCY_PATTERN:"#,##0.00\u00a0\u00a4", DEF_CURRENCY_CODE:"SEK"};
goog.i18n.NumberFormatSymbols_sv_SE = goog.i18n.NumberFormatSymbols_sv;
goog.i18n.NumberFormatSymbols_sw = {DECIMAL_SEP:".", GROUP_SEP:",", PERCENT:"%", ZERO_DIGIT:"0", PLUS_SIGN:"+", MINUS_SIGN:"-", EXP_SYMBOL:"E", PERMILL:"\u2030", INFINITY:"\u221e", NAN:"NaN", DECIMAL_PATTERN:"#,##0.###", SCIENTIFIC_PATTERN:"#E0", PERCENT_PATTERN:"#,##0%", CURRENCY_PATTERN:"\u00a4#,##0.00", DEF_CURRENCY_CODE:"TZS"};
goog.i18n.NumberFormatSymbols_sw_TZ = goog.i18n.NumberFormatSymbols_sw;
goog.i18n.NumberFormatSymbols_ta = {DECIMAL_SEP:".", GROUP_SEP:",", PERCENT:"%", ZERO_DIGIT:"0", PLUS_SIGN:"+", MINUS_SIGN:"-", EXP_SYMBOL:"E", PERMILL:"\u2030", INFINITY:"\u221e", NAN:"NaN", DECIMAL_PATTERN:"#,##,##0.###", SCIENTIFIC_PATTERN:"#E0", PERCENT_PATTERN:"#,##,##0%", CURRENCY_PATTERN:"\u00a4\u00a0#,##,##0.00", DEF_CURRENCY_CODE:"INR"};
goog.i18n.NumberFormatSymbols_ta_IN = goog.i18n.NumberFormatSymbols_ta;
goog.i18n.NumberFormatSymbols_te = {DECIMAL_SEP:".", GROUP_SEP:",", PERCENT:"%", ZERO_DIGIT:"0", PLUS_SIGN:"+", MINUS_SIGN:"-", EXP_SYMBOL:"E", PERMILL:"\u2030", INFINITY:"\u221e", NAN:"NaN", DECIMAL_PATTERN:"#,##,##0.###", SCIENTIFIC_PATTERN:"#E0", PERCENT_PATTERN:"#,##0%", CURRENCY_PATTERN:"\u00a4#,##,##0.00", DEF_CURRENCY_CODE:"INR"};
goog.i18n.NumberFormatSymbols_te_IN = goog.i18n.NumberFormatSymbols_te;
goog.i18n.NumberFormatSymbols_th = {DECIMAL_SEP:".", GROUP_SEP:",", PERCENT:"%", ZERO_DIGIT:"0", PLUS_SIGN:"+", MINUS_SIGN:"-", EXP_SYMBOL:"E", PERMILL:"\u2030", INFINITY:"\u221e", NAN:"NaN", DECIMAL_PATTERN:"#,##0.###", SCIENTIFIC_PATTERN:"#E0", PERCENT_PATTERN:"#,##0%", CURRENCY_PATTERN:"\u00a4#,##0.00", DEF_CURRENCY_CODE:"THB"};
goog.i18n.NumberFormatSymbols_th_TH = goog.i18n.NumberFormatSymbols_th;
goog.i18n.NumberFormatSymbols_tl = {DECIMAL_SEP:".", GROUP_SEP:",", PERCENT:"%", ZERO_DIGIT:"0", PLUS_SIGN:"+", MINUS_SIGN:"-", EXP_SYMBOL:"E", PERMILL:"\u2030", INFINITY:"\u221e", NAN:"NaN", DECIMAL_PATTERN:"#,##0.###", SCIENTIFIC_PATTERN:"#E0", PERCENT_PATTERN:"#,##0%", CURRENCY_PATTERN:"\u00a4#,##0.00", DEF_CURRENCY_CODE:"PHP"};
goog.i18n.NumberFormatSymbols_tr = {DECIMAL_SEP:",", GROUP_SEP:".", PERCENT:"%", ZERO_DIGIT:"0", PLUS_SIGN:"+", MINUS_SIGN:"-", EXP_SYMBOL:"E", PERMILL:"\u2030", INFINITY:"\u221e", NAN:"NaN", DECIMAL_PATTERN:"#,##0.###", SCIENTIFIC_PATTERN:"#E0", PERCENT_PATTERN:"%#,##0", CURRENCY_PATTERN:"#,##0.00\u00a0\u00a4", DEF_CURRENCY_CODE:"TRY"};
goog.i18n.NumberFormatSymbols_tr_TR = goog.i18n.NumberFormatSymbols_tr;
goog.i18n.NumberFormatSymbols_uk = {DECIMAL_SEP:",", GROUP_SEP:"\u00a0", PERCENT:"%", ZERO_DIGIT:"0", PLUS_SIGN:"+", MINUS_SIGN:"-", EXP_SYMBOL:"\u0415", PERMILL:"\u2030", INFINITY:"\u221e", NAN:"NaN", DECIMAL_PATTERN:"#,##0.###", SCIENTIFIC_PATTERN:"#E0", PERCENT_PATTERN:"#,##0%", CURRENCY_PATTERN:"#,##0.00\u00a0\u00a4", DEF_CURRENCY_CODE:"UAH"};
goog.i18n.NumberFormatSymbols_uk_UA = goog.i18n.NumberFormatSymbols_uk;
goog.i18n.NumberFormatSymbols_ur = {DECIMAL_SEP:".", GROUP_SEP:",", PERCENT:"%", ZERO_DIGIT:"0", PLUS_SIGN:"\u200e+", MINUS_SIGN:"\u200e-", EXP_SYMBOL:"E", PERMILL:"\u2030", INFINITY:"\u221e", NAN:"NaN", DECIMAL_PATTERN:"#,##0.###", SCIENTIFIC_PATTERN:"#E0", PERCENT_PATTERN:"#,##,##0%", CURRENCY_PATTERN:"\u00a4\u00a0#,##,##0.00", DEF_CURRENCY_CODE:"PKR"};
goog.i18n.NumberFormatSymbols_ur_PK = goog.i18n.NumberFormatSymbols_ur;
goog.i18n.NumberFormatSymbols_uz = {DECIMAL_SEP:",", GROUP_SEP:"\u00a0", PERCENT:"%", ZERO_DIGIT:"0", PLUS_SIGN:"+", MINUS_SIGN:"-", EXP_SYMBOL:"E", PERMILL:"\u2030", INFINITY:"\u221e", NAN:"haqiqiy\u00a0son\u00a0emas", DECIMAL_PATTERN:"#,##0.###", SCIENTIFIC_PATTERN:"#E0", PERCENT_PATTERN:"#,##0%", CURRENCY_PATTERN:"\u00a4\u00a0#,##0.00", DEF_CURRENCY_CODE:"UZS"};
goog.i18n.NumberFormatSymbols_uz_Latn = goog.i18n.NumberFormatSymbols_uz;
goog.i18n.NumberFormatSymbols_uz_Latn_UZ = goog.i18n.NumberFormatSymbols_uz;
goog.i18n.NumberFormatSymbols_vi = {DECIMAL_SEP:",", GROUP_SEP:".", PERCENT:"%", ZERO_DIGIT:"0", PLUS_SIGN:"+", MINUS_SIGN:"-", EXP_SYMBOL:"E", PERMILL:"\u2030", INFINITY:"\u221e", NAN:"NaN", DECIMAL_PATTERN:"#,##0.###", SCIENTIFIC_PATTERN:"#E0", PERCENT_PATTERN:"#,##0%", CURRENCY_PATTERN:"\u00a4\u00a0#,##0.00", DEF_CURRENCY_CODE:"VND"};
goog.i18n.NumberFormatSymbols_vi_VN = goog.i18n.NumberFormatSymbols_vi;
goog.i18n.NumberFormatSymbols_zh = {DECIMAL_SEP:".", GROUP_SEP:",", PERCENT:"%", ZERO_DIGIT:"0", PLUS_SIGN:"+", MINUS_SIGN:"-", EXP_SYMBOL:"E", PERMILL:"\u2030", INFINITY:"\u221e", NAN:"NaN", DECIMAL_PATTERN:"#,##0.###", SCIENTIFIC_PATTERN:"#E0", PERCENT_PATTERN:"#,##0%", CURRENCY_PATTERN:"\u00a4#,##0.00", DEF_CURRENCY_CODE:"CNY"};
goog.i18n.NumberFormatSymbols_zh_CN = goog.i18n.NumberFormatSymbols_zh;
goog.i18n.NumberFormatSymbols_zh_HK = {DECIMAL_SEP:".", GROUP_SEP:",", PERCENT:"%", ZERO_DIGIT:"0", PLUS_SIGN:"+", MINUS_SIGN:"-", EXP_SYMBOL:"E", PERMILL:"\u2030", INFINITY:"\u221e", NAN:"\u975e\u6578\u503c", DECIMAL_PATTERN:"#,##0.###", SCIENTIFIC_PATTERN:"#E0", PERCENT_PATTERN:"#,##0%", CURRENCY_PATTERN:"\u00a40K", DEF_CURRENCY_CODE:"HKD"};
goog.i18n.NumberFormatSymbols_zh_Hans = goog.i18n.NumberFormatSymbols_zh;
goog.i18n.NumberFormatSymbols_zh_Hans_CN = goog.i18n.NumberFormatSymbols_zh;
goog.i18n.NumberFormatSymbols_zh_TW = {DECIMAL_SEP:".", GROUP_SEP:",", PERCENT:"%", ZERO_DIGIT:"0", PLUS_SIGN:"+", MINUS_SIGN:"-", EXP_SYMBOL:"E", PERMILL:"\u2030", INFINITY:"\u221e", NAN:"\u975e\u6578\u503c", DECIMAL_PATTERN:"#,##0.###", SCIENTIFIC_PATTERN:"#E0", PERCENT_PATTERN:"#,##0%", CURRENCY_PATTERN:"\u00a4#,##0.00", DEF_CURRENCY_CODE:"TWD"};
goog.i18n.NumberFormatSymbols_zu = {DECIMAL_SEP:".", GROUP_SEP:",", PERCENT:"%", ZERO_DIGIT:"0", PLUS_SIGN:"+", MINUS_SIGN:"-", EXP_SYMBOL:"E", PERMILL:"\u2030", INFINITY:"\u221e", NAN:"NaN", DECIMAL_PATTERN:"#,##0.###", SCIENTIFIC_PATTERN:"#E0", PERCENT_PATTERN:"#,##0%", CURRENCY_PATTERN:"\u00a4#,##0.00", DEF_CURRENCY_CODE:"ZAR"};
goog.i18n.NumberFormatSymbols_zu_ZA = goog.i18n.NumberFormatSymbols_zu;
goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_en;
"af" == goog.LOCALE && (goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_af);
if ("af_ZA" == goog.LOCALE || "af-ZA" == goog.LOCALE) {
  goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_af;
}
"am" == goog.LOCALE && (goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_am);
if ("am_ET" == goog.LOCALE || "am-ET" == goog.LOCALE) {
  goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_am;
}
"ar" == goog.LOCALE && (goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_ar);
if ("ar_001" == goog.LOCALE || "ar-001" == goog.LOCALE) {
  goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_ar;
}
if ("ar_EG" == goog.LOCALE || "ar-EG" == goog.LOCALE) {
  goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_ar;
}
if ("ar_XB" == goog.LOCALE || "ar-XB" == goog.LOCALE) {
  goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_ar;
}
"az" == goog.LOCALE && (goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_az);
if ("az_Latn" == goog.LOCALE || "az-Latn" == goog.LOCALE) {
  goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_az;
}
if ("az_Latn_AZ" == goog.LOCALE || "az-Latn-AZ" == goog.LOCALE) {
  goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_az;
}
"be" == goog.LOCALE && (goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_be);
if ("be_BY" == goog.LOCALE || "be-BY" == goog.LOCALE) {
  goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_be;
}
"bg" == goog.LOCALE && (goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_bg);
if ("bg_BG" == goog.LOCALE || "bg-BG" == goog.LOCALE) {
  goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_bg;
}
"bn" == goog.LOCALE && (goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_bn);
if ("bn_BD" == goog.LOCALE || "bn-BD" == goog.LOCALE) {
  goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_bn;
}
"br" == goog.LOCALE && (goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_br);
if ("br_FR" == goog.LOCALE || "br-FR" == goog.LOCALE) {
  goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_br;
}
"bs" == goog.LOCALE && (goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_bs);
if ("bs_Latn" == goog.LOCALE || "bs-Latn" == goog.LOCALE) {
  goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_bs;
}
if ("bs_Latn_BA" == goog.LOCALE || "bs-Latn-BA" == goog.LOCALE) {
  goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_bs;
}
"ca" == goog.LOCALE && (goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_ca);
if ("ca_AD" == goog.LOCALE || "ca-AD" == goog.LOCALE) {
  goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_ca;
}
if ("ca_ES" == goog.LOCALE || "ca-ES" == goog.LOCALE) {
  goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_ca;
}
if ("ca_ES_VALENCIA" == goog.LOCALE || "ca-ES-VALENCIA" == goog.LOCALE) {
  goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_ca;
}
if ("ca_FR" == goog.LOCALE || "ca-FR" == goog.LOCALE) {
  goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_ca;
}
if ("ca_IT" == goog.LOCALE || "ca-IT" == goog.LOCALE) {
  goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_ca;
}
"chr" == goog.LOCALE && (goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_chr);
if ("chr_US" == goog.LOCALE || "chr-US" == goog.LOCALE) {
  goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_chr;
}
"cs" == goog.LOCALE && (goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_cs);
if ("cs_CZ" == goog.LOCALE || "cs-CZ" == goog.LOCALE) {
  goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_cs;
}
"cy" == goog.LOCALE && (goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_cy);
if ("cy_GB" == goog.LOCALE || "cy-GB" == goog.LOCALE) {
  goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_cy;
}
"da" == goog.LOCALE && (goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_da);
if ("da_DK" == goog.LOCALE || "da-DK" == goog.LOCALE) {
  goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_da;
}
if ("da_GL" == goog.LOCALE || "da-GL" == goog.LOCALE) {
  goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_da;
}
"de" == goog.LOCALE && (goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_de);
if ("de_AT" == goog.LOCALE || "de-AT" == goog.LOCALE) {
  goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_de_AT;
}
if ("de_BE" == goog.LOCALE || "de-BE" == goog.LOCALE) {
  goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_de;
}
if ("de_CH" == goog.LOCALE || "de-CH" == goog.LOCALE) {
  goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_de_CH;
}
if ("de_DE" == goog.LOCALE || "de-DE" == goog.LOCALE) {
  goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_de;
}
if ("de_LU" == goog.LOCALE || "de-LU" == goog.LOCALE) {
  goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_de;
}
"el" == goog.LOCALE && (goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_el);
if ("el_CY" == goog.LOCALE || "el-CY" == goog.LOCALE) {
  goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_el;
}
if ("el_GR" == goog.LOCALE || "el-GR" == goog.LOCALE) {
  goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_el;
}
"en" == goog.LOCALE && (goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_en);
if ("en_001" == goog.LOCALE || "en-001" == goog.LOCALE) {
  goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_en;
}
if ("en_AS" == goog.LOCALE || "en-AS" == goog.LOCALE) {
  goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_en;
}
if ("en_AU" == goog.LOCALE || "en-AU" == goog.LOCALE) {
  goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_en_AU;
}
if ("en_CA" == goog.LOCALE || "en-CA" == goog.LOCALE) {
  goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_en_CA;
}
if ("en_DG" == goog.LOCALE || "en-DG" == goog.LOCALE) {
  goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_en;
}
if ("en_FM" == goog.LOCALE || "en-FM" == goog.LOCALE) {
  goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_en;
}
if ("en_GB" == goog.LOCALE || "en-GB" == goog.LOCALE) {
  goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_en_GB;
}
if ("en_GU" == goog.LOCALE || "en-GU" == goog.LOCALE) {
  goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_en;
}
if ("en_IE" == goog.LOCALE || "en-IE" == goog.LOCALE) {
  goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_en_IE;
}
if ("en_IN" == goog.LOCALE || "en-IN" == goog.LOCALE) {
  goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_en_IN;
}
if ("en_IO" == goog.LOCALE || "en-IO" == goog.LOCALE) {
  goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_en;
}
if ("en_MH" == goog.LOCALE || "en-MH" == goog.LOCALE) {
  goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_en;
}
if ("en_MP" == goog.LOCALE || "en-MP" == goog.LOCALE) {
  goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_en;
}
if ("en_PR" == goog.LOCALE || "en-PR" == goog.LOCALE) {
  goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_en;
}
if ("en_PW" == goog.LOCALE || "en-PW" == goog.LOCALE) {
  goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_en;
}
if ("en_SG" == goog.LOCALE || "en-SG" == goog.LOCALE) {
  goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_en_SG;
}
if ("en_TC" == goog.LOCALE || "en-TC" == goog.LOCALE) {
  goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_en;
}
if ("en_UM" == goog.LOCALE || "en-UM" == goog.LOCALE) {
  goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_en;
}
if ("en_US" == goog.LOCALE || "en-US" == goog.LOCALE) {
  goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_en;
}
if ("en_VG" == goog.LOCALE || "en-VG" == goog.LOCALE) {
  goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_en;
}
if ("en_VI" == goog.LOCALE || "en-VI" == goog.LOCALE) {
  goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_en;
}
if ("en_XA" == goog.LOCALE || "en-XA" == goog.LOCALE) {
  goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_en;
}
if ("en_ZA" == goog.LOCALE || "en-ZA" == goog.LOCALE) {
  goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_en_ZA;
}
if ("en_ZW" == goog.LOCALE || "en-ZW" == goog.LOCALE) {
  goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_en;
}
"es" == goog.LOCALE && (goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_es);
if ("es_419" == goog.LOCALE || "es-419" == goog.LOCALE) {
  goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_es_419;
}
if ("es_EA" == goog.LOCALE || "es-EA" == goog.LOCALE) {
  goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_es;
}
if ("es_ES" == goog.LOCALE || "es-ES" == goog.LOCALE) {
  goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_es;
}
if ("es_IC" == goog.LOCALE || "es-IC" == goog.LOCALE) {
  goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_es;
}
if ("es_MX" == goog.LOCALE || "es-MX" == goog.LOCALE) {
  goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_es_MX;
}
if ("es_US" == goog.LOCALE || "es-US" == goog.LOCALE) {
  goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_es_US;
}
"et" == goog.LOCALE && (goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_et);
if ("et_EE" == goog.LOCALE || "et-EE" == goog.LOCALE) {
  goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_et;
}
"eu" == goog.LOCALE && (goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_eu);
if ("eu_ES" == goog.LOCALE || "eu-ES" == goog.LOCALE) {
  goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_eu;
}
"fa" == goog.LOCALE && (goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_fa);
if ("fa_IR" == goog.LOCALE || "fa-IR" == goog.LOCALE) {
  goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_fa;
}
"fi" == goog.LOCALE && (goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_fi);
if ("fi_FI" == goog.LOCALE || "fi-FI" == goog.LOCALE) {
  goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_fi;
}
"fil" == goog.LOCALE && (goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_fil);
if ("fil_PH" == goog.LOCALE || "fil-PH" == goog.LOCALE) {
  goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_fil;
}
"fr" == goog.LOCALE && (goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_fr);
if ("fr_BL" == goog.LOCALE || "fr-BL" == goog.LOCALE) {
  goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_fr;
}
if ("fr_CA" == goog.LOCALE || "fr-CA" == goog.LOCALE) {
  goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_fr_CA;
}
if ("fr_FR" == goog.LOCALE || "fr-FR" == goog.LOCALE) {
  goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_fr;
}
if ("fr_GF" == goog.LOCALE || "fr-GF" == goog.LOCALE) {
  goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_fr;
}
if ("fr_GP" == goog.LOCALE || "fr-GP" == goog.LOCALE) {
  goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_fr;
}
if ("fr_MC" == goog.LOCALE || "fr-MC" == goog.LOCALE) {
  goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_fr;
}
if ("fr_MF" == goog.LOCALE || "fr-MF" == goog.LOCALE) {
  goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_fr;
}
if ("fr_MQ" == goog.LOCALE || "fr-MQ" == goog.LOCALE) {
  goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_fr;
}
if ("fr_PM" == goog.LOCALE || "fr-PM" == goog.LOCALE) {
  goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_fr;
}
if ("fr_RE" == goog.LOCALE || "fr-RE" == goog.LOCALE) {
  goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_fr;
}
if ("fr_YT" == goog.LOCALE || "fr-YT" == goog.LOCALE) {
  goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_fr;
}
"ga" == goog.LOCALE && (goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_ga);
if ("ga_IE" == goog.LOCALE || "ga-IE" == goog.LOCALE) {
  goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_ga;
}
"gl" == goog.LOCALE && (goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_gl);
if ("gl_ES" == goog.LOCALE || "gl-ES" == goog.LOCALE) {
  goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_gl;
}
"gsw" == goog.LOCALE && (goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_gsw);
if ("gsw_CH" == goog.LOCALE || "gsw-CH" == goog.LOCALE) {
  goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_gsw;
}
if ("gsw_LI" == goog.LOCALE || "gsw-LI" == goog.LOCALE) {
  goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_gsw;
}
"gu" == goog.LOCALE && (goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_gu);
if ("gu_IN" == goog.LOCALE || "gu-IN" == goog.LOCALE) {
  goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_gu;
}
"haw" == goog.LOCALE && (goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_haw);
if ("haw_US" == goog.LOCALE || "haw-US" == goog.LOCALE) {
  goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_haw;
}
"he" == goog.LOCALE && (goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_he);
if ("he_IL" == goog.LOCALE || "he-IL" == goog.LOCALE) {
  goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_he;
}
"hi" == goog.LOCALE && (goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_hi);
if ("hi_IN" == goog.LOCALE || "hi-IN" == goog.LOCALE) {
  goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_hi;
}
"hr" == goog.LOCALE && (goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_hr);
if ("hr_HR" == goog.LOCALE || "hr-HR" == goog.LOCALE) {
  goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_hr;
}
"hu" == goog.LOCALE && (goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_hu);
if ("hu_HU" == goog.LOCALE || "hu-HU" == goog.LOCALE) {
  goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_hu;
}
"hy" == goog.LOCALE && (goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_hy);
if ("hy_AM" == goog.LOCALE || "hy-AM" == goog.LOCALE) {
  goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_hy;
}
"id" == goog.LOCALE && (goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_id);
if ("id_ID" == goog.LOCALE || "id-ID" == goog.LOCALE) {
  goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_id;
}
"in" == goog.LOCALE && (goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_in);
"is" == goog.LOCALE && (goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_is);
if ("is_IS" == goog.LOCALE || "is-IS" == goog.LOCALE) {
  goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_is;
}
"it" == goog.LOCALE && (goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_it);
if ("it_IT" == goog.LOCALE || "it-IT" == goog.LOCALE) {
  goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_it;
}
if ("it_SM" == goog.LOCALE || "it-SM" == goog.LOCALE) {
  goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_it;
}
"iw" == goog.LOCALE && (goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_iw);
"ja" == goog.LOCALE && (goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_ja);
if ("ja_JP" == goog.LOCALE || "ja-JP" == goog.LOCALE) {
  goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_ja;
}
"ka" == goog.LOCALE && (goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_ka);
if ("ka_GE" == goog.LOCALE || "ka-GE" == goog.LOCALE) {
  goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_ka;
}
"kk" == goog.LOCALE && (goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_kk);
if ("kk_KZ" == goog.LOCALE || "kk-KZ" == goog.LOCALE) {
  goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_kk;
}
"km" == goog.LOCALE && (goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_km);
if ("km_KH" == goog.LOCALE || "km-KH" == goog.LOCALE) {
  goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_km;
}
"kn" == goog.LOCALE && (goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_kn);
if ("kn_IN" == goog.LOCALE || "kn-IN" == goog.LOCALE) {
  goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_kn;
}
"ko" == goog.LOCALE && (goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_ko);
if ("ko_KR" == goog.LOCALE || "ko-KR" == goog.LOCALE) {
  goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_ko;
}
"ky" == goog.LOCALE && (goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_ky);
if ("ky_KG" == goog.LOCALE || "ky-KG" == goog.LOCALE) {
  goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_ky;
}
"ln" == goog.LOCALE && (goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_ln);
if ("ln_CD" == goog.LOCALE || "ln-CD" == goog.LOCALE) {
  goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_ln;
}
"lo" == goog.LOCALE && (goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_lo);
if ("lo_LA" == goog.LOCALE || "lo-LA" == goog.LOCALE) {
  goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_lo;
}
"lt" == goog.LOCALE && (goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_lt);
if ("lt_LT" == goog.LOCALE || "lt-LT" == goog.LOCALE) {
  goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_lt;
}
"lv" == goog.LOCALE && (goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_lv);
if ("lv_LV" == goog.LOCALE || "lv-LV" == goog.LOCALE) {
  goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_lv;
}
"mk" == goog.LOCALE && (goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_mk);
if ("mk_MK" == goog.LOCALE || "mk-MK" == goog.LOCALE) {
  goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_mk;
}
"ml" == goog.LOCALE && (goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_ml);
if ("ml_IN" == goog.LOCALE || "ml-IN" == goog.LOCALE) {
  goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_ml;
}
"mn" == goog.LOCALE && (goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_mn);
if ("mn_MN" == goog.LOCALE || "mn-MN" == goog.LOCALE) {
  goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_mn;
}
"mr" == goog.LOCALE && (goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_mr);
if ("mr_IN" == goog.LOCALE || "mr-IN" == goog.LOCALE) {
  goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_mr;
}
"ms" == goog.LOCALE && (goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_ms);
if ("ms_MY" == goog.LOCALE || "ms-MY" == goog.LOCALE) {
  goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_ms;
}
"mt" == goog.LOCALE && (goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_mt);
if ("mt_MT" == goog.LOCALE || "mt-MT" == goog.LOCALE) {
  goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_mt;
}
"my" == goog.LOCALE && (goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_my);
if ("my_MM" == goog.LOCALE || "my-MM" == goog.LOCALE) {
  goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_my;
}
"nb" == goog.LOCALE && (goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_nb);
if ("nb_NO" == goog.LOCALE || "nb-NO" == goog.LOCALE) {
  goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_nb;
}
if ("nb_SJ" == goog.LOCALE || "nb-SJ" == goog.LOCALE) {
  goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_nb;
}
"ne" == goog.LOCALE && (goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_ne);
if ("ne_NP" == goog.LOCALE || "ne-NP" == goog.LOCALE) {
  goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_ne;
}
"nl" == goog.LOCALE && (goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_nl);
if ("nl_NL" == goog.LOCALE || "nl-NL" == goog.LOCALE) {
  goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_nl;
}
"no" == goog.LOCALE && (goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_no);
if ("no_NO" == goog.LOCALE || "no-NO" == goog.LOCALE) {
  goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_no;
}
"or" == goog.LOCALE && (goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_or);
if ("or_IN" == goog.LOCALE || "or-IN" == goog.LOCALE) {
  goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_or;
}
"pa" == goog.LOCALE && (goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_pa);
if ("pa_Guru" == goog.LOCALE || "pa-Guru" == goog.LOCALE) {
  goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_pa;
}
if ("pa_Guru_IN" == goog.LOCALE || "pa-Guru-IN" == goog.LOCALE) {
  goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_pa;
}
"pl" == goog.LOCALE && (goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_pl);
if ("pl_PL" == goog.LOCALE || "pl-PL" == goog.LOCALE) {
  goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_pl;
}
"pt" == goog.LOCALE && (goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_pt);
if ("pt_BR" == goog.LOCALE || "pt-BR" == goog.LOCALE) {
  goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_pt;
}
if ("pt_PT" == goog.LOCALE || "pt-PT" == goog.LOCALE) {
  goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_pt_PT;
}
"ro" == goog.LOCALE && (goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_ro);
if ("ro_RO" == goog.LOCALE || "ro-RO" == goog.LOCALE) {
  goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_ro;
}
"ru" == goog.LOCALE && (goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_ru);
if ("ru_RU" == goog.LOCALE || "ru-RU" == goog.LOCALE) {
  goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_ru;
}
"si" == goog.LOCALE && (goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_si);
if ("si_LK" == goog.LOCALE || "si-LK" == goog.LOCALE) {
  goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_si;
}
"sk" == goog.LOCALE && (goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_sk);
if ("sk_SK" == goog.LOCALE || "sk-SK" == goog.LOCALE) {
  goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_sk;
}
"sl" == goog.LOCALE && (goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_sl);
if ("sl_SI" == goog.LOCALE || "sl-SI" == goog.LOCALE) {
  goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_sl;
}
"sq" == goog.LOCALE && (goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_sq);
if ("sq_AL" == goog.LOCALE || "sq-AL" == goog.LOCALE) {
  goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_sq;
}
"sr" == goog.LOCALE && (goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_sr);
if ("sr_Cyrl" == goog.LOCALE || "sr-Cyrl" == goog.LOCALE) {
  goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_sr;
}
if ("sr_Cyrl_RS" == goog.LOCALE || "sr-Cyrl-RS" == goog.LOCALE) {
  goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_sr;
}
if ("sr_Latn" == goog.LOCALE || "sr-Latn" == goog.LOCALE) {
  goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_sr_Latn;
}
if ("sr_Latn_RS" == goog.LOCALE || "sr-Latn-RS" == goog.LOCALE) {
  goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_sr_Latn;
}
"sv" == goog.LOCALE && (goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_sv);
if ("sv_SE" == goog.LOCALE || "sv-SE" == goog.LOCALE) {
  goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_sv;
}
"sw" == goog.LOCALE && (goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_sw);
if ("sw_TZ" == goog.LOCALE || "sw-TZ" == goog.LOCALE) {
  goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_sw;
}
"ta" == goog.LOCALE && (goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_ta);
if ("ta_IN" == goog.LOCALE || "ta-IN" == goog.LOCALE) {
  goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_ta;
}
"te" == goog.LOCALE && (goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_te);
if ("te_IN" == goog.LOCALE || "te-IN" == goog.LOCALE) {
  goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_te;
}
"th" == goog.LOCALE && (goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_th);
if ("th_TH" == goog.LOCALE || "th-TH" == goog.LOCALE) {
  goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_th;
}
"tl" == goog.LOCALE && (goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_tl);
"tr" == goog.LOCALE && (goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_tr);
if ("tr_TR" == goog.LOCALE || "tr-TR" == goog.LOCALE) {
  goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_tr;
}
"uk" == goog.LOCALE && (goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_uk);
if ("uk_UA" == goog.LOCALE || "uk-UA" == goog.LOCALE) {
  goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_uk;
}
"ur" == goog.LOCALE && (goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_ur);
if ("ur_PK" == goog.LOCALE || "ur-PK" == goog.LOCALE) {
  goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_ur;
}
"uz" == goog.LOCALE && (goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_uz);
if ("uz_Latn" == goog.LOCALE || "uz-Latn" == goog.LOCALE) {
  goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_uz;
}
if ("uz_Latn_UZ" == goog.LOCALE || "uz-Latn-UZ" == goog.LOCALE) {
  goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_uz;
}
"vi" == goog.LOCALE && (goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_vi);
if ("vi_VN" == goog.LOCALE || "vi-VN" == goog.LOCALE) {
  goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_vi;
}
"zh" == goog.LOCALE && (goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_zh);
if ("zh_CN" == goog.LOCALE || "zh-CN" == goog.LOCALE) {
  goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_zh;
}
if ("zh_HK" == goog.LOCALE || "zh-HK" == goog.LOCALE) {
  goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_zh_HK;
}
if ("zh_Hans" == goog.LOCALE || "zh-Hans" == goog.LOCALE) {
  goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_zh;
}
if ("zh_Hans_CN" == goog.LOCALE || "zh-Hans-CN" == goog.LOCALE) {
  goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_zh;
}
if ("zh_TW" == goog.LOCALE || "zh-TW" == goog.LOCALE) {
  goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_zh_TW;
}
"zu" == goog.LOCALE && (goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_zu);
if ("zu_ZA" == goog.LOCALE || "zu-ZA" == goog.LOCALE) {
  goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_zu;
}
;goog.i18n.NumberFormat = function(pattern, opt_currency, opt_currencyStyle) {
  this.intlCurrencyCode_ = opt_currency || goog.i18n.NumberFormatSymbols.DEF_CURRENCY_CODE;
  this.currencyStyle_ = opt_currencyStyle || goog.i18n.NumberFormat.CurrencyStyle.LOCAL;
  this.maximumIntegerDigits_ = 40;
  this.minimumIntegerDigits_ = 1;
  this.significantDigits_ = 0;
  this.maximumFractionDigits_ = 3;
  this.minExponentDigits_ = this.minimumFractionDigits_ = 0;
  this.showTrailingZeros_ = this.useSignForPositiveExponent_ = !1;
  this.positiveSuffix_ = this.positivePrefix_ = "";
  this.negativePrefix_ = "-";
  this.negativeSuffix_ = "";
  this.multiplier_ = 1;
  this.negativePercentSignExpected_ = !1;
  this.groupingArray_ = [];
  this.useExponentialNotation_ = this.decimalSeparatorAlwaysShown_ = !1;
  this.compactStyle_ = goog.i18n.NumberFormat.CompactStyle.NONE;
  this.baseFormattingNumber_ = null;
  "number" == typeof pattern ? this.applyStandardPattern_(pattern) : this.applyPattern_(pattern);
};
goog.i18n.NumberFormat.Format = {DECIMAL:1, SCIENTIFIC:2, PERCENT:3, CURRENCY:4, COMPACT_SHORT:5, COMPACT_LONG:6};
goog.i18n.NumberFormat.CurrencyStyle = {LOCAL:0, PORTABLE:1, GLOBAL:2};
goog.i18n.NumberFormat.CompactStyle = {NONE:0, SHORT:1, LONG:2};
goog.i18n.NumberFormat.enforceAsciiDigits_ = !1;
goog.i18n.NumberFormat.setEnforceAsciiDigits = function(doEnforce) {
  goog.i18n.NumberFormat.enforceAsciiDigits_ = doEnforce;
};
goog.i18n.NumberFormat.isEnforceAsciiDigits = function() {
  return goog.i18n.NumberFormat.enforceAsciiDigits_;
};
goog.i18n.NumberFormat.prototype.setMinimumFractionDigits = function(min) {
  if (0 < this.significantDigits_ && 0 < min) {
    throw Error("Can't combine significant digits and minimum fraction digits");
  }
  this.minimumFractionDigits_ = min;
  return this;
};
goog.i18n.NumberFormat.prototype.setMaximumFractionDigits = function(max) {
  this.maximumFractionDigits_ = max;
  return this;
};
goog.i18n.NumberFormat.prototype.setSignificantDigits = function(number) {
  if (0 < this.minimumFractionDigits_ && 0 <= number) {
    throw Error("Can't combine significant digits and minimum fraction digits");
  }
  this.significantDigits_ = number;
  return this;
};
goog.i18n.NumberFormat.prototype.applyPattern_ = function(pattern) {
  pattern.replace(/ /g, "\u00a0");
  var pos = [0];
  this.positivePrefix_ = this.parseAffix_(pattern, pos);
  var trunkStart = pos[0];
  this.parseTrunk_(pattern, pos);
  var trunkLen = pos[0] - trunkStart;
  this.positiveSuffix_ = this.parseAffix_(pattern, pos);
  pos[0] < pattern.length && pattern.charAt(pos[0]) == goog.i18n.NumberFormat.PATTERN_SEPARATOR_ ? (pos[0]++, 1 != this.multiplier_ && (this.negativePercentSignExpected_ = !0), this.negativePrefix_ = this.parseAffix_(pattern, pos), pos[0] += trunkLen, this.negativeSuffix_ = this.parseAffix_(pattern, pos)) : (this.negativePrefix_ = this.positivePrefix_ + this.negativePrefix_, this.negativeSuffix_ += this.positiveSuffix_);
};
goog.i18n.NumberFormat.prototype.applyStandardPattern_ = function(patternType) {
  switch(patternType) {
    case goog.i18n.NumberFormat.Format.DECIMAL:
      this.applyPattern_(goog.i18n.NumberFormatSymbols.DECIMAL_PATTERN);
      break;
    case goog.i18n.NumberFormat.Format.SCIENTIFIC:
      this.applyPattern_(goog.i18n.NumberFormatSymbols.SCIENTIFIC_PATTERN);
      break;
    case goog.i18n.NumberFormat.Format.PERCENT:
      this.applyPattern_(goog.i18n.NumberFormatSymbols.PERCENT_PATTERN);
      break;
    case goog.i18n.NumberFormat.Format.CURRENCY:
      this.applyPattern_(goog.i18n.currency.adjustPrecision(goog.i18n.NumberFormatSymbols.CURRENCY_PATTERN, this.intlCurrencyCode_));
      break;
    case goog.i18n.NumberFormat.Format.COMPACT_SHORT:
      this.applyCompactStyle_(goog.i18n.NumberFormat.CompactStyle.SHORT);
      break;
    case goog.i18n.NumberFormat.Format.COMPACT_LONG:
      this.applyCompactStyle_(goog.i18n.NumberFormat.CompactStyle.LONG);
      break;
    default:
      throw Error("Unsupported pattern type.");;
  }
};
goog.i18n.NumberFormat.prototype.applyCompactStyle_ = function(style) {
  this.compactStyle_ = style;
  this.applyPattern_(goog.i18n.NumberFormatSymbols.DECIMAL_PATTERN);
  this.setMinimumFractionDigits(0);
  this.setMaximumFractionDigits(2);
  this.setSignificantDigits(2);
};
goog.i18n.NumberFormat.prototype.parse = function(text, opt_pos) {
  var pos = opt_pos || [0];
  if (this.compactStyle_ != goog.i18n.NumberFormat.CompactStyle.NONE) {
    throw Error("Parsing of compact numbers is unimplemented");
  }
  var ret = NaN;
  text = text.replace(/ /g, "\u00a0");
  var gotPositive = text.indexOf(this.positivePrefix_, pos[0]) == pos[0], gotNegative = text.indexOf(this.negativePrefix_, pos[0]) == pos[0];
  gotPositive && gotNegative && (this.positivePrefix_.length > this.negativePrefix_.length ? gotNegative = !1 : this.positivePrefix_.length < this.negativePrefix_.length && (gotPositive = !1));
  gotPositive ? pos[0] += this.positivePrefix_.length : gotNegative && (pos[0] += this.negativePrefix_.length);
  text.indexOf(goog.i18n.NumberFormatSymbols.INFINITY, pos[0]) == pos[0] ? (pos[0] += goog.i18n.NumberFormatSymbols.INFINITY.length, ret = Infinity) : ret = this.parseNumber_(text, pos);
  if (gotPositive) {
    if (text.indexOf(this.positiveSuffix_, pos[0]) != pos[0]) {
      return NaN;
    }
    pos[0] += this.positiveSuffix_.length;
  } else {
    if (gotNegative) {
      if (text.indexOf(this.negativeSuffix_, pos[0]) != pos[0]) {
        return NaN;
      }
      pos[0] += this.negativeSuffix_.length;
    }
  }
  return gotNegative ? -ret : ret;
};
goog.i18n.NumberFormat.prototype.parseNumber_ = function(text, pos) {
  var sawDecimal = !1, sawExponent = !1, sawDigit = !1, scale = 1, decimal = goog.i18n.NumberFormatSymbols.DECIMAL_SEP, grouping = goog.i18n.NumberFormatSymbols.GROUP_SEP, exponentChar = goog.i18n.NumberFormatSymbols.EXP_SYMBOL;
  if (this.compactStyle_ != goog.i18n.NumberFormat.CompactStyle.NONE) {
    throw Error("Parsing of compact style numbers is not implemented");
  }
  for (var normalizedText = "";pos[0] < text.length;pos[0]++) {
    var ch = text.charAt(pos[0]), digit = this.getDigit_(ch);
    if (0 <= digit && 9 >= digit) {
      normalizedText += digit, sawDigit = !0;
    } else {
      if (ch == decimal.charAt(0)) {
        if (sawDecimal || sawExponent) {
          break;
        }
        normalizedText += ".";
        sawDecimal = !0;
      } else {
        if (ch == grouping.charAt(0) && ("\u00a0" != grouping.charAt(0) || pos[0] + 1 < text.length && 0 <= this.getDigit_(text.charAt(pos[0] + 1)))) {
          if (sawDecimal || sawExponent) {
            break;
          }
        } else {
          if (ch == exponentChar.charAt(0)) {
            if (sawExponent) {
              break;
            }
            normalizedText += "E";
            sawExponent = !0;
          } else {
            if ("+" == ch || "-" == ch) {
              normalizedText += ch;
            } else {
              if (ch == goog.i18n.NumberFormatSymbols.PERCENT.charAt(0)) {
                if (1 != scale) {
                  break;
                }
                scale = 100;
                if (sawDigit) {
                  pos[0]++;
                  break;
                }
              } else {
                if (ch == goog.i18n.NumberFormatSymbols.PERMILL.charAt(0)) {
                  if (1 != scale) {
                    break;
                  }
                  scale = 1E3;
                  if (sawDigit) {
                    pos[0]++;
                    break;
                  }
                } else {
                  break;
                }
              }
            }
          }
        }
      }
    }
  }
  return parseFloat(normalizedText) / scale;
};
goog.i18n.NumberFormat.prototype.format = function(number) {
  if (isNaN(number)) {
    return goog.i18n.NumberFormatSymbols.NAN;
  }
  var parts = [], baseFormattingNumber = goog.isNull(this.baseFormattingNumber_) ? number : this.baseFormattingNumber_, unit = this.getUnitAfterRounding_(baseFormattingNumber, number);
  number /= Math.pow(10, unit.divisorBase);
  parts.push(unit.prefix);
  var isNegative = 0 > number || 0 == number && 0 > 1 / number;
  parts.push(isNegative ? this.negativePrefix_ : this.positivePrefix_);
  isFinite(number) ? (number *= isNegative ? -1 : 1, number *= this.multiplier_, this.useExponentialNotation_ ? this.subformatExponential_(number, parts) : this.subformatFixed_(number, this.minimumIntegerDigits_, parts)) : parts.push(goog.i18n.NumberFormatSymbols.INFINITY);
  parts.push(isNegative ? this.negativeSuffix_ : this.positiveSuffix_);
  parts.push(unit.suffix);
  return parts.join("");
};
goog.i18n.NumberFormat.prototype.roundNumber_ = function(number) {
  var power = Math.pow(10, this.maximumFractionDigits_), shiftedNumber = 0 >= this.significantDigits_ ? Math.round(number * power) : Math.round(this.roundToSignificantDigits_(number * power, this.significantDigits_, this.maximumFractionDigits_)), intValue, fracValue;
  isFinite(shiftedNumber) ? (intValue = Math.floor(shiftedNumber / power), fracValue = Math.floor(shiftedNumber - intValue * power)) : (intValue = number, fracValue = 0);
  return {intValue:intValue, fracValue:fracValue};
};
goog.i18n.NumberFormat.formatNumberGroupingRepeatingDigitsParts_ = function(parts, zeroCode, intPart, groupingArray, repeatedDigitLen) {
  for (var nonRepeatedGroupCompleteCount = 0, currentGroupSizeIndex = 0, currentGroupSize = 0, grouping = goog.i18n.NumberFormatSymbols.GROUP_SEP, digitLen = intPart.length, i = 0;i < digitLen;i++) {
    if (parts.push(String.fromCharCode(zeroCode + 1 * Number(intPart.charAt(i)))), 1 < digitLen - i) {
      if (currentGroupSize = groupingArray[currentGroupSizeIndex], i < repeatedDigitLen) {
        var repeatedDigitIndex = repeatedDigitLen - i;
        (1 === currentGroupSize || 0 < currentGroupSize && 1 === repeatedDigitIndex % currentGroupSize) && parts.push(grouping);
      } else {
        currentGroupSizeIndex < groupingArray.length && (i === repeatedDigitLen ? currentGroupSizeIndex += 1 : currentGroupSize === i - repeatedDigitLen - nonRepeatedGroupCompleteCount + 1 && (parts.push(grouping), nonRepeatedGroupCompleteCount += currentGroupSize, currentGroupSizeIndex += 1));
      }
    }
  }
  return parts;
};
goog.i18n.NumberFormat.formatNumberGroupingNonRepeatingDigitsParts_ = function(parts, zeroCode, intPart, groupingArray) {
  var grouping = goog.i18n.NumberFormatSymbols.GROUP_SEP, currentGroupSizeIndex, currentGroupSize = 0, digitLenLeft = intPart.length, rightToLeftParts = [];
  for (currentGroupSizeIndex = groupingArray.length - 1;0 <= currentGroupSizeIndex && 0 < digitLenLeft;currentGroupSizeIndex--) {
    for (var currentGroupSize = groupingArray[currentGroupSizeIndex], rightDigitIndex = 0;rightDigitIndex < currentGroupSize && 0 <= digitLenLeft - rightDigitIndex - 1;rightDigitIndex++) {
      rightToLeftParts.push(String.fromCharCode(zeroCode + 1 * Number(intPart.charAt(digitLenLeft - rightDigitIndex - 1))));
    }
    digitLenLeft -= currentGroupSize;
    0 < digitLenLeft && rightToLeftParts.push(grouping);
  }
  parts.push.apply(parts, rightToLeftParts.reverse());
  return parts;
};
goog.i18n.NumberFormat.prototype.subformatFixed_ = function(number, minIntDigits, parts) {
  if (this.minimumFractionDigits_ > this.maximumFractionDigits_) {
    throw Error("Min value must be less than max value");
  }
  parts || (parts = []);
  var rounded = this.roundNumber_(number), power = Math.pow(10, this.maximumFractionDigits_), intValue = rounded.intValue, fracValue = rounded.fracValue, numIntDigits = 0 == intValue ? 0 : this.intLog10_(intValue) + 1, fractionPresent = 0 < this.minimumFractionDigits_ || 0 < fracValue || this.showTrailingZeros_ && numIntDigits < this.significantDigits_, minimumFractionDigits = this.minimumFractionDigits_;
  fractionPresent && (minimumFractionDigits = this.showTrailingZeros_ && 0 < this.significantDigits_ ? this.significantDigits_ - numIntDigits : this.minimumFractionDigits_);
  for (var intPart = "", translatableInt = intValue;1E20 < translatableInt;) {
    intPart = "0" + intPart, translatableInt = Math.round(translatableInt / 10);
  }
  var intPart = translatableInt + intPart, decimal = goog.i18n.NumberFormatSymbols.DECIMAL_SEP, zeroCode = goog.i18n.NumberFormat.enforceAsciiDigits_ ? 48 : goog.i18n.NumberFormatSymbols.ZERO_DIGIT.charCodeAt(0), digitLen = intPart.length, nonRepeatedGroupCount = 0;
  if (0 < intValue || 0 < minIntDigits) {
    for (var i = digitLen;i < minIntDigits;i++) {
      parts.push(String.fromCharCode(zeroCode));
    }
    if (2 <= this.groupingArray_.length) {
      for (var j = 1;j < this.groupingArray_.length;j++) {
        nonRepeatedGroupCount += this.groupingArray_[j];
      }
    }
    var repeatedDigitLen = digitLen - nonRepeatedGroupCount;
    parts = 0 < repeatedDigitLen ? goog.i18n.NumberFormat.formatNumberGroupingRepeatingDigitsParts_(parts, zeroCode, intPart, this.groupingArray_, repeatedDigitLen) : goog.i18n.NumberFormat.formatNumberGroupingNonRepeatingDigitsParts_(parts, zeroCode, intPart, this.groupingArray_);
  } else {
    fractionPresent || parts.push(String.fromCharCode(zeroCode));
  }
  (this.decimalSeparatorAlwaysShown_ || fractionPresent) && parts.push(decimal);
  for (var fracPart = "" + (fracValue + power), fracLen = fracPart.length;"0" == fracPart.charAt(fracLen - 1) && fracLen > minimumFractionDigits + 1;) {
    fracLen--;
  }
  for (i = 1;i < fracLen;i++) {
    parts.push(String.fromCharCode(zeroCode + 1 * Number(fracPart.charAt(i))));
  }
};
goog.i18n.NumberFormat.prototype.addExponentPart_ = function(exponent, parts) {
  parts.push(goog.i18n.NumberFormatSymbols.EXP_SYMBOL);
  0 > exponent ? (exponent = -exponent, parts.push(goog.i18n.NumberFormatSymbols.MINUS_SIGN)) : this.useSignForPositiveExponent_ && parts.push(goog.i18n.NumberFormatSymbols.PLUS_SIGN);
  for (var exponentDigits = "" + exponent, zeroChar = goog.i18n.NumberFormat.enforceAsciiDigits_ ? "0" : goog.i18n.NumberFormatSymbols.ZERO_DIGIT, i = exponentDigits.length;i < this.minExponentDigits_;i++) {
    parts.push(zeroChar);
  }
  parts.push(exponentDigits);
};
goog.i18n.NumberFormat.prototype.subformatExponential_ = function(number, parts) {
  if (0 == number) {
    this.subformatFixed_(number, this.minimumIntegerDigits_, parts), this.addExponentPart_(0, parts);
  } else {
    var exponent = goog.math.safeFloor(Math.log(number) / Math.log(10));
    number /= Math.pow(10, exponent);
    var minIntDigits = this.minimumIntegerDigits_;
    if (1 < this.maximumIntegerDigits_ && this.maximumIntegerDigits_ > this.minimumIntegerDigits_) {
      for (;0 != exponent % this.maximumIntegerDigits_;) {
        number *= 10, exponent--;
      }
      minIntDigits = 1;
    } else {
      1 > this.minimumIntegerDigits_ ? (exponent++, number /= 10) : (exponent -= this.minimumIntegerDigits_ - 1, number *= Math.pow(10, this.minimumIntegerDigits_ - 1));
    }
    this.subformatFixed_(number, minIntDigits, parts);
    this.addExponentPart_(exponent, parts);
  }
};
goog.i18n.NumberFormat.prototype.getDigit_ = function(ch) {
  var code = ch.charCodeAt(0);
  if (48 <= code && 58 > code) {
    return code - 48;
  }
  var zeroCode = goog.i18n.NumberFormatSymbols.ZERO_DIGIT.charCodeAt(0);
  return zeroCode <= code && code < zeroCode + 10 ? code - zeroCode : -1;
};
goog.i18n.NumberFormat.PATTERN_ZERO_DIGIT_ = "0";
goog.i18n.NumberFormat.PATTERN_GROUPING_SEPARATOR_ = ",";
goog.i18n.NumberFormat.PATTERN_DECIMAL_SEPARATOR_ = ".";
goog.i18n.NumberFormat.PATTERN_PER_MILLE_ = "\u2030";
goog.i18n.NumberFormat.PATTERN_PERCENT_ = "%";
goog.i18n.NumberFormat.PATTERN_DIGIT_ = "#";
goog.i18n.NumberFormat.PATTERN_SEPARATOR_ = ";";
goog.i18n.NumberFormat.PATTERN_EXPONENT_ = "E";
goog.i18n.NumberFormat.PATTERN_PLUS_ = "+";
goog.i18n.NumberFormat.PATTERN_CURRENCY_SIGN_ = "\u00a4";
goog.i18n.NumberFormat.QUOTE_ = "'";
goog.i18n.NumberFormat.prototype.parseAffix_ = function(pattern, pos) {
  for (var affix = "", inQuote = !1, len = pattern.length;pos[0] < len;pos[0]++) {
    var ch = pattern.charAt(pos[0]);
    if (ch == goog.i18n.NumberFormat.QUOTE_) {
      pos[0] + 1 < len && pattern.charAt(pos[0] + 1) == goog.i18n.NumberFormat.QUOTE_ ? (pos[0]++, affix += "'") : inQuote = !inQuote;
    } else {
      if (inQuote) {
        affix += ch;
      } else {
        switch(ch) {
          case goog.i18n.NumberFormat.PATTERN_DIGIT_:
          ;
          case goog.i18n.NumberFormat.PATTERN_ZERO_DIGIT_:
          ;
          case goog.i18n.NumberFormat.PATTERN_GROUPING_SEPARATOR_:
          ;
          case goog.i18n.NumberFormat.PATTERN_DECIMAL_SEPARATOR_:
          ;
          case goog.i18n.NumberFormat.PATTERN_SEPARATOR_:
            return affix;
          case goog.i18n.NumberFormat.PATTERN_CURRENCY_SIGN_:
            if (pos[0] + 1 < len && pattern.charAt(pos[0] + 1) == goog.i18n.NumberFormat.PATTERN_CURRENCY_SIGN_) {
              pos[0]++, affix += this.intlCurrencyCode_;
            } else {
              switch(this.currencyStyle_) {
                case goog.i18n.NumberFormat.CurrencyStyle.LOCAL:
                  affix += goog.i18n.currency.getLocalCurrencySign(this.intlCurrencyCode_);
                  break;
                case goog.i18n.NumberFormat.CurrencyStyle.GLOBAL:
                  affix += goog.i18n.currency.getGlobalCurrencySign(this.intlCurrencyCode_);
                  break;
                case goog.i18n.NumberFormat.CurrencyStyle.PORTABLE:
                  affix += goog.i18n.currency.getPortableCurrencySign(this.intlCurrencyCode_);
              }
            }
            break;
          case goog.i18n.NumberFormat.PATTERN_PERCENT_:
            if (!this.negativePercentSignExpected_ && 1 != this.multiplier_) {
              throw Error("Too many percent/permill");
            }
            if (this.negativePercentSignExpected_ && 100 != this.multiplier_) {
              throw Error("Inconsistent use of percent/permill characters");
            }
            this.multiplier_ = 100;
            this.negativePercentSignExpected_ = !1;
            affix += goog.i18n.NumberFormatSymbols.PERCENT;
            break;
          case goog.i18n.NumberFormat.PATTERN_PER_MILLE_:
            if (!this.negativePercentSignExpected_ && 1 != this.multiplier_) {
              throw Error("Too many percent/permill");
            }
            if (this.negativePercentSignExpected_ && 1E3 != this.multiplier_) {
              throw Error("Inconsistent use of percent/permill characters");
            }
            this.multiplier_ = 1E3;
            this.negativePercentSignExpected_ = !1;
            affix += goog.i18n.NumberFormatSymbols.PERMILL;
            break;
          default:
            affix += ch;
        }
      }
    }
  }
  return affix;
};
goog.i18n.NumberFormat.prototype.parseTrunk_ = function(pattern, pos) {
  for (var decimalPos = -1, digitLeftCount = 0, zeroDigitCount = 0, digitRightCount = 0, groupingCount = -1, len = pattern.length, loop = !0;pos[0] < len && loop;pos[0]++) {
    var ch = pattern.charAt(pos[0]);
    switch(ch) {
      case goog.i18n.NumberFormat.PATTERN_DIGIT_:
        0 < zeroDigitCount ? digitRightCount++ : digitLeftCount++;
        0 <= groupingCount && 0 > decimalPos && groupingCount++;
        break;
      case goog.i18n.NumberFormat.PATTERN_ZERO_DIGIT_:
        if (0 < digitRightCount) {
          throw Error('Unexpected "0" in pattern "' + pattern + '"');
        }
        zeroDigitCount++;
        0 <= groupingCount && 0 > decimalPos && groupingCount++;
        break;
      case goog.i18n.NumberFormat.PATTERN_GROUPING_SEPARATOR_:
        0 < groupingCount && this.groupingArray_.push(groupingCount);
        groupingCount = 0;
        break;
      case goog.i18n.NumberFormat.PATTERN_DECIMAL_SEPARATOR_:
        if (0 <= decimalPos) {
          throw Error('Multiple decimal separators in pattern "' + pattern + '"');
        }
        decimalPos = digitLeftCount + zeroDigitCount + digitRightCount;
        break;
      case goog.i18n.NumberFormat.PATTERN_EXPONENT_:
        if (this.useExponentialNotation_) {
          throw Error('Multiple exponential symbols in pattern "' + pattern + '"');
        }
        this.useExponentialNotation_ = !0;
        this.minExponentDigits_ = 0;
        pos[0] + 1 < len && pattern.charAt(pos[0] + 1) == goog.i18n.NumberFormat.PATTERN_PLUS_ && (pos[0]++, this.useSignForPositiveExponent_ = !0);
        for (;pos[0] + 1 < len && pattern.charAt(pos[0] + 1) == goog.i18n.NumberFormat.PATTERN_ZERO_DIGIT_;) {
          pos[0]++, this.minExponentDigits_++;
        }
        if (1 > digitLeftCount + zeroDigitCount || 1 > this.minExponentDigits_) {
          throw Error('Malformed exponential pattern "' + pattern + '"');
        }
        loop = !1;
        break;
      default:
        pos[0]--, loop = !1;
    }
  }
  if (0 == zeroDigitCount && 0 < digitLeftCount && 0 <= decimalPos) {
    var n = decimalPos;
    0 == n && n++;
    digitRightCount = digitLeftCount - n;
    digitLeftCount = n - 1;
    zeroDigitCount = 1;
  }
  if (0 > decimalPos && 0 < digitRightCount || 0 <= decimalPos && (decimalPos < digitLeftCount || decimalPos > digitLeftCount + zeroDigitCount) || 0 == groupingCount) {
    throw Error('Malformed pattern "' + pattern + '"');
  }
  var totalDigits = digitLeftCount + zeroDigitCount + digitRightCount;
  this.maximumFractionDigits_ = 0 <= decimalPos ? totalDigits - decimalPos : 0;
  0 <= decimalPos && (this.minimumFractionDigits_ = digitLeftCount + zeroDigitCount - decimalPos, 0 > this.minimumFractionDigits_ && (this.minimumFractionDigits_ = 0));
  var effectiveDecimalPos = 0 <= decimalPos ? decimalPos : totalDigits;
  this.minimumIntegerDigits_ = effectiveDecimalPos - digitLeftCount;
  this.useExponentialNotation_ && (this.maximumIntegerDigits_ = digitLeftCount + this.minimumIntegerDigits_, 0 == this.maximumFractionDigits_ && 0 == this.minimumIntegerDigits_ && (this.minimumIntegerDigits_ = 1));
  this.groupingArray_.push(Math.max(0, groupingCount));
  this.decimalSeparatorAlwaysShown_ = 0 == decimalPos || decimalPos == totalDigits;
};
goog.i18n.NumberFormat.NULL_UNIT_ = {prefix:"", suffix:"", divisorBase:0};
goog.i18n.NumberFormat.prototype.getUnitFor_ = function(base, plurality) {
  var table = this.compactStyle_ == goog.i18n.NumberFormat.CompactStyle.SHORT ? goog.i18n.CompactNumberFormatSymbols.COMPACT_DECIMAL_SHORT_PATTERN : goog.i18n.CompactNumberFormatSymbols.COMPACT_DECIMAL_LONG_PATTERN;
  goog.isDefAndNotNull(table) || (table = goog.i18n.CompactNumberFormatSymbols.COMPACT_DECIMAL_SHORT_PATTERN);
  if (3 > base) {
    return goog.i18n.NumberFormat.NULL_UNIT_;
  }
  base = Math.min(14, base);
  for (var patterns = table[Math.pow(10, base)], previousNonNullBase = base - 1;!patterns && 3 <= previousNonNullBase;) {
    patterns = table[Math.pow(10, previousNonNullBase)], previousNonNullBase--;
  }
  if (!patterns) {
    return goog.i18n.NumberFormat.NULL_UNIT_;
  }
  var pattern = patterns[plurality];
  if (!pattern || "0" == pattern) {
    return goog.i18n.NumberFormat.NULL_UNIT_;
  }
  var parts = /([^0]*)(0+)(.*)/.exec(pattern);
  return parts ? {prefix:parts[1], suffix:parts[3], divisorBase:previousNonNullBase + 1 - (parts[2].length - 1)} : goog.i18n.NumberFormat.NULL_UNIT_;
};
goog.i18n.NumberFormat.prototype.getUnitAfterRounding_ = function(formattingNumber, pluralityNumber) {
  if (this.compactStyle_ == goog.i18n.NumberFormat.CompactStyle.NONE) {
    return goog.i18n.NumberFormat.NULL_UNIT_;
  }
  formattingNumber = Math.abs(formattingNumber);
  pluralityNumber = Math.abs(pluralityNumber);
  var initialPlurality = this.pluralForm_(formattingNumber), base = 1 >= formattingNumber ? 0 : this.intLog10_(formattingNumber), initialDivisor = this.getUnitFor_(base, initialPlurality).divisorBase, pluralityAttempt = pluralityNumber / Math.pow(10, initialDivisor), pluralityRounded = this.roundNumber_(pluralityAttempt), formattingAttempt = formattingNumber / Math.pow(10, initialDivisor), formattingRounded = this.roundNumber_(formattingAttempt), finalPlurality = this.pluralForm_(pluralityRounded.intValue + 
  pluralityRounded.fracValue);
  return this.getUnitFor_(initialDivisor + this.intLog10_(formattingRounded.intValue), finalPlurality);
};
goog.i18n.NumberFormat.prototype.intLog10_ = function(number) {
  for (var i = 0;1 <= (number /= 10);) {
    i++;
  }
  return i;
};
goog.i18n.NumberFormat.prototype.roundToSignificantDigits_ = function(number, significantDigits, scale) {
  if (!number) {
    return number;
  }
  var digits = this.intLog10_(number), magnitude = significantDigits - digits - 1;
  if (magnitude < -scale) {
    var point = Math.pow(10, scale);
    return Math.round(number / point) * point;
  }
  var power = Math.pow(10, magnitude), shifted = Math.round(number * power);
  return shifted / power;
};
goog.i18n.NumberFormat.prototype.pluralForm_ = function() {
  return "other";
};
goog.i18n.ordinalRules = {};
goog.i18n.ordinalRules.Keyword = {ZERO:"zero", ONE:"one", TWO:"two", FEW:"few", MANY:"many", OTHER:"other"};
goog.i18n.ordinalRules.defaultSelect_ = function() {
  return goog.i18n.ordinalRules.Keyword.OTHER;
};
goog.i18n.ordinalRules.decimals_ = function(n) {
  var str = n + "", result = str.indexOf(".");
  return -1 == result ? 0 : str.length - result - 1;
};
goog.i18n.ordinalRules.get_vf_ = function(n, opt_precision) {
  var v = void 0 === opt_precision ? Math.min(goog.i18n.ordinalRules.decimals_(n), 3) : opt_precision, base = Math.pow(10, v), f = (n * base | 0) % base;
  return {v:v, f:f};
};
goog.i18n.ordinalRules.get_wt_ = function(v, f) {
  if (0 === f) {
    return {w:0, t:0};
  }
  for (;0 === f % 10;) {
    f /= 10, v--;
  }
  return {w:v, t:f};
};
goog.i18n.ordinalRules.cySelect_ = function(n) {
  return 0 == n || 7 == n || 8 == n || 9 == n ? goog.i18n.ordinalRules.Keyword.ZERO : 1 == n ? goog.i18n.ordinalRules.Keyword.ONE : 2 == n ? goog.i18n.ordinalRules.Keyword.TWO : 3 == n || 4 == n ? goog.i18n.ordinalRules.Keyword.FEW : 5 == n || 6 == n ? goog.i18n.ordinalRules.Keyword.MANY : goog.i18n.ordinalRules.Keyword.OTHER;
};
goog.i18n.ordinalRules.enSelect_ = function(n) {
  return 1 == n % 10 && 11 != n % 100 ? goog.i18n.ordinalRules.Keyword.ONE : 2 == n % 10 && 12 != n % 100 ? goog.i18n.ordinalRules.Keyword.TWO : 3 == n % 10 && 13 != n % 100 ? goog.i18n.ordinalRules.Keyword.FEW : goog.i18n.ordinalRules.Keyword.OTHER;
};
goog.i18n.ordinalRules.ukSelect_ = function(n) {
  return 3 == n % 10 && 13 != n % 100 ? goog.i18n.ordinalRules.Keyword.FEW : goog.i18n.ordinalRules.Keyword.OTHER;
};
goog.i18n.ordinalRules.itSelect_ = function(n) {
  return 11 == n || 8 == n || 80 == n || 800 == n ? goog.i18n.ordinalRules.Keyword.MANY : goog.i18n.ordinalRules.Keyword.OTHER;
};
goog.i18n.ordinalRules.neSelect_ = function(n) {
  return 1 <= n && 4 >= n ? goog.i18n.ordinalRules.Keyword.ONE : goog.i18n.ordinalRules.Keyword.OTHER;
};
goog.i18n.ordinalRules.beSelect_ = function(n) {
  return 2 != n % 10 && 3 != n % 10 || 12 == n % 100 || 13 == n % 100 ? goog.i18n.ordinalRules.Keyword.OTHER : goog.i18n.ordinalRules.Keyword.FEW;
};
goog.i18n.ordinalRules.azSelect_ = function(n) {
  var i = n | 0;
  return 1 == i % 10 || 2 == i % 10 || 5 == i % 10 || 7 == i % 10 || 8 == i % 10 || 20 == i % 100 || 50 == i % 100 || 70 == i % 100 || 80 == i % 100 ? goog.i18n.ordinalRules.Keyword.ONE : 3 == i % 10 || 4 == i % 10 || 100 == i % 1E3 || 200 == i % 1E3 || 300 == i % 1E3 || 400 == i % 1E3 || 500 == i % 1E3 || 600 == i % 1E3 || 700 == i % 1E3 || 800 == i % 1E3 || 900 == i % 1E3 ? goog.i18n.ordinalRules.Keyword.FEW : 0 == i || 6 == i % 10 || 40 == i % 100 || 60 == i % 100 || 90 == i % 100 ? goog.i18n.ordinalRules.Keyword.MANY : 
  goog.i18n.ordinalRules.Keyword.OTHER;
};
goog.i18n.ordinalRules.kaSelect_ = function(n) {
  var i = n | 0;
  return 1 == i ? goog.i18n.ordinalRules.Keyword.ONE : 0 == i || 2 <= i % 100 && 20 >= i % 100 || 40 == i % 100 || 60 == i % 100 || 80 == i % 100 ? goog.i18n.ordinalRules.Keyword.MANY : goog.i18n.ordinalRules.Keyword.OTHER;
};
goog.i18n.ordinalRules.mrSelect_ = function(n) {
  return 1 == n ? goog.i18n.ordinalRules.Keyword.ONE : 2 == n || 3 == n ? goog.i18n.ordinalRules.Keyword.TWO : 4 == n ? goog.i18n.ordinalRules.Keyword.FEW : goog.i18n.ordinalRules.Keyword.OTHER;
};
goog.i18n.ordinalRules.svSelect_ = function(n) {
  return 1 != n % 10 && 2 != n % 10 || 11 == n % 100 || 12 == n % 100 ? goog.i18n.ordinalRules.Keyword.OTHER : goog.i18n.ordinalRules.Keyword.ONE;
};
goog.i18n.ordinalRules.kkSelect_ = function(n) {
  return 6 == n % 10 || 9 == n % 10 || 0 == n % 10 && 0 != n ? goog.i18n.ordinalRules.Keyword.MANY : goog.i18n.ordinalRules.Keyword.OTHER;
};
goog.i18n.ordinalRules.mkSelect_ = function(n) {
  var i = n | 0;
  return 1 == i % 10 && 11 != i % 100 ? goog.i18n.ordinalRules.Keyword.ONE : 2 == i % 10 && 12 != i % 100 ? goog.i18n.ordinalRules.Keyword.TWO : 7 != i % 10 && 8 != i % 10 || 17 == i % 100 || 18 == i % 100 ? goog.i18n.ordinalRules.Keyword.OTHER : goog.i18n.ordinalRules.Keyword.MANY;
};
goog.i18n.ordinalRules.huSelect_ = function(n) {
  return 1 == n || 5 == n ? goog.i18n.ordinalRules.Keyword.ONE : goog.i18n.ordinalRules.Keyword.OTHER;
};
goog.i18n.ordinalRules.frSelect_ = function(n) {
  return 1 == n ? goog.i18n.ordinalRules.Keyword.ONE : goog.i18n.ordinalRules.Keyword.OTHER;
};
goog.i18n.ordinalRules.sqSelect_ = function(n) {
  return 1 == n ? goog.i18n.ordinalRules.Keyword.ONE : 4 == n % 10 && 14 != n % 100 ? goog.i18n.ordinalRules.Keyword.MANY : goog.i18n.ordinalRules.Keyword.OTHER;
};
goog.i18n.ordinalRules.caSelect_ = function(n) {
  return 1 == n || 3 == n ? goog.i18n.ordinalRules.Keyword.ONE : 2 == n ? goog.i18n.ordinalRules.Keyword.TWO : 4 == n ? goog.i18n.ordinalRules.Keyword.FEW : goog.i18n.ordinalRules.Keyword.OTHER;
};
goog.i18n.ordinalRules.guSelect_ = function(n) {
  return 1 == n ? goog.i18n.ordinalRules.Keyword.ONE : 2 == n || 3 == n ? goog.i18n.ordinalRules.Keyword.TWO : 4 == n ? goog.i18n.ordinalRules.Keyword.FEW : 6 == n ? goog.i18n.ordinalRules.Keyword.MANY : goog.i18n.ordinalRules.Keyword.OTHER;
};
goog.i18n.ordinalRules.asSelect_ = function(n) {
  return 1 == n || 5 == n || 7 == n || 8 == n || 9 == n || 10 == n ? goog.i18n.ordinalRules.Keyword.ONE : 2 == n || 3 == n ? goog.i18n.ordinalRules.Keyword.TWO : 4 == n ? goog.i18n.ordinalRules.Keyword.FEW : 6 == n ? goog.i18n.ordinalRules.Keyword.MANY : goog.i18n.ordinalRules.Keyword.OTHER;
};
goog.i18n.ordinalRules.select = goog.i18n.ordinalRules.enSelect_;
"af" == goog.LOCALE && (goog.i18n.ordinalRules.select = goog.i18n.ordinalRules.defaultSelect_);
"am" == goog.LOCALE && (goog.i18n.ordinalRules.select = goog.i18n.ordinalRules.defaultSelect_);
"ar" == goog.LOCALE && (goog.i18n.ordinalRules.select = goog.i18n.ordinalRules.defaultSelect_);
"az" == goog.LOCALE && (goog.i18n.ordinalRules.select = goog.i18n.ordinalRules.azSelect_);
"be" == goog.LOCALE && (goog.i18n.ordinalRules.select = goog.i18n.ordinalRules.beSelect_);
"bg" == goog.LOCALE && (goog.i18n.ordinalRules.select = goog.i18n.ordinalRules.defaultSelect_);
"bn" == goog.LOCALE && (goog.i18n.ordinalRules.select = goog.i18n.ordinalRules.asSelect_);
"br" == goog.LOCALE && (goog.i18n.ordinalRules.select = goog.i18n.ordinalRules.defaultSelect_);
"bs" == goog.LOCALE && (goog.i18n.ordinalRules.select = goog.i18n.ordinalRules.defaultSelect_);
"ca" == goog.LOCALE && (goog.i18n.ordinalRules.select = goog.i18n.ordinalRules.caSelect_);
"chr" == goog.LOCALE && (goog.i18n.ordinalRules.select = goog.i18n.ordinalRules.defaultSelect_);
"cs" == goog.LOCALE && (goog.i18n.ordinalRules.select = goog.i18n.ordinalRules.defaultSelect_);
"cy" == goog.LOCALE && (goog.i18n.ordinalRules.select = goog.i18n.ordinalRules.cySelect_);
"da" == goog.LOCALE && (goog.i18n.ordinalRules.select = goog.i18n.ordinalRules.defaultSelect_);
"de" == goog.LOCALE && (goog.i18n.ordinalRules.select = goog.i18n.ordinalRules.defaultSelect_);
if ("de_AT" == goog.LOCALE || "de-AT" == goog.LOCALE) {
  goog.i18n.ordinalRules.select = goog.i18n.ordinalRules.defaultSelect_;
}
if ("de_CH" == goog.LOCALE || "de-CH" == goog.LOCALE) {
  goog.i18n.ordinalRules.select = goog.i18n.ordinalRules.defaultSelect_;
}
"el" == goog.LOCALE && (goog.i18n.ordinalRules.select = goog.i18n.ordinalRules.defaultSelect_);
"en" == goog.LOCALE && (goog.i18n.ordinalRules.select = goog.i18n.ordinalRules.enSelect_);
if ("en_AU" == goog.LOCALE || "en-AU" == goog.LOCALE) {
  goog.i18n.ordinalRules.select = goog.i18n.ordinalRules.enSelect_;
}
if ("en_CA" == goog.LOCALE || "en-CA" == goog.LOCALE) {
  goog.i18n.ordinalRules.select = goog.i18n.ordinalRules.enSelect_;
}
if ("en_GB" == goog.LOCALE || "en-GB" == goog.LOCALE) {
  goog.i18n.ordinalRules.select = goog.i18n.ordinalRules.enSelect_;
}
if ("en_IE" == goog.LOCALE || "en-IE" == goog.LOCALE) {
  goog.i18n.ordinalRules.select = goog.i18n.ordinalRules.enSelect_;
}
if ("en_IN" == goog.LOCALE || "en-IN" == goog.LOCALE) {
  goog.i18n.ordinalRules.select = goog.i18n.ordinalRules.enSelect_;
}
if ("en_SG" == goog.LOCALE || "en-SG" == goog.LOCALE) {
  goog.i18n.ordinalRules.select = goog.i18n.ordinalRules.enSelect_;
}
if ("en_US" == goog.LOCALE || "en-US" == goog.LOCALE) {
  goog.i18n.ordinalRules.select = goog.i18n.ordinalRules.enSelect_;
}
if ("en_ZA" == goog.LOCALE || "en-ZA" == goog.LOCALE) {
  goog.i18n.ordinalRules.select = goog.i18n.ordinalRules.enSelect_;
}
"es" == goog.LOCALE && (goog.i18n.ordinalRules.select = goog.i18n.ordinalRules.defaultSelect_);
if ("es_419" == goog.LOCALE || "es-419" == goog.LOCALE) {
  goog.i18n.ordinalRules.select = goog.i18n.ordinalRules.defaultSelect_;
}
if ("es_ES" == goog.LOCALE || "es-ES" == goog.LOCALE) {
  goog.i18n.ordinalRules.select = goog.i18n.ordinalRules.defaultSelect_;
}
if ("es_MX" == goog.LOCALE || "es-MX" == goog.LOCALE) {
  goog.i18n.ordinalRules.select = goog.i18n.ordinalRules.defaultSelect_;
}
if ("es_US" == goog.LOCALE || "es-US" == goog.LOCALE) {
  goog.i18n.ordinalRules.select = goog.i18n.ordinalRules.defaultSelect_;
}
"et" == goog.LOCALE && (goog.i18n.ordinalRules.select = goog.i18n.ordinalRules.defaultSelect_);
"eu" == goog.LOCALE && (goog.i18n.ordinalRules.select = goog.i18n.ordinalRules.defaultSelect_);
"fa" == goog.LOCALE && (goog.i18n.ordinalRules.select = goog.i18n.ordinalRules.defaultSelect_);
"fi" == goog.LOCALE && (goog.i18n.ordinalRules.select = goog.i18n.ordinalRules.defaultSelect_);
"fil" == goog.LOCALE && (goog.i18n.ordinalRules.select = goog.i18n.ordinalRules.frSelect_);
"fr" == goog.LOCALE && (goog.i18n.ordinalRules.select = goog.i18n.ordinalRules.frSelect_);
if ("fr_CA" == goog.LOCALE || "fr-CA" == goog.LOCALE) {
  goog.i18n.ordinalRules.select = goog.i18n.ordinalRules.frSelect_;
}
"ga" == goog.LOCALE && (goog.i18n.ordinalRules.select = goog.i18n.ordinalRules.frSelect_);
"gl" == goog.LOCALE && (goog.i18n.ordinalRules.select = goog.i18n.ordinalRules.defaultSelect_);
"gsw" == goog.LOCALE && (goog.i18n.ordinalRules.select = goog.i18n.ordinalRules.defaultSelect_);
"gu" == goog.LOCALE && (goog.i18n.ordinalRules.select = goog.i18n.ordinalRules.guSelect_);
"haw" == goog.LOCALE && (goog.i18n.ordinalRules.select = goog.i18n.ordinalRules.defaultSelect_);
"he" == goog.LOCALE && (goog.i18n.ordinalRules.select = goog.i18n.ordinalRules.defaultSelect_);
"hi" == goog.LOCALE && (goog.i18n.ordinalRules.select = goog.i18n.ordinalRules.guSelect_);
"hr" == goog.LOCALE && (goog.i18n.ordinalRules.select = goog.i18n.ordinalRules.defaultSelect_);
"hu" == goog.LOCALE && (goog.i18n.ordinalRules.select = goog.i18n.ordinalRules.huSelect_);
"hy" == goog.LOCALE && (goog.i18n.ordinalRules.select = goog.i18n.ordinalRules.frSelect_);
"id" == goog.LOCALE && (goog.i18n.ordinalRules.select = goog.i18n.ordinalRules.defaultSelect_);
"in" == goog.LOCALE && (goog.i18n.ordinalRules.select = goog.i18n.ordinalRules.defaultSelect_);
"is" == goog.LOCALE && (goog.i18n.ordinalRules.select = goog.i18n.ordinalRules.defaultSelect_);
"it" == goog.LOCALE && (goog.i18n.ordinalRules.select = goog.i18n.ordinalRules.itSelect_);
"iw" == goog.LOCALE && (goog.i18n.ordinalRules.select = goog.i18n.ordinalRules.defaultSelect_);
"ja" == goog.LOCALE && (goog.i18n.ordinalRules.select = goog.i18n.ordinalRules.defaultSelect_);
"ka" == goog.LOCALE && (goog.i18n.ordinalRules.select = goog.i18n.ordinalRules.kaSelect_);
"kk" == goog.LOCALE && (goog.i18n.ordinalRules.select = goog.i18n.ordinalRules.kkSelect_);
"km" == goog.LOCALE && (goog.i18n.ordinalRules.select = goog.i18n.ordinalRules.defaultSelect_);
"kn" == goog.LOCALE && (goog.i18n.ordinalRules.select = goog.i18n.ordinalRules.defaultSelect_);
"ko" == goog.LOCALE && (goog.i18n.ordinalRules.select = goog.i18n.ordinalRules.defaultSelect_);
"ky" == goog.LOCALE && (goog.i18n.ordinalRules.select = goog.i18n.ordinalRules.defaultSelect_);
"ln" == goog.LOCALE && (goog.i18n.ordinalRules.select = goog.i18n.ordinalRules.defaultSelect_);
"lo" == goog.LOCALE && (goog.i18n.ordinalRules.select = goog.i18n.ordinalRules.frSelect_);
"lt" == goog.LOCALE && (goog.i18n.ordinalRules.select = goog.i18n.ordinalRules.defaultSelect_);
"lv" == goog.LOCALE && (goog.i18n.ordinalRules.select = goog.i18n.ordinalRules.defaultSelect_);
"mk" == goog.LOCALE && (goog.i18n.ordinalRules.select = goog.i18n.ordinalRules.mkSelect_);
"ml" == goog.LOCALE && (goog.i18n.ordinalRules.select = goog.i18n.ordinalRules.defaultSelect_);
"mn" == goog.LOCALE && (goog.i18n.ordinalRules.select = goog.i18n.ordinalRules.defaultSelect_);
"mo" == goog.LOCALE && (goog.i18n.ordinalRules.select = goog.i18n.ordinalRules.frSelect_);
"mr" == goog.LOCALE && (goog.i18n.ordinalRules.select = goog.i18n.ordinalRules.mrSelect_);
"ms" == goog.LOCALE && (goog.i18n.ordinalRules.select = goog.i18n.ordinalRules.frSelect_);
"mt" == goog.LOCALE && (goog.i18n.ordinalRules.select = goog.i18n.ordinalRules.defaultSelect_);
"my" == goog.LOCALE && (goog.i18n.ordinalRules.select = goog.i18n.ordinalRules.defaultSelect_);
"nb" == goog.LOCALE && (goog.i18n.ordinalRules.select = goog.i18n.ordinalRules.defaultSelect_);
"ne" == goog.LOCALE && (goog.i18n.ordinalRules.select = goog.i18n.ordinalRules.neSelect_);
"nl" == goog.LOCALE && (goog.i18n.ordinalRules.select = goog.i18n.ordinalRules.defaultSelect_);
"no" == goog.LOCALE && (goog.i18n.ordinalRules.select = goog.i18n.ordinalRules.defaultSelect_);
if ("no_NO" == goog.LOCALE || "no-NO" == goog.LOCALE) {
  goog.i18n.ordinalRules.select = goog.i18n.ordinalRules.defaultSelect_;
}
"or" == goog.LOCALE && (goog.i18n.ordinalRules.select = goog.i18n.ordinalRules.defaultSelect_);
"pa" == goog.LOCALE && (goog.i18n.ordinalRules.select = goog.i18n.ordinalRules.defaultSelect_);
"pl" == goog.LOCALE && (goog.i18n.ordinalRules.select = goog.i18n.ordinalRules.defaultSelect_);
"pt" == goog.LOCALE && (goog.i18n.ordinalRules.select = goog.i18n.ordinalRules.defaultSelect_);
if ("pt_BR" == goog.LOCALE || "pt-BR" == goog.LOCALE) {
  goog.i18n.ordinalRules.select = goog.i18n.ordinalRules.defaultSelect_;
}
if ("pt_PT" == goog.LOCALE || "pt-PT" == goog.LOCALE) {
  goog.i18n.ordinalRules.select = goog.i18n.ordinalRules.defaultSelect_;
}
"ro" == goog.LOCALE && (goog.i18n.ordinalRules.select = goog.i18n.ordinalRules.frSelect_);
"ru" == goog.LOCALE && (goog.i18n.ordinalRules.select = goog.i18n.ordinalRules.defaultSelect_);
"sh" == goog.LOCALE && (goog.i18n.ordinalRules.select = goog.i18n.ordinalRules.defaultSelect_);
"si" == goog.LOCALE && (goog.i18n.ordinalRules.select = goog.i18n.ordinalRules.defaultSelect_);
"sk" == goog.LOCALE && (goog.i18n.ordinalRules.select = goog.i18n.ordinalRules.defaultSelect_);
"sl" == goog.LOCALE && (goog.i18n.ordinalRules.select = goog.i18n.ordinalRules.defaultSelect_);
"sq" == goog.LOCALE && (goog.i18n.ordinalRules.select = goog.i18n.ordinalRules.sqSelect_);
"sr" == goog.LOCALE && (goog.i18n.ordinalRules.select = goog.i18n.ordinalRules.defaultSelect_);
if ("sr_Latn" == goog.LOCALE || "sr-Latn" == goog.LOCALE) {
  goog.i18n.ordinalRules.select = goog.i18n.ordinalRules.defaultSelect_;
}
"sv" == goog.LOCALE && (goog.i18n.ordinalRules.select = goog.i18n.ordinalRules.svSelect_);
"sw" == goog.LOCALE && (goog.i18n.ordinalRules.select = goog.i18n.ordinalRules.defaultSelect_);
"ta" == goog.LOCALE && (goog.i18n.ordinalRules.select = goog.i18n.ordinalRules.defaultSelect_);
"te" == goog.LOCALE && (goog.i18n.ordinalRules.select = goog.i18n.ordinalRules.defaultSelect_);
"th" == goog.LOCALE && (goog.i18n.ordinalRules.select = goog.i18n.ordinalRules.defaultSelect_);
"tl" == goog.LOCALE && (goog.i18n.ordinalRules.select = goog.i18n.ordinalRules.frSelect_);
"tr" == goog.LOCALE && (goog.i18n.ordinalRules.select = goog.i18n.ordinalRules.defaultSelect_);
"uk" == goog.LOCALE && (goog.i18n.ordinalRules.select = goog.i18n.ordinalRules.ukSelect_);
"ur" == goog.LOCALE && (goog.i18n.ordinalRules.select = goog.i18n.ordinalRules.defaultSelect_);
"uz" == goog.LOCALE && (goog.i18n.ordinalRules.select = goog.i18n.ordinalRules.defaultSelect_);
"vi" == goog.LOCALE && (goog.i18n.ordinalRules.select = goog.i18n.ordinalRules.frSelect_);
"zh" == goog.LOCALE && (goog.i18n.ordinalRules.select = goog.i18n.ordinalRules.defaultSelect_);
if ("zh_CN" == goog.LOCALE || "zh-CN" == goog.LOCALE) {
  goog.i18n.ordinalRules.select = goog.i18n.ordinalRules.defaultSelect_;
}
if ("zh_HK" == goog.LOCALE || "zh-HK" == goog.LOCALE) {
  goog.i18n.ordinalRules.select = goog.i18n.ordinalRules.defaultSelect_;
}
if ("zh_TW" == goog.LOCALE || "zh-TW" == goog.LOCALE) {
  goog.i18n.ordinalRules.select = goog.i18n.ordinalRules.defaultSelect_;
}
"zu" == goog.LOCALE && (goog.i18n.ordinalRules.select = goog.i18n.ordinalRules.defaultSelect_);
goog.i18n.pluralRules = {};
goog.i18n.pluralRules.Keyword = {ZERO:"zero", ONE:"one", TWO:"two", FEW:"few", MANY:"many", OTHER:"other"};
goog.i18n.pluralRules.defaultSelect_ = function() {
  return goog.i18n.pluralRules.Keyword.OTHER;
};
goog.i18n.pluralRules.decimals_ = function(n) {
  var str = n + "", result = str.indexOf(".");
  return -1 == result ? 0 : str.length - result - 1;
};
goog.i18n.pluralRules.get_vf_ = function(n, opt_precision) {
  var v = void 0 === opt_precision ? Math.min(goog.i18n.pluralRules.decimals_(n), 3) : opt_precision, base = Math.pow(10, v), f = (n * base | 0) % base;
  return {v:v, f:f};
};
goog.i18n.pluralRules.get_wt_ = function(v, f) {
  if (0 === f) {
    return {w:0, t:0};
  }
  for (;0 === f % 10;) {
    f /= 10, v--;
  }
  return {w:v, t:f};
};
goog.i18n.pluralRules.filSelect_ = function(n, opt_precision) {
  var i = n | 0, vf = goog.i18n.pluralRules.get_vf_(n, opt_precision);
  return 0 == vf.v && (1 == i || 2 == i || 3 == i) || 0 == vf.v && 4 != i % 10 && 6 != i % 10 && 9 != i % 10 || 0 != vf.v && 4 != vf.f % 10 && 6 != vf.f % 10 && 9 != vf.f % 10 ? goog.i18n.pluralRules.Keyword.ONE : goog.i18n.pluralRules.Keyword.OTHER;
};
goog.i18n.pluralRules.pt_PTSelect_ = function(n, opt_precision) {
  var vf = goog.i18n.pluralRules.get_vf_(n, opt_precision);
  return 1 == n && 0 == vf.v ? goog.i18n.pluralRules.Keyword.ONE : goog.i18n.pluralRules.Keyword.OTHER;
};
goog.i18n.pluralRules.brSelect_ = function(n) {
  return 1 == n % 10 && 11 != n % 100 && 71 != n % 100 && 91 != n % 100 ? goog.i18n.pluralRules.Keyword.ONE : 2 == n % 10 && 12 != n % 100 && 72 != n % 100 && 92 != n % 100 ? goog.i18n.pluralRules.Keyword.TWO : (3 <= n % 10 && 4 >= n % 10 || 9 == n % 10) && (10 > n % 100 || 19 < n % 100) && (70 > n % 100 || 79 < n % 100) && (90 > n % 100 || 99 < n % 100) ? goog.i18n.pluralRules.Keyword.FEW : 0 != n && 0 == n % 1E6 ? goog.i18n.pluralRules.Keyword.MANY : goog.i18n.pluralRules.Keyword.OTHER;
};
goog.i18n.pluralRules.srSelect_ = function(n, opt_precision) {
  var i = n | 0, vf = goog.i18n.pluralRules.get_vf_(n, opt_precision);
  return 0 == vf.v && 1 == i % 10 && 11 != i % 100 || 1 == vf.f % 10 && 11 != vf.f % 100 ? goog.i18n.pluralRules.Keyword.ONE : 0 == vf.v && 2 <= i % 10 && 4 >= i % 10 && (12 > i % 100 || 14 < i % 100) || 2 <= vf.f % 10 && 4 >= vf.f % 10 && (12 > vf.f % 100 || 14 < vf.f % 100) ? goog.i18n.pluralRules.Keyword.FEW : goog.i18n.pluralRules.Keyword.OTHER;
};
goog.i18n.pluralRules.roSelect_ = function(n, opt_precision) {
  var i = n | 0, vf = goog.i18n.pluralRules.get_vf_(n, opt_precision);
  return 1 == i && 0 == vf.v ? goog.i18n.pluralRules.Keyword.ONE : 0 != vf.v || 0 == n || 1 != n && 1 <= n % 100 && 19 >= n % 100 ? goog.i18n.pluralRules.Keyword.FEW : goog.i18n.pluralRules.Keyword.OTHER;
};
goog.i18n.pluralRules.hiSelect_ = function(n) {
  var i = n | 0;
  return 0 == i || 1 == n ? goog.i18n.pluralRules.Keyword.ONE : goog.i18n.pluralRules.Keyword.OTHER;
};
goog.i18n.pluralRules.frSelect_ = function(n) {
  var i = n | 0;
  return 0 == i || 1 == i ? goog.i18n.pluralRules.Keyword.ONE : goog.i18n.pluralRules.Keyword.OTHER;
};
goog.i18n.pluralRules.csSelect_ = function(n, opt_precision) {
  var i = n | 0, vf = goog.i18n.pluralRules.get_vf_(n, opt_precision);
  return 1 == i && 0 == vf.v ? goog.i18n.pluralRules.Keyword.ONE : 2 <= i && 4 >= i && 0 == vf.v ? goog.i18n.pluralRules.Keyword.FEW : 0 != vf.v ? goog.i18n.pluralRules.Keyword.MANY : goog.i18n.pluralRules.Keyword.OTHER;
};
goog.i18n.pluralRules.plSelect_ = function(n, opt_precision) {
  var i = n | 0, vf = goog.i18n.pluralRules.get_vf_(n, opt_precision);
  return 1 == i && 0 == vf.v ? goog.i18n.pluralRules.Keyword.ONE : 0 == vf.v && 2 <= i % 10 && 4 >= i % 10 && (12 > i % 100 || 14 < i % 100) ? goog.i18n.pluralRules.Keyword.FEW : 0 == vf.v && 1 != i && 0 <= i % 10 && 1 >= i % 10 || 0 == vf.v && 5 <= i % 10 && 9 >= i % 10 || 0 == vf.v && 12 <= i % 100 && 14 >= i % 100 ? goog.i18n.pluralRules.Keyword.MANY : goog.i18n.pluralRules.Keyword.OTHER;
};
goog.i18n.pluralRules.shiSelect_ = function(n) {
  var i = n | 0;
  return 0 == i || 1 == n ? goog.i18n.pluralRules.Keyword.ONE : 2 <= n && 10 >= n ? goog.i18n.pluralRules.Keyword.FEW : goog.i18n.pluralRules.Keyword.OTHER;
};
goog.i18n.pluralRules.lvSelect_ = function(n, opt_precision) {
  var vf = goog.i18n.pluralRules.get_vf_(n, opt_precision);
  return 0 == n % 10 || 11 <= n % 100 && 19 >= n % 100 || 2 == vf.v && 11 <= vf.f % 100 && 19 >= vf.f % 100 ? goog.i18n.pluralRules.Keyword.ZERO : 1 == n % 10 && 11 != n % 100 || 2 == vf.v && 1 == vf.f % 10 && 11 != vf.f % 100 || 2 != vf.v && 1 == vf.f % 10 ? goog.i18n.pluralRules.Keyword.ONE : goog.i18n.pluralRules.Keyword.OTHER;
};
goog.i18n.pluralRules.iuSelect_ = function(n) {
  return 1 == n ? goog.i18n.pluralRules.Keyword.ONE : 2 == n ? goog.i18n.pluralRules.Keyword.TWO : goog.i18n.pluralRules.Keyword.OTHER;
};
goog.i18n.pluralRules.heSelect_ = function(n, opt_precision) {
  var i = n | 0, vf = goog.i18n.pluralRules.get_vf_(n, opt_precision);
  return 1 == i && 0 == vf.v ? goog.i18n.pluralRules.Keyword.ONE : 2 == i && 0 == vf.v ? goog.i18n.pluralRules.Keyword.TWO : 0 == vf.v && (0 > n || 10 < n) && 0 == n % 10 ? goog.i18n.pluralRules.Keyword.MANY : goog.i18n.pluralRules.Keyword.OTHER;
};
goog.i18n.pluralRules.mtSelect_ = function(n) {
  return 1 == n ? goog.i18n.pluralRules.Keyword.ONE : 0 == n || 2 <= n % 100 && 10 >= n % 100 ? goog.i18n.pluralRules.Keyword.FEW : 11 <= n % 100 && 19 >= n % 100 ? goog.i18n.pluralRules.Keyword.MANY : goog.i18n.pluralRules.Keyword.OTHER;
};
goog.i18n.pluralRules.siSelect_ = function(n, opt_precision) {
  var i = n | 0, vf = goog.i18n.pluralRules.get_vf_(n, opt_precision);
  return 0 == n || 1 == n || 0 == i && 1 == vf.f ? goog.i18n.pluralRules.Keyword.ONE : goog.i18n.pluralRules.Keyword.OTHER;
};
goog.i18n.pluralRules.cySelect_ = function(n) {
  return 0 == n ? goog.i18n.pluralRules.Keyword.ZERO : 1 == n ? goog.i18n.pluralRules.Keyword.ONE : 2 == n ? goog.i18n.pluralRules.Keyword.TWO : 3 == n ? goog.i18n.pluralRules.Keyword.FEW : 6 == n ? goog.i18n.pluralRules.Keyword.MANY : goog.i18n.pluralRules.Keyword.OTHER;
};
goog.i18n.pluralRules.daSelect_ = function(n, opt_precision) {
  var i = n | 0, vf = goog.i18n.pluralRules.get_vf_(n, opt_precision), wt = goog.i18n.pluralRules.get_wt_(vf.v, vf.f);
  return 1 == n || 0 != wt.t && (0 == i || 1 == i) ? goog.i18n.pluralRules.Keyword.ONE : goog.i18n.pluralRules.Keyword.OTHER;
};
goog.i18n.pluralRules.ruSelect_ = function(n, opt_precision) {
  var i = n | 0, vf = goog.i18n.pluralRules.get_vf_(n, opt_precision);
  return 0 == vf.v && 1 == i % 10 && 11 != i % 100 ? goog.i18n.pluralRules.Keyword.ONE : 0 == vf.v && 2 <= i % 10 && 4 >= i % 10 && (12 > i % 100 || 14 < i % 100) ? goog.i18n.pluralRules.Keyword.FEW : 0 == vf.v && 0 == i % 10 || 0 == vf.v && 5 <= i % 10 && 9 >= i % 10 || 0 == vf.v && 11 <= i % 100 && 14 >= i % 100 ? goog.i18n.pluralRules.Keyword.MANY : goog.i18n.pluralRules.Keyword.OTHER;
};
goog.i18n.pluralRules.gvSelect_ = function(n, opt_precision) {
  var i = n | 0, vf = goog.i18n.pluralRules.get_vf_(n, opt_precision);
  return 0 == vf.v && 1 == i % 10 ? goog.i18n.pluralRules.Keyword.ONE : 0 == vf.v && 2 == i % 10 ? goog.i18n.pluralRules.Keyword.TWO : 0 != vf.v || 0 != i % 100 && 20 != i % 100 && 40 != i % 100 && 60 != i % 100 && 80 != i % 100 ? 0 != vf.v ? goog.i18n.pluralRules.Keyword.MANY : goog.i18n.pluralRules.Keyword.OTHER : goog.i18n.pluralRules.Keyword.FEW;
};
goog.i18n.pluralRules.beSelect_ = function(n) {
  return 1 == n % 10 && 11 != n % 100 ? goog.i18n.pluralRules.Keyword.ONE : 2 <= n % 10 && 4 >= n % 10 && (12 > n % 100 || 14 < n % 100) ? goog.i18n.pluralRules.Keyword.FEW : 0 == n % 10 || 5 <= n % 10 && 9 >= n % 10 || 11 <= n % 100 && 14 >= n % 100 ? goog.i18n.pluralRules.Keyword.MANY : goog.i18n.pluralRules.Keyword.OTHER;
};
goog.i18n.pluralRules.mkSelect_ = function(n, opt_precision) {
  var i = n | 0, vf = goog.i18n.pluralRules.get_vf_(n, opt_precision);
  return 0 == vf.v && 1 == i % 10 || 1 == vf.f % 10 ? goog.i18n.pluralRules.Keyword.ONE : goog.i18n.pluralRules.Keyword.OTHER;
};
goog.i18n.pluralRules.gaSelect_ = function(n) {
  return 1 == n ? goog.i18n.pluralRules.Keyword.ONE : 2 == n ? goog.i18n.pluralRules.Keyword.TWO : 3 <= n && 6 >= n ? goog.i18n.pluralRules.Keyword.FEW : 7 <= n && 10 >= n ? goog.i18n.pluralRules.Keyword.MANY : goog.i18n.pluralRules.Keyword.OTHER;
};
goog.i18n.pluralRules.ptSelect_ = function(n) {
  return 0 <= n && 2 >= n && 2 != n ? goog.i18n.pluralRules.Keyword.ONE : goog.i18n.pluralRules.Keyword.OTHER;
};
goog.i18n.pluralRules.esSelect_ = function(n) {
  return 1 == n ? goog.i18n.pluralRules.Keyword.ONE : goog.i18n.pluralRules.Keyword.OTHER;
};
goog.i18n.pluralRules.dsbSelect_ = function(n, opt_precision) {
  var i = n | 0, vf = goog.i18n.pluralRules.get_vf_(n, opt_precision);
  return 0 == vf.v && 1 == i % 100 || 1 == vf.f % 100 ? goog.i18n.pluralRules.Keyword.ONE : 0 == vf.v && 2 == i % 100 || 2 == vf.f % 100 ? goog.i18n.pluralRules.Keyword.TWO : 0 == vf.v && 3 <= i % 100 && 4 >= i % 100 || 3 <= vf.f % 100 && 4 >= vf.f % 100 ? goog.i18n.pluralRules.Keyword.FEW : goog.i18n.pluralRules.Keyword.OTHER;
};
goog.i18n.pluralRules.lagSelect_ = function(n) {
  var i = n | 0;
  return 0 == n ? goog.i18n.pluralRules.Keyword.ZERO : 0 != i && 1 != i || 0 == n ? goog.i18n.pluralRules.Keyword.OTHER : goog.i18n.pluralRules.Keyword.ONE;
};
goog.i18n.pluralRules.isSelect_ = function(n, opt_precision) {
  var i = n | 0, vf = goog.i18n.pluralRules.get_vf_(n, opt_precision), wt = goog.i18n.pluralRules.get_wt_(vf.v, vf.f);
  return 0 == wt.t && 1 == i % 10 && 11 != i % 100 || 0 != wt.t ? goog.i18n.pluralRules.Keyword.ONE : goog.i18n.pluralRules.Keyword.OTHER;
};
goog.i18n.pluralRules.kshSelect_ = function(n) {
  return 0 == n ? goog.i18n.pluralRules.Keyword.ZERO : 1 == n ? goog.i18n.pluralRules.Keyword.ONE : goog.i18n.pluralRules.Keyword.OTHER;
};
goog.i18n.pluralRules.arSelect_ = function(n) {
  return 0 == n ? goog.i18n.pluralRules.Keyword.ZERO : 1 == n ? goog.i18n.pluralRules.Keyword.ONE : 2 == n ? goog.i18n.pluralRules.Keyword.TWO : 3 <= n % 100 && 10 >= n % 100 ? goog.i18n.pluralRules.Keyword.FEW : 11 <= n % 100 && 99 >= n % 100 ? goog.i18n.pluralRules.Keyword.MANY : goog.i18n.pluralRules.Keyword.OTHER;
};
goog.i18n.pluralRules.gdSelect_ = function(n) {
  return 1 == n || 11 == n ? goog.i18n.pluralRules.Keyword.ONE : 2 == n || 12 == n ? goog.i18n.pluralRules.Keyword.TWO : 3 <= n && 10 >= n || 13 <= n && 19 >= n ? goog.i18n.pluralRules.Keyword.FEW : goog.i18n.pluralRules.Keyword.OTHER;
};
goog.i18n.pluralRules.slSelect_ = function(n, opt_precision) {
  var i = n | 0, vf = goog.i18n.pluralRules.get_vf_(n, opt_precision);
  return 0 == vf.v && 1 == i % 100 ? goog.i18n.pluralRules.Keyword.ONE : 0 == vf.v && 2 == i % 100 ? goog.i18n.pluralRules.Keyword.TWO : 0 == vf.v && 3 <= i % 100 && 4 >= i % 100 || 0 != vf.v ? goog.i18n.pluralRules.Keyword.FEW : goog.i18n.pluralRules.Keyword.OTHER;
};
goog.i18n.pluralRules.ltSelect_ = function(n, opt_precision) {
  var vf = goog.i18n.pluralRules.get_vf_(n, opt_precision);
  return 1 == n % 10 && (11 > n % 100 || 19 < n % 100) ? goog.i18n.pluralRules.Keyword.ONE : 2 <= n % 10 && 9 >= n % 10 && (11 > n % 100 || 19 < n % 100) ? goog.i18n.pluralRules.Keyword.FEW : 0 != vf.f ? goog.i18n.pluralRules.Keyword.MANY : goog.i18n.pluralRules.Keyword.OTHER;
};
goog.i18n.pluralRules.tzmSelect_ = function(n) {
  return 0 <= n && 1 >= n || 11 <= n && 99 >= n ? goog.i18n.pluralRules.Keyword.ONE : goog.i18n.pluralRules.Keyword.OTHER;
};
goog.i18n.pluralRules.enSelect_ = function(n, opt_precision) {
  var i = n | 0, vf = goog.i18n.pluralRules.get_vf_(n, opt_precision);
  return 1 == i && 0 == vf.v ? goog.i18n.pluralRules.Keyword.ONE : goog.i18n.pluralRules.Keyword.OTHER;
};
goog.i18n.pluralRules.akSelect_ = function(n) {
  return 0 <= n && 1 >= n ? goog.i18n.pluralRules.Keyword.ONE : goog.i18n.pluralRules.Keyword.OTHER;
};
goog.i18n.pluralRules.select = goog.i18n.pluralRules.enSelect_;
"af" == goog.LOCALE && (goog.i18n.pluralRules.select = goog.i18n.pluralRules.esSelect_);
"am" == goog.LOCALE && (goog.i18n.pluralRules.select = goog.i18n.pluralRules.hiSelect_);
"ar" == goog.LOCALE && (goog.i18n.pluralRules.select = goog.i18n.pluralRules.arSelect_);
"az" == goog.LOCALE && (goog.i18n.pluralRules.select = goog.i18n.pluralRules.esSelect_);
"be" == goog.LOCALE && (goog.i18n.pluralRules.select = goog.i18n.pluralRules.beSelect_);
"bg" == goog.LOCALE && (goog.i18n.pluralRules.select = goog.i18n.pluralRules.esSelect_);
"bn" == goog.LOCALE && (goog.i18n.pluralRules.select = goog.i18n.pluralRules.hiSelect_);
"br" == goog.LOCALE && (goog.i18n.pluralRules.select = goog.i18n.pluralRules.brSelect_);
"bs" == goog.LOCALE && (goog.i18n.pluralRules.select = goog.i18n.pluralRules.srSelect_);
"ca" == goog.LOCALE && (goog.i18n.pluralRules.select = goog.i18n.pluralRules.enSelect_);
"chr" == goog.LOCALE && (goog.i18n.pluralRules.select = goog.i18n.pluralRules.esSelect_);
"cs" == goog.LOCALE && (goog.i18n.pluralRules.select = goog.i18n.pluralRules.csSelect_);
"cy" == goog.LOCALE && (goog.i18n.pluralRules.select = goog.i18n.pluralRules.cySelect_);
"da" == goog.LOCALE && (goog.i18n.pluralRules.select = goog.i18n.pluralRules.daSelect_);
"de" == goog.LOCALE && (goog.i18n.pluralRules.select = goog.i18n.pluralRules.enSelect_);
if ("de_AT" == goog.LOCALE || "de-AT" == goog.LOCALE) {
  goog.i18n.pluralRules.select = goog.i18n.pluralRules.enSelect_;
}
if ("de_CH" == goog.LOCALE || "de-CH" == goog.LOCALE) {
  goog.i18n.pluralRules.select = goog.i18n.pluralRules.enSelect_;
}
"el" == goog.LOCALE && (goog.i18n.pluralRules.select = goog.i18n.pluralRules.esSelect_);
"en" == goog.LOCALE && (goog.i18n.pluralRules.select = goog.i18n.pluralRules.enSelect_);
if ("en_AU" == goog.LOCALE || "en-AU" == goog.LOCALE) {
  goog.i18n.pluralRules.select = goog.i18n.pluralRules.enSelect_;
}
if ("en_CA" == goog.LOCALE || "en-CA" == goog.LOCALE) {
  goog.i18n.pluralRules.select = goog.i18n.pluralRules.enSelect_;
}
if ("en_GB" == goog.LOCALE || "en-GB" == goog.LOCALE) {
  goog.i18n.pluralRules.select = goog.i18n.pluralRules.enSelect_;
}
if ("en_IE" == goog.LOCALE || "en-IE" == goog.LOCALE) {
  goog.i18n.pluralRules.select = goog.i18n.pluralRules.enSelect_;
}
if ("en_IN" == goog.LOCALE || "en-IN" == goog.LOCALE) {
  goog.i18n.pluralRules.select = goog.i18n.pluralRules.enSelect_;
}
if ("en_SG" == goog.LOCALE || "en-SG" == goog.LOCALE) {
  goog.i18n.pluralRules.select = goog.i18n.pluralRules.enSelect_;
}
if ("en_US" == goog.LOCALE || "en-US" == goog.LOCALE) {
  goog.i18n.pluralRules.select = goog.i18n.pluralRules.enSelect_;
}
if ("en_ZA" == goog.LOCALE || "en-ZA" == goog.LOCALE) {
  goog.i18n.pluralRules.select = goog.i18n.pluralRules.enSelect_;
}
"es" == goog.LOCALE && (goog.i18n.pluralRules.select = goog.i18n.pluralRules.esSelect_);
if ("es_419" == goog.LOCALE || "es-419" == goog.LOCALE) {
  goog.i18n.pluralRules.select = goog.i18n.pluralRules.esSelect_;
}
if ("es_ES" == goog.LOCALE || "es-ES" == goog.LOCALE) {
  goog.i18n.pluralRules.select = goog.i18n.pluralRules.esSelect_;
}
if ("es_MX" == goog.LOCALE || "es-MX" == goog.LOCALE) {
  goog.i18n.pluralRules.select = goog.i18n.pluralRules.esSelect_;
}
if ("es_US" == goog.LOCALE || "es-US" == goog.LOCALE) {
  goog.i18n.pluralRules.select = goog.i18n.pluralRules.esSelect_;
}
"et" == goog.LOCALE && (goog.i18n.pluralRules.select = goog.i18n.pluralRules.enSelect_);
"eu" == goog.LOCALE && (goog.i18n.pluralRules.select = goog.i18n.pluralRules.esSelect_);
"fa" == goog.LOCALE && (goog.i18n.pluralRules.select = goog.i18n.pluralRules.hiSelect_);
"fi" == goog.LOCALE && (goog.i18n.pluralRules.select = goog.i18n.pluralRules.enSelect_);
"fil" == goog.LOCALE && (goog.i18n.pluralRules.select = goog.i18n.pluralRules.filSelect_);
"fr" == goog.LOCALE && (goog.i18n.pluralRules.select = goog.i18n.pluralRules.frSelect_);
if ("fr_CA" == goog.LOCALE || "fr-CA" == goog.LOCALE) {
  goog.i18n.pluralRules.select = goog.i18n.pluralRules.frSelect_;
}
"ga" == goog.LOCALE && (goog.i18n.pluralRules.select = goog.i18n.pluralRules.gaSelect_);
"gl" == goog.LOCALE && (goog.i18n.pluralRules.select = goog.i18n.pluralRules.enSelect_);
"gsw" == goog.LOCALE && (goog.i18n.pluralRules.select = goog.i18n.pluralRules.esSelect_);
"gu" == goog.LOCALE && (goog.i18n.pluralRules.select = goog.i18n.pluralRules.hiSelect_);
"haw" == goog.LOCALE && (goog.i18n.pluralRules.select = goog.i18n.pluralRules.esSelect_);
"he" == goog.LOCALE && (goog.i18n.pluralRules.select = goog.i18n.pluralRules.heSelect_);
"hi" == goog.LOCALE && (goog.i18n.pluralRules.select = goog.i18n.pluralRules.hiSelect_);
"hr" == goog.LOCALE && (goog.i18n.pluralRules.select = goog.i18n.pluralRules.srSelect_);
"hu" == goog.LOCALE && (goog.i18n.pluralRules.select = goog.i18n.pluralRules.esSelect_);
"hy" == goog.LOCALE && (goog.i18n.pluralRules.select = goog.i18n.pluralRules.frSelect_);
"id" == goog.LOCALE && (goog.i18n.pluralRules.select = goog.i18n.pluralRules.defaultSelect_);
"in" == goog.LOCALE && (goog.i18n.pluralRules.select = goog.i18n.pluralRules.defaultSelect_);
"is" == goog.LOCALE && (goog.i18n.pluralRules.select = goog.i18n.pluralRules.isSelect_);
"it" == goog.LOCALE && (goog.i18n.pluralRules.select = goog.i18n.pluralRules.enSelect_);
"iw" == goog.LOCALE && (goog.i18n.pluralRules.select = goog.i18n.pluralRules.heSelect_);
"ja" == goog.LOCALE && (goog.i18n.pluralRules.select = goog.i18n.pluralRules.defaultSelect_);
"ka" == goog.LOCALE && (goog.i18n.pluralRules.select = goog.i18n.pluralRules.esSelect_);
"kk" == goog.LOCALE && (goog.i18n.pluralRules.select = goog.i18n.pluralRules.esSelect_);
"km" == goog.LOCALE && (goog.i18n.pluralRules.select = goog.i18n.pluralRules.defaultSelect_);
"kn" == goog.LOCALE && (goog.i18n.pluralRules.select = goog.i18n.pluralRules.hiSelect_);
"ko" == goog.LOCALE && (goog.i18n.pluralRules.select = goog.i18n.pluralRules.defaultSelect_);
"ky" == goog.LOCALE && (goog.i18n.pluralRules.select = goog.i18n.pluralRules.esSelect_);
"ln" == goog.LOCALE && (goog.i18n.pluralRules.select = goog.i18n.pluralRules.akSelect_);
"lo" == goog.LOCALE && (goog.i18n.pluralRules.select = goog.i18n.pluralRules.defaultSelect_);
"lt" == goog.LOCALE && (goog.i18n.pluralRules.select = goog.i18n.pluralRules.ltSelect_);
"lv" == goog.LOCALE && (goog.i18n.pluralRules.select = goog.i18n.pluralRules.lvSelect_);
"mk" == goog.LOCALE && (goog.i18n.pluralRules.select = goog.i18n.pluralRules.mkSelect_);
"ml" == goog.LOCALE && (goog.i18n.pluralRules.select = goog.i18n.pluralRules.esSelect_);
"mn" == goog.LOCALE && (goog.i18n.pluralRules.select = goog.i18n.pluralRules.esSelect_);
"mo" == goog.LOCALE && (goog.i18n.pluralRules.select = goog.i18n.pluralRules.roSelect_);
"mr" == goog.LOCALE && (goog.i18n.pluralRules.select = goog.i18n.pluralRules.hiSelect_);
"ms" == goog.LOCALE && (goog.i18n.pluralRules.select = goog.i18n.pluralRules.defaultSelect_);
"mt" == goog.LOCALE && (goog.i18n.pluralRules.select = goog.i18n.pluralRules.mtSelect_);
"my" == goog.LOCALE && (goog.i18n.pluralRules.select = goog.i18n.pluralRules.defaultSelect_);
"nb" == goog.LOCALE && (goog.i18n.pluralRules.select = goog.i18n.pluralRules.esSelect_);
"ne" == goog.LOCALE && (goog.i18n.pluralRules.select = goog.i18n.pluralRules.esSelect_);
"nl" == goog.LOCALE && (goog.i18n.pluralRules.select = goog.i18n.pluralRules.enSelect_);
"no" == goog.LOCALE && (goog.i18n.pluralRules.select = goog.i18n.pluralRules.esSelect_);
if ("no_NO" == goog.LOCALE || "no-NO" == goog.LOCALE) {
  goog.i18n.pluralRules.select = goog.i18n.pluralRules.esSelect_;
}
"or" == goog.LOCALE && (goog.i18n.pluralRules.select = goog.i18n.pluralRules.esSelect_);
"pa" == goog.LOCALE && (goog.i18n.pluralRules.select = goog.i18n.pluralRules.akSelect_);
"pl" == goog.LOCALE && (goog.i18n.pluralRules.select = goog.i18n.pluralRules.plSelect_);
"pt" == goog.LOCALE && (goog.i18n.pluralRules.select = goog.i18n.pluralRules.ptSelect_);
if ("pt_BR" == goog.LOCALE || "pt-BR" == goog.LOCALE) {
  goog.i18n.pluralRules.select = goog.i18n.pluralRules.ptSelect_;
}
if ("pt_PT" == goog.LOCALE || "pt-PT" == goog.LOCALE) {
  goog.i18n.pluralRules.select = goog.i18n.pluralRules.pt_PTSelect_;
}
"ro" == goog.LOCALE && (goog.i18n.pluralRules.select = goog.i18n.pluralRules.roSelect_);
"ru" == goog.LOCALE && (goog.i18n.pluralRules.select = goog.i18n.pluralRules.ruSelect_);
"sh" == goog.LOCALE && (goog.i18n.pluralRules.select = goog.i18n.pluralRules.srSelect_);
"si" == goog.LOCALE && (goog.i18n.pluralRules.select = goog.i18n.pluralRules.siSelect_);
"sk" == goog.LOCALE && (goog.i18n.pluralRules.select = goog.i18n.pluralRules.csSelect_);
"sl" == goog.LOCALE && (goog.i18n.pluralRules.select = goog.i18n.pluralRules.slSelect_);
"sq" == goog.LOCALE && (goog.i18n.pluralRules.select = goog.i18n.pluralRules.esSelect_);
"sr" == goog.LOCALE && (goog.i18n.pluralRules.select = goog.i18n.pluralRules.srSelect_);
if ("sr_Latn" == goog.LOCALE || "sr-Latn" == goog.LOCALE) {
  goog.i18n.pluralRules.select = goog.i18n.pluralRules.srSelect_;
}
"sv" == goog.LOCALE && (goog.i18n.pluralRules.select = goog.i18n.pluralRules.enSelect_);
"sw" == goog.LOCALE && (goog.i18n.pluralRules.select = goog.i18n.pluralRules.enSelect_);
"ta" == goog.LOCALE && (goog.i18n.pluralRules.select = goog.i18n.pluralRules.esSelect_);
"te" == goog.LOCALE && (goog.i18n.pluralRules.select = goog.i18n.pluralRules.esSelect_);
"th" == goog.LOCALE && (goog.i18n.pluralRules.select = goog.i18n.pluralRules.defaultSelect_);
"tl" == goog.LOCALE && (goog.i18n.pluralRules.select = goog.i18n.pluralRules.filSelect_);
"tr" == goog.LOCALE && (goog.i18n.pluralRules.select = goog.i18n.pluralRules.esSelect_);
"uk" == goog.LOCALE && (goog.i18n.pluralRules.select = goog.i18n.pluralRules.ruSelect_);
"ur" == goog.LOCALE && (goog.i18n.pluralRules.select = goog.i18n.pluralRules.enSelect_);
"uz" == goog.LOCALE && (goog.i18n.pluralRules.select = goog.i18n.pluralRules.esSelect_);
"vi" == goog.LOCALE && (goog.i18n.pluralRules.select = goog.i18n.pluralRules.defaultSelect_);
"zh" == goog.LOCALE && (goog.i18n.pluralRules.select = goog.i18n.pluralRules.defaultSelect_);
if ("zh_CN" == goog.LOCALE || "zh-CN" == goog.LOCALE) {
  goog.i18n.pluralRules.select = goog.i18n.pluralRules.defaultSelect_;
}
if ("zh_HK" == goog.LOCALE || "zh-HK" == goog.LOCALE) {
  goog.i18n.pluralRules.select = goog.i18n.pluralRules.defaultSelect_;
}
if ("zh_TW" == goog.LOCALE || "zh-TW" == goog.LOCALE) {
  goog.i18n.pluralRules.select = goog.i18n.pluralRules.defaultSelect_;
}
"zu" == goog.LOCALE && (goog.i18n.pluralRules.select = goog.i18n.pluralRules.hiSelect_);
goog.i18n.MessageFormat = function(pattern) {
  this.literals_ = [];
  this.parsedPattern_ = [];
  this.numberFormatter_ = new goog.i18n.NumberFormat(goog.i18n.NumberFormat.Format.DECIMAL);
  this.parsePattern_(pattern);
};
goog.i18n.MessageFormat.LITERAL_PLACEHOLDER_ = "\ufddf_";
goog.i18n.MessageFormat.Element_ = {STRING:0, BLOCK:1};
goog.i18n.MessageFormat.BlockType_ = {PLURAL:0, ORDINAL:1, SELECT:2, SIMPLE:3, STRING:4, UNKNOWN:5};
goog.i18n.MessageFormat.OTHER_ = "other";
goog.i18n.MessageFormat.REGEX_LITERAL_ = /'([{}#].*?)'/g;
goog.i18n.MessageFormat.REGEX_DOUBLE_APOSTROPHE_ = /''/g;
goog.i18n.MessageFormat.prototype.format = function(namedParameters) {
  return this.format_(namedParameters, !1);
};
goog.i18n.MessageFormat.prototype.format_ = function(namedParameters, ignorePound) {
  if (0 == this.parsedPattern_.length) {
    return "";
  }
  var result = [];
  this.formatBlock_(this.parsedPattern_, namedParameters, ignorePound, result);
  var message = result.join("");
  for (ignorePound || goog.asserts.assert(-1 == message.search("#"), "Not all # were replaced.");0 < this.literals_.length;) {
    message = message.replace(this.buildPlaceholder_(this.literals_), this.literals_.pop());
  }
  return message;
};
goog.i18n.MessageFormat.prototype.formatBlock_ = function(parsedPattern, namedParameters, ignorePound, result) {
  for (var i = 0;i < parsedPattern.length;i++) {
    switch(parsedPattern[i].type) {
      case goog.i18n.MessageFormat.BlockType_.STRING:
        result.push(parsedPattern[i].value);
        break;
      case goog.i18n.MessageFormat.BlockType_.SIMPLE:
        var pattern = parsedPattern[i].value;
        this.formatSimplePlaceholder_(pattern, namedParameters, result);
        break;
      case goog.i18n.MessageFormat.BlockType_.SELECT:
        pattern = parsedPattern[i].value;
        this.formatSelectBlock_(pattern, namedParameters, ignorePound, result);
        break;
      case goog.i18n.MessageFormat.BlockType_.PLURAL:
        pattern = parsedPattern[i].value;
        this.formatPluralOrdinalBlock_(pattern, namedParameters, goog.i18n.pluralRules.select, ignorePound, result);
        break;
      case goog.i18n.MessageFormat.BlockType_.ORDINAL:
        pattern = parsedPattern[i].value;
        this.formatPluralOrdinalBlock_(pattern, namedParameters, goog.i18n.ordinalRules.select, ignorePound, result);
        break;
      default:
        goog.asserts.fail("Unrecognized block type: " + parsedPattern[i].type);
    }
  }
};
goog.i18n.MessageFormat.prototype.formatSimplePlaceholder_ = function(parsedPattern, namedParameters, result) {
  var value = namedParameters[parsedPattern];
  goog.isDef(value) ? (this.literals_.push(value), result.push(this.buildPlaceholder_(this.literals_))) : result.push("Undefined parameter - " + parsedPattern);
};
goog.i18n.MessageFormat.prototype.formatSelectBlock_ = function(parsedPattern, namedParameters, ignorePound, result) {
  var argumentIndex = parsedPattern.argumentIndex;
  if (goog.isDef(namedParameters[argumentIndex])) {
    var option = parsedPattern[namedParameters[argumentIndex]];
    goog.isDef(option) || (option = parsedPattern[goog.i18n.MessageFormat.OTHER_], goog.asserts.assertArray(option, "Invalid option or missing other option for select block."));
    this.formatBlock_(option, namedParameters, ignorePound, result);
  } else {
    result.push("Undefined parameter - " + argumentIndex);
  }
};
goog.i18n.MessageFormat.prototype.formatPluralOrdinalBlock_ = function(parsedPattern, namedParameters, pluralSelector, ignorePound, result) {
  var argumentIndex = parsedPattern.argumentIndex, argumentOffset = parsedPattern.argumentOffset, pluralValue = +namedParameters[argumentIndex];
  if (isNaN(pluralValue)) {
    result.push("Undefined or invalid parameter - " + argumentIndex);
  } else {
    var diff = pluralValue - argumentOffset, option = parsedPattern[namedParameters[argumentIndex]];
    if (!goog.isDef(option)) {
      goog.asserts.assert(0 <= diff, "Argument index smaller than offset.");
      var item;
      item = this.numberFormatter_.getMinimumFractionDigits ? pluralSelector(diff, this.numberFormatter_.getMinimumFractionDigits()) : pluralSelector(diff);
      goog.asserts.assertString(item, "Invalid plural key.");
      option = parsedPattern[item];
      goog.isDef(option) || (option = parsedPattern[goog.i18n.MessageFormat.OTHER_]);
      goog.asserts.assertArray(option, "Invalid option or missing other option for plural block.");
    }
    var pluralResult = [];
    this.formatBlock_(option, namedParameters, ignorePound, pluralResult);
    var plural = pluralResult.join("");
    goog.asserts.assertString(plural, "Empty block in plural.");
    if (ignorePound) {
      result.push(plural);
    } else {
      var localeAwareDiff = this.numberFormatter_.format(diff);
      result.push(plural.replace(/#/g, localeAwareDiff));
    }
  }
};
goog.i18n.MessageFormat.prototype.parsePattern_ = function(pattern) {
  pattern && (pattern = this.insertPlaceholders_(pattern), this.parsedPattern_ = this.parseBlock_(pattern));
};
goog.i18n.MessageFormat.prototype.insertPlaceholders_ = function(pattern) {
  var literals = this.literals_, buildPlaceholder = goog.bind(this.buildPlaceholder_, this);
  pattern = pattern.replace(goog.i18n.MessageFormat.REGEX_DOUBLE_APOSTROPHE_, function() {
    literals.push("'");
    return buildPlaceholder(literals);
  });
  return pattern = pattern.replace(goog.i18n.MessageFormat.REGEX_LITERAL_, function(match, text) {
    literals.push(text);
    return buildPlaceholder(literals);
  });
};
goog.i18n.MessageFormat.prototype.extractParts_ = function(pattern) {
  var prevPos = 0, braceStack = [], results = [], braces = /[{}]/g;
  braces.lastIndex = 0;
  for (var match;match = braces.exec(pattern);) {
    var pos = match.index;
    if ("}" == match[0]) {
      var brace = braceStack.pop();
      goog.asserts.assert(goog.isDef(brace) && "{" == brace, "No matching { for }.");
      if (0 == braceStack.length) {
        var part = {};
        part.type = goog.i18n.MessageFormat.Element_.BLOCK;
        part.value = pattern.substring(prevPos, pos);
        results.push(part);
        prevPos = pos + 1;
      }
    } else {
      if (0 == braceStack.length) {
        var substring = pattern.substring(prevPos, pos);
        "" != substring && results.push({type:goog.i18n.MessageFormat.Element_.STRING, value:substring});
        prevPos = pos + 1;
      }
      braceStack.push("{");
    }
  }
  goog.asserts.assert(0 == braceStack.length, "There are mismatched { or } in the pattern.");
  substring = pattern.substring(prevPos);
  "" != substring && results.push({type:goog.i18n.MessageFormat.Element_.STRING, value:substring});
  return results;
};
goog.i18n.MessageFormat.PLURAL_BLOCK_RE_ = /^\s*(\w+)\s*,\s*plural\s*,(?:\s*offset:(\d+))?/;
goog.i18n.MessageFormat.ORDINAL_BLOCK_RE_ = /^\s*(\w+)\s*,\s*selectordinal\s*,/;
goog.i18n.MessageFormat.SELECT_BLOCK_RE_ = /^\s*(\w+)\s*,\s*select\s*,/;
goog.i18n.MessageFormat.prototype.parseBlockType_ = function(pattern) {
  return goog.i18n.MessageFormat.PLURAL_BLOCK_RE_.test(pattern) ? goog.i18n.MessageFormat.BlockType_.PLURAL : goog.i18n.MessageFormat.ORDINAL_BLOCK_RE_.test(pattern) ? goog.i18n.MessageFormat.BlockType_.ORDINAL : goog.i18n.MessageFormat.SELECT_BLOCK_RE_.test(pattern) ? goog.i18n.MessageFormat.BlockType_.SELECT : /^\s*\w+\s*/.test(pattern) ? goog.i18n.MessageFormat.BlockType_.SIMPLE : goog.i18n.MessageFormat.BlockType_.UNKNOWN;
};
goog.i18n.MessageFormat.prototype.parseBlock_ = function(pattern) {
  for (var result = [], parts = this.extractParts_(pattern), i = 0;i < parts.length;i++) {
    var block = {};
    if (goog.i18n.MessageFormat.Element_.STRING == parts[i].type) {
      block.type = goog.i18n.MessageFormat.BlockType_.STRING, block.value = parts[i].value;
    } else {
      if (goog.i18n.MessageFormat.Element_.BLOCK == parts[i].type) {
        var blockType = this.parseBlockType_(parts[i].value);
        switch(blockType) {
          case goog.i18n.MessageFormat.BlockType_.SELECT:
            block.type = goog.i18n.MessageFormat.BlockType_.SELECT;
            block.value = this.parseSelectBlock_(parts[i].value);
            break;
          case goog.i18n.MessageFormat.BlockType_.PLURAL:
            block.type = goog.i18n.MessageFormat.BlockType_.PLURAL;
            block.value = this.parsePluralBlock_(parts[i].value);
            break;
          case goog.i18n.MessageFormat.BlockType_.ORDINAL:
            block.type = goog.i18n.MessageFormat.BlockType_.ORDINAL;
            block.value = this.parseOrdinalBlock_(parts[i].value);
            break;
          case goog.i18n.MessageFormat.BlockType_.SIMPLE:
            block.type = goog.i18n.MessageFormat.BlockType_.SIMPLE;
            block.value = parts[i].value;
            break;
          default:
            goog.asserts.fail("Unknown block type for pattern: " + parts[i].value);
        }
      } else {
        goog.asserts.fail("Unknown part of the pattern.");
      }
    }
    result.push(block);
  }
  return result;
};
goog.i18n.MessageFormat.prototype.parseSelectBlock_ = function(pattern) {
  var argumentIndex = "", replaceRegex = goog.i18n.MessageFormat.SELECT_BLOCK_RE_;
  pattern = pattern.replace(replaceRegex, function(string, name) {
    argumentIndex = name;
    return "";
  });
  var result = {};
  result.argumentIndex = argumentIndex;
  for (var parts = this.extractParts_(pattern), pos = 0;pos < parts.length;) {
    var key = parts[pos].value;
    goog.asserts.assertString(key, "Missing select key element.");
    pos++;
    goog.asserts.assert(pos < parts.length, "Missing or invalid select value element.");
    if (goog.i18n.MessageFormat.Element_.BLOCK == parts[pos].type) {
      var value = this.parseBlock_(parts[pos].value)
    } else {
      goog.asserts.fail("Expected block type.");
    }
    result[key.replace(/\s/g, "")] = value;
    pos++;
  }
  goog.asserts.assertArray(result[goog.i18n.MessageFormat.OTHER_], "Missing other key in select statement.");
  return result;
};
goog.i18n.MessageFormat.prototype.parsePluralBlock_ = function(pattern) {
  var argumentIndex = "", argumentOffset = 0, replaceRegex = goog.i18n.MessageFormat.PLURAL_BLOCK_RE_;
  pattern = pattern.replace(replaceRegex, function(string, name, offset) {
    argumentIndex = name;
    offset && (argumentOffset = parseInt(offset, 10));
    return "";
  });
  var result = {};
  result.argumentIndex = argumentIndex;
  result.argumentOffset = argumentOffset;
  for (var parts = this.extractParts_(pattern), pos = 0;pos < parts.length;) {
    var key = parts[pos].value;
    goog.asserts.assertString(key, "Missing plural key element.");
    pos++;
    goog.asserts.assert(pos < parts.length, "Missing or invalid plural value element.");
    if (goog.i18n.MessageFormat.Element_.BLOCK == parts[pos].type) {
      var value = this.parseBlock_(parts[pos].value)
    } else {
      goog.asserts.fail("Expected block type.");
    }
    result[key.replace(/\s*(?:=)?(\w+)\s*/, "$1")] = value;
    pos++;
  }
  goog.asserts.assertArray(result[goog.i18n.MessageFormat.OTHER_], "Missing other key in plural statement.");
  return result;
};
goog.i18n.MessageFormat.prototype.parseOrdinalBlock_ = function(pattern) {
  var argumentIndex = "", replaceRegex = goog.i18n.MessageFormat.ORDINAL_BLOCK_RE_;
  pattern = pattern.replace(replaceRegex, function(string, name) {
    argumentIndex = name;
    return "";
  });
  var result = {};
  result.argumentIndex = argumentIndex;
  result.argumentOffset = 0;
  for (var parts = this.extractParts_(pattern), pos = 0;pos < parts.length;) {
    var key = parts[pos].value;
    goog.asserts.assertString(key, "Missing ordinal key element.");
    pos++;
    goog.asserts.assert(pos < parts.length, "Missing or invalid ordinal value element.");
    if (goog.i18n.MessageFormat.Element_.BLOCK == parts[pos].type) {
      var value = this.parseBlock_(parts[pos].value)
    } else {
      goog.asserts.fail("Expected block type.");
    }
    result[key.replace(/\s*(?:=)?(\w+)\s*/, "$1")] = value;
    pos++;
  }
  goog.asserts.assertArray(result[goog.i18n.MessageFormat.OTHER_], "Missing other key in selectordinal statement.");
  return result;
};
goog.i18n.MessageFormat.prototype.buildPlaceholder_ = function(literals) {
  goog.asserts.assert(0 < literals.length, "Literal array is empty.");
  var index = (literals.length - 1).toString(10);
  return goog.i18n.MessageFormat.LITERAL_PLACEHOLDER_ + index + "_";
};
cvox.TtsCapturingEventListener = function() {
};
cvox.TtsInterface = function() {
};
cvox.TtsInterface.prototype.speak = function() {
};
cvox.TtsInterface.prototype.isSpeaking = function() {
};
cvox.TtsInterface.prototype.stop = function() {
};
cvox.TtsInterface.prototype.increaseOrDecreaseProperty = function() {
};
cvox.TtsInterface.prototype.getDefaultProperty = function() {
};
cvox.AbstractTts = function() {
  this.ttsProperties = {};
  this.propertyDefault = {rate:.5, pitch:.5, volume:.5};
  this.propertyMin = {rate:0, pitch:0, volume:0};
  this.propertyMax = {rate:1, pitch:1, volume:1};
  this.propertyStep = {rate:.1, pitch:.1, volume:.1};
  if (void 0 == cvox.AbstractTts.pronunciationDictionaryRegexp_) {
    var words = [], word;
    for (word in cvox.AbstractTts.PRONUNCIATION_DICTIONARY) {
      words.push(word);
    }
    var expr = "\\b(" + words.join("|") + ")\\b";
    cvox.AbstractTts.pronunciationDictionaryRegexp_ = new RegExp(expr, "ig");
  }
  if (void 0 == cvox.AbstractTts.substitutionDictionaryRegexp_) {
    var symbols = [], symbol;
    for (symbol in cvox.AbstractTts.SUBSTITUTION_DICTIONARY) {
      symbols.push(symbol);
    }
    expr = "(" + symbols.join("|") + ")";
    cvox.AbstractTts.substitutionDictionaryRegexp_ = new RegExp(expr, "ig");
  }
};
cvox.AbstractTts.prototype.speak = function() {
  return this;
};
cvox.AbstractTts.prototype.isSpeaking = function() {
  return !1;
};
cvox.AbstractTts.prototype.stop = function() {
};
cvox.AbstractTts.prototype.increaseOrDecreaseProperty = function(propertyName, increase) {
  var min = this.propertyMin[propertyName], max = this.propertyMax[propertyName], step = this.propertyStep[propertyName], current = this.ttsProperties[propertyName], current = increase ? current + step : current - step;
  this.ttsProperties[propertyName] = Math.max(Math.min(current, max), min);
};
cvox.AbstractTts.prototype.mergeProperties = function(properties) {
  var mergedProperties = {}, p;
  if (this.ttsProperties) {
    for (p in this.ttsProperties) {
      mergedProperties[p] = this.ttsProperties[p];
    }
  }
  if (properties) {
    var tts = cvox.AbstractTts;
    "number" == typeof properties[tts.VOLUME] && (mergedProperties[tts.VOLUME] = properties[tts.VOLUME]);
    "number" == typeof properties[tts.PITCH] && (mergedProperties[tts.PITCH] = properties[tts.PITCH]);
    "number" == typeof properties[tts.RATE] && (mergedProperties[tts.RATE] = properties[tts.RATE]);
    "string" == typeof properties[tts.LANG] && (mergedProperties[tts.LANG] = properties[tts.LANG]);
    var context = this, mergeRelativeProperty = function(abs, rel) {
      if ("number" == typeof properties[rel] && "number" == typeof mergedProperties[abs]) {
        mergedProperties[abs] += properties[rel];
        var min = context.propertyMin[abs], max = context.propertyMax[abs];
        mergedProperties[abs] > max ? mergedProperties[abs] = max : mergedProperties[abs] < min && (mergedProperties[abs] = min);
      }
    };
    mergeRelativeProperty(tts.VOLUME, tts.RELATIVE_VOLUME);
    mergeRelativeProperty(tts.PITCH, tts.RELATIVE_PITCH);
    mergeRelativeProperty(tts.RATE, tts.RELATIVE_RATE);
  }
  return mergedProperties;
};
cvox.AbstractTts.RATE = "rate";
cvox.AbstractTts.PITCH = "pitch";
cvox.AbstractTts.VOLUME = "volume";
cvox.AbstractTts.LANG = "lang";
cvox.AbstractTts.RELATIVE_RATE = "relativeRate";
cvox.AbstractTts.RELATIVE_PITCH = "relativePitch";
cvox.AbstractTts.RELATIVE_VOLUME = "relativeVolume";
cvox.AbstractTts.COLOR = "color";
cvox.AbstractTts.FONT_WEIGHT = "fontWeight";
cvox.AbstractTts.PUNCTUATION_ECHO = "punctuationEcho";
cvox.AbstractTts.PAUSE = "pause";
cvox.AbstractTts.PERSONALITY_ANNOTATION = {relativePitch:-.25, color:"yellow", punctuationEcho:"none"};
cvox.AbstractTts.PERSONALITY_ANNOUNCEMENT = {punctuationEcho:"none"};
cvox.AbstractTts.PERSONALITY_SYSTEM_ALERT = {punctuationEcho:"none", doNotInterrupt:!0};
cvox.AbstractTts.PERSONALITY_ASIDE = {relativePitch:-.1, color:"#669"};
cvox.AbstractTts.PERSONALITY_CAPITAL = {relativePitch:.6};
cvox.AbstractTts.PERSONALITY_DELETED = {punctuationEcho:"none", relativePitch:-.6};
cvox.AbstractTts.PERSONALITY_QUOTE = {relativePitch:.1, color:"#b6b", fontWeight:"bold"};
cvox.AbstractTts.PERSONALITY_STRONG = {relativePitch:.1, color:"#b66", fontWeight:"bold"};
cvox.AbstractTts.PERSONALITY_EMPHASIS = {relativeVolume:.1, relativeRate:-.1, color:"#6bb", fontWeight:"bold"};
cvox.AbstractTts.DEBUG = !0;
cvox.AbstractTts.QUEUE_MODE_FLUSH = 0;
cvox.AbstractTts.QUEUE_MODE_QUEUE = 1;
cvox.AbstractTts.CHARACTER_DICTIONARY = {" ":"space", "`":"backtick", "~":"tilde", "!":"exclamation", "@":"at", "#":"pound", $:"dollar", "%":"percent", "^":"caret", "&":"ampersand", "*":"asterisk", "(":"open_paren", ")":"close_paren", "-":"dash", _:"underscore", "=":"equals", "+":"plus", "[":"left_bracket", "]":"right_bracket", "{":"left_brace", "}":"right_brace", "|":"pipe", ";":"semicolon", ":":"colon", ",":"comma", ".":"dot", "<":"less_than", ">":"greater_than", "/":"slash", "?":"question_mark", 
'"':"quote", "'":"apostrophe", "\t":"tab", "\r":"return", "\n":"new_line", "\\":"backslash"};
cvox.AbstractTts.PRONUNCIATION_DICTIONARY = {admob:"ad-mob", adsense:"ad-sense", adwords:"ad-words", angularjs:"angular j s", bcc:"B C C", cc:"C C", chromevox:"chrome vox", cr48:"C R 48", ctrl:"control", doubleclick:"double-click", gmail:"gee mail", gtalk:"gee talk", http:"H T T P", https:"H T T P S", igoogle:"eye google", pagerank:"page-rank", username:"user-name", www:"W W W", youtube:"you tube"};
cvox.AbstractTts.SUBSTITUTION_DICTIONARY = {"://":"colon slash slash", "\u00bc":"one fourth", "\u00bd":"one half", "\u2190":"left arrow", "\u2191":"up arrow", "\u2192":"right arrow", "\u2193":"down arrow", "\u21d0":"left double arrow", "\u21d1":"up double arrow", "\u21d2":"right double  arrow", "\u21d3":"down double arrow", "\u21e6":"left arrow", "\u21e7":"up arrow", "\u21e8":"right arrow", "\u21e9":"down arrow", "\u2303":"control", "\u2318":"command", "\u2325":"option", "\u25b2":"up triangle", "\u25b3":"up triangle", 
"\u25b4":"up triangle", "\u25b5":"up triangle", "\u25b6":"right triangle", "\u25b7":"right triangle", "\u25b8":"right triangle", "\u25b9":"right triangle", "\u25ba":"right pointer", "\u25bb":"right pointer", "\u25bc":"down triangle", "\u25bd":"down triangle", "\u25be":"down triangle", "\u25bf":"down triangle", "\u25c0":"left triangle", "\u25c1":"left triangle", "\u25c2":"left triangle", "\u25c3":"left triangle", "\u25c4":"left pointer", "\u25c5":"left pointer", "\uf8ff":"apple"};
cvox.AbstractTts.repetitionRegexp_ = /([-\/\\|!@#$%^&*\(\)=_+\[\]\{\}.?;'":<>])\1{2,}/g;
cvox.AbstractTts.repetitionReplace_ = function(match) {
  var count = match.length;
  return " " + (new goog.i18n.MessageFormat(cvox.ChromeVox.msgs.getMsg(cvox.AbstractTts.CHARACTER_DICTIONARY[match[0]]))).format({COUNT:count}) + " ";
};
cvox.AbstractTts.prototype.getDefaultProperty = function(property) {
  return this.propertyDefault[property];
};
cvox.AbstractEarcons = function() {
  this.enabled = !0;
};
cvox.AbstractEarcons.prototype.playEarcon = function() {
};
cvox.AbstractEarcons.prototype.playEarconByName = function(earconName) {
  this.playEarcon(this.getEarconId(earconName));
};
cvox.AbstractEarcons.prototype.earconsAvailable = function() {
  return !0;
};
cvox.AbstractEarcons.prototype.getEarconId = function(earconName) {
  this.earconNamesToIds || (this.earconNamesToIds = {}, this.earconNamesToIds.ALERT_MODAL = cvox.AbstractEarcons.ALERT_MODAL, this.earconNamesToIds.ALERT_NONMODAL = cvox.AbstractEarcons.ALERT_NONMODAL, this.earconNamesToIds.BULLET = cvox.AbstractEarcons.BULLET, this.earconNamesToIds.BUSY_PROGRESS_LOOP = cvox.AbstractEarcons.BUSY_PROGRESS_LOOP, this.earconNamesToIds.BUSY_WORKING_LOOP = cvox.AbstractEarcons.BUSY_WORKING_LOOP, this.earconNamesToIds.BUTTON = cvox.AbstractEarcons.BUTTON, this.earconNamesToIds.CHECK_OFF = 
  cvox.AbstractEarcons.CHECK_OFF, this.earconNamesToIds.CHECK_ON = cvox.AbstractEarcons.CHECK_ON, this.earconNamesToIds.COLLAPSED = cvox.AbstractEarcons.COLLAPSED, this.earconNamesToIds.EDITABLE_TEXT = cvox.AbstractEarcons.EDITABLE_TEXT, this.earconNamesToIds.ELLIPSIS = cvox.AbstractEarcons.ELLIPSIS, this.earconNamesToIds.EXPANDED = cvox.AbstractEarcons.EXPANDED, this.earconNamesToIds.FONT_CHANGE = cvox.AbstractEarcons.FONT_CHANGE, this.earconNamesToIds.INVALID_KEYPRESS = cvox.AbstractEarcons.INVALID_KEYPRESS, 
  this.earconNamesToIds.LINK = cvox.AbstractEarcons.LINK, this.earconNamesToIds.LISTBOX = cvox.AbstractEarcons.LISTBOX, this.earconNamesToIds.LIST_ITEM = cvox.AbstractEarcons.LIST_ITEM, this.earconNamesToIds.LONG_DESC = cvox.AbstractEarcons.LONG_DESC, this.earconNamesToIds.NEW_MAIL = cvox.AbstractEarcons.NEW_MAIL, this.earconNamesToIds.OBJECT_CLOSE = cvox.AbstractEarcons.OBJECT_CLOSE, this.earconNamesToIds.OBJECT_DELETE = cvox.AbstractEarcons.OBJECT_DELETE, this.earconNamesToIds.OBJECT_DESELECT = 
  cvox.AbstractEarcons.OBJECT_DESELECT, this.earconNamesToIds.OBJECT_ENTER = cvox.AbstractEarcons.OBJECT_ENTER, this.earconNamesToIds.OBJECT_EXIT = cvox.AbstractEarcons.OBJECT_EXIT, this.earconNamesToIds.OBJECT_OPEN = cvox.AbstractEarcons.OBJECT_OPEN, this.earconNamesToIds.OBJECT_SELECT = cvox.AbstractEarcons.OBJECT_SELECT, this.earconNamesToIds.PARAGRAPH_BREAK = cvox.AbstractEarcons.PARAGRAPH_BREAK, this.earconNamesToIds.SEARCH_HIT = cvox.AbstractEarcons.SEARCH_HIT, this.earconNamesToIds.SEARCH_MISS = 
  cvox.AbstractEarcons.SEARCH_MISS, this.earconNamesToIds.SECTION = cvox.AbstractEarcons.SECTION, this.earconNamesToIds.SELECTION = cvox.AbstractEarcons.SELECTION, this.earconNamesToIds.SELECTION_REVERSE = cvox.AbstractEarcons.SELECTION_REVERSE, this.earconNamesToIds.SPECIAL_CONTENT = cvox.AbstractEarcons.SPECIAL_CONTENT, this.earconNamesToIds.TASK_SUCCESS = cvox.AbstractEarcons.TASK_SUCCESS, this.earconNamesToIds.WRAP = cvox.AbstractEarcons.WRAP, this.earconNamesToIds.WRAP_EDGE = cvox.AbstractEarcons.WRAP_EDGE);
  return this.earconNamesToIds[earconName];
};
cvox.AbstractEarcons.prototype.getEarconFilename = function(earconId) {
  return cvox.AbstractEarcons.earconMap[earconId];
};
cvox.AbstractEarcons.prototype.toggle = function() {
  return this.enabled = !this.enabled;
};
cvox.AbstractEarcons.ALERT_MODAL = 0;
cvox.AbstractEarcons.ALERT_NONMODAL = 1;
cvox.AbstractEarcons.BULLET = 2;
cvox.AbstractEarcons.BUSY_PROGRESS_LOOP = 3;
cvox.AbstractEarcons.BUSY_WORKING_LOOP = 4;
cvox.AbstractEarcons.BUTTON = 5;
cvox.AbstractEarcons.CHECK_OFF = 6;
cvox.AbstractEarcons.CHECK_ON = 7;
cvox.AbstractEarcons.COLLAPSED = 8;
cvox.AbstractEarcons.EDITABLE_TEXT = 9;
cvox.AbstractEarcons.ELLIPSIS = 10;
cvox.AbstractEarcons.EXPANDED = 11;
cvox.AbstractEarcons.FONT_CHANGE = 12;
cvox.AbstractEarcons.INVALID_KEYPRESS = 13;
cvox.AbstractEarcons.LINK = 14;
cvox.AbstractEarcons.LISTBOX = 15;
cvox.AbstractEarcons.LIST_ITEM = 16;
cvox.AbstractEarcons.LONG_DESC = 17;
cvox.AbstractEarcons.NEW_MAIL = 18;
cvox.AbstractEarcons.OBJECT_CLOSE = 19;
cvox.AbstractEarcons.OBJECT_DELETE = 20;
cvox.AbstractEarcons.OBJECT_DESELECT = 21;
cvox.AbstractEarcons.OBJECT_ENTER = 22;
cvox.AbstractEarcons.OBJECT_EXIT = 23;
cvox.AbstractEarcons.OBJECT_OPEN = 24;
cvox.AbstractEarcons.OBJECT_SELECT = 25;
cvox.AbstractEarcons.PARAGRAPH_BREAK = 26;
cvox.AbstractEarcons.SEARCH_HIT = 27;
cvox.AbstractEarcons.SEARCH_MISS = 28;
cvox.AbstractEarcons.SECTION = 29;
cvox.AbstractEarcons.SELECTION = 30;
cvox.AbstractEarcons.SELECTION_REVERSE = 31;
cvox.AbstractEarcons.SPECIAL_CONTENT = 32;
cvox.AbstractEarcons.TASK_SUCCESS = 33;
cvox.AbstractEarcons.WRAP = 34;
cvox.AbstractEarcons.WRAP_EDGE = 35;
cvox.AbstractEarcons.earconMap = {};
cvox.AbstractEarcons.earconMap[cvox.AbstractEarcons.ALERT_MODAL] = "alert_modal.ogg";
cvox.AbstractEarcons.earconMap[cvox.AbstractEarcons.ALERT_NONMODAL] = "alert_nonmodal.ogg";
cvox.AbstractEarcons.earconMap[cvox.AbstractEarcons.BULLET] = "bullet.ogg";
cvox.AbstractEarcons.earconMap[cvox.AbstractEarcons.BUSY_PROGRESS_LOOP] = "busy_progress_loop.ogg";
cvox.AbstractEarcons.earconMap[cvox.AbstractEarcons.BUSY_WORKING_LOOP] = "busy_working_loop.ogg";
cvox.AbstractEarcons.earconMap[cvox.AbstractEarcons.BUTTON] = "button.ogg";
cvox.AbstractEarcons.earconMap[cvox.AbstractEarcons.CHECK_OFF] = "check_off.ogg";
cvox.AbstractEarcons.earconMap[cvox.AbstractEarcons.CHECK_ON] = "check_on.ogg";
cvox.AbstractEarcons.earconMap[cvox.AbstractEarcons.COLLAPSED] = "collapsed.ogg";
cvox.AbstractEarcons.earconMap[cvox.AbstractEarcons.EDITABLE_TEXT] = "editable_text.ogg";
cvox.AbstractEarcons.earconMap[cvox.AbstractEarcons.ELLIPSIS] = "ellipsis.ogg";
cvox.AbstractEarcons.earconMap[cvox.AbstractEarcons.EXPANDED] = "expanded.ogg";
cvox.AbstractEarcons.earconMap[cvox.AbstractEarcons.FONT_CHANGE] = "font_change.ogg";
cvox.AbstractEarcons.earconMap[cvox.AbstractEarcons.INVALID_KEYPRESS] = "invalid_keypress.ogg";
cvox.AbstractEarcons.earconMap[cvox.AbstractEarcons.LINK] = "link.ogg";
cvox.AbstractEarcons.earconMap[cvox.AbstractEarcons.LISTBOX] = "listbox.ogg";
cvox.AbstractEarcons.earconMap[cvox.AbstractEarcons.LIST_ITEM] = "bullet.ogg";
cvox.AbstractEarcons.earconMap[cvox.AbstractEarcons.LONG_DESC] = "long_desc.ogg";
cvox.AbstractEarcons.earconMap[cvox.AbstractEarcons.NEW_MAIL] = "new_mail.ogg";
cvox.AbstractEarcons.earconMap[cvox.AbstractEarcons.OBJECT_CLOSE] = "object_close.ogg";
cvox.AbstractEarcons.earconMap[cvox.AbstractEarcons.OBJECT_DELETE] = "object_delete.ogg";
cvox.AbstractEarcons.earconMap[cvox.AbstractEarcons.OBJECT_DESELECT] = "object_deselect.ogg";
cvox.AbstractEarcons.earconMap[cvox.AbstractEarcons.OBJECT_ENTER] = "object_enter.ogg";
cvox.AbstractEarcons.earconMap[cvox.AbstractEarcons.OBJECT_EXIT] = "object_exit.ogg";
cvox.AbstractEarcons.earconMap[cvox.AbstractEarcons.OBJECT_OPEN] = "object_open.ogg";
cvox.AbstractEarcons.earconMap[cvox.AbstractEarcons.OBJECT_SELECT] = "object_select.ogg";
cvox.AbstractEarcons.earconMap[cvox.AbstractEarcons.PARAGRAPH_BREAK] = "paragraph_break.ogg";
cvox.AbstractEarcons.earconMap[cvox.AbstractEarcons.SEARCH_HIT] = "search_hit.ogg";
cvox.AbstractEarcons.earconMap[cvox.AbstractEarcons.SEARCH_MISS] = "search_miss.ogg";
cvox.AbstractEarcons.earconMap[cvox.AbstractEarcons.SECTION] = "section.ogg";
cvox.AbstractEarcons.earconMap[cvox.AbstractEarcons.SELECTION] = "selection.ogg";
cvox.AbstractEarcons.earconMap[cvox.AbstractEarcons.SELECTION_REVERSE] = "selection_reverse.ogg";
cvox.AbstractEarcons.earconMap[cvox.AbstractEarcons.SPECIAL_CONTENT] = "special_content.ogg";
cvox.AbstractEarcons.earconMap[cvox.AbstractEarcons.TASK_SUCCESS] = "task_success.ogg";
cvox.AbstractEarcons.earconMap[cvox.AbstractEarcons.WRAP] = "wrap.ogg";
cvox.AbstractEarcons.earconMap[cvox.AbstractEarcons.WRAP_EDGE] = "wrap_edge.ogg";
cvox.NodeStateUtil = {};
cvox.NodeStateUtil.expand = function(state) {
  try {
    return state.map(function(s) {
      if (1 > s.length) {
        throw Error("cvox.NodeState must have at least one entry");
      }
      var args = s.slice(1).map(function(a) {
        return "number" == typeof a ? cvox.ChromeVox.msgs.getNumber(a) : a;
      });
      return cvox.ChromeVox.msgs.getMsg(s[0], args);
    }).join(" ");
  } catch (e) {
    throw Error("error: " + e + " state: " + state);
  }
};
cvox.AriaUtil = function() {
};
cvox.AriaUtil.NO_ROLE_NAME = " ";
cvox.AriaUtil.WIDGET_ROLE_TO_NAME = {alert:"aria_role_alert", alertdialog:"aria_role_alertdialog", button:"aria_role_button", checkbox:"aria_role_checkbox", columnheader:"aria_role_columnheader", combobox:"aria_role_combobox", dialog:"aria_role_dialog", grid:"aria_role_grid", gridcell:"aria_role_gridcell", link:"aria_role_link", listbox:"aria_role_listbox", log:"aria_role_log", marquee:"aria_role_marquee", menu:"aria_role_menu", menubar:"aria_role_menubar", menuitem:"aria_role_menuitem", menuitemcheckbox:"aria_role_menuitemcheckbox", 
menuitemradio:"aria_role_menuitemradio", option:cvox.AriaUtil.NO_ROLE_NAME, progressbar:"aria_role_progressbar", radio:"aria_role_radio", radiogroup:"aria_role_radiogroup", rowheader:"aria_role_rowheader", scrollbar:"aria_role_scrollbar", slider:"aria_role_slider", spinbutton:"aria_role_spinbutton", status:"aria_role_status", tab:"aria_role_tab", tablist:"aria_role_tablist", tabpanel:"aria_role_tabpanel", textbox:"aria_role_textbox", timer:"aria_role_timer", toolbar:"aria_role_toolbar", tooltip:"aria_role_tooltip", 
treeitem:"aria_role_treeitem"};
cvox.AriaUtil.STRUCTURE_ROLE_TO_NAME = {article:"aria_role_article", application:"aria_role_application", banner:"aria_role_banner", columnheader:"aria_role_columnheader", complementary:"aria_role_complementary", contentinfo:"aria_role_contentinfo", definition:"aria_role_definition", directory:"aria_role_directory", document:"aria_role_document", form:"aria_role_form", group:"aria_role_group", heading:"aria_role_heading", img:"aria_role_img", list:"aria_role_list", listitem:"aria_role_listitem", 
main:"aria_role_main", math:"aria_role_math", navigation:"aria_role_navigation", note:"aria_role_note", region:"aria_role_region", rowheader:"aria_role_rowheader", search:"aria_role_search", separator:"aria_role_separator"};
cvox.AriaUtil.ATTRIBUTE_VALUE_TO_STATUS = [{name:"aria-autocomplete", values:{inline:"aria_autocomplete_inline", list:"aria_autocomplete_list", both:"aria_autocomplete_both"}}, {name:"aria-checked", values:{"true":"aria_checked_true", "false":"aria_checked_false", mixed:"aria_checked_mixed"}}, {name:"aria-disabled", values:{"true":"aria_disabled_true"}}, {name:"aria-expanded", values:{"true":"aria_expanded_true", "false":"aria_expanded_false"}}, {name:"aria-invalid", values:{"true":"aria_invalid_true", 
grammar:"aria_invalid_grammar", spelling:"aria_invalid_spelling"}}, {name:"aria-multiline", values:{"true":"aria_multiline_true"}}, {name:"aria-multiselectable", values:{"true":"aria_multiselectable_true"}}, {name:"aria-pressed", values:{"true":"aria_pressed_true", "false":"aria_pressed_false", mixed:"aria_pressed_mixed"}}, {name:"aria-readonly", values:{"true":"aria_readonly_true"}}, {name:"aria-required", values:{"true":"aria_required_true"}}, {name:"aria-selected", values:{"true":"aria_selected_true", 
"false":"aria_selected_false"}}];
cvox.AriaUtil.isHiddenRecursive = function(targetNode) {
  if (cvox.AriaUtil.isHidden(targetNode)) {
    return !0;
  }
  for (var parent = targetNode.parentElement;parent;) {
    if ("true" == parent.getAttribute("aria-hidden") && "true" != parent.getAttribute("chromevoxignoreariahidden")) {
      return !0;
    }
    parent = parent.parentElement;
  }
  return !1;
};
cvox.AriaUtil.isHidden = function(targetNode) {
  return !targetNode || targetNode.getAttribute && "true" == targetNode.getAttribute("aria-hidden") && "true" != targetNode.getAttribute("chromevoxignoreariahidden") ? !0 : !1;
};
cvox.AriaUtil.isForcedVisibleRecursive = function(targetNode) {
  for (var node = targetNode;node;) {
    if (node.getAttribute && node.hasAttribute("aria-hidden") && "true" != node.getAttribute("chromevoxignoreariahidden")) {
      return "false" == node.getAttribute("aria-hidden");
    }
    node = node.parentElement;
  }
  return !1;
};
cvox.AriaUtil.isLeafElement = function(targetElement) {
  var role = targetElement.getAttribute("role"), hasArialLabel = targetElement.hasAttribute("aria-label") && 0 < targetElement.getAttribute("aria-label").length;
  return "img" == role || "progressbar" == role || hasArialLabel;
};
cvox.AriaUtil.isDescendantOfRole = function(node, roleName) {
  for (;node;) {
    if (roleName && node && node.getAttribute("role") == roleName) {
      return !0;
    }
    node = node.parentNode;
  }
  return !1;
};
cvox.AriaUtil.getRoleNameMsgForRole_ = function(role) {
  var msgId = cvox.AriaUtil.WIDGET_ROLE_TO_NAME[role];
  return msgId ? msgId == cvox.AriaUtil.NO_ROLE_NAME ? " " : msgId : null;
};
cvox.AriaUtil.isButton = function(node) {
  var role = cvox.AriaUtil.getRoleAttribute(node);
  return "button" == role || "BUTTON" == node.tagName ? !0 : "INPUT" == node.tagName ? "submit" == node.type || "reset" == node.type || "button" == node.type : !1;
};
cvox.AriaUtil.getRoleNameMsg = function(targetNode) {
  var roleName;
  if (targetNode && targetNode.getAttribute) {
    var role = cvox.AriaUtil.getRoleAttribute(targetNode);
    if ("true" == targetNode.getAttribute("aria-haspopup") && cvox.AriaUtil.isButton(targetNode)) {
      return "aria_role_popup_button";
    }
    role && ((roleName = cvox.AriaUtil.getRoleNameMsgForRole_(role)) || (roleName = cvox.AriaUtil.STRUCTURE_ROLE_TO_NAME[role]));
    if ("menuitem" == role) {
      for (var container = targetNode.parentElement;container && (!container.getAttribute || "menu" != cvox.AriaUtil.getRoleAttribute(container) && "menubar" != cvox.AriaUtil.getRoleAttribute(container));) {
        container = container.parentElement;
      }
      container && "menubar" == cvox.AriaUtil.getRoleAttribute(container) && (roleName = cvox.AriaUtil.getRoleNameMsgForRole_("menu"));
    }
  }
  roleName || (roleName = "");
  return roleName;
};
cvox.AriaUtil.getRoleName = function(targetNode) {
  var roleMsg = cvox.AriaUtil.getRoleNameMsg(targetNode), roleName = cvox.ChromeVox.msgs.getMsg(roleMsg), role = cvox.AriaUtil.getRoleAttribute(targetNode);
  "heading" == role && targetNode.hasAttribute("aria-level") && (roleName += " " + targetNode.getAttribute("aria-level"));
  return roleName ? roleName : "";
};
cvox.AriaUtil.getStateMsgs = function(targetNode, primary) {
  var state = [];
  if (!targetNode || !targetNode.getAttribute) {
    return state;
  }
  for (var i = 0, attr;attr = cvox.AriaUtil.ATTRIBUTE_VALUE_TO_STATUS[i];i++) {
    var value = targetNode.getAttribute(attr.name), msg_id = attr.values[value];
    msg_id && state.push([msg_id]);
  }
  if ("grid" == targetNode.getAttribute("role")) {
    return cvox.AriaUtil.getGridState_(targetNode, targetNode);
  }
  var role = cvox.AriaUtil.getRoleAttribute(targetNode);
  "true" == targetNode.getAttribute("aria-haspopup") && ("menuitem" == role ? state.push(["has_submenu"]) : cvox.AriaUtil.isButton(targetNode) || state.push(["has_popup"]));
  var valueText = targetNode.getAttribute("aria-valuetext");
  if (valueText) {
    return state.push(["aria_value_text", valueText]), state;
  }
  var valueNow = targetNode.getAttribute("aria-valuenow"), valueMin = targetNode.getAttribute("aria-valuemin"), valueMax = targetNode.getAttribute("aria-valuemax");
  if (null != valueNow && null != valueMin && null != valueMax && ("scrollbar" == role || "progressbar" == role)) {
    var percent = Math.round(valueNow / (valueMax - valueMin) * 100);
    state.push(["state_percent", percent]);
    return state;
  }
  null != valueNow && state.push(["aria_value_now", valueNow]);
  null != valueMin && state.push(["aria_value_min", valueMin]);
  null != valueMax && state.push(["aria_value_max", valueMax]);
  var parentControl = targetNode, currentDescendant = null;
  if (cvox.AriaUtil.isCompositeControl(parentControl) && primary) {
    currentDescendant = cvox.AriaUtil.getActiveDescendant(parentControl);
  } else {
    if (role = cvox.AriaUtil.getRoleAttribute(targetNode), "option" == role || "menuitem" == role || "menuitemcheckbox" == role || "menuitemradio" == role || "radio" == role || "tab" == role || "treeitem" == role) {
      for (currentDescendant = targetNode, parentControl = targetNode.parentElement;parentControl && !cvox.AriaUtil.isCompositeControl(parentControl) && (!(parentControl = parentControl.parentElement) || "treeitem" != cvox.AriaUtil.getRoleAttribute(parentControl));) {
      }
    }
  }
  if (parentControl && (cvox.AriaUtil.isCompositeControl(parentControl) || "treeitem" == cvox.AriaUtil.getRoleAttribute(parentControl)) && currentDescendant) {
    var parentRole = cvox.AriaUtil.getRoleAttribute(parentControl), descendantRoleList;
    switch(parentRole) {
      case "combobox":
      ;
      case "listbox":
        descendantRoleList = ["option"];
        break;
      case "menu":
        descendantRoleList = ["menuitem", "menuitemcheckbox", "menuitemradio"];
        break;
      case "radiogroup":
        descendantRoleList = ["radio"];
        break;
      case "tablist":
        descendantRoleList = ["tab"];
        break;
      case "tree":
      ;
      case "treegrid":
      ;
      case "treeitem":
        descendantRoleList = ["treeitem"];
    }
    if (descendantRoleList) {
      var listLength, currentIndex, ariaLength = parseInt(currentDescendant.getAttribute("aria-setsize"), 10);
      isNaN(ariaLength) || (listLength = ariaLength);
      var ariaIndex = parseInt(currentDescendant.getAttribute("aria-posinset"), 10);
      isNaN(ariaIndex) || (currentIndex = ariaIndex);
      if (void 0 == listLength || void 0 == currentIndex) {
        var descendants = cvox.AriaUtil.getNextLevel(parentControl, descendantRoleList);
        void 0 == listLength && (listLength = descendants.length);
        if (void 0 == currentIndex) {
          for (var j = 0;j < descendants.length;j++) {
            descendants[j] == currentDescendant && (currentIndex = j + 1);
          }
        }
      }
      currentIndex && listLength && state.push(["list_position", currentIndex, listLength]);
    }
  }
  return state;
};
cvox.AriaUtil.getGridState_ = function(targetNode, parentControl) {
  var activeDescendant = cvox.AriaUtil.getActiveDescendant(parentControl);
  if (activeDescendant) {
    for (var descendantSelector = '*[role~="row"]', rows = parentControl.querySelectorAll(descendantSelector), j = 0;j < rows.length;j++) {
      for (var gridcells = rows[j].querySelectorAll('*[role~="gridcell"]'), k = 0;k < gridcells.length;k++) {
        if (gridcells[k] == activeDescendant) {
          return [["aria_role_gridcell_pos", j + 1, k + 1]];
        }
      }
    }
  }
  return [];
};
cvox.AriaUtil.getActiveDescendantId_ = function(targetNode) {
  if (!targetNode.getAttribute) {
    return null;
  }
  var activeId = targetNode.getAttribute("aria-activedescendant");
  return activeId ? activeId : null;
};
cvox.AriaUtil.getNextLevel = function(parentControl, role) {
  for (var result = [], children = parentControl.childNodes, i = 0;i < children.length;i++) {
    if (!cvox.AriaUtil.isHidden(children[i]) && cvox.DomUtil.isVisible(children[i])) {
      var nextLevel = cvox.AriaUtil.getNextLevelItems(children[i], role);
      0 < nextLevel.length && (result = result.concat(nextLevel));
    }
  }
  return result;
};
cvox.AriaUtil.getNextLevelItems = function(current, role) {
  if (1 != current.nodeType) {
    return [];
  }
  if (-1 != role.indexOf(cvox.AriaUtil.getRoleAttribute(current))) {
    return [current];
  }
  var children = current.childNodes, length = children.length;
  if (0 == length) {
    return [];
  }
  for (var resultArray = [], i = 0;i < length;i++) {
    var result = cvox.AriaUtil.getNextLevelItems(children[i], role);
    0 < result.length && (resultArray = resultArray.concat(result));
  }
  return resultArray;
};
cvox.AriaUtil.getActiveDescendant = function(targetNode) {
  for (var seenIds = {}, node = targetNode;node;) {
    var activeId = cvox.AriaUtil.getActiveDescendantId_(node);
    if (!activeId) {
      break;
    }
    if (activeId in seenIds) {
      return null;
    }
    seenIds[activeId] = !0;
    node = document.getElementById(activeId);
  }
  return node == targetNode ? null : node;
};
cvox.AriaUtil.isControlWidget = function(targetNode) {
  if (targetNode && targetNode.getAttribute) {
    var role = cvox.AriaUtil.getRoleAttribute(targetNode);
    switch(role) {
      case "button":
      ;
      case "checkbox":
      ;
      case "combobox":
      ;
      case "listbox":
      ;
      case "menu":
      ;
      case "menuitemcheckbox":
      ;
      case "menuitemradio":
      ;
      case "radio":
      ;
      case "slider":
      ;
      case "progressbar":
      ;
      case "scrollbar":
      ;
      case "spinbutton":
      ;
      case "tab":
      ;
      case "tablist":
      ;
      case "textbox":
        return !0;
    }
  }
  return !1;
};
cvox.AriaUtil.isCompositeControl = function(targetNode) {
  if (targetNode && targetNode.getAttribute) {
    var role = cvox.AriaUtil.getRoleAttribute(targetNode);
    switch(role) {
      case "combobox":
      ;
      case "grid":
      ;
      case "listbox":
      ;
      case "menu":
      ;
      case "menubar":
      ;
      case "radiogroup":
      ;
      case "tablist":
      ;
      case "tree":
      ;
      case "treegrid":
        return !0;
    }
  }
  return !1;
};
cvox.AriaUtil.getAriaLive = function(node) {
  if (!node.hasAttribute) {
    return null;
  }
  var value = node.getAttribute("aria-live");
  if ("off" == value) {
    return null;
  }
  if (value) {
    return value;
  }
  var role = cvox.AriaUtil.getRoleAttribute(node);
  switch(role) {
    case "alert":
      return "assertive";
    case "log":
    ;
    case "status":
      return "polite";
    default:
      return null;
  }
};
cvox.AriaUtil.getAriaAtomic = function(node) {
  if (!node.hasAttribute) {
    return !1;
  }
  var value = node.getAttribute("aria-atomic");
  if (value) {
    return "true" === value;
  }
  var role = cvox.AriaUtil.getRoleAttribute(node);
  return "alert" == role ? !0 : !1;
};
cvox.AriaUtil.getAriaBusy = function(node) {
  if (!node.hasAttribute) {
    return !1;
  }
  var value = node.getAttribute("aria-busy");
  return value ? "true" === value : !1;
};
cvox.AriaUtil.getAriaRelevant = function(node, change) {
  if (!node.hasAttribute) {
    return !1;
  }
  var value;
  value = node.hasAttribute("aria-relevant") ? node.getAttribute("aria-relevant") : "additions text";
  "all" == value && (value = "additions removals text");
  var tokens = value.replace(/\s+/g, " ").replace(/^\s+|\s+$/g, "").split(" ");
  return "all" == change ? 0 <= tokens.indexOf("additions") && 0 <= tokens.indexOf("text") && 0 <= tokens.indexOf("removals") : 0 <= tokens.indexOf(change);
};
cvox.AriaUtil.getLiveRegions = function(node) {
  var result = [];
  if (node.querySelectorAll) {
    var nodes = node.querySelectorAll('[role="alert"], [role="log"],  [role="marquee"], [role="status"], [role="timer"],  [aria-live]');
    if (nodes) {
      for (var i = 0;i < nodes.length;i++) {
        result.push(nodes[i]);
      }
    }
  }
  for (;node;) {
    if (cvox.AriaUtil.getAriaLive(node)) {
      result.push(node);
      break;
    }
    node = node.parentElement;
  }
  return result;
};
cvox.AriaUtil.isLandmark = function(node) {
  if (!node || !node.getAttribute) {
    return !1;
  }
  var role = cvox.AriaUtil.getRoleAttribute(node);
  switch(role) {
    case "application":
    ;
    case "banner":
    ;
    case "complementary":
    ;
    case "contentinfo":
    ;
    case "form":
    ;
    case "main":
    ;
    case "navigation":
    ;
    case "search":
      return !0;
  }
  return !1;
};
cvox.AriaUtil.isGrid = function(node) {
  if (!node || !node.getAttribute) {
    return !1;
  }
  var role = cvox.AriaUtil.getRoleAttribute(node);
  switch(role) {
    case "grid":
    ;
    case "treegrid":
      return !0;
  }
  return !1;
};
cvox.AriaUtil.getEarcon = function(node) {
  if (!node || !node.getAttribute) {
    return null;
  }
  var role = cvox.AriaUtil.getRoleAttribute(node);
  switch(role) {
    case "button":
      return cvox.AbstractEarcons.BUTTON;
    case "checkbox":
    ;
    case "radio":
    ;
    case "menuitemcheckbox":
    ;
    case "menuitemradio":
      var checked = node.getAttribute("aria-checked");
      return "true" == checked ? cvox.AbstractEarcons.CHECK_ON : cvox.AbstractEarcons.CHECK_OFF;
    case "combobox":
    ;
    case "listbox":
      return cvox.AbstractEarcons.LISTBOX;
    case "textbox":
      return cvox.AbstractEarcons.EDITABLE_TEXT;
    case "listitem":
      return cvox.AbstractEarcons.BULLET;
    case "link":
      return cvox.AbstractEarcons.LINK;
  }
  return null;
};
cvox.AriaUtil.getRoleAttribute = function(targetNode) {
  if (!targetNode.getAttribute) {
    return "";
  }
  var role = targetNode.getAttribute("role");
  targetNode.hasAttribute("chromevoxoriginalrole") && (role = targetNode.getAttribute("chromevoxoriginalrole"));
  return role;
};
cvox.AriaUtil.isMath = function(node) {
  if (!node || !node.getAttribute) {
    return !1;
  }
  var role = cvox.AriaUtil.getRoleAttribute(node);
  return "math" == role;
};
cvox.DomPredicates = {};
cvox.DomPredicates.checkboxPredicate = function(nodes) {
  for (var i = 0;i < nodes.length;i++) {
    if (nodes[i].getAttribute && "checkbox" == nodes[i].getAttribute("role") || "INPUT" == nodes[i].tagName && "checkbox" == nodes[i].type) {
      return nodes[i];
    }
  }
  return null;
};
cvox.DomPredicates.radioPredicate = function(nodes) {
  for (var i = 0;i < nodes.length;i++) {
    if (nodes[i].getAttribute && "radio" == nodes[i].getAttribute("role") || "INPUT" == nodes[i].tagName && "radio" == nodes[i].type) {
      return nodes[i];
    }
  }
  return null;
};
cvox.DomPredicates.sliderPredicate = function(nodes) {
  for (var i = 0;i < nodes.length;i++) {
    if (nodes[i].getAttribute && "slider" == nodes[i].getAttribute("role") || "INPUT" == nodes[i].tagName && "range" == nodes[i].type) {
      return nodes[i];
    }
  }
  return null;
};
cvox.DomPredicates.graphicPredicate = function(nodes) {
  for (var i = 0;i < nodes.length;i++) {
    if ("IMG" == nodes[i].tagName || "INPUT" == nodes[i].tagName && "img" == nodes[i].type) {
      return nodes[i];
    }
  }
  return null;
};
cvox.DomPredicates.buttonPredicate = function(nodes) {
  for (var i = 0;i < nodes.length;i++) {
    if (nodes[i].getAttribute && "button" == nodes[i].getAttribute("role") || "BUTTON" == nodes[i].tagName || "INPUT" == nodes[i].tagName && "submit" == nodes[i].type || "INPUT" == nodes[i].tagName && "button" == nodes[i].type || "INPUT" == nodes[i].tagName && "reset" == nodes[i].type) {
      return nodes[i];
    }
  }
  return null;
};
cvox.DomPredicates.comboBoxPredicate = function(nodes) {
  for (var i = 0;i < nodes.length;i++) {
    if (nodes[i].getAttribute && "combobox" == nodes[i].getAttribute("role") || "SELECT" == nodes[i].tagName) {
      return nodes[i];
    }
  }
  return null;
};
cvox.DomPredicates.editTextPredicate = function(nodes) {
  for (var i = 0;i < nodes.length;i++) {
    if (nodes[i].getAttribute && "textbox" == nodes[i].getAttribute("role") || "TEXTAREA" == nodes[i].tagName || nodes[i].isContentEditable || "INPUT" == nodes[i].tagName && cvox.DomUtil.isInputTypeText(nodes[i])) {
      return nodes[i];
    }
  }
  return null;
};
cvox.DomPredicates.headingPredicate = function(nodes) {
  for (var i = 0;i < nodes.length;i++) {
    if (nodes[i].getAttribute && "heading" == nodes[i].getAttribute("role")) {
      return nodes[i];
    }
    switch(nodes[i].tagName) {
      case "H1":
      ;
      case "H2":
      ;
      case "H3":
      ;
      case "H4":
      ;
      case "H5":
      ;
      case "H6":
        return nodes[i];
    }
  }
  return null;
};
cvox.DomPredicates.heading1Predicate = function(nodes) {
  return cvox.DomPredicates.containsTagName_(nodes, "H1");
};
cvox.DomPredicates.heading2Predicate = function(nodes) {
  return cvox.DomPredicates.containsTagName_(nodes, "H2");
};
cvox.DomPredicates.heading3Predicate = function(nodes) {
  return cvox.DomPredicates.containsTagName_(nodes, "H3");
};
cvox.DomPredicates.heading4Predicate = function(nodes) {
  return cvox.DomPredicates.containsTagName_(nodes, "H4");
};
cvox.DomPredicates.heading5Predicate = function(nodes) {
  return cvox.DomPredicates.containsTagName_(nodes, "H5");
};
cvox.DomPredicates.heading6Predicate = function(nodes) {
  return cvox.DomPredicates.containsTagName_(nodes, "H6");
};
cvox.DomPredicates.linkPredicate = function(nodes) {
  for (var i = 0;i < nodes.length;i++) {
    if (nodes[i].getAttribute && "link" == nodes[i].getAttribute("role") || "A" == nodes[i].tagName && nodes[i].href) {
      return nodes[i];
    }
  }
  return null;
};
cvox.DomPredicates.tablePredicate = function(nodes) {
  var node = cvox.DomUtil.findTableNodeInList(nodes, {allowCaptions:!0});
  return node && !cvox.DomUtil.isLayoutTable(node) ? node : null;
};
cvox.DomPredicates.cellPredicate = function(nodes) {
  for (var i = nodes.length - 1;0 <= i;--i) {
    var node = nodes[i];
    if ("TD" == node.tagName || "TH" == node.tagName || node.getAttribute && "gridcell" == node.getAttribute("role")) {
      return node;
    }
  }
  return null;
};
cvox.DomPredicates.visitedLinkPredicate = function(nodes) {
  for (var i = nodes.length - 1;0 <= i;--i) {
    if (cvox.DomPredicates.linkPredicate([nodes[i]]) && cvox.ChromeVox.visitedUrls[nodes[i].href]) {
      return nodes[i];
    }
  }
};
cvox.DomPredicates.listPredicate = function(nodes) {
  for (var i = 0;i < nodes.length;i++) {
    if (nodes[i].getAttribute && "list" == nodes[i].getAttribute("role") || "UL" == nodes[i].tagName || "OL" == nodes[i].tagName) {
      return nodes[i];
    }
  }
  return null;
};
cvox.DomPredicates.listItemPredicate = function(nodes) {
  for (var i = 0;i < nodes.length;i++) {
    if (nodes[i].getAttribute && "listitem" == nodes[i].getAttribute("role") || "LI" == nodes[i].tagName) {
      return nodes[i];
    }
  }
  return null;
};
cvox.DomPredicates.blockquotePredicate = function(nodes) {
  return cvox.DomPredicates.containsTagName_(nodes, "BLOCKQUOTE");
};
cvox.DomPredicates.formFieldPredicate = function(nodes) {
  for (var i = 0;i < nodes.length;i++) {
    if (cvox.DomUtil.isControl(nodes[i])) {
      return nodes[i];
    }
  }
  return null;
};
cvox.DomPredicates.landmarkPredicate = function(nodes) {
  for (var i = 0;i < nodes.length;i++) {
    if (cvox.AriaUtil.isLandmark(nodes[i])) {
      return nodes[i];
    }
  }
  return null;
};
cvox.DomPredicates.containsTagName_ = function(arr, tagName) {
  for (var i = arr.length;i--;) {
    if (arr[i].tagName == tagName) {
      return arr[i];
    }
  }
  return null;
};
cvox.DomPredicates.mathPredicate = function(nodes) {
  return cvox.DomUtil.findMathNodeInList(nodes);
};
cvox.DomPredicates.sectionPredicate = function(nodes) {
  for (var i = 0;i < nodes.length;i++) {
    if (cvox.DomUtil.isSemanticElt(nodes[i]) || cvox.AriaUtil.isLandmark(nodes[i]) || nodes[i].getAttribute && "heading" == nodes[i].getAttribute("role")) {
      return nodes[i];
    }
    switch(nodes[i].tagName) {
      case "H1":
      ;
      case "H2":
      ;
      case "H3":
      ;
      case "H4":
      ;
      case "H5":
      ;
      case "H6":
        return nodes[i];
    }
  }
  return null;
};
cvox.DomPredicates.controlPredicate = function(nodes) {
  for (var i = 0;i < nodes.length;i++) {
    if (cvox.DomUtil.isControl(nodes[i]) || nodes[i].getAttribute && "link" == nodes[i].getAttribute("role") || "A" == nodes[i].tagName && nodes[i].href) {
      return nodes[i];
    }
  }
  return null;
};
cvox.DomPredicates.captionPredicate = function(nodes) {
  for (var i = 0;i < nodes.length;i++) {
    if ("CAPTION" == nodes[i].tagName) {
      return nodes[i];
    }
  }
  return null;
};
cvox.DomPredicates.articlePredicate = function(nodes) {
  for (var i = 0;i < nodes.length;i++) {
    if (nodes[i].getAttribute && "article" == nodes[i].getAttribute("role") || "ARTICLE" == nodes[i].tagName) {
      return nodes[i];
    }
  }
  return null;
};
cvox.DomPredicates.mediaPredicate = function(nodes) {
  for (var i = 0;i < nodes.length;i++) {
    if ("AUDIO" == nodes[i].tagName || "VIDEO" == nodes[i].tagName) {
      return nodes[i];
    }
  }
  return null;
};
cvox.DomPredicates.orderedListPredicate = function(nodes) {
  for (var i = 0;i < nodes.length;i++) {
    if ("OL" == nodes[i].tagName) {
      return nodes[i];
    }
  }
  return null;
};
cvox.XpathUtil = function() {
};
cvox.XpathUtil.nameSpaces_ = {xhtml:"http://www.w3.org/1999/xhtml", mathml:"http://www.w3.org/1998/Math/MathML"};
cvox.XpathUtil.resolveNameSpace = function(prefix) {
  return cvox.XpathUtil.nameSpaces_[prefix] || null;
};
cvox.XpathUtil.evalXPath = function(expression, rootNode) {
  try {
    var xpathIterator = rootNode.ownerDocument.evaluate(expression, rootNode, cvox.XpathUtil.resolveNameSpace, XPathResult.ORDERED_NODE_ITERATOR_TYPE, null);
  } catch (err) {
    return [];
  }
  for (var results = [], xpathNode = xpathIterator.iterateNext();xpathNode;xpathNode = xpathIterator.iterateNext()) {
    results.push(xpathNode);
  }
  return results;
};
cvox.XpathUtil.getLeafNodes = function(rootNode) {
  try {
    var xpathIterator = rootNode.ownerDocument.evaluate(".//*[count(*)=0]", rootNode, null, XPathResult.ORDERED_NODE_ITERATOR_TYPE, null);
  } catch (err) {
    return [];
  }
  for (var results = [], xpathNode = xpathIterator.iterateNext();xpathNode;xpathNode = xpathIterator.iterateNext()) {
    results.push(xpathNode);
  }
  return results;
};
cvox.XpathUtil.xpathSupported = function() {
  return "undefined" == typeof XPathResult ? !1 : !0;
};
cvox.XpathUtil.evaluateBoolean = function(expression, rootNode) {
  try {
    var xpathResult = rootNode.ownerDocument.evaluate(expression, rootNode, cvox.XpathUtil.resolveNameSpace, XPathResult.BOOLEAN_TYPE, null);
  } catch (err) {
    return !1;
  }
  return xpathResult.booleanValue;
};
cvox.XpathUtil.evaluateString = function(expression, rootNode) {
  try {
    var xpathResult = rootNode.ownerDocument.evaluate(expression, rootNode, cvox.XpathUtil.resolveNameSpace, XPathResult.STRING_TYPE, null);
  } catch (err) {
    return "";
  }
  return xpathResult.stringValue;
};
cvox.DomUtil = function() {
};
cvox.DomUtil.INPUT_TYPE_TO_INFORMATION_TABLE_MSG = {button:"input_type_button", checkbox:"input_type_checkbox", color:"input_type_color", datetime:"input_type_datetime", "datetime-local":"input_type_datetime_local", date:"input_type_date", email:"input_type_email", file:"input_type_file", image:"input_type_image", month:"input_type_month", number:"input_type_number", password:"input_type_password", radio:"input_type_radio", range:"input_type_range", reset:"input_type_reset", search:"input_type_search", 
submit:"input_type_submit", tel:"input_type_tel", text:"input_type_text", url:"input_type_url", week:"input_type_week"};
cvox.DomUtil.TAG_TO_INFORMATION_TABLE_VERBOSE_MSG = {A:"tag_link", ARTICLE:"tag_article", ASIDE:"tag_aside", AUDIO:"tag_audio", BUTTON:"tag_button", FOOTER:"tag_footer", H1:"tag_h1", H2:"tag_h2", H3:"tag_h3", H4:"tag_h4", H5:"tag_h5", H6:"tag_h6", HEADER:"tag_header", HGROUP:"tag_hgroup", LI:"tag_li", MARK:"tag_mark", NAV:"tag_nav", OL:"tag_ol", SECTION:"tag_section", SELECT:"tag_select", TABLE:"tag_table", TEXTAREA:"tag_textarea", TIME:"tag_time", UL:"tag_ul", VIDEO:"tag_video"};
cvox.DomUtil.TAG_TO_INFORMATION_TABLE_BRIEF_MSG = {AUDIO:"tag_audio", BUTTON:"tag_button", SELECT:"tag_select", TABLE:"tag_table", TEXTAREA:"tag_textarea", VIDEO:"tag_video"};
cvox.DomUtil.FORMATTING_TAGS = "B BIG CITE CODE DFN EM I KBD SAMP SMALL SPAN STRIKE STRONG SUB SUP U VAR".split(" ");
cvox.DomUtil.isVisible = function(node, opt_options) {
  opt_options = opt_options || {};
  "undefined" === typeof opt_options.checkAncestors && (opt_options.checkAncestors = !0);
  "undefined" === typeof opt_options.checkDescendants && (opt_options.checkDescendants = !0);
  if ("IFRAME" == node.tagName && !node.src) {
    return !1;
  }
  if (cvox.AriaUtil.isForcedVisibleRecursive(node)) {
    return !0;
  }
  if (opt_options.checkAncestors && cvox.DomUtil.hasInvisibleAncestor_(node)) {
    return !1;
  }
  var recursive = opt_options.checkDescendants;
  return cvox.DomUtil.hasVisibleNodeSubtree_(node, recursive) ? !0 : !1;
};
cvox.DomUtil.hasInvisibleAncestor_ = function(node) {
  for (var ancestor = node;ancestor = ancestor.parentElement;) {
    var style = document.defaultView.getComputedStyle(ancestor, null);
    if (cvox.DomUtil.isInvisibleStyle(style, !0)) {
      return !0;
    }
  }
  return !1;
};
cvox.DomUtil.hasVisibleNodeSubtree_ = function(root, recursive) {
  if (!(root instanceof Element)) {
    var parentStyle = document.defaultView.getComputedStyle(root.parentElement, null), isVisibleParent = !cvox.DomUtil.isInvisibleStyle(parentStyle);
    return isVisibleParent;
  }
  var rootStyle = document.defaultView.getComputedStyle(root, null), isRootVisible = !cvox.DomUtil.isInvisibleStyle(rootStyle);
  if (isRootVisible) {
    return !0;
  }
  var isSubtreeInvisible = cvox.DomUtil.isInvisibleStyle(rootStyle, !0);
  if (!recursive || isSubtreeInvisible) {
    return !1;
  }
  for (var children = root.childNodes, i = 0;i < children.length;i++) {
    var child = children[i];
    if (cvox.DomUtil.hasVisibleNodeSubtree_(child, recursive)) {
      return !0;
    }
  }
  return !1;
};
cvox.DomUtil.isInvisibleStyle = function(style, opt_strict) {
  return style ? "none" != style.display && 0 != parseFloat(style.opacity) && (opt_strict || "hidden" != style.visibility && "collapse" != style.visibility) ? !1 : !0 : !1;
};
cvox.DomUtil.isDisabled = function(node) {
  if (node.disabled) {
    return !0;
  }
  for (var ancestor = node;ancestor = ancestor.parentElement;) {
    if ("FIELDSET" == ancestor.tagName && ancestor.disabled) {
      return !0;
    }
  }
  return !1;
};
cvox.DomUtil.isSemanticElt = function(node) {
  if (node.tagName) {
    var tag = node.tagName;
    if ("SECTION" == tag || "NAV" == tag || "ARTICLE" == tag || "ASIDE" == tag || "HGROUP" == tag || "HEADER" == tag || "FOOTER" == tag || "TIME" == tag || "MARK" == tag) {
      return !0;
    }
  }
  return !1;
};
cvox.DomUtil.isLeafNode = function(node$$0, opt_allowHidden) {
  if (!(node$$0 instanceof Element)) {
    return null == node$$0.firstChild;
  }
  var element = node$$0;
  if (!opt_allowHidden && !cvox.DomUtil.isVisible(element, {checkAncestors:!1}) || !opt_allowHidden && cvox.AriaUtil.isHidden(element) || cvox.AriaUtil.isLeafElement(element)) {
    return !0;
  }
  switch(element.tagName) {
    case "OBJECT":
    ;
    case "EMBED":
    ;
    case "VIDEO":
    ;
    case "AUDIO":
    ;
    case "IFRAME":
    ;
    case "FRAME":
      return !0;
  }
  return cvox.DomPredicates.linkPredicate([element]) ? !cvox.DomUtil.findNode(element, function(node) {
    return !!cvox.DomPredicates.headingPredicate([node]);
  }) : cvox.DomUtil.isLeafLevelControl(element) || !element.firstChild || cvox.DomUtil.isMath(element) ? !0 : cvox.DomPredicates.headingPredicate([element]) ? !cvox.DomUtil.findNode(element, function(n) {
    return !!cvox.DomPredicates.controlPredicate([n]);
  }) : !1;
};
cvox.DomUtil.isDescendantOf = function(node, tagName, className) {
  for (;node;) {
    if (tagName && className && node.tagName && node.tagName == tagName && node.className && node.className == className || tagName && !className && node.tagName && node.tagName == tagName || !tagName && className && node.className && node.className == className) {
      return !0;
    }
    node = node.parentNode;
  }
  return !1;
};
cvox.DomUtil.isDescendantOfNode = function(node, ancestor) {
  for (;node && ancestor;) {
    if (node.isSameNode(ancestor)) {
      return !0;
    }
    node = node.parentNode;
  }
  return !1;
};
cvox.DomUtil.collapseWhitespace = function(str) {
  return str.replace(/\s+/g, " ").replace(/^\s+|\s+$/g, "");
};
cvox.DomUtil.getBaseLabel_ = function(node, recursive, includeControls) {
  var label = "";
  if (node.hasAttribute) {
    if (node.hasAttribute("aria-labelledby")) {
      for (var labelNodeIds = node.getAttribute("aria-labelledby").split(" "), labelNodeId, i = 0;labelNodeId = labelNodeIds[i];i++) {
        var labelNode = document.getElementById(labelNodeId);
        labelNode && (label += " " + cvox.DomUtil.getName(labelNode, !0, includeControls, !0));
      }
    } else {
      if (node.hasAttribute("aria-label")) {
        label = node.getAttribute("aria-label");
      } else {
        if (node.constructor == HTMLImageElement) {
          label = cvox.DomUtil.getImageTitle(node);
        } else {
          if ("FIELDSET" == node.tagName) {
            for (var legends = node.getElementsByTagName("LEGEND"), label = "", legend, i = 0;legend = legends[i];i++) {
              label += " " + cvox.DomUtil.getName(legend, !0, includeControls);
            }
          }
        }
      }
    }
    if (0 == label.length && node && node.id) {
      var labelFor = document.querySelector('label[for="' + node.id + '"]');
      labelFor && (label = cvox.DomUtil.getName(labelFor, recursive, includeControls));
    }
  }
  return cvox.DomUtil.collapseWhitespace(label);
};
cvox.DomUtil.getNearestAncestorLabel_ = function(node) {
  for (var label = "", enclosingLabel = node;enclosingLabel && "LABEL" != enclosingLabel.tagName;) {
    enclosingLabel = enclosingLabel.parentElement;
  }
  enclosingLabel && !enclosingLabel.hasAttribute("for") && (label = cvox.DomUtil.getName(enclosingLabel, !0, !1));
  return label;
};
cvox.DomUtil.getInputName_ = function(node) {
  var label = "";
  "image" == node.type ? label = cvox.DomUtil.getImageTitle(node) : "submit" == node.type ? label = node.hasAttribute("value") ? node.getAttribute("value") : "Submit" : "reset" == node.type ? label = node.hasAttribute("value") ? node.getAttribute("value") : "Reset" : "button" == node.type && node.hasAttribute("value") && (label = node.getAttribute("value"));
  return label;
};
cvox.DomUtil.getName = function(node, recursive, includeControls, opt_allowHidden) {
  if (!node || 1 == node.cvoxGetNameMarked) {
    return "";
  }
  node.cvoxGetNameMarked = !0;
  var ret = cvox.DomUtil.getName_(node, recursive, includeControls, opt_allowHidden);
  node.cvoxGetNameMarked = !1;
  var prefix = cvox.DomUtil.getPrefixText(node);
  return prefix + ret;
};
cvox.DomUtil.hasChildrenBasedName_ = function(node, opt_allowHidden) {
  return cvox.DomPredicates.linkPredicate([node]) || cvox.DomPredicates.headingPredicate([node]) || "BUTTON" == node.tagName || cvox.AriaUtil.isControlWidget(node) || !cvox.DomUtil.isLeafNode(node, opt_allowHidden) ? !0 : !1;
};
cvox.DomUtil.getName_ = function(node, recursive, includeControls, opt_allowHidden) {
  "undefined" === typeof recursive && (recursive = !0);
  "undefined" === typeof includeControls && (includeControls = !0);
  if (node.constructor == Text) {
    return node.data;
  }
  var label = cvox.DomUtil.getBaseLabel_(node, recursive, includeControls);
  0 == label.length && cvox.DomUtil.isControl(node) && (label = cvox.DomUtil.getNearestAncestorLabel_(node));
  0 == label.length && node.constructor == HTMLInputElement && (label = cvox.DomUtil.getInputName_(node));
  if (cvox.DomUtil.isInputTypeText(node) && node.hasAttribute("placeholder")) {
    var placeholder = node.getAttribute("placeholder");
    return 0 < label.length ? 0 < cvox.DomUtil.getValue(node).length ? label : label + " with hint " + placeholder : placeholder;
  }
  return 0 < label.length ? label : 0 == cvox.DomUtil.collapseWhitespace(node.textContent).length && node.hasAttribute && node.hasAttribute("title") ? node.getAttribute("title") : !recursive || cvox.AriaUtil.isCompositeControl(node) ? "" : cvox.DomUtil.hasChildrenBasedName_(node, opt_allowHidden) ? cvox.DomUtil.getNameFromChildren(node, includeControls, opt_allowHidden) : "";
};
cvox.DomUtil.getNameFromChildren = function(node, includeControls, opt_allowHidden) {
  void 0 == includeControls && (includeControls = !0);
  for (var name = "", delimiter = "", i = 0;i < node.childNodes.length;i++) {
    var child = node.childNodes[i], prevChild = node.childNodes[i - 1] || child;
    if (includeControls || !cvox.DomUtil.isControl(child)) {
      var isVisible = cvox.DomUtil.isVisible(child, {checkAncestors:!1});
      if (opt_allowHidden || isVisible && !cvox.AriaUtil.isHidden(child)) {
        delimiter = "SPAN" == prevChild.tagName || "SPAN" == child.tagName || "SPAN" == child.parentNode.tagName ? "" : " ", name += delimiter + cvox.DomUtil.getName(child, !0, includeControls);
      }
    }
  }
  return name;
};
cvox.DomUtil.getPrefixText = function(node, opt_index) {
  opt_index = opt_index || 0;
  for (var ancestors = cvox.DomUtil.getAncestors(node), prefix = "", firstListitem = cvox.DomPredicates.listItemPredicate(ancestors), leftmost = firstListitem;leftmost && leftmost.firstChild;) {
    leftmost = leftmost.firstChild;
  }
  if (firstListitem && firstListitem.parentNode && 0 == opt_index && "OL" == firstListitem.parentNode.tagName && node == leftmost && "none" != document.defaultView.getComputedStyle(firstListitem.parentNode).listStyleType) {
    var items = cvox.DomUtil.toArray(firstListitem.parentNode.children).filter(function(li) {
      return "LI" == li.tagName;
    }), position = items.indexOf(firstListitem) + 1;
    -1 != document.defaultView.getComputedStyle(firstListitem.parentNode).listStyleType.indexOf("latin") ? (position--, prefix = String.fromCharCode(65 + position % 26)) : prefix = position;
    prefix += ". ";
  }
  return prefix;
};
cvox.DomUtil.getControlLabelHeuristics = function(node) {
  if (node.hasAttribute && (node.hasAttribute("aria-label") && "" == node.getAttribute("aria-label") || node.hasAttribute("aria-title") && "" == node.getAttribute("aria-title"))) {
    return "";
  }
  for (var prevNode = cvox.DomUtil.previousLeafNode(node), prevTraversalCount = 0;prevNode && (!cvox.DomUtil.hasContent(prevNode) || cvox.DomUtil.isControl(prevNode));) {
    prevNode = cvox.DomUtil.previousLeafNode(prevNode), prevTraversalCount++;
  }
  for (var nextNode = cvox.DomUtil.directedNextLeafNode(node), nextTraversalCount = 0;nextNode && (!cvox.DomUtil.hasContent(nextNode) || cvox.DomUtil.isControl(nextNode));) {
    nextNode = cvox.DomUtil.directedNextLeafNode(nextNode), nextTraversalCount++;
  }
  var guessedLabelNode;
  if (prevNode && nextNode) {
    for (var parentNode = node, prevCount = 0;parentNode && !cvox.DomUtil.isDescendantOfNode(prevNode, parentNode);) {
      parentNode = parentNode.parentNode, prevCount++;
    }
    for (var parentNode = node, nextCount = 0;parentNode && !cvox.DomUtil.isDescendantOfNode(nextNode, parentNode);) {
      parentNode = parentNode.parentNode, nextCount++;
    }
    guessedLabelNode = nextCount < prevCount ? nextNode : prevNode;
  } else {
    guessedLabelNode = prevNode || nextNode;
  }
  return guessedLabelNode ? cvox.DomUtil.collapseWhitespace(cvox.DomUtil.getValue(guessedLabelNode) + " " + cvox.DomUtil.getName(guessedLabelNode)) : "";
};
cvox.DomUtil.getValue = function(node) {
  var activeDescendant = cvox.AriaUtil.getActiveDescendant(node);
  if (activeDescendant) {
    return cvox.DomUtil.collapseWhitespace(cvox.DomUtil.getValue(activeDescendant) + " " + cvox.DomUtil.getName(activeDescendant));
  }
  if (node.constructor == HTMLSelectElement) {
    var value = "", start = node.selectedOptions ? node.selectedOptions[0] : null, end = node.selectedOptions ? node.selectedOptions[node.selectedOptions.length - 1] : null;
    start && end && start != end ? value = cvox.ChromeVox.msgs.getMsg("selected_options_value", [start.text, end.text]) : start && (value = start.text + "");
    return value;
  }
  if (node.constructor == HTMLTextAreaElement) {
    return node.value;
  }
  if (node.constructor == HTMLInputElement) {
    switch(node.type) {
      case "hidden":
      ;
      case "image":
      ;
      case "submit":
      ;
      case "reset":
      ;
      case "button":
      ;
      case "checkbox":
      ;
      case "radio":
        return "";
      case "password":
        return node.value.replace(/./g, "dot ");
      default:
        return node.value;
    }
  }
  return node.isContentEditable ? cvox.DomUtil.getNameFromChildren(node, !0) : "";
};
cvox.DomUtil.getImageTitle = function(node) {
  var text;
  if (node.hasAttribute("alt")) {
    text = node.alt;
  } else {
    if (node.hasAttribute("title")) {
      text = node.title;
    } else {
      var url = node.src;
      if ("data" != url.substring(0, 4)) {
        var filename = url.substring(url.lastIndexOf("/") + 1, url.lastIndexOf("."));
        text = 1 <= filename.length && 16 >= filename.length ? filename + " Image" : "Image";
      } else {
        text = "Image";
      }
    }
  }
  return text;
};
cvox.DomUtil.hasContent = function(node) {
  if (8 == node.nodeType || cvox.DomUtil.isDescendantOf(node, "HEAD") || cvox.DomUtil.isDescendantOf(node, "SCRIPT") || cvox.DomUtil.isDescendantOf(node, "NOSCRIPT") || cvox.DomUtil.isDescendantOf(node, "NOEMBED") || cvox.DomUtil.isDescendantOf(node, "STYLE") || !cvox.DomUtil.isVisible(node) || cvox.AriaUtil.isHidden(node)) {
    return !1;
  }
  if (cvox.DomUtil.isControl(node) || cvox.DomUtil.isDescendantOf(node, "VIDEO") || cvox.DomUtil.isDescendantOf(node, "AUDIO") || "IFRAME" == node.tagName && node.src && 0 != node.src.indexOf("javascript:")) {
    return !0;
  }
  for (var enclosingLabel = node.parentElement;enclosingLabel && "LABEL" != enclosingLabel.tagName;) {
    enclosingLabel = enclosingLabel.parentElement;
  }
  if (enclosingLabel) {
    var embeddedControl = enclosingLabel.querySelector("button,input,select,textarea");
    if (enclosingLabel.hasAttribute("for")) {
      var targetId = enclosingLabel.getAttribute("for"), targetNode = document.getElementById(targetId);
      if (targetNode && cvox.DomUtil.isControl(targetNode) && !embeddedControl) {
        return !1;
      }
    } else {
      if (embeddedControl) {
        return !1;
      }
    }
  }
  for (var enclosingLegend = node.parentElement;enclosingLegend && "LEGEND" != enclosingLegend.tagName;) {
    enclosingLegend = enclosingLegend.parentElement;
  }
  if (enclosingLegend) {
    for (var legendAncestor = enclosingLegend.parentElement;legendAncestor && "FIELDSET" != legendAncestor.tagName;) {
      legendAncestor = legendAncestor.parentElement;
    }
    embeddedControl = legendAncestor && legendAncestor.querySelector("button,input,select,textarea");
    if (legendAncestor && !embeddedControl) {
      return !1;
    }
  }
  if (cvox.DomPredicates.linkPredicate([node]) || "TABLE" == node.tagName && !cvox.DomUtil.isLayoutTable(node) || cvox.DomUtil.isMath(node) || cvox.DomPredicates.headingPredicate([node])) {
    return !0;
  }
  var text = cvox.DomUtil.getValue(node) + " " + cvox.DomUtil.getName(node), state = cvox.DomUtil.getState(node, !0);
  return text.match(/^\s+$/) && "" === state ? !1 : !0;
};
cvox.DomUtil.getAncestors = function(targetNode) {
  for (var ancestors = [];targetNode;) {
    ancestors.push(targetNode), targetNode = targetNode.parentNode;
  }
  for (ancestors.reverse();ancestors.length && !ancestors[0].tagName && !ancestors[0].nodeValue;) {
    ancestors.shift();
  }
  return ancestors;
};
cvox.DomUtil.compareAncestors = function(ancestorsA, ancestorsB) {
  for (var i = 0;ancestorsA[i] && ancestorsB[i] && ancestorsA[i] == ancestorsB[i];) {
    i++;
  }
  ancestorsA[i] || ancestorsB[i] || (i = -1);
  return i;
};
cvox.DomUtil.getUniqueAncestors = function(previousNode, currentNode, opt_fallback) {
  var prevAncestors = cvox.DomUtil.getAncestors(previousNode), currentAncestors = cvox.DomUtil.getAncestors(currentNode), divergence = cvox.DomUtil.compareAncestors(prevAncestors, currentAncestors), diff = currentAncestors.slice(divergence);
  return 0 == diff.length && opt_fallback ? currentAncestors : diff;
};
cvox.DomUtil.getRoleMsg = function(targetNode, verbosity) {
  var info;
  info = cvox.AriaUtil.getRoleNameMsg(targetNode);
  info || ("INPUT" == targetNode.tagName ? info = cvox.DomUtil.INPUT_TYPE_TO_INFORMATION_TABLE_MSG[targetNode.type] : "A" == targetNode.tagName && cvox.DomUtil.isInternalLink(targetNode) ? info = "internal_link" : "A" == targetNode.tagName && targetNode.getAttribute("name") ? info = "" : targetNode.isContentEditable ? info = "input_type_text" : cvox.DomUtil.isMath(targetNode) ? info = "math_expr" : "TABLE" == targetNode.tagName && cvox.DomUtil.isLayoutTable(targetNode) ? info = "" : verbosity == 
  cvox.VERBOSITY_BRIEF ? info = cvox.DomUtil.TAG_TO_INFORMATION_TABLE_BRIEF_MSG[targetNode.tagName] : (info = cvox.DomUtil.TAG_TO_INFORMATION_TABLE_VERBOSE_MSG[targetNode.tagName], cvox.DomUtil.hasLongDesc(targetNode) && (info = "image_with_long_desc"), !info && targetNode.onclick && (info = "clickable")));
  return info;
};
cvox.DomUtil.getRole = function(targetNode, verbosity) {
  var roleMsg = cvox.DomUtil.getRoleMsg(targetNode, verbosity) || "", role = roleMsg && " " != roleMsg ? cvox.ChromeVox.msgs.getMsg(roleMsg) : "";
  return role ? role : roleMsg;
};
cvox.DomUtil.getListLength = function(targetNode) {
  for (var count = 0, node = targetNode.firstChild;node;node = node.nextSibling) {
    if (cvox.DomUtil.isVisible(node) && ("LI" == node.tagName || node.getAttribute && "listitem" == node.getAttribute("role"))) {
      if (node.hasAttribute("aria-setsize")) {
        var ariaLength = parseInt(node.getAttribute("aria-setsize"), 10);
        if (!isNaN(ariaLength)) {
          return ariaLength;
        }
      }
      count++;
    }
  }
  return count;
};
cvox.DomUtil.getStateMsgs = function(targetNode, primary) {
  var activeDescendant = cvox.AriaUtil.getActiveDescendant(targetNode);
  if (activeDescendant) {
    return cvox.DomUtil.getStateMsgs(activeDescendant, primary);
  }
  var info = [], role = targetNode.getAttribute ? targetNode.getAttribute("role") : "";
  (info = cvox.AriaUtil.getStateMsgs(targetNode, primary)) || (info = []);
  if ("INPUT" == targetNode.tagName) {
    if (!targetNode.hasAttribute("aria-checked")) {
      var INPUT_MSGS = {"checkbox-true":"checkbox_checked_state", "checkbox-false":"checkbox_unchecked_state", "radio-true":"radio_selected_state", "radio-false":"radio_unselected_state"}, msgId = INPUT_MSGS[targetNode.type + "-" + !!targetNode.checked];
      msgId && info.push([msgId]);
    }
  } else {
    "SELECT" == targetNode.tagName ? targetNode.selectedOptions && 1 >= targetNode.selectedOptions.length ? info.push(["list_position", cvox.ChromeVox.msgs.getNumber(targetNode.selectedIndex + 1), cvox.ChromeVox.msgs.getNumber(targetNode.options.length)]) : info.push(["selected_options_state", cvox.ChromeVox.msgs.getNumber(targetNode.selectedOptions.length)]) : "UL" != targetNode.tagName && "OL" != targetNode.tagName && "list" != role || info.push(["list_with_items", cvox.ChromeVox.msgs.getNumber(cvox.DomUtil.getListLength(targetNode))])
    ;
  }
  cvox.DomUtil.isDisabled(targetNode) && info.push(["aria_disabled_true"]);
  cvox.DomPredicates.linkPredicate([targetNode]) && cvox.ChromeVox.visitedUrls[targetNode.href] && info.push(["visited_url"]);
  targetNode.accessKey && info.push(["access_key", targetNode.accessKey]);
  return info;
};
cvox.DomUtil.getState = function(targetNode, primary) {
  return cvox.NodeStateUtil.expand(cvox.DomUtil.getStateMsgs(targetNode, primary));
};
cvox.DomUtil.isFocusable = function(targetNode) {
  return targetNode && "number" == typeof targetNode.tabIndex && ("A" != targetNode.tagName || targetNode.hasAttribute("href") || targetNode.hasAttribute("tabindex")) ? 0 <= targetNode.tabIndex || targetNode.hasAttribute && targetNode.hasAttribute("tabindex") && "-1" == targetNode.getAttribute("tabindex") ? !0 : !1 : !1;
};
cvox.DomUtil.findFocusableDescendant = function(targetNode) {
  if (targetNode) {
    var focusableNode = cvox.DomUtil.findNode(targetNode, cvox.DomUtil.isFocusable);
    if (focusableNode) {
      return focusableNode;
    }
  }
  return null;
};
cvox.DomUtil.countFocusableDescendants = function(targetNode) {
  return targetNode ? cvox.DomUtil.countNodes(targetNode, cvox.DomUtil.isFocusable) : 0;
};
cvox.DomUtil.isAttachedToDocument = function(targetNode) {
  for (;targetNode;) {
    if (targetNode.tagName && "HTML" == targetNode.tagName) {
      return !0;
    }
    targetNode = targetNode.parentNode;
  }
  return !1;
};
cvox.DomUtil.clickElem = function(targetNode, shiftKey, callOnClickDirectly, opt_double) {
  var activeDescendant = cvox.AriaUtil.getActiveDescendant(targetNode);
  activeDescendant && (targetNode = activeDescendant);
  if (callOnClickDirectly) {
    var onClickFunction = null;
    targetNode.onclick && (onClickFunction = targetNode.onclick);
    !onClickFunction && 1 != targetNode.nodeType && targetNode.parentNode && targetNode.parentNode.onclick && (onClickFunction = targetNode.parentNode.onclick);
    var keepGoing = !0;
    if (onClickFunction) {
      try {
        keepGoing = onClickFunction();
      } catch (exception) {
      }
    }
    if (!keepGoing) {
      return;
    }
  }
  var evt = document.createEvent("MouseEvents"), evtType = opt_double ? "dblclick" : "mousedown";
  evt.initMouseEvent(evtType, !0, !0, document.defaultView, 1, 0, 0, 0, 0, !1, !1, shiftKey, !1, 0, null);
  evt.fromCvox = !0;
  try {
    targetNode.dispatchEvent(evt);
  } catch (e) {
  }
  evt = document.createEvent("MouseEvents");
  evt.initMouseEvent("mouseup", !0, !0, document.defaultView, 1, 0, 0, 0, 0, !1, !1, shiftKey, !1, 0, null);
  evt.fromCvox = !0;
  try {
    targetNode.dispatchEvent(evt);
  } catch (e) {
  }
  evt = document.createEvent("MouseEvents");
  evt.initMouseEvent("click", !0, !0, document.defaultView, 1, 0, 0, 0, 0, !1, !1, shiftKey, !1, 0, null);
  evt.fromCvox = !0;
  try {
    targetNode.dispatchEvent(evt);
  } catch (e) {
  }
  cvox.DomUtil.isInternalLink(targetNode) && cvox.DomUtil.syncInternalLink(targetNode);
};
cvox.DomUtil.syncInternalLink = function(node) {
  var targetNode, targetId = node.href.split("#")[1];
  targetNode = document.getElementById(targetId);
  if (!targetNode) {
    var nodes = document.getElementsByName(targetId);
    0 < nodes.length && (targetNode = nodes[0]);
  }
  if (targetNode) {
    var parent = targetNode.parentNode, dummyNode = document.createElement("div");
    dummyNode.setAttribute("tabindex", "-1");
    parent.insertBefore(dummyNode, targetNode);
    dummyNode.setAttribute("chromevoxignoreariahidden", 1);
    dummyNode.focus();
    cvox.ChromeVox.syncToNode(targetNode, !1);
  }
};
cvox.DomUtil.isInputTypeText = function(node) {
  if (!node || node.constructor != HTMLInputElement) {
    return !1;
  }
  switch(node.type) {
    case "email":
    ;
    case "number":
    ;
    case "password":
    ;
    case "search":
    ;
    case "text":
    ;
    case "tel":
    ;
    case "url":
    ;
    case "":
      return !0;
    default:
      return !1;
  }
};
cvox.DomUtil.isControl = function(node) {
  if (cvox.AriaUtil.isControlWidget(node) && cvox.DomUtil.isFocusable(node)) {
    return !0;
  }
  if (node.tagName) {
    switch(node.tagName) {
      case "BUTTON":
      ;
      case "TEXTAREA":
      ;
      case "SELECT":
        return !0;
      case "INPUT":
        return "hidden" != node.type;
    }
  }
  return node.isContentEditable ? !0 : !1;
};
cvox.DomUtil.isLeafLevelControl = function(node) {
  return cvox.DomUtil.isControl(node) ? !(cvox.AriaUtil.isCompositeControl(node) && cvox.DomUtil.findFocusableDescendant(node)) : !1;
};
cvox.DomUtil.getSurroundingControl = function(node) {
  var surroundingControl = null;
  if (!cvox.DomUtil.isControl(node) && node.hasAttribute && node.hasAttribute("role")) {
    for (surroundingControl = node.parentElement;surroundingControl && !cvox.AriaUtil.isCompositeControl(surroundingControl);) {
      surroundingControl = surroundingControl.parentElement;
    }
  }
  return surroundingControl;
};
cvox.DomUtil.directedNextLeafLikeNode = function(node, r, isLeaf) {
  if (node != document.body) {
    for (;!cvox.DomUtil.directedNextSibling(node, r);) {
      if (!node) {
        return null;
      }
      node = node.parentNode;
      if (node == document.body) {
        return null;
      }
    }
    cvox.DomUtil.directedNextSibling(node, r) && (node = cvox.DomUtil.directedNextSibling(node, r));
  }
  for (;cvox.DomUtil.directedFirstChild(node, r) && !isLeaf(node);) {
    node = cvox.DomUtil.directedFirstChild(node, r);
  }
  return node == document.body ? null : node;
};
cvox.DomUtil.directedNextLeafNode = function(node, reverse) {
  reverse = !!reverse;
  return cvox.DomUtil.directedNextLeafLikeNode(node, reverse, cvox.DomUtil.isLeafNode);
};
cvox.DomUtil.previousLeafNode = function(node) {
  return cvox.DomUtil.directedNextLeafNode(node, !0);
};
cvox.DomUtil.directedFindFirstNode = function(node, r, pred) {
  for (var child = cvox.DomUtil.directedFirstChild(node, r);child;) {
    if (pred(child)) {
      return child;
    }
    var leaf = cvox.DomUtil.directedFindFirstNode(child, r, pred);
    if (leaf) {
      return leaf;
    }
    child = cvox.DomUtil.directedNextSibling(child, r);
  }
  return null;
};
cvox.DomUtil.directedFindDeepestNode = function(node, r, pred) {
  var next = cvox.DomUtil.directedFindFirstNode(node, r, pred);
  return next ? cvox.DomUtil.directedFindDeepestNode(next, r, pred) : pred(node) ? node : null;
};
cvox.DomUtil.directedFindNextNode = function(node, ancestor, r, pred, above, deep) {
  above = !!above;
  deep = !!deep;
  if (!cvox.DomUtil.isDescendantOfNode(node, ancestor) || node == ancestor) {
    return null;
  }
  for (var next = cvox.DomUtil.directedNextSibling(node, r);next;) {
    if (!deep && pred(next)) {
      return next;
    }
    var leaf = (deep ? cvox.DomUtil.directedFindDeepestNode : cvox.DomUtil.directedFindFirstNode)(next, r, pred);
    if (leaf) {
      return leaf;
    }
    if (deep && pred(next)) {
      return next;
    }
    next = cvox.DomUtil.directedNextSibling(next, r);
  }
  var parent = node.parentNode;
  return above && pred(parent) ? parent : cvox.DomUtil.directedFindNextNode(parent, ancestor, r, pred, above, deep);
};
cvox.DomUtil.getControlValueAndStateString = function(control) {
  var parentControl = cvox.DomUtil.getSurroundingControl(control);
  return parentControl ? cvox.DomUtil.collapseWhitespace(cvox.DomUtil.getValue(control) + " " + cvox.DomUtil.getName(control) + " " + cvox.DomUtil.getState(control, !0)) : cvox.DomUtil.collapseWhitespace(cvox.DomUtil.getValue(control) + " " + cvox.DomUtil.getState(control, !0));
};
cvox.DomUtil.isInternalLink = function(node) {
  if (1 == node.nodeType) {
    var href = node.getAttribute("href");
    if (href && -1 != href.indexOf("#")) {
      var path = href.split("#")[0];
      return "" == path || path == window.location.pathname;
    }
  }
  return !1;
};
cvox.DomUtil.getLinkURL = function(node) {
  if ("A" == node.tagName) {
    if (node.getAttribute("href")) {
      return cvox.DomUtil.isInternalLink(node) ? cvox.ChromeVox.msgs.getMsg("internal_link") : node.getAttribute("href");
    }
  } else {
    if (cvox.AriaUtil.getRoleName(node) == cvox.ChromeVox.msgs.getMsg("aria_role_link")) {
      return cvox.ChromeVox.msgs.getMsg("unknown_link");
    }
  }
  return "";
};
cvox.DomUtil.getContainingTable = function(node, kwargs) {
  var ancestors = cvox.DomUtil.getAncestors(node);
  return cvox.DomUtil.findTableNodeInList(ancestors, kwargs);
};
cvox.DomUtil.findTableNodeInList = function(nodes, kwargs) {
  kwargs = kwargs || {allowCaptions:!1};
  for (var i = nodes.length - 1, node;node = nodes[i];i--) {
    if (node.constructor != Text) {
      if (!kwargs.allowCaptions && "CAPTION" == node.tagName) {
        break;
      }
      if ("TABLE" == node.tagName || cvox.AriaUtil.isGrid(node)) {
        return node;
      }
    }
  }
  return null;
};
cvox.DomUtil.isLayoutTable = function(tableNode) {
  if (tableNode.rows && (1 >= tableNode.rows.length || 1 == tableNode.rows[0].childElementCount)) {
    return !0;
  }
  if (cvox.AriaUtil.isGrid(tableNode) || cvox.AriaUtil.isLandmark(tableNode) || tableNode.caption || tableNode.summary || 0 < cvox.XpathUtil.evalXPath("tbody/tr/th", tableNode).length && 0 < cvox.XpathUtil.evalXPath("tbody/tr/td", tableNode).length || 0 < cvox.XpathUtil.evalXPath("colgroup", tableNode).length || 0 < cvox.XpathUtil.evalXPath("thead", tableNode).length || 0 < cvox.XpathUtil.evalXPath("tfoot", tableNode).length) {
    return !1;
  }
  if (0 < cvox.XpathUtil.evalXPath("tbody/tr/td/embed", tableNode).length || 0 < cvox.XpathUtil.evalXPath("tbody/tr/td/object", tableNode).length || 0 < cvox.XpathUtil.evalXPath("tbody/tr/td/iframe", tableNode).length || 0 < cvox.XpathUtil.evalXPath("tbody/tr/td/applet", tableNode).length) {
    return !0;
  }
  var points = 0;
  cvox.DomUtil.hasBorder(tableNode) || points++;
  6 >= tableNode.rows.length && points++;
  12 >= cvox.DomUtil.countPreviousTags(tableNode) && points++;
  0 < cvox.XpathUtil.evalXPath("tbody/tr/td/table", tableNode).length && points++;
  return 3 <= points;
};
cvox.DomUtil.countPreviousTags = function(node) {
  var ancestors = cvox.DomUtil.getAncestors(node);
  return ancestors.length + cvox.DomUtil.countPreviousSiblings(node);
};
cvox.DomUtil.countPreviousSiblings = function(node) {
  for (var count = 0, prev = node.previousSibling;null != prev;) {
    prev.constructor != Text && count++, prev = prev.previousSibling;
  }
  return count;
};
cvox.DomUtil.hasBorder = function(tableNode) {
  return tableNode.frame ? -1 == tableNode.frame.indexOf("void") : tableNode.border ? 1 == tableNode.border.length ? "0" != tableNode.border : 0 != tableNode.border.slice(0, -2) : tableNode.style.borderStyle && "none" == tableNode.style.borderStyle ? !1 : tableNode.style.borderWidth ? 0 != tableNode.style.borderWidth.slice(0, -2) : tableNode.style.borderColor ? !0 : !1;
};
cvox.DomUtil.getFirstLeafNode = function() {
  for (var node = document.body;node && node.firstChild;) {
    node = node.firstChild;
  }
  for (;node && !cvox.DomUtil.hasContent(node);) {
    node = cvox.DomUtil.directedNextLeafNode(node);
  }
  return node;
};
cvox.DomUtil.findNode = function(root, p) {
  var rv = [], found = cvox.DomUtil.findNodes_(root, p, rv, !0, 1E4);
  return found ? rv[0] : void 0;
};
cvox.DomUtil.countNodes = function(root, p) {
  var rv = [];
  cvox.DomUtil.findNodes_(root, p, rv, !1, 1E4);
  return rv.length;
};
cvox.DomUtil.findNodes_ = function(root, p, rv, findOne, maxChildCount) {
  if (null != root || 0 == maxChildCount) {
    for (var child = root.firstChild;child;) {
      if (p(child) && (rv.push(child), findOne)) {
        return !0;
      }
      --maxChildCount;
      if (cvox.DomUtil.findNodes_(child, p, rv, findOne, maxChildCount)) {
        return !0;
      }
      child = child.nextSibling;
    }
  }
  return !1;
};
cvox.DomUtil.toArray = function(nodeList) {
  for (var nodeArray = [], i = 0;i < nodeList.length;i++) {
    nodeArray.push(nodeList[i]);
  }
  return nodeArray;
};
cvox.DomUtil.shallowChildlessClone = function(node, skipattrs) {
  if ("#text" == node.nodeName) {
    return document.createTextNode(node.nodeValue);
  }
  if ("#comment" == node.nodeName) {
    return document.createComment(node.nodeValue);
  }
  for (var ret = document.createElement(node.nodeName), i = 0;i < node.attributes.length;++i) {
    var attr = node.attributes[i];
    skipattrs && skipattrs[attr.nodeName] || ret.setAttribute(attr.nodeName, attr.nodeValue);
  }
  return ret;
};
cvox.DomUtil.deepClone = function(node, skipattrs) {
  for (var ret = cvox.DomUtil.shallowChildlessClone(node, skipattrs), i = 0;i < node.childNodes.length;++i) {
    ret.appendChild(cvox.DomUtil.deepClone(node.childNodes[i], skipattrs));
  }
  return ret;
};
cvox.DomUtil.directedFirstChild = function(node, reverse) {
  return reverse ? node.lastChild : node.firstChild;
};
cvox.DomUtil.directedNextSibling = function(node, reverse) {
  return node ? reverse ? node.previousSibling : node.nextSibling : null;
};
cvox.DomUtil.createSimpleClickFunction = function(targetNode) {
  var target = targetNode.cloneNode(!0);
  return function() {
    cvox.DomUtil.clickElem(target, !1, !1);
  };
};
cvox.DomUtil.addNodeToHead = function(node, opt_id) {
  if (!opt_id || !document.getElementById(opt_id)) {
    var p = document.head || document.body;
    p.appendChild(node);
  }
};
cvox.DomUtil.getContainingMath = function(node) {
  var ancestors = cvox.DomUtil.getAncestors(node);
  return cvox.DomUtil.findMathNodeInList(ancestors);
};
cvox.DomUtil.findMathNodeInList = function(nodes) {
  for (var i = 0, node;node = nodes[i];i++) {
    if (cvox.DomUtil.isMath(node)) {
      return node;
    }
  }
  return null;
};
cvox.DomUtil.isMath = function(node) {
  return cvox.DomUtil.isMathml(node) || cvox.DomUtil.isMathJax(node) || cvox.DomUtil.isMathImg(node) || cvox.AriaUtil.isMath(node);
};
cvox.DomUtil.ALT_MATH_CLASSES = {tex:["tex", "latex"], asciimath:["numberedequation", "inlineformula", "displayformula"]};
cvox.DomUtil.altMathQuerySelector = function(contentType) {
  var classes = cvox.DomUtil.ALT_MATH_CLASSES[contentType];
  return classes ? classes.map(function(x) {
    return "img." + x;
  }).join(", ") : "";
};
cvox.DomUtil.isMathImg = function(node) {
  if (!node || !node.tagName || !node.className || "IMG" != node.tagName) {
    return !1;
  }
  var className = node.className.toLowerCase();
  return -1 != cvox.DomUtil.ALT_MATH_CLASSES.tex.indexOf(className) || -1 != cvox.DomUtil.ALT_MATH_CLASSES.asciimath.indexOf(className);
};
cvox.DomUtil.isMathml = function(node) {
  return node && node.tagName ? "math" == node.tagName.toLowerCase() : !1;
};
cvox.DomUtil.isMathJax = function(node) {
  function isSpanWithClass(n, cl) {
    return "SPAN" == n.tagName && n.className.split(" ").some(function(x) {
      return x.toLowerCase() == cl;
    });
  }
  if (!node || !node.tagName || !node.className) {
    return !1;
  }
  if (isSpanWithClass(node, "math")) {
    var ancestors = cvox.DomUtil.getAncestors(node);
    return ancestors.some(function(x) {
      return isSpanWithClass(x, "mathjax");
    });
  }
  return !1;
};
cvox.DomUtil.getMathSpanId = function(jaxId) {
  var node = document.getElementById(jaxId + "-Frame");
  if (node) {
    var span = node.querySelector("span.math");
    if (span) {
      return span.id;
    }
  }
};
cvox.DomUtil.hasLongDesc = function(node) {
  return node && node.longDesc ? !0 : !1;
};
cvox.DomUtil.getNodeTagName = function(node) {
  return node.nodeType == Node.ELEMENT_NODE ? node.tagName : "";
};
cvox.DomUtil.purgeNodes = function(nodes) {
  return cvox.DomUtil.toArray(nodes).filter(function(node) {
    return node.nodeType != Node.TEXT_NODE || !node.textContent.match(/^\s+$/);
  });
};
cvox.DomUtil.elementToPoint = function(node) {
  if (!node) {
    return {x:0, y:0};
  }
  node.constructor == Text && (node = node.parentNode);
  var r = node.getBoundingClientRect();
  return {x:r.left + r.width / 2, y:r.top + r.height / 2};
};
cvox.DomUtil.doesInputSupportSelection = function(node) {
  return goog.isDef(node) && "INPUT" == node.tagName && "email" != node.type && "number" != node.type;
};
cvox.DomUtil.getHint = function(node) {
  var desc = "";
  if (node.hasAttribute && node.hasAttribute("aria-describedby")) {
    for (var describedByIds = node.getAttribute("aria-describedby").split(" "), describedById, i = 0;describedById = describedByIds[i];i++) {
      var describedNode = document.getElementById(describedById);
      describedNode && (desc += " " + cvox.DomUtil.getName(describedNode, !0, !0, !0));
    }
  }
  return desc;
};
cvox.SelectionUtil = function() {
};
cvox.SelectionUtil.cleanUpParagraphForward = function(sel) {
  for (;3 == sel.focusNode.nodeType;) {
    var fnode = sel.focusNode, foffset = sel.focusOffset;
    sel.modify("extend", "forward", "sentence");
    if (fnode == sel.focusNode && foffset == sel.focusOffset) {
      return !1;
    }
  }
  return !0;
};
cvox.SelectionUtil.cleanUpParagraphBack = function(sel) {
  for (var fnode, foffset;3 == sel.focusNode.nodeType && (fnode = sel.focusNode, foffset = sel.focusOffset, sel.modify("extend", "backward", "sentence"), fnode != sel.focusNode || foffset != sel.focusOffset);) {
  }
  return !0;
};
cvox.SelectionUtil.cleanUpSentence = function(sel) {
  for (;;) {
    if (3 == sel.focusNode.nodeType) {
      var fnode = sel.focusNode, foffset = sel.focusOffset;
      if (0 < sel.rangeCount && 0 < sel.getRangeAt(0).endOffset) {
        if ("." == fnode.substringData(sel.getRangeAt(0).endOffset - 1, 1)) {
          break;
        } else {
          if (" " == fnode.substringData(sel.getRangeAt(0).endOffset - 1, 1)) {
            break;
          } else {
            if (sel.modify("extend", "forward", "sentence"), fnode == sel.focusNode && foffset == sel.focusOffset) {
              return !1;
            }
          }
        }
      } else {
        break;
      }
    } else {
      break;
    }
  }
  return !0;
};
cvox.SelectionUtil.findSelPosition = function(sel) {
  if (0 == sel.rangeCount) {
    return [0, 0];
  }
  var clientRect = sel.getRangeAt(0).getBoundingClientRect();
  if (!clientRect) {
    return [0, 0];
  }
  var top = window.pageYOffset + clientRect.top, left = window.pageXOffset + clientRect.left;
  return [top, left];
};
cvox.SelectionUtil.findTopLeftPosition = function(targetNode) {
  var left = 0, top = 0, obj = targetNode;
  if (obj.offsetParent) {
    for (left = obj.offsetLeft, top = obj.offsetTop, obj = obj.offsetParent;null !== obj;) {
      left += obj.offsetLeft, top += obj.offsetTop, obj = obj.offsetParent;
    }
  }
  return [top, left];
};
cvox.SelectionUtil.isSelectionValid = function(sel) {
  var regExpWhiteSpace = new RegExp(/^\s+$/);
  return !(regExpWhiteSpace.test(sel.toString()) || "" == sel.toString());
};
cvox.SelectionUtil.isRangeValid = function(range) {
  var text = range.cloneContents().textContent, regExpWhiteSpace = new RegExp(/^\s+$/);
  return !(regExpWhiteSpace.test(text) || "" == text);
};
cvox.SelectionUtil.findPos_ = function(node) {
  var curLeft = 0, curTop = 0;
  if (node.offsetParent) {
    do {
      curLeft += node.offsetLeft, curTop += node.offsetTop;
    } while (node = node.offsetParent);
  }
  return [curLeft, curTop];
};
cvox.SelectionUtil.scrollElementsToView = function(focusNode) {
  for (;focusNode && !focusNode.getBoundingClientRect;) {
    focusNode = focusNode.parentElement;
  }
  if (focusNode) {
    for (var node = focusNode, parentNode = node.parentElement;node != document.body && parentNode;) {
      node.scrollTop = node.offsetTop, node.scrollLeft = node.offsetLeft, node = parentNode, parentNode = node.parentElement;
    }
    var pos = cvox.SelectionUtil.findPos_(focusNode);
    window.scrollTo(pos[0] - window.innerWidth / 2, pos[1] - window.innerHeight / 2);
  }
};
cvox.SelectionUtil.scrollToSelection = function(sel) {
  if (0 != sel.rangeCount) {
    cvox.SelectionUtil.scrollElementsToView(sel.focusNode);
    var pos = cvox.SelectionUtil.findSelPosition(sel), top = pos[0], left = pos[1], scrolledVertically = window.pageYOffset || document.documentElement.scrollTop || document.body.scrollTop, pageHeight = window.innerHeight || document.documentElement.clientHeight || document.body.clientHeight, pageWidth = window.innerWidth || document.documentElement.innerWidth || document.body.clientWidth;
    left < pageWidth && (left = 0);
    if (scrolledVertically + pageHeight < top) {
      var diff = top - pageHeight;
      window.scroll(left, diff + 100);
    } else {
      top < scrolledVertically && window.scroll(left, top - 100);
    }
  }
};
cvox.SelectionUtil.isAllWs = function(node) {
  return !/[^\t\n\r ]/.test(node.data);
};
cvox.SelectionUtil.isIgnorable = function(node) {
  return 8 == node.nodeType || 3 == node.nodeType && cvox.SelectionUtil.isAllWs(node);
};
cvox.SelectionUtil.nodeBefore = function(sib) {
  for (;sib = sib.previousSibling;) {
    if (!cvox.SelectionUtil.isIgnorable(sib)) {
      return sib;
    }
  }
  return null;
};
cvox.SelectionUtil.nodeAfter = function(sib) {
  for (;sib = sib.nextSibling;) {
    if (!cvox.SelectionUtil.isIgnorable(sib)) {
      return sib;
    }
  }
  return null;
};
cvox.SelectionUtil.lastChildNode = function(par) {
  for (var res = par.lastChild;res;) {
    if (!cvox.SelectionUtil.isIgnorable(res)) {
      return res;
    }
    res = res.previousSibling;
  }
  return null;
};
cvox.SelectionUtil.firstChildNode = function(par) {
  for (var res = par.firstChild;res;) {
    if (!cvox.SelectionUtil.isIgnorable(res)) {
      return res;
    }
    res = res.nextSibling;
  }
  return null;
};
cvox.SelectionUtil.dataOf = function(txt) {
  var data = txt.data, data = data.replace(/[\t\n\r ]+/g, " ");
  " " == data.charAt(0) && (data = data.substring(1, data.length));
  " " == data.charAt(data.length - 1) && (data = data.substring(0, data.length - 1));
  return data;
};
cvox.SelectionUtil.hasContentWithTag = function(sel, tagName) {
  if (!sel || !sel.anchorNode || !sel.focusNode) {
    return !1;
  }
  if (sel.anchorNode.tagName && sel.anchorNode.tagName == tagName || sel.focusNode.tagName && sel.focusNode.tagName == tagName || sel.anchorNode.parentNode.tagName && sel.anchorNode.parentNode.tagName == tagName || sel.focusNode.parentNode.tagName && sel.focusNode.parentNode.tagName == tagName) {
    return !0;
  }
  var docFrag = sel.getRangeAt(0).cloneContents(), span = document.createElement("span");
  span.appendChild(docFrag);
  return 0 < span.getElementsByTagName(tagName).length;
};
cvox.SelectionUtil.selectText = function(textNode, start, end) {
  var newRange = document.createRange();
  newRange.setStart(textNode, start);
  newRange.setEnd(textNode, end);
  var sel = window.getSelection();
  sel.removeAllRanges();
  sel.addRange(newRange);
};
cvox.SelectionUtil.selectAllTextInNode = function(node) {
  var newRange = document.createRange();
  newRange.setStart(node, 0);
  newRange.setEndAfter(node);
  var sel = window.getSelection();
  sel.removeAllRanges();
  sel.addRange(newRange);
};
cvox.SelectionUtil.collapseToStart = function(node) {
  var sel = window.getSelection(), cursorNode = sel.anchorNode, cursorOffset = sel.anchorOffset;
  null == cursorNode && (cursorNode = node, cursorOffset = 0);
  var newRange = document.createRange();
  newRange.setStart(cursorNode, cursorOffset);
  newRange.setEnd(cursorNode, cursorOffset);
  sel.removeAllRanges();
  sel.addRange(newRange);
};
cvox.SelectionUtil.collapseToEnd = function(node) {
  var sel = window.getSelection(), cursorNode = sel.focusNode, cursorOffset = sel.focusOffset;
  null == cursorNode && (cursorNode = node, cursorOffset = 0);
  var newRange = document.createRange();
  newRange.setStart(cursorNode, cursorOffset);
  newRange.setEnd(cursorNode, cursorOffset);
  sel.removeAllRanges();
  sel.addRange(newRange);
};
cvox.SelectionUtil.getText = function() {
  var sel = window.getSelection();
  if (cvox.SelectionUtil.hasContentWithTag(sel, "IMG")) {
    var text = "", docFrag = sel.getRangeAt(0).cloneContents(), span = document.createElement("span");
    span.appendChild(docFrag);
    for (var leafNodes = cvox.XpathUtil.getLeafNodes(span), i = 0, node;node = leafNodes[i];i++) {
      text = text + " " + cvox.DomUtil.getName(node);
    }
    return text;
  }
  return this.getSelectionText_();
};
cvox.SelectionUtil.getSelectionText_ = function() {
  return "" + window.getSelection();
};
cvox.SelectionUtil.getRangeText = function(range) {
  return range ? range.cloneContents().textContent.replace(/\s+/g, " ") : "";
};
cvox.TraverseUtil = function() {
};
cvox.TraverseUtil.getNodeText = function(node) {
  return node.constructor == Text ? node.data : "";
};
cvox.TraverseUtil.treatAsLeafNode = function(node) {
  return 0 == node.childNodes.length || "SELECT" == node.nodeName || "listbox" == node.getAttribute("role") || "OBJECT" == node.nodeName;
};
cvox.TraverseUtil.isWhitespace = function(c) {
  return " " == c || "\n" == c || "\r" == c || "\t" == c;
};
cvox.TraverseUtil.setSelection = function(start, end) {
  var sel = window.getSelection();
  sel.removeAllRanges();
  var range = document.createRange();
  range.setStart(start.node, start.index);
  range.setEnd(end.node, end.index);
  sel.addRange(range);
  return sel;
};
cvox.TraverseUtil.isHidden = function(node) {
  if (node instanceof HTMLElement && "true" == node.getAttribute("aria-hidden")) {
    return !0;
  }
  switch(node.tagName) {
    case "SCRIPT":
    ;
    case "NOSCRIPT":
      return !0;
  }
  return !1;
};
cvox.TraverseUtil.forwardsChar = function(cursor, elementsEntered, elementsLeft) {
  for (;;) {
    var childNode = null;
    if (!cvox.TraverseUtil.treatAsLeafNode(cursor.node)) {
      for (var i = cursor.index;i < cursor.node.childNodes.length;i++) {
        var node = cursor.node.childNodes[i];
        if (cvox.TraverseUtil.isHidden(node)) {
          node instanceof HTMLElement && elementsEntered.push(node);
        } else {
          if (cvox.DomUtil.isVisible(node, {checkAncestors:!1})) {
            childNode = node;
            break;
          }
        }
      }
    }
    if (childNode) {
      cursor.node = childNode, cursor.index = 0, cursor.text = cvox.TraverseUtil.getNodeText(cursor.node), cursor.node instanceof HTMLElement && elementsEntered.push(cursor.node);
    } else {
      if (cursor.index < cursor.text.length) {
        return cursor.text[cursor.index++];
      }
      for (;null != cursor.node;) {
        for (var siblingNode = null, node = cursor.node.nextSibling;null != node;node = node.nextSibling) {
          if (cvox.TraverseUtil.isHidden(node)) {
            node instanceof HTMLElement && elementsEntered.push(node);
          } else {
            if (cvox.DomUtil.isVisible(node, {checkAncestors:!1})) {
              siblingNode = node;
              break;
            }
          }
        }
        if (siblingNode) {
          cursor.node instanceof HTMLElement && elementsLeft.push(cursor.node);
          cursor.node = siblingNode;
          cursor.text = cvox.TraverseUtil.getNodeText(siblingNode);
          cursor.index = 0;
          cursor.node instanceof HTMLElement && elementsEntered.push(cursor.node);
          break;
        }
        if (cursor.node.parentNode && cursor.node.parentNode.constructor != HTMLBodyElement) {
          cursor.node instanceof HTMLElement && elementsLeft.push(cursor.node), cursor.node = cursor.node.parentNode, cursor.text = null, cursor.index = 0;
        } else {
          return null;
        }
      }
    }
  }
};
cvox.TraverseUtil.backwardsChar = function(cursor, elementsEntered, elementsLeft) {
  for (;;) {
    var childNode = null;
    if (!cvox.TraverseUtil.treatAsLeafNode(cursor.node)) {
      for (var i = cursor.index - 1;0 <= i;i--) {
        var node = cursor.node.childNodes[i];
        if (cvox.TraverseUtil.isHidden(node)) {
          node instanceof HTMLElement && elementsEntered.push(node);
        } else {
          if (cvox.DomUtil.isVisible(node, {checkAncestors:!1})) {
            childNode = node;
            break;
          }
        }
      }
    }
    if (childNode) {
      cursor.node = childNode, cursor.text = cvox.TraverseUtil.getNodeText(cursor.node), cursor.index = cursor.text.length ? cursor.text.length : cursor.node.childNodes.length, cursor.node instanceof HTMLElement && elementsEntered.push(cursor.node);
    } else {
      if (0 < cursor.text.length && 0 < cursor.index) {
        return cursor.text[--cursor.index];
      }
      for (;;) {
        for (var siblingNode = null, node = cursor.node.previousSibling;null != node;node = node.previousSibling) {
          if (cvox.TraverseUtil.isHidden(node)) {
            node instanceof HTMLElement && elementsEntered.push(node);
          } else {
            if (cvox.DomUtil.isVisible(node, {checkAncestors:!1})) {
              siblingNode = node;
              break;
            }
          }
        }
        if (siblingNode) {
          cursor.node instanceof HTMLElement && elementsLeft.push(cursor.node);
          cursor.node = siblingNode;
          cursor.text = cvox.TraverseUtil.getNodeText(siblingNode);
          cursor.index = cursor.text.length ? cursor.text.length : cursor.node.childNodes.length;
          cursor.node instanceof HTMLElement && elementsEntered.push(cursor.node);
          break;
        }
        if (cursor.node.parentNode && cursor.node.parentNode.constructor != HTMLBodyElement) {
          cursor.node instanceof HTMLElement && elementsLeft.push(cursor.node), cursor.node = cursor.node.parentNode, cursor.text = null, cursor.index = 0;
        } else {
          return null;
        }
      }
    }
  }
};
cvox.TraverseUtil.getNextChar = function(startCursor, endCursor, elementsEntered, elementsLeft, skipWhitespace) {
  startCursor.copyFrom(endCursor);
  var c = cvox.TraverseUtil.forwardsChar(endCursor, elementsEntered, elementsLeft);
  if (null == c) {
    return null;
  }
  for (var initialWhitespace = cvox.TraverseUtil.isWhitespace(c);cvox.TraverseUtil.isWhitespace(c) || cvox.TraverseUtil.isHidden(endCursor.node);) {
    if (c = cvox.TraverseUtil.forwardsChar(endCursor, elementsEntered, elementsLeft), null == c) {
      return null;
    }
  }
  if (skipWhitespace || !initialWhitespace) {
    return startCursor.copyFrom(endCursor), startCursor.index--, c;
  }
  for (var i = 0;i < elementsEntered.length;i++) {
    if (cvox.TraverseUtil.isHidden(elementsEntered[i])) {
      return endCursor.index--, startCursor.copyFrom(endCursor), startCursor.index--, " ";
    }
  }
  endCursor.index--;
  return " ";
};
cvox.TraverseUtil.getPreviousChar = function(startCursor, endCursor, elementsEntered, elementsLeft, skipWhitespace) {
  endCursor.copyFrom(startCursor);
  var c = cvox.TraverseUtil.backwardsChar(startCursor, elementsEntered, elementsLeft);
  if (null == c) {
    return null;
  }
  for (var initialWhitespace = cvox.TraverseUtil.isWhitespace(c);cvox.TraverseUtil.isWhitespace(c) || cvox.TraverseUtil.isHidden(startCursor.node);) {
    if (c = cvox.TraverseUtil.backwardsChar(startCursor, elementsEntered, elementsLeft), null == c) {
      return null;
    }
  }
  if (skipWhitespace || !initialWhitespace) {
    return endCursor.copyFrom(startCursor), endCursor.index++, c;
  }
  for (var i = 0;i < elementsEntered.length;i++) {
    if (cvox.TraverseUtil.isHidden(elementsEntered[i])) {
      return startCursor.index++, endCursor.copyFrom(startCursor), endCursor.index++, " ";
    }
  }
  startCursor.index++;
  return " ";
};
cvox.TraverseUtil.getNextWord = function(startCursor, endCursor, elementsEntered, elementsLeft) {
  var cursor = endCursor.clone(), c = cvox.TraverseUtil.forwardsChar(cursor, elementsEntered, elementsLeft);
  if (null == c) {
    return null;
  }
  for (;cvox.TraverseUtil.isWhitespace(c) || cvox.TraverseUtil.isHidden(cursor.node);) {
    if (c = cvox.TraverseUtil.forwardsChar(cursor, elementsEntered, elementsLeft), null == c) {
      return null;
    }
  }
  startCursor.copyFrom(cursor);
  startCursor.index--;
  endCursor.copyFrom(cursor);
  var word = c, newEntered = [], newLeft = [], c = cvox.TraverseUtil.forwardsChar(cursor, newEntered, newLeft);
  if (null == c) {
    return word;
  }
  for (;!cvox.TraverseUtil.isWhitespace(c) && 0 == newEntered.length && 0 == newLeft && (word += c, endCursor.copyFrom(cursor), c = cvox.TraverseUtil.forwardsChar(cursor, newEntered, newLeft), null != c);) {
  }
  return word;
};
cvox.TraverseUtil.getPreviousWord = function(startCursor, endCursor, elementsEntered, elementsLeft) {
  var cursor = startCursor.clone(), c = cvox.TraverseUtil.backwardsChar(cursor, elementsEntered, elementsLeft);
  if (null == c) {
    return null;
  }
  for (;cvox.TraverseUtil.isWhitespace(c) || cvox.TraverseUtil.isHidden(cursor.node);) {
    if (c = cvox.TraverseUtil.backwardsChar(cursor, elementsEntered, elementsLeft), null == c) {
      return null;
    }
  }
  endCursor.copyFrom(cursor);
  endCursor.index++;
  startCursor.copyFrom(cursor);
  var word = c, newEntered = [], newLeft = [], c = cvox.TraverseUtil.backwardsChar(cursor, newEntered, newLeft);
  if (null == c) {
    return word;
  }
  for (;!cvox.TraverseUtil.isWhitespace(c) && 0 == newEntered.length && 0 == newLeft.length && (word = c + word, startCursor.copyFrom(cursor), c = cvox.TraverseUtil.backwardsChar(cursor, newEntered, newLeft), null != c);) {
  }
  return word;
};
cvox.TraverseUtil.includesBreakTagOrSkippedNode = function(elementsEntered, elementsLeft, breakTags) {
  for (var i = 0;i < elementsEntered.length;i++) {
    if (cvox.TraverseUtil.isHidden(elementsEntered[i])) {
      return !0;
    }
    var style = window.getComputedStyle(elementsEntered[i], null);
    if (style && "inline" != style.display || breakTags[elementsEntered[i].tagName]) {
      return !0;
    }
  }
  for (i = 0;i < elementsLeft.length;i++) {
    if ((style = window.getComputedStyle(elementsLeft[i], null)) && "inline" != style.display || breakTags[elementsLeft[i].tagName]) {
      return !0;
    }
  }
  return !1;
};
cvox.TraverseUtil.getNextSentence = function(startCursor, endCursor, elementsEntered$$0, elementsLeft$$0, breakTags) {
  return cvox.TraverseUtil.getNextString(startCursor, endCursor, elementsEntered$$0, elementsLeft$$0, function(str, word, elementsEntered, elementsLeft) {
    return "." == str.substr(-1) ? !0 : cvox.TraverseUtil.includesBreakTagOrSkippedNode(elementsEntered, elementsLeft, breakTags);
  });
};
cvox.TraverseUtil.getPreviousSentence = function(startCursor, endCursor, elementsEntered$$0, elementsLeft$$0, breakTags) {
  return cvox.TraverseUtil.getPreviousString(startCursor, endCursor, elementsEntered$$0, elementsLeft$$0, function(str, word, elementsEntered, elementsLeft) {
    return "." == word.substr(-1) ? !0 : cvox.TraverseUtil.includesBreakTagOrSkippedNode(elementsEntered, elementsLeft, breakTags);
  });
};
cvox.TraverseUtil.getNextLine = function(startCursor, endCursor, elementsEntered$$0, elementsLeft$$0, breakTags) {
  var range = document.createRange(), rightMostRect = null, prevCursor = endCursor.clone();
  return cvox.TraverseUtil.getNextString(startCursor, endCursor, elementsEntered$$0, elementsLeft$$0, function(str, word, elementsEntered, elementsLeft) {
    range.setStart(startCursor.node, startCursor.index);
    range.setEnd(endCursor.node, endCursor.index);
    var currentRect = range.getBoundingClientRect();
    rightMostRect || (rightMostRect = currentRect);
    if (currentRect.bottom != rightMostRect.bottom && !cvox.DomPredicates.linkPredicate(cvox.DomUtil.getAncestors(endCursor.node))) {
      return endCursor.copyFrom(prevCursor), !0;
    }
    rightMostRect = currentRect;
    prevCursor.copyFrom(endCursor);
    return cvox.TraverseUtil.includesBreakTagOrSkippedNode(elementsEntered, elementsLeft, breakTags);
  });
};
cvox.TraverseUtil.getPreviousLine = function(startCursor, endCursor, elementsEntered$$0, elementsLeft$$0, breakTags) {
  var range = document.createRange(), leftMostRect = null, prevCursor = startCursor.clone();
  return cvox.TraverseUtil.getPreviousString(startCursor, endCursor, elementsEntered$$0, elementsLeft$$0, function(str, word, elementsEntered, elementsLeft) {
    range.setStart(startCursor.node, startCursor.index);
    range.setEnd(endCursor.node, endCursor.index);
    var currentRect = range.getBoundingClientRect();
    leftMostRect || (leftMostRect = currentRect);
    if (currentRect.top != leftMostRect.top && !cvox.DomPredicates.linkPredicate(cvox.DomUtil.getAncestors(startCursor.node))) {
      return startCursor.copyFrom(prevCursor), !0;
    }
    leftMostRect = currentRect;
    prevCursor.copyFrom(startCursor);
    return cvox.TraverseUtil.includesBreakTagOrSkippedNode(elementsEntered, elementsLeft, breakTags);
  });
};
cvox.TraverseUtil.getNextParagraph = function(startCursor, endCursor, elementsEntered$$0, elementsLeft$$0) {
  return cvox.TraverseUtil.getNextString(startCursor, endCursor, elementsEntered$$0, elementsLeft$$0, function(str, word, elementsEntered, elementsLeft) {
    for (var i = 0;i < elementsEntered.length;i++) {
      if (cvox.TraverseUtil.isHidden(elementsEntered[i])) {
        return !0;
      }
      var style = window.getComputedStyle(elementsEntered[i], null);
      if (style && "inline" != style.display) {
        return !0;
      }
    }
    for (i = 0;i < elementsLeft.length;i++) {
      if ((style = window.getComputedStyle(elementsLeft[i], null)) && "inline" != style.display) {
        return !0;
      }
    }
    return !1;
  });
};
cvox.TraverseUtil.getPreviousParagraph = function(startCursor, endCursor, elementsEntered$$0, elementsLeft$$0) {
  return cvox.TraverseUtil.getPreviousString(startCursor, endCursor, elementsEntered$$0, elementsLeft$$0, function(str, word, elementsEntered, elementsLeft) {
    for (var i = 0;i < elementsEntered.length;i++) {
      if (cvox.TraverseUtil.isHidden(elementsEntered[i])) {
        return !0;
      }
      var style = window.getComputedStyle(elementsEntered[i], null);
      if (style && "inline" != style.display) {
        return !0;
      }
    }
    for (i = 0;i < elementsLeft.length;i++) {
      if ((style = window.getComputedStyle(elementsLeft[i], null)) && "inline" != style.display) {
        return !0;
      }
    }
    return !1;
  });
};
cvox.TraverseUtil.getNextString = function(startCursor, endCursor, elementsEntered, elementsLeft, breakBefore) {
  var wordStartCursor = endCursor.clone(), wordEndCursor = endCursor.clone(), newEntered = [], newLeft = [], str = "", word = cvox.TraverseUtil.getNextWord(wordStartCursor, wordEndCursor, newEntered, newLeft);
  if (null == word) {
    return null;
  }
  for (startCursor.copyFrom(wordStartCursor);!(str && breakBefore(str, word, newEntered, newLeft) || (str && (str += " "), str += word, endCursor.copyFrom(wordEndCursor), newEntered = [], newLeft = [], word = cvox.TraverseUtil.getNextWord(wordStartCursor, wordEndCursor, newEntered, newLeft), null == word));) {
  }
  return str;
};
cvox.TraverseUtil.getPreviousString = function(startCursor, endCursor, elementsEntered, elementsLeft, breakBefore) {
  var wordStartCursor = startCursor.clone(), wordEndCursor = startCursor.clone(), newEntered = [], newLeft = [], str = "", word = cvox.TraverseUtil.getPreviousWord(wordStartCursor, wordEndCursor, newEntered, newLeft);
  if (null == word) {
    return null;
  }
  for (endCursor.copyFrom(wordEndCursor);!(str && breakBefore(str, word, newEntered, newLeft) || (str && (str = " " + str), str = word + str, startCursor.copyFrom(wordStartCursor), newEntered = [], newLeft = [], word = cvox.TraverseUtil.getPreviousWord(wordStartCursor, wordEndCursor, newEntered, newLeft), null == word));) {
  }
  return str;
};
cvox.CursorSelection = function(start, end, opt_reverse) {
  this.start = start.clone();
  this.end = end.clone();
  void 0 == opt_reverse && (opt_reverse = !1);
  if ((this.isReversed_ = opt_reverse) && this.start.node.compareDocumentPosition(this.end.node) == cvox.CursorSelection.BEFORE || !this.isReversed_ && this.end.node.compareDocumentPosition(this.start.node) == cvox.CursorSelection.BEFORE) {
    var oldStart = this.start;
    this.start = this.end;
    this.end = oldStart;
  }
};
cvox.CursorSelection.BEFORE = 4;
cvox.CursorSelection.prototype.setReversed = function(reversed) {
  if (reversed == this.isReversed_) {
    return this;
  }
  var oldStart = this.start;
  this.start = this.end;
  this.end = oldStart;
  this.isReversed_ = reversed;
  return this;
};
cvox.CursorSelection.prototype.isReversed = function() {
  return this.isReversed_;
};
cvox.CursorSelection.prototype.absStart = function() {
  return this.isReversed_ ? this.end : this.start;
};
cvox.CursorSelection.prototype.absEnd = function() {
  return this.isReversed_ ? this.start : this.end;
};
cvox.CursorSelection.prototype.clone = function() {
  return new cvox.CursorSelection(this.start, this.end, this.isReversed_);
};
cvox.CursorSelection.prototype.select = function() {
  var sel = window.getSelection();
  sel.removeAllRanges();
  this.normalize();
  sel.addRange(this.getRange());
};
cvox.CursorSelection.fromNode = function(node) {
  if (!node) {
    return null;
  }
  var text = cvox.TraverseUtil.getNodeText(node);
  return new cvox.CursorSelection(new cvox.Cursor(node, 0, text), new cvox.Cursor(node, 0, text));
};
cvox.CursorSelection.fromBody = function() {
  return cvox.CursorSelection.fromNode(document.body);
};
cvox.CursorSelection.prototype.getText = function() {
  return this.start.equals(this.end) ? cvox.TraverseUtil.getNodeText(this.start.node) : cvox.SelectionUtil.getRangeText(this.getRange());
};
cvox.CursorSelection.prototype.getRange = function() {
  var range = document.createRange();
  this.isReversed_ ? (range.setStart(this.end.node, this.end.index), range.setEnd(this.start.node, this.start.index)) : (range.setStart(this.start.node, this.start.index), range.setEnd(this.end.node, this.end.index));
  return range;
};
cvox.CursorSelection.prototype.equals = function(rhs) {
  return this.start.equals(rhs.start) && this.end.equals(rhs.end);
};
cvox.CursorSelection.prototype.absEquals = function(rhs) {
  return this.start.equals(rhs.start) && this.end.equals(rhs.end) || this.end.equals(rhs.start) && this.start.equals(rhs.end);
};
cvox.CursorSelection.prototype.directedBefore = function(rhs) {
  var leftToRight = this.start.node.compareDocumentPosition(rhs.start.node) == cvox.CursorSelection.BEFORE;
  return this.start.node == rhs.start.node || (this.isReversed() ? !leftToRight : leftToRight);
};
cvox.CursorSelection.prototype.normalize = function() {
  if (0 == this.absEnd().index && this.absEnd().node) {
    var node = this.absEnd().node, testRange = document.createRange();
    testRange.selectNodeContents(node);
    this.absEnd().index = testRange.endOffset;
  }
  return this;
};
cvox.CursorSelection.prototype.collapse = function() {
  if (this.start.equals(this.end)) {
    return this;
  }
  this.end.copyFrom(this.start);
  if (0 == this.start.text.length) {
    return this;
  }
  this.isReversed() ? 0 < this.end.index && this.end.index-- : this.end.index < this.end.text.length && this.end.index++;
  return this;
};
goog.object = {};
goog.object.forEach = function(obj, f, opt_obj) {
  for (var key in obj) {
    f.call(opt_obj, obj[key], key, obj);
  }
};
goog.object.filter = function(obj, f, opt_obj) {
  var res = {}, key;
  for (key in obj) {
    f.call(opt_obj, obj[key], key, obj) && (res[key] = obj[key]);
  }
  return res;
};
goog.object.map = function(obj, f, opt_obj) {
  var res = {}, key;
  for (key in obj) {
    res[key] = f.call(opt_obj, obj[key], key, obj);
  }
  return res;
};
goog.object.some = function(obj, f, opt_obj) {
  for (var key in obj) {
    if (f.call(opt_obj, obj[key], key, obj)) {
      return !0;
    }
  }
  return !1;
};
goog.object.every = function(obj, f, opt_obj) {
  for (var key in obj) {
    if (!f.call(opt_obj, obj[key], key, obj)) {
      return !1;
    }
  }
  return !0;
};
goog.object.getCount = function(obj) {
  var rv = 0, key;
  for (key in obj) {
    rv++;
  }
  return rv;
};
goog.object.getAnyKey = function(obj) {
  for (var key in obj) {
    return key;
  }
};
goog.object.getAnyValue = function(obj) {
  for (var key in obj) {
    return obj[key];
  }
};
goog.object.contains = function(obj, val) {
  return goog.object.containsValue(obj, val);
};
goog.object.getValues = function(obj) {
  var res = [], i = 0, key;
  for (key in obj) {
    res[i++] = obj[key];
  }
  return res;
};
goog.object.getKeys = function(obj) {
  var res = [], i = 0, key;
  for (key in obj) {
    res[i++] = key;
  }
  return res;
};
goog.object.getValueByKeys = function(obj, var_args) {
  for (var isArrayLike = goog.isArrayLike(var_args), keys = isArrayLike ? var_args : arguments, i = isArrayLike ? 0 : 1;i < keys.length && (obj = obj[keys[i]], goog.isDef(obj));i++) {
  }
  return obj;
};
goog.object.containsKey = function(obj, key) {
  return null !== obj && key in obj;
};
goog.object.containsValue = function(obj, val) {
  for (var key in obj) {
    if (obj[key] == val) {
      return !0;
    }
  }
  return !1;
};
goog.object.findKey = function(obj, f, opt_this) {
  for (var key in obj) {
    if (f.call(opt_this, obj[key], key, obj)) {
      return key;
    }
  }
};
goog.object.findValue = function(obj, f, opt_this) {
  var key = goog.object.findKey(obj, f, opt_this);
  return key && obj[key];
};
goog.object.isEmpty = function(obj) {
  for (var key in obj) {
    return !1;
  }
  return !0;
};
goog.object.clear = function(obj) {
  for (var i in obj) {
    delete obj[i];
  }
};
goog.object.remove = function(obj, key) {
  var rv;
  (rv = key in obj) && delete obj[key];
  return rv;
};
goog.object.add = function(obj, key, val) {
  if (null !== obj && key in obj) {
    throw Error('The object already contains the key "' + key + '"');
  }
  goog.object.set(obj, key, val);
};
goog.object.get = function(obj, key, opt_val) {
  return null !== obj && key in obj ? obj[key] : opt_val;
};
goog.object.set = function(obj, key, value) {
  obj[key] = value;
};
goog.object.setIfUndefined = function(obj, key, value) {
  return key in obj ? obj[key] : obj[key] = value;
};
goog.object.setWithReturnValueIfNotSet = function(obj, key, f) {
  if (key in obj) {
    return obj[key];
  }
  var val = f();
  return obj[key] = val;
};
goog.object.equals = function(a, b) {
  for (var k in a) {
    if (!(k in b) || a[k] !== b[k]) {
      return !1;
    }
  }
  for (k in b) {
    if (!(k in a)) {
      return !1;
    }
  }
  return !0;
};
goog.object.clone = function(obj) {
  var res = {}, key;
  for (key in obj) {
    res[key] = obj[key];
  }
  return res;
};
goog.object.unsafeClone = function(obj) {
  var type = goog.typeOf(obj);
  if ("object" == type || "array" == type) {
    if (goog.isFunction(obj.clone)) {
      return obj.clone();
    }
    var clone = "array" == type ? [] : {}, key;
    for (key in obj) {
      clone[key] = goog.object.unsafeClone(obj[key]);
    }
    return clone;
  }
  return obj;
};
goog.object.transpose = function(obj) {
  var transposed = {}, key;
  for (key in obj) {
    transposed[obj[key]] = key;
  }
  return transposed;
};
goog.object.PROTOTYPE_FIELDS_ = "constructor hasOwnProperty isPrototypeOf propertyIsEnumerable toLocaleString toString valueOf".split(" ");
goog.object.extend = function(target, var_args) {
  for (var key, source, i = 1;i < arguments.length;i++) {
    source = arguments[i];
    for (key in source) {
      target[key] = source[key];
    }
    for (var j = 0;j < goog.object.PROTOTYPE_FIELDS_.length;j++) {
      key = goog.object.PROTOTYPE_FIELDS_[j], Object.prototype.hasOwnProperty.call(source, key) && (target[key] = source[key]);
    }
  }
};
goog.object.create = function(var_args) {
  var argLength = arguments.length;
  if (1 == argLength && goog.isArray(arguments[0])) {
    return goog.object.create.apply(null, arguments[0]);
  }
  if (argLength % 2) {
    throw Error("Uneven number of arguments");
  }
  for (var rv = {}, i = 0;i < argLength;i += 2) {
    rv[arguments[i]] = arguments[i + 1];
  }
  return rv;
};
goog.object.createSet = function(var_args) {
  var argLength = arguments.length;
  if (1 == argLength && goog.isArray(arguments[0])) {
    return goog.object.createSet.apply(null, arguments[0]);
  }
  for (var rv = {}, i = 0;i < argLength;i++) {
    rv[arguments[i]] = !0;
  }
  return rv;
};
goog.object.createImmutableView = function(obj) {
  var result = obj;
  Object.isFrozen && !Object.isFrozen(obj) && (result = Object.create(obj), Object.freeze(result));
  return result;
};
goog.object.isImmutableView = function(obj) {
  return !!Object.isFrozen && Object.isFrozen(obj);
};
cvox.Spannable = function(opt_string, opt_annotation) {
  this.string_ = opt_string || "";
  this.spans_ = [];
  if (goog.isDef(opt_annotation)) {
    var len = this.string_.length;
    this.spans_.push({value:opt_annotation, start:0, end:len});
  }
};
cvox.Spannable.prototype.toString = function() {
  return this.string_;
};
cvox.Spannable.prototype.getLength = function() {
  return this.string_.length;
};
cvox.Spannable.prototype.setSpan = function(value, start, end) {
  this.removeSpan(value);
  if (0 <= start && start <= end && end <= this.string_.length) {
    this.spans_.push({value:value, start:start, end:end});
  } else {
    throw new RangeError("span out of range (start=" + start + ", end=" + end + ", len=" + this.string_.length + ")");
  }
};
cvox.Spannable.prototype.removeSpan = function(value) {
  for (var i = this.spans_.length - 1;0 <= i;i--) {
    this.spans_[i].value === value && this.spans_.splice(i, 1);
  }
};
cvox.Spannable.prototype.append = function(other) {
  if (other instanceof cvox.Spannable) {
    var otherSpannable = other, originalLength = this.getLength();
    this.string_ += otherSpannable.string_;
    other.spans_.forEach(goog.bind(function(span) {
      this.setSpan(span.value, span.start + originalLength, span.end + originalLength);
    }, this));
  } else {
    "string" === typeof other && (this.string_ += other);
  }
};
cvox.Spannable.prototype.getSpan = function(position) {
  for (var i = 0;i < this.spans_.length;i++) {
    var span = this.spans_[i];
    if (span.start <= position && position < span.end) {
      return span.value;
    }
  }
};
cvox.Spannable.prototype.getSpanInstanceOf = function(constructor) {
  for (var i = 0;i < this.spans_.length;i++) {
    var span = this.spans_[i];
    if (span.value instanceof constructor) {
      return span.value;
    }
  }
};
cvox.Spannable.prototype.getSpans = function(position) {
  for (var results = [], i = 0;i < this.spans_.length;i++) {
    var span = this.spans_[i];
    span.start <= position && position < span.end && results.push(span.value);
  }
  return results;
};
cvox.Spannable.prototype.getSpanStart = function(value) {
  for (var i = 0;i < this.spans_.length;i++) {
    var span = this.spans_[i];
    if (span.value === value) {
      return span.start;
    }
  }
};
cvox.Spannable.prototype.getSpanEnd = function(value) {
  for (var i = 0;i < this.spans_.length;i++) {
    var span = this.spans_[i];
    if (span.value === value) {
      return span.end;
    }
  }
};
cvox.Spannable.prototype.substring = function(start, opt_end) {
  var end = goog.isDef(opt_end) ? opt_end : this.string_.length;
  if (0 > start || end > this.string_.length || start > end) {
    throw new RangeError("substring indices out of range");
  }
  for (var result = new cvox.Spannable(this.string_.substring(start, end)), i = 0;i < this.spans_.length;i++) {
    var span = this.spans_[i];
    if (span.start <= end && span.end >= start) {
      var newStart = Math.max(0, span.start - start), newEnd = Math.min(end - start, span.end - start);
      result.spans_.push({value:span.value, start:newStart, end:newEnd});
    }
  }
  return result;
};
cvox.Spannable.prototype.trimLeft = function() {
  return this.trim_(!0, !1);
};
cvox.Spannable.prototype.trimRight = function() {
  return this.trim_(!1, !0);
};
cvox.Spannable.prototype.trim = function() {
  return this.trim_(!0, !0);
};
cvox.Spannable.prototype.trim_ = function(trimStart, trimEnd) {
  if (!trimStart && !trimEnd) {
    return this;
  }
  if (/^\s*$/.test(this.string_)) {
    return this.substring(0, 0);
  }
  var trimmedStart = trimStart ? this.string_.match(/^\s*/)[0].length : 0, trimmedEnd = trimEnd ? this.string_.match(/\s*$/).index : this.string_.length;
  return this.substring(trimmedStart, trimmedEnd);
};
cvox.Spannable.prototype.toJson = function() {
  var result = {};
  result.string = this.string_;
  result.spans = [];
  for (var i = 0;i < this.spans_.length;++i) {
    var span = this.spans_[i], serializeInfo = goog.object.findValue(cvox.Spannable.serializableSpansByName_, function(v) {
      return v.ctor === span.value.constructor;
    });
    if (serializeInfo) {
      var spanObj = {type:serializeInfo.name, start:span.start, end:span.end};
      serializeInfo.toJson && (spanObj.value = serializeInfo.toJson.apply(span.value));
      result.spans.push(spanObj);
    }
  }
  return result;
};
cvox.Spannable.fromJson = function(obj) {
  if ("string" !== typeof obj.string) {
    throw "Invalid spannable json object: string field not a string";
  }
  if (!(obj.spans instanceof Array)) {
    throw "Invalid spannable json object: no spans array";
  }
  for (var result = new cvox.Spannable(obj.string), i = 0, span;span = obj.spans[i];++i) {
    if ("string" !== typeof span.type) {
      throw "Invalid span in spannable json object: type not a string";
    }
    if ("number" !== typeof span.start || "number" !== typeof span.end) {
      throw "Invalid span in spannable json object: start or end not a number";
    }
    var serializeInfo = cvox.Spannable.serializableSpansByName_[span.type], value = serializeInfo.fromJson(span.value);
    result.setSpan(value, span.start, span.end);
  }
  return result;
};
cvox.Spannable.registerSerializableSpan = function(constructor, name, fromJson, toJson) {
  var obj = {name:name, ctor:constructor, fromJson:fromJson, toJson:toJson};
  cvox.Spannable.serializableSpansByName_[name] = obj;
};
cvox.Spannable.registerStatelessSerializableSpan = function(constructor, name) {
  var obj = {name:name, ctor:constructor, toJson:void 0, fromJson:function() {
    return new constructor;
  }};
  cvox.Spannable.serializableSpansByName_[name] = obj;
};
cvox.Spannable.serializableSpansByName_ = {};
cvox.NavBraille = function(kwargs) {
  this.text = kwargs.text instanceof cvox.Spannable ? kwargs.text : new cvox.Spannable(kwargs.text);
  this.startIndex = goog.isDef(kwargs.startIndex) ? kwargs.startIndex : -1;
  this.endIndex = goog.isDef(kwargs.endIndex) ? kwargs.endIndex : this.startIndex;
};
cvox.NavBraille.fromText = function(text) {
  return new cvox.NavBraille({text:text});
};
cvox.NavBraille.fromJson = function(json) {
  if ("number" !== typeof json.startIndex || "number" !== typeof json.endIndex) {
    throw "Invalid start or end index in serialized NavBraille: " + json;
  }
  return new cvox.NavBraille({text:cvox.Spannable.fromJson(json.spannable), startIndex:json.startIndex, endIndex:json.endIndex});
};
cvox.NavBraille.prototype.isEmpty = function() {
  return 0 == this.text.getLength();
};
cvox.NavBraille.prototype.toString = function() {
  return 'NavBraille(text="' + this.text.toString() + '"  startIndex="' + this.startIndex + '"  endIndex="' + this.endIndex + '")';
};
cvox.NavBraille.prototype.toJson = function() {
  return {spannable:this.text.toJson(), startIndex:this.startIndex, endIndex:this.endIndex};
};
cvox.NavBraille.prototype.write = function() {
  cvox.ChromeVox.braille.write(this);
};
cvox.BrailleKeyCommand = {PAN_LEFT:"pan_left", PAN_RIGHT:"pan_right", LINE_UP:"line_up", LINE_DOWN:"line_down", TOP:"top", BOTTOM:"bottom", ROUTING:"routing", SECONDARY_ROUTING:"secondary_routing", DOTS:"dots", STANDARD_KEY:"standard_key"};
cvox.BrailleKeyEvent = {};
cvox.BrailleInterface = function() {
};
cvox.BrailleInterface.prototype.write = function() {
};
cvox.AbstractBraille = function() {
};
cvox.AbstractHost = function() {
};
cvox.AbstractHost.State = {ACTIVE:0, INACTIVE:1, KILLED:2};
cvox.AbstractHost.prototype.init = function() {
};
cvox.AbstractHost.prototype.reinit = function() {
};
cvox.AbstractHost.prototype.onPageLoad = function() {
};
cvox.AbstractHost.prototype.getApiSrc = function() {
  return "";
};
cvox.AbstractHost.prototype.getFileSrc = function() {
  return "";
};
cvox.AbstractHost.prototype.hasTtsCallback = function() {
  return !0;
};
cvox.AbstractHost.prototype.ttsLoaded = function() {
  return !0;
};
cvox.AbstractHost.prototype.mustRedispatchClickEvent = function() {
  return !1;
};
cvox.AbstractHost.prototype.activateOrDeactivateChromeVox = function(active) {
  this.onStateChanged_(active ? cvox.AbstractHost.State.ACTIVE : cvox.AbstractHost.State.INACTIVE);
};
cvox.AbstractHost.prototype.killChromeVox = function() {
  this.onStateChanged_(cvox.AbstractHost.State.KILLED);
};
cvox.AbstractHost.prototype.onStateChanged_ = function(state) {
  var active = state == cvox.AbstractHost.State.ACTIVE;
  if (active != cvox.ChromeVox.isActive) {
    switch(cvox.ChromeVoxEventWatcher.cleanup(window), state) {
      case cvox.AbstractHost.State.ACTIVE:
        cvox.ChromeVox.isActive = !0;
        cvox.ChromeVox.navigationManager.showOrHideIndicator(!0);
        cvox.ChromeVoxEventWatcher.init(window);
        if (document.activeElement) {
          var speakNodeAlso = document.hasFocus() && !document.webkitHidden;
          cvox.ApiImplementation.syncToNode(document.activeElement, speakNodeAlso);
        } else {
          cvox.ChromeVox.navigationManager.updateIndicator();
        }
        break;
      case cvox.AbstractHost.State.INACTIVE:
        cvox.ChromeVox.isActive = !1;
        cvox.ChromeVox.navigationManager.showOrHideIndicator(!1);
        cvox.ChromeVoxEventWatcher.init(window);
        break;
      case cvox.AbstractHost.State.KILLED:
        cvox.ChromeVox.isActive = !1, cvox.ChromeVox.navigationManager.showOrHideIndicator(!1);
    }
  }
};
cvox.MathJaxInterface = function() {
};
cvox.MathJaxInterface.prototype.isMathjaxActive = function() {
};
cvox.MathJaxInterface.prototype.getAllJax = function() {
};
cvox.MathJaxInterface.prototype.registerSignal = function() {
};
cvox.MathJaxInterface.prototype.injectScripts = function() {
};
cvox.MathJaxInterface.prototype.configMediaWiki = function() {
};
cvox.MathJaxInterface.prototype.getTex = function() {
};
cvox.MathJaxInterface.prototype.getAsciiMath = function() {
};
cvox.AbstractMathJax = function() {
};
cvox.AbstractMathJax.prototype.getAllTexs = function(callback) {
  for (var allTexs = document.querySelectorAll(cvox.DomUtil.altMathQuerySelector("tex")), i = 0, tex;tex = allTexs[i];i++) {
    this.getTex(callback, tex);
  }
};
cvox.AbstractMathJax.prototype.getAllAsciiMaths = function(callback) {
  for (var allAsciiMaths = document.querySelectorAll(cvox.DomUtil.altMathQuerySelector("asciimath")), i = 0, tex;tex = allAsciiMaths[i];i++) {
    this.getAsciiMath(callback, tex);
  }
};
cvox.AbstractMathJax.prototype.convertMarkupToDom = function(callback, mml, id) {
  if (mml) {
    var dp = new DOMParser, cleanMml = mml.replace(/>\s+</g, "><");
    callback(dp.parseFromString(cleanMml, "text/xml").firstChild, id);
  }
};
cvox.AbstractMsgs = function() {
};
cvox.AbstractMsgs.prototype.getMsg = function() {
};
cvox.AbstractMsgs.prototype.getNumber = function() {
};
cvox.HostFactory = function() {
};
cvox.HostFactory.getHost = function() {
  return new cvox.HostFactory.hostConstructor;
};
cvox.HostFactory.getTts = function() {
  return new cvox.HostFactory.ttsConstructor;
};
cvox.HostFactory.getBraille = function() {
  return new cvox.HostFactory.brailleConstructor;
};
cvox.HostFactory.getMsgs = function() {
  return new cvox.HostFactory.msgsConstructor;
};
cvox.HostFactory.getEarcons = function() {
  return new cvox.HostFactory.earconsConstructor;
};
cvox.HostFactory.getMathJax = function() {
  return new cvox.HostFactory.mathJaxConstructor;
};
cvox.SpokenMessage = function() {
  this.raw = this.id = this.count = null;
};
cvox.SpokenMessages = {};
cvox.SpokenMessages.messages = [];
cvox.SpokenMessages.speakFlush = function() {
  cvox.SpokenMessages.speak(cvox.AbstractTts.QUEUE_MODE_FLUSH);
};
cvox.SpokenMessages.speakQueued = function() {
  cvox.SpokenMessages.speak(cvox.AbstractTts.QUEUE_MODE_QUEUE);
};
cvox.SpokenMessages.speak = function(mode) {
  for (var i = 0;i < cvox.SpokenMessages.messages.length;++i) {
    var message = cvox.SpokenMessages.messages[i];
    if (!message || !message.id && !message.raw) {
      throw "Invalid message received.";
    }
    var finalText = "";
    if (null != message.count) {
      if (0 >= message.count) {
        try {
          finalText += cvox.ChromeVox.msgs.getMsg(message.id[0] + "_optional_default");
        } catch (e) {
          continue;
        }
      } else {
        finalText = 1 == message.count ? finalText + cvox.ChromeVox.msgs.getMsg(message.id[0] + "_singular") : finalText + cvox.ChromeVox.msgs.getMsg(message.id[0] + "_plural", [message.count]);
      }
    } else {
      finalText = message.raw ? finalText + message.raw : finalText + cvox.ChromeVox.msgs.getMsg.apply(cvox.ChromeVox.msgs, message.id);
    }
    cvox.ChromeVox.tts.speak(finalText, mode, cvox.AbstractTts.PERSONALITY_ANNOUNCEMENT);
    mode = cvox.AbstractTts.QUEUE_MODE_QUEUE;
  }
  cvox.SpokenMessages.messages = [];
};
cvox.SpokenMessages.currentMessage = function() {
  if (0 == cvox.SpokenMessages.messages.length) {
    throw "Invalid usage of SpokenMessages; start the chain using $m()";
  }
  return cvox.SpokenMessages.messages[cvox.SpokenMessages.messages.length - 1];
};
cvox.SpokenMessages.withCount = function(count) {
  cvox.SpokenMessages.currentMessage().count = count;
  return cvox.SpokenMessages;
};
cvox.SpokenMessages.andIndexTotal = function(index, total) {
  var newMessage = new cvox.SpokenMessage;
  newMessage.raw = cvox.ChromeVox.msgs.getMsg("index_total", [index, total]);
  cvox.SpokenMessages.messages.push(newMessage);
  return cvox.SpokenMessages;
};
cvox.SpokenMessages.andEnd = function() {
  return cvox.SpokenMessages.andMessage("end");
};
cvox.SpokenMessages.andMessage = function(messageId) {
  var newMessage = new cvox.SpokenMessage;
  newMessage.id = "string" == typeof messageId ? [messageId] : messageId;
  cvox.SpokenMessages.messages.push(newMessage);
  return cvox.SpokenMessages;
};
cvox.SpokenMessages.andRawMessage = function(message) {
  var newMessage = new cvox.SpokenMessage;
  newMessage.raw = message;
  cvox.SpokenMessages.messages.push(newMessage);
  return cvox.SpokenMessages;
};
cvox.SpokenMessages.andPause = function() {
  return cvox.SpokenMessages.andMessage("pause");
};
cvox.$m = cvox.SpokenMessages.andMessage;
cvox.CompositeTts = function() {
  this.ttsEngines_ = [];
};
cvox.CompositeTts.prototype.add = function(tts) {
  this.ttsEngines_.push(tts);
  return this;
};
cvox.CompositeTts.prototype.speak = function(textString, queueMode, properties) {
  this.ttsEngines_.forEach(function(engine) {
    engine.speak(textString, queueMode, properties);
  });
};
cvox.CompositeTts.prototype.isSpeaking = function() {
  return this.ttsEngines_.some(function(engine) {
    return engine.isSpeaking();
  });
};
cvox.CompositeTts.prototype.stop = function() {
  this.ttsEngines_.forEach(function(engine) {
    engine.stop();
  });
};
cvox.CompositeTts.prototype.increaseOrDecreaseProperty = function(propertyName, increase) {
  this.ttsEngines_.forEach(function(engine) {
    engine.increaseOrDecreaseProperty(propertyName, increase);
  });
};
cvox.CompositeTts.prototype.getDefaultProperty = function(property) {
  for (var i = 0, engine;engine = this.ttsEngines_[i];i++) {
    var value = engine.getDefaultProperty(property);
    if (value) {
      return value;
    }
  }
};
cvox.BuildInfo = {};
cvox.BuildInfo.build = "development build";
cvox.ChromeVoxJSON || (cvox.ChromeVoxJSON = {});
window.JSON && "[object JSON]" == window.JSON.toString() ? cvox.ChromeVoxJSON = window.JSON : function() {
  function f(n) {
    return 10 > n ? "0" + n : n;
  }
  function quote(string) {
    escapable.lastIndex = 0;
    return escapable.test(string) ? '"' + string.replace(escapable, function(a) {
      var c = meta[a];
      return "string" === typeof c ? c : "\\u" + ("0000" + a.charCodeAt(0).toString(16)).slice(-4);
    }) + '"' : '"' + string + '"';
  }
  function str(key, holder) {
    var i, k, v, length, mind = gap, partial, value = holder[key];
    value && "object" === typeof value && "function" === typeof value.toJSON && (value = value.toJSON(key));
    "function" === typeof rep && (value = rep.call(holder, key, value));
    switch(typeof value) {
      case "string":
        return quote(value);
      case "number":
        return isFinite(value) ? String(value) : "null";
      case "boolean":
      ;
      case "null":
        return String(value);
      case "object":
        if (!value) {
          return "null";
        }
        gap += indent;
        partial = [];
        if ("[object Array]" === Object.prototype.toString.apply(value)) {
          length = value.length;
          for (i = 0;i < length;i += 1) {
            partial[i] = str(i, value) || "null";
          }
          v = 0 === partial.length ? "[]" : gap ? "[\n" + gap + partial.join(",\n" + gap) + "\n" + mind + "]" : "[" + partial.join(",") + "]";
          gap = mind;
          return v;
        }
        if (rep && "object" === typeof rep) {
          for (length = rep.length, i = 0;i < length;i += 1) {
            k = rep[i], "string" === typeof k && (v = str(k, value)) && partial.push(quote(k) + (gap ? ": " : ":") + v);
          }
        } else {
          for (k in value) {
            Object.hasOwnProperty.call(value, k) && (v = str(k, value)) && partial.push(quote(k) + (gap ? ": " : ":") + v);
          }
        }
        v = 0 === partial.length ? "{}" : gap ? "{\n" + gap + partial.join(",\n" + gap) + "\n" + mind + "}" : "{" + partial.join(",") + "}";
        gap = mind;
        return v;
    }
  }
  "function" !== typeof Date.prototype.toJSON && (Date.prototype.toJSON = function() {
    return isFinite(this.valueOf()) ? this.getUTCFullYear() + "-" + f(this.getUTCMonth() + 1) + "-" + f(this.getUTCDate()) + "T" + f(this.getUTCHours()) + ":" + f(this.getUTCMinutes()) + ":" + f(this.getUTCSeconds()) + "Z" : "null";
  }, String.prototype.toJSON = Number.prototype.toJSON = Boolean.prototype.toJSON = function() {
    return this.valueOf();
  });
  var cx = /[\u0000\u00ad\u0600-\u0604\u070f\u17b4\u17b5\u200c-\u200f\u2028-\u202f\u2060-\u206f\ufeff\ufff0-\uffff]/g, escapable = /[\\\"\x00-\x1f\x7f-\x9f\u00ad\u0600-\u0604\u070f\u17b4\u17b5\u200c-\u200f\u2028-\u202f\u2060-\u206f\ufeff\ufff0-\uffff]/g, gap, indent, meta = {"\b":"\\b", "\t":"\\t", "\n":"\\n", "\f":"\\f", "\r":"\\r", '"':'\\"', "\\":"\\\\"}, rep;
  "function" !== typeof cvox.ChromeVoxJSON.stringify && (cvox.ChromeVoxJSON.stringify = function(value, replacer, space) {
    var i;
    indent = gap = "";
    if ("number" === typeof space) {
      for (i = 0;i < space;i += 1) {
        indent += " ";
      }
    } else {
      "string" === typeof space && (indent = space);
    }
    if ((rep = replacer) && "function" !== typeof replacer && ("object" !== typeof replacer || "number" !== typeof replacer.length)) {
      throw Error("JSON.stringify");
    }
    return str("", {"":value});
  });
  "function" !== typeof cvox.ChromeVoxJSON.parse && (cvox.ChromeVoxJSON.parse = function(text, reviver) {
    function walk(holder, key) {
      var k, v, value = holder[key];
      if (value && "object" === typeof value) {
        for (k in value) {
          Object.hasOwnProperty.call(value, k) && (v = walk(value, k), void 0 !== v ? value[k] = v : delete value[k]);
        }
      }
      return reviver.call(holder, key, value);
    }
    var j;
    text = String(text);
    cx.lastIndex = 0;
    cx.test(text) && (text = text.replace(cx, function(a) {
      return "\\u" + ("0000" + a.charCodeAt(0).toString(16)).slice(-4);
    }));
    if (/^[\],:{}\s]*$/.test(text.replace(/\\(?:["\\\/bfnrt]|u[0-9a-fA-F]{4})/g, "@").replace(/"[^"\\\n\r]*"|true|false|null|-?\d+(?:\.\d*)?(?:[eE][+\-]?\d+)?/g, "]").replace(/(?:^|:|,)(?:\s*\[)+/g, ""))) {
      return j = eval("(" + text + ")"), "function" === typeof reviver ? walk({"":j}, "") : j;
    }
    throw new SyntaxError("JSON.parse");
  });
}();
"undefined" != typeof goog && goog.provide && (cvox.ApiUtil = {});
window.cvox || (window.cvox = {});
cvox.ApiUtils = function() {
};
cvox.ApiUtils.nextCvoxId_ = 1;
cvox.ApiUtils.makeNodeReference = function(targetNode) {
  if (targetNode.id && document.getElementById(targetNode.id) == targetNode) {
    return {id:targetNode.id};
  }
  if (targetNode instanceof HTMLElement) {
    var cvoxid = cvox.ApiUtils.nextCvoxId_;
    targetNode.setAttribute("cvoxid", cvoxid);
    cvox.ApiUtils.nextCvoxId_ = (cvox.ApiUtils.nextCvoxId_ + 1) % 100;
    return {cvoxid:cvoxid};
  }
  if (targetNode.parentElement) {
    for (var parent = targetNode.parentElement, childIndex = -1, i = 0;i < parent.childNodes.length;i++) {
      if (parent.childNodes[i] == targetNode) {
        childIndex = i;
        break;
      }
    }
    if (0 <= childIndex) {
      return cvoxid = cvox.ApiUtils.nextCvoxId_, parent.setAttribute("cvoxid", cvoxid), cvox.ApiUtils.nextCvoxId_ = (cvox.ApiUtils.nextCvoxId_ + 1) % 100, {cvoxid:cvoxid, childIndex:childIndex};
    }
  }
  throw "Cannot reference node: " + targetNode;
};
cvox.ApiUtils.getNodeFromRef = function(nodeRef) {
  if (nodeRef.id) {
    return document.getElementById(nodeRef.id);
  }
  if (nodeRef.cvoxid) {
    var selector = '*[cvoxid="' + nodeRef.cvoxid + '"]', element = document.querySelector(selector);
    element && element.removeAttribute && element.removeAttribute("cvoxid");
    return null != nodeRef.childIndex ? element.childNodes[nodeRef.childIndex] : element;
  }
  throw "Bad node reference: " + cvox.ChromeVoxJSON.stringify(nodeRef);
};
cvox.ScriptInstaller = {};
cvox.ScriptInstaller.blacklistPattern = /chrome:\/\/|chrome-extension:\/\//;
cvox.ScriptInstaller.installScript = function(srcs, uid, opt_onload, opt_chromevoxScriptBase) {
  if (cvox.ScriptInstaller.blacklistPattern.test(document.URL) || document.querySelector("script[" + uid + "]") || !srcs) {
    return !1;
  }
  for (var i = 0, scriptSrc;scriptSrc = srcs[i];i++) {
    var xhr = new XMLHttpRequest, url = scriptSrc + "?" + (new Date).getTime();
    xhr.onreadystatechange = function() {
      if (4 == xhr.readyState) {
        var scriptText = xhr.responseText, scriptText = scriptText + ("\n//# sourceURL=" + scriptSrc + "\n"), apiScript = document.createElement("script");
        apiScript.type = "text/javascript";
        apiScript.setAttribute(uid, "1");
        apiScript.textContent = scriptText;
        opt_chromevoxScriptBase && apiScript.setAttribute("chromevoxScriptBase", opt_chromevoxScriptBase);
        cvox.DomUtil.addNodeToHead(apiScript);
      }
    };
    try {
      xhr.open("GET", url, !1), xhr.send(null);
    } catch (exception) {
      return window.console.log("Warning: ChromeVox external script loading for " + document.location + " stopped after failing to install " + scriptSrc), !1;
    }
  }
  opt_onload && opt_onload();
  return !0;
};
cvox.ApiImplementation = function() {
};
cvox.ApiImplementation.init = function(opt_onload) {
  window.addEventListener("message", cvox.ApiImplementation.portSetup, !0);
  var scripts = [];
  scripts.push(cvox.ChromeVox.host.getFileSrc("chromevox/injected/api_util.js"));
  scripts.push(cvox.ChromeVox.host.getApiSrc());
  scripts.push(cvox.ApiImplementation.siteSpecificScriptLoader);
  var apiScript = cvox.ScriptInstaller.installScript(scripts, "cvoxapi", opt_onload, cvox.ApiImplementation.siteSpecificScriptBase);
  apiScript || (window.location.href = "javascript:cvox.Api.internalEnable();");
};
cvox.ApiImplementation.portSetup = function(event$$0) {
  return "cvox.PortSetup" == event$$0.data ? (cvox.ApiImplementation.port = event$$0.ports[0], cvox.ApiImplementation.port.onmessage = function(event) {
    cvox.ApiImplementation.dispatchApiMessage(cvox.ChromeVoxJSON.parse(event.data));
  }, event$$0.stopPropagation(), !1) : !0;
};
cvox.ApiImplementation.dispatchApiMessage = function(message) {
  var method;
  switch(message.cmd) {
    case "speak":
      method = cvox.ApiImplementation.speak;
      break;
    case "speakNodeRef":
      method = cvox.ApiImplementation.speakNodeRef;
      break;
    case "stop":
      method = cvox.ApiImplementation.stop;
      break;
    case "playEarcon":
      method = cvox.ApiImplementation.playEarcon;
      break;
    case "syncToNodeRef":
      method = cvox.ApiImplementation.syncToNodeRef;
      break;
    case "clickNodeRef":
      method = cvox.ApiImplementation.clickNodeRef;
      break;
    case "getBuild":
      method = cvox.ApiImplementation.getBuild;
      break;
    case "getVersion":
      method = cvox.ApiImplementation.getVersion;
      break;
    case "getCurrentNode":
      method = cvox.ApiImplementation.getCurrentNode;
      break;
    case "getCvoxModKeys":
      method = cvox.ApiImplementation.getCvoxModKeys;
      break;
    case "isKeyShortcut":
      method = cvox.ApiImplementation.isKeyShortcut;
      break;
    case "setKeyEcho":
      method = cvox.ApiImplementation.setKeyEcho;
      break;
    case "Math.defineRule":
      method = cvox.ApiImplementation.Math.defineRule;
  }
  if (!method) {
    throw "Unknown API call: " + message.cmd;
  }
  method.apply(cvox.ApiImplementation, message.args);
};
function setupEndCallback_(properties, callbackId) {
  var endCallback = function() {
    cvox.ApiImplementation.port.postMessage(cvox.ChromeVoxJSON.stringify({id:callbackId}));
  };
  properties && (properties.endCallback = endCallback);
}
cvox.ApiImplementation.speak = function(callbackId, textString, queueMode, properties) {
  cvox.ChromeVox.isActive && (properties || (properties = {}), setupEndCallback_(properties, callbackId), cvox.ChromeVox.tts.speak(textString, queueMode, properties));
};
cvox.ApiImplementation.speakNode = function(node, queueMode, properties) {
  cvox.ChromeVox.isActive && cvox.ChromeVox.tts.speak(cvox.DomUtil.getName(node), queueMode, properties);
};
cvox.ApiImplementation.speakNodeRef = function(callbackId, nodeRef, queueMode, properties) {
  var node = cvox.ApiUtils.getNodeFromRef(nodeRef);
  properties || (properties = {});
  setupEndCallback_(properties, callbackId);
  cvox.ApiImplementation.speakNode(node, queueMode, properties);
};
cvox.ApiImplementation.stop = function() {
  cvox.ChromeVox.isActive && cvox.ChromeVox.tts.stop();
};
cvox.ApiImplementation.playEarcon = function(earcon) {
  cvox.ChromeVox.isActive && cvox.ChromeVox.earcons.playEarconByName(earcon);
};
cvox.ApiImplementation.syncToNodeRef = function(nodeRef, speakNode) {
  var node = cvox.ApiUtils.getNodeFromRef(nodeRef);
  cvox.ApiImplementation.syncToNode(node, speakNode);
};
cvox.ApiImplementation.syncToNode = function(targetNode, speakNode, opt_queueMode) {
  cvox.ChromeVox.isActive && (void 0 == opt_queueMode && (opt_queueMode = cvox.AbstractTts.QUEUE_MODE_FLUSH), cvox.ChromeVox.navigationManager.updateSelToArbitraryNode(targetNode, !0), cvox.ChromeVox.navigationManager.updateIndicator(), void 0 == speakNode && (speakNode = !1), cvox.AriaUtil.isHiddenRecursive(targetNode) && (speakNode = !1), speakNode && cvox.ChromeVox.navigationManager.speakDescriptionArray(cvox.ApiImplementation.getDesc_(targetNode), opt_queueMode, null), cvox.ChromeVox.navigationManager.getBraille().write(), 
  cvox.ChromeVox.navigationManager.updatePosition(targetNode));
};
cvox.ApiImplementation.getCurrentNode = function(callbackId) {
  var currentNode = cvox.ChromeVox.navigationManager.getCurrentNode();
  cvox.ApiImplementation.port.postMessage(cvox.ChromeVoxJSON.stringify({id:callbackId, currentNode:cvox.ApiUtils.makeNodeReference(currentNode)}));
};
cvox.ApiImplementation.getDesc_ = function(node) {
  if (!node.hasAttribute("cvoxnodedesc")) {
    return cvox.ChromeVox.navigationManager.getDescription();
  }
  for (var preDesc = cvox.ChromeVoxJSON.parse(node.getAttribute("cvoxnodedesc")), currentDesc = [], i = 0;i < preDesc.length;++i) {
    var inDesc = preDesc[i];
    currentDesc.push(new cvox.NavDescription({context:inDesc.context, text:inDesc.text, userValue:inDesc.userValue, annotation:inDesc.annotation}));
  }
  return currentDesc;
};
cvox.ApiImplementation.clickNodeRef = function(nodeRef, shiftKey) {
  cvox.DomUtil.clickElem(cvox.ApiUtils.getNodeFromRef(nodeRef), shiftKey, !1);
};
cvox.ApiImplementation.getBuild = function(callbackId) {
  cvox.ApiImplementation.port.postMessage(cvox.ChromeVoxJSON.stringify({id:callbackId, build:cvox.BuildInfo.build}));
};
cvox.ApiImplementation.getVersion = function(callbackId) {
  var version = cvox.ChromeVox.version;
  null == version ? window.setTimeout(function() {
    cvox.ApiImplementation.getVersion(callbackId);
  }, 1E3) : cvox.ApiImplementation.port.postMessage(cvox.ChromeVoxJSON.stringify({id:callbackId, version:version}));
};
cvox.ApiImplementation.getCvoxModKeys = function(callbackId) {
  cvox.ApiImplementation.port.postMessage(cvox.ChromeVoxJSON.stringify({id:callbackId, keyCodes:cvox.KeyUtil.cvoxModKeyCodes()}));
};
cvox.ApiImplementation.isKeyShortcut = function(callbackId, keyEvent) {
  var keySeq = cvox.KeyUtil.keyEventToKeySequence(keyEvent);
  cvox.ApiImplementation.port.postMessage(cvox.ChromeVoxJSON.stringify({id:callbackId, isHandled:cvox.ChromeVoxKbHandler.handlerKeyMap.hasKey(keySeq)}));
};
cvox.ApiImplementation.setKeyEcho = function(keyEcho) {
  var msg = cvox.ChromeVox.keyEcho;
  msg[document.location.href] = keyEcho;
  JSON.stringify(msg);
};
cvox.ApiImplementation.Math = function() {
};
cvox.ApiImplementation.Math.defineRule = function(name, dynamic, action, prec, constraints) {
  var mathStore = cvox.MathmlStore.getInstance(), constraintList = Array.prototype.slice.call(arguments, 4), args = [name, dynamic, action, prec].concat(constraintList);
  mathStore.defineRule.apply(mathStore, args);
};
cvox.ConsoleTts = function() {
  this.enabled_ = !1;
};
goog.addSingletonGetter(cvox.ConsoleTts);
cvox.ConsoleTts.prototype.speak = function(textString, queueMode, properties) {
  if (this.enabled_ && window.console) {
    var logStr = "Speak", logStr = queueMode == cvox.AbstractTts.QUEUE_MODE_FLUSH ? logStr + " (I)" : logStr + " (Q)", logStr = logStr + (' "' + textString + '"');
    window.console.log(logStr);
    properties && void 0 != properties.startCallback && window.console.log("  using startCallback");
    properties && void 0 != properties.endCallback && window.console.log("  using endCallback");
  }
  return this;
};
cvox.ConsoleTts.prototype.isSpeaking = function() {
  return !1;
};
cvox.ConsoleTts.prototype.stop = function() {
  this.enabled_ && window.console.log("Stop");
};
cvox.ConsoleTts.prototype.increaseOrDecreaseProperty = function() {
};
cvox.ConsoleTts.prototype.setEnabled = function(enabled) {
  this.enabled_ = enabled;
};
cvox.ConsoleTts.prototype.getDefaultProperty = function() {
};
cvox.ChromeVoxHTMLDateWidget = function(dateElem, tts) {
  var self = this;
  this.pos_ = 0;
  var maxpos = 2;
  if ("month" == dateElem.type || "week" == dateElem.type) {
    maxpos = 1;
  }
  this.maxPos_ = maxpos;
  this.dateElem_ = dateElem;
  this.dateTts_ = tts;
  this.pDay_ = this.pWeek_ = this.pMonth_ = this.pYear_ = -1;
  this.keyListener_ = function(evt) {
    self.eventHandler_(evt);
  };
  this.blurListener_ = function() {
    self.shutdown();
  };
  0 == this.dateElem_.value.length && this.forceInitTime_();
  for (var i = 0;i < this.maxPos_;i++) {
    var evt$$0 = document.createEvent("KeyboardEvent");
    evt$$0.initKeyboardEvent("keydown", !0, !0, window, "Left", 0, !1, !1, !1, !1);
    this.dateElem_.dispatchEvent(evt$$0);
    evt$$0 = document.createEvent("KeyboardEvent");
    evt$$0.initKeyboardEvent("keyup", !0, !0, window, "Left", 0, !1, !1, !1, !1);
    this.dateElem_.dispatchEvent(evt$$0);
  }
  this.dateElem_.addEventListener("keydown", this.keyListener_, !1);
  this.dateElem_.addEventListener("keyup", this.keyListener_, !1);
  this.dateElem_.addEventListener("blur", this.blurListener_, !1);
  this.update_(!0);
};
cvox.ChromeVoxHTMLDateWidget.prototype.shutdown = function() {
  this.dateElem_.removeEventListener("blur", this.blurListener_, !1);
  this.dateElem_.removeEventListener("keydown", this.keyListener_, !1);
  this.dateElem_.removeEventListener("keyup", this.keyListener_, !1);
};
cvox.ChromeVoxHTMLDateWidget.prototype.forceInitTime_ = function() {
  var currentDate = new Date, valueString = "", yearString = currentDate.getFullYear() + "", monthString = currentDate.getMonth() + 1 + "";
  2 > monthString.length && (monthString = "0" + monthString);
  var dayString = currentDate.getDate() + "";
  switch(this.dateElem_.type) {
    case "month":
      valueString = yearString + "-" + monthString;
      break;
    case "week":
      currentDate.setHours(0, 0, 0);
      currentDate.setDate(currentDate.getDate() + 4 - (currentDate.getDay() || 7));
      var yearStart = new Date(currentDate.getFullYear(), 0, 1), weekString = Math.ceil(((currentDate - yearStart) / 864E5 + 1) / 7) + "";
      2 > weekString.length && (weekString = "0" + weekString);
      weekString = "W" + weekString;
      valueString = yearString + "-" + weekString;
      break;
    default:
      valueString = yearString + "-" + monthString + "-" + dayString;
  }
  this.dateElem_.setAttribute("value", valueString);
};
cvox.ChromeVoxHTMLDateWidget.prototype.handlePosChange_ = function() {
  this.pos_ = Math.max(this.pos_, 0);
  this.pos_ = Math.min(this.pos_, this.maxPos_);
  switch(this.pos_) {
    case 0:
      "week" == this.dateElem_.type ? this.pWeek_ = -1 : this.pMonth_ = -1;
      break;
    case 1:
      "date" == this.dateElem_.type ? this.pDay_ = -1 : this.pYear_ = -1;
      break;
    case 2:
      this.pYear_ = -1;
  }
};
cvox.ChromeVoxHTMLDateWidget.prototype.update_ = function(shouldSpeakLabel) {
  var splitDate = this.dateElem_.value.split("-");
  if (1 > splitDate.length) {
    this.forceInitTime_();
  } else {
    var year = -1, month = -1, week = -1, day = -1, year = parseInt(splitDate[0], 10);
    "week" == this.dateElem_.type ? week = parseInt(splitDate[1].replace("W", ""), 10) : "date" == this.dateElem_.type ? (month = parseInt(splitDate[1], 10), day = parseInt(splitDate[2], 10)) : month = parseInt(splitDate[1], 10);
    var changeMessage = "";
    shouldSpeakLabel && (changeMessage = cvox.DomUtil.getName(this.dateElem_, !0, !0) + "\n");
    week != this.pWeek_ && (changeMessage = changeMessage + cvox.ChromeVox.msgs.getMsg("datewidget_week") + week + "\n", this.pWeek_ = week);
    if (month != this.pMonth_) {
      var monthName = "";
      switch(month) {
        case 1:
          monthName = cvox.ChromeVox.msgs.getMsg("datewidget_january");
          break;
        case 2:
          monthName = cvox.ChromeVox.msgs.getMsg("datewidget_february");
          break;
        case 3:
          monthName = cvox.ChromeVox.msgs.getMsg("datewidget_march");
          break;
        case 4:
          monthName = cvox.ChromeVox.msgs.getMsg("datewidget_april");
          break;
        case 5:
          monthName = cvox.ChromeVox.msgs.getMsg("datewidget_may");
          break;
        case 6:
          monthName = cvox.ChromeVox.msgs.getMsg("datewidget_june");
          break;
        case 7:
          monthName = cvox.ChromeVox.msgs.getMsg("datewidget_july");
          break;
        case 8:
          monthName = cvox.ChromeVox.msgs.getMsg("datewidget_august");
          break;
        case 9:
          monthName = cvox.ChromeVox.msgs.getMsg("datewidget_september");
          break;
        case 10:
          monthName = cvox.ChromeVox.msgs.getMsg("datewidget_october");
          break;
        case 11:
          monthName = cvox.ChromeVox.msgs.getMsg("datewidget_november");
          break;
        case 12:
          monthName = cvox.ChromeVox.msgs.getMsg("datewidget_december");
      }
      changeMessage = changeMessage + monthName + "\n";
      this.pMonth_ = month;
    }
    day != this.pDay_ && (changeMessage = changeMessage + day + "\n", this.pDay_ = day);
    year != this.pYear_ && (changeMessage = changeMessage + year + "\n", this.pYear_ = year);
    0 < changeMessage.length && this.dateTts_.speak(changeMessage, 0, null);
  }
};
cvox.ChromeVoxHTMLDateWidget.prototype.eventHandler_ = function(evt) {
  var shouldSpeakLabel = !1;
  if ("keydown" == evt.type) {
    if (9 == evt.keyCode && !evt.shiftKey || 39 == evt.keyCode) {
      this.pos_++, this.handlePosChange_(), shouldSpeakLabel = !0;
    }
    if (9 == evt.keyCode && evt.shiftKey || 37 == evt.keyCode) {
      this.pos_--, this.handlePosChange_(), shouldSpeakLabel = !0;
    }
  }
  this.update_(shouldSpeakLabel);
};
cvox.ChromeVoxEventSuspender = function() {
};
cvox.ChromeVoxEventSuspender.suspendLevel_ = 0;
cvox.ChromeVoxEventSuspender.enterSuspendEvents = function() {
  cvox.ChromeVoxEventSuspender.suspendLevel_ += 1;
};
cvox.ChromeVoxEventSuspender.exitSuspendEvents = function() {
  --cvox.ChromeVoxEventSuspender.suspendLevel_;
};
cvox.ChromeVoxEventSuspender.areEventsSuspended = function() {
  return 0 < cvox.ChromeVoxEventSuspender.suspendLevel_;
};
cvox.ChromeVoxEventSuspender.withSuspendedEvents = function(f) {
  return function() {
    cvox.ChromeVoxEventSuspender.enterSuspendEvents();
    var ret = f.apply(this, arguments);
    cvox.ChromeVoxEventSuspender.exitSuspendEvents();
    return ret;
  };
};
cvox.ChromeVoxEventSuspender.makeSuspendableHandler = function(handler, ret) {
  return function() {
    return cvox.ChromeVoxEventSuspender.areEventsSuspended() ? ret : handler();
  };
};
cvox.Focuser = {};
cvox.Focuser.setFocus = function(targetNode, opt_focusDescendants) {
  var sel = window.getSelection(), range;
  0 < sel.rangeCount && (range = sel.getRangeAt(0));
  document.activeElement && !cvox.DomUtil.isDescendantOfNode(targetNode, document.activeElement) && document.activeElement.blur();
  targetNode && targetNode.constructor == HTMLVideoElement && (cvox.DomUtil.isFocusable(targetNode) || targetNode.setAttribute("tabIndex", 0));
  if (opt_focusDescendants && !cvox.DomUtil.isFocusable(targetNode)) {
    var focusableDescendant = cvox.DomUtil.findFocusableDescendant(targetNode);
    focusableDescendant && (targetNode = focusableDescendant);
  } else {
    for (;targetNode && !cvox.DomUtil.isFocusable(targetNode);) {
      targetNode = targetNode.parentNode;
    }
  }
  cvox.DomUtil.isFocusable(targetNode) ? "IFRAME" != targetNode.tagName && (cvox.ChromeVoxEventSuspender.areEventsSuspended() ? (cvox.Focuser.shouldEnterSuspendEvents_(targetNode) && cvox.ChromeVoxEventSuspender.enterSuspendEvents(), window.setTimeout(function() {
    targetNode.focus();
    cvox.ChromeVoxEventSuspender.exitSuspendEvents();
  }, 0)) : window.setTimeout(function() {
    targetNode.focus();
  }, 0)) : document.activeElement && "BODY" != document.activeElement.tagName && document.activeElement.blur();
  cvox.DomUtil.isInputTypeText(targetNode) ? targetNode.select() : range && (sel.removeAllRanges(), sel.addRange(range));
};
cvox.Focuser.shouldEnterSuspendEvents_ = function(targetNode) {
  if (targetNode.constructor && targetNode.constructor == HTMLVideoElement) {
    return !1;
  }
  if (targetNode.hasAttribute) {
    switch(targetNode.getAttribute("type")) {
      case "time":
      ;
      case "date":
      ;
      case "week":
      ;
      case "month":
        return !1;
    }
  }
  return !0;
};
cvox.BrailleUtil = {};
cvox.BrailleUtil.ITEM_SEPARATOR = " ";
cvox.BrailleUtil.CONTAINER = "tag_h1_brl tag_h2_brl tag_h3_brl tag_h4_brl tag_h5_brl tag_h6_brl".split(" ");
cvox.BrailleUtil.TEMPLATE = {base:"c n v r s", aria_role_alert:"r: n", aria_role_button:"[n]", aria_role_textbox:"n: v r", input_type_button:"[n]", input_type_checkbox:"n (s)", input_type_email:"n: v r", input_type_number:"n: v r", input_type_password:"n: v r", input_type_search:"n: v r", input_type_submit:"[n]", input_type_text:"n: v r", input_type_tel:"n: v r", input_type_url:"n: v r", tag_button:"[n]", tag_textarea:"n: v r"};
cvox.BrailleUtil.ValueSpan = function(offset) {
  this.offset = offset;
};
cvox.BrailleUtil.ValueSpan.fromJson = function(obj) {
  return new cvox.BrailleUtil.ValueSpan(obj.offset);
};
cvox.BrailleUtil.ValueSpan.prototype.toJson = function() {
  return this;
};
cvox.Spannable.registerSerializableSpan(cvox.BrailleUtil.ValueSpan, "cvox.BrailleUtil.ValueSpan", cvox.BrailleUtil.ValueSpan.fromJson, cvox.BrailleUtil.ValueSpan.prototype.toJson);
cvox.BrailleUtil.ValueSelectionSpan = function() {
};
cvox.Spannable.registerStatelessSerializableSpan(cvox.BrailleUtil.ValueSelectionSpan, "cvox.BrailleUtil.ValueSelectionSpan");
cvox.BrailleUtil.getName = function(node) {
  return node ? cvox.DomUtil.getName(node).trim() : "";
};
cvox.BrailleUtil.getRoleMsg = function(node) {
  if (!node) {
    return "";
  }
  var roleMsg = cvox.DomUtil.getRoleMsg(node, cvox.VERBOSITY_VERBOSE);
  roleMsg && (roleMsg = cvox.DomUtil.collapseWhitespace(roleMsg));
  roleMsg && 0 < roleMsg.length && cvox.ChromeVox.msgs.getMsg(roleMsg + "_brl") && (roleMsg += "_brl");
  return roleMsg;
};
cvox.BrailleUtil.getRole = function(node) {
  if (!node) {
    return "";
  }
  var roleMsg = cvox.BrailleUtil.getRoleMsg(node);
  return roleMsg ? cvox.ChromeVox.msgs.getMsg(roleMsg) : "";
};
cvox.BrailleUtil.getState = function(node) {
  return node ? cvox.NodeStateUtil.expand(cvox.DomUtil.getStateMsgs(node, !0).map(function(state) {
    cvox.ChromeVox.msgs.getMsg(state[0] + "_brl") && (state[0] += "_brl");
    return state;
  })) : "";
};
cvox.BrailleUtil.getContainer = function(prev, node) {
  if (!prev || !node) {
    return "";
  }
  for (var ancestors = cvox.DomUtil.getUniqueAncestors(prev, node), i = 0, container;container = ancestors[i];i++) {
    var msg = cvox.BrailleUtil.getRoleMsg(container);
    if (msg && -1 != cvox.BrailleUtil.CONTAINER.indexOf(msg)) {
      return cvox.ChromeVox.msgs.getMsg(msg);
    }
  }
  return "";
};
cvox.BrailleUtil.getValue = function(node) {
  if (!node) {
    return new cvox.Spannable;
  }
  var valueSpan = new cvox.BrailleUtil.ValueSpan(0);
  if (cvox.DomUtil.isInputTypeText(node)) {
    var value = node.value;
    "password" === node.type && (value = value.replace(/./g, "*"));
    var spannable = new cvox.Spannable(value, valueSpan);
    if (node === document.activeElement && cvox.DomUtil.doesInputSupportSelection(node)) {
      var selectionStart = goog.math.clamp(node.selectionStart, 0, spannable.getLength()), selectionEnd = goog.math.clamp(node.selectionEnd, 0, spannable.getLength());
      spannable.setSpan(new cvox.BrailleUtil.ValueSelectionSpan, Math.min(selectionStart, selectionEnd), Math.max(selectionStart, selectionEnd));
    }
    return spannable;
  }
  if (node instanceof HTMLTextAreaElement) {
    var shadow = new cvox.EditableTextAreaShadow;
    shadow.update(node);
    var lineIndex = shadow.getLineIndex(node.selectionEnd), lineStart = shadow.getLineStart(lineIndex), lineEnd = shadow.getLineEnd(lineIndex), lineText = node.value.substring(lineStart, lineEnd);
    valueSpan.offset = lineStart;
    spannable = new cvox.Spannable(lineText, valueSpan);
    node === document.activeElement && (selectionStart = goog.math.clamp(node.selectionStart - lineStart, 0, spannable.getLength()), selectionEnd = goog.math.clamp(node.selectionEnd - lineStart, 0, spannable.getLength()), spannable.setSpan(new cvox.BrailleUtil.ValueSelectionSpan, Math.min(selectionStart, selectionEnd), Math.max(selectionStart, selectionEnd)));
    return spannable;
  }
  return new cvox.Spannable(cvox.DomUtil.getValue(node), valueSpan);
};
cvox.BrailleUtil.getTemplated = function(prev, node, opt_override) {
  opt_override = opt_override ? opt_override : {};
  var roleMsg = opt_override.roleMsg || (node ? cvox.DomUtil.getRoleMsg(node, cvox.VERBOSITY_VERBOSE) : ""), role = opt_override.role;
  !role && opt_override.roleMsg && (role = cvox.ChromeVox.msgs.getMsg(opt_override.roleMsg + "_brl") || cvox.ChromeVox.msgs.getMsg(opt_override.roleMsg));
  for (var role = role || cvox.BrailleUtil.getRole(node), template = cvox.BrailleUtil.TEMPLATE[roleMsg] || cvox.BrailleUtil.TEMPLATE.base, templated = new cvox.Spannable, mapChar = function(c) {
    switch(c) {
      case "n":
        return opt_override.name || cvox.BrailleUtil.getName(node);
      case "r":
        return role;
      case "s":
        return opt_override.state || cvox.BrailleUtil.getState(node);
      case "c":
        return opt_override.container || cvox.BrailleUtil.getContainer(prev, node);
      case "v":
        return opt_override.value || cvox.BrailleUtil.getValue(node);
      default:
        return c;
    }
  }, i = 0;i < template.length;i++) {
    var component = mapChar(template[i]);
    templated.append(component);
    component.toString() || " " != template[i + 1] || i++;
  }
  return templated.trimRight();
};
cvox.BrailleUtil.createValue = function(text, opt_selStart, opt_selEnd, opt_textOffset) {
  var spannable = new cvox.Spannable(text, new cvox.BrailleUtil.ValueSpan(opt_textOffset || 0));
  if (goog.isDef(opt_selStart)) {
    opt_selEnd = goog.isDef(opt_selEnd) ? opt_selEnd : opt_selStart;
    if (opt_selStart > opt_selEnd) {
      var temp = opt_selStart;
      opt_selStart = opt_selEnd;
      opt_selEnd = temp;
    }
    spannable.setSpan(new cvox.BrailleUtil.ValueSelectionSpan, opt_selStart, opt_selEnd);
  }
  return spannable;
};
cvox.BrailleUtil.click = function(braille, opt_displayPosition) {
  var spans = braille.text.getSpans(opt_displayPosition || 0), node = spans.filter(function(n) {
    return n instanceof Node;
  })[0];
  if (node && (cvox.Focuser.setFocus(node), goog.isDef(opt_displayPosition) && (cvox.DomUtil.isInputTypeText(node) || node instanceof HTMLTextAreaElement))) {
    var valueSpan = spans.filter(function(s) {
      return s instanceof cvox.BrailleUtil.ValueSpan;
    })[0];
    if (valueSpan) {
      var cursorPosition = opt_displayPosition - braille.text.getSpanStart(valueSpan) + valueSpan.offset;
      cvox.ChromeVoxEventWatcher.setUpTextHandler();
      node.selectionStart = node.selectionEnd = cursorPosition;
      cvox.ChromeVoxEventWatcher.handleTextChanged(!0);
    }
  }
  cvox.DomUtil.clickElem(node || cvox.ChromeVox.navigationManager.getCurrentNode(), !1, !1);
};
cvox.BrailleTextHandler = function(braille) {
  this.braille_ = braille;
};
cvox.BrailleTextHandler.prototype.changed = function(line, start, end, multiline, element, lineStart) {
  var content;
  if (multiline) {
    var spannable = cvox.BrailleUtil.createValue(line, start, end, lineStart);
    element && spannable.setSpan(element, 0, line.length);
    content = new cvox.NavBraille({text:spannable, startIndex:start, endIndex:end});
  } else {
    cvox.ChromeVox.navigationManager && (content = cvox.ChromeVox.navigationManager.getBraille());
  }
  content && this.braille_.write(content);
};
cvox.ContentEditableExtractor = function() {
  this.text_ = "";
  this.end_ = this.start_ = 0;
  this.lines_ = {};
  this.characterToLineMap_ = [];
};
cvox.ContentEditableExtractor.prototype.update = function(element) {
  for (var lines = {0:{startIndex:0, endIndex:0}}, startCursor = new cvox.Cursor(element, 0, ""), endCursor = startCursor.clone(), range = document.createRange(), rect, lineIndex = 0, lastBottom = null, text = "", textSize = 0, selectionStartIndex = -1, selectionEndIndex = -1, sel = window.getSelection(), selectionStart = new cvox.Cursor(sel.baseNode, sel.baseOffset, ""), selectionEnd = new cvox.Cursor(sel.extentNode, sel.extentOffset, ""), setStart = !1, setEnd = !1;;) {
    var entered = [], left = [], c = cvox.TraverseUtil.forwardsChar(endCursor, entered, left), done = !1;
    c || (done = !0);
    for (var i = 0;i < left.length && !done;i++) {
      left[i] == element && (done = !0);
    }
    if (done) {
      break;
    }
    range.setStart(startCursor.node, startCursor.index);
    range.setEnd(endCursor.node, endCursor.index);
    if ((rect = range.getBoundingClientRect()) && 0 != rect.width && 0 != rect.height) {
      null !== lastBottom && rect.bottom != lastBottom && 0 < textSize && text.substr(-1).match(/\S/) && c.match(/\S/) && (text += "\n", textSize++);
      if (startCursor.node != endCursor.node && 0 < endCursor.index && (range.setStart(endCursor.node, endCursor.index - 1), rect = range.getBoundingClientRect(), !rect || 0 == rect.width || 0 == rect.height)) {
        continue;
      }
      !setStart && -1 == selectionStartIndex && endCursor.node == selectionStart.node && endCursor.index >= selectionStart.index && (endCursor.index > selectionStart.index ? selectionStartIndex = textSize : setStart = !0);
      !setEnd && -1 == selectionEndIndex && endCursor.node == selectionEnd.node && endCursor.index >= selectionEnd.index && (endCursor.index > selectionEnd.index ? selectionEndIndex = textSize : setEnd = !0);
      null === lastBottom ? lastBottom = rect.bottom : rect.bottom != lastBottom && (lines[lineIndex].endIndex = textSize, lineIndex++, lines[lineIndex] = {startIndex:textSize, endIndex:textSize}, lastBottom = rect.bottom);
      text += c;
      textSize++;
      startCursor = endCursor.clone();
      setStart && (selectionStartIndex = textSize, setStart = !1);
      setEnd && (selectionEndIndex = textSize, setEnd = !1);
    }
  }
  lines[lineIndex].endIndex = textSize;
  for (var characterToLineMap = [], i = 0;i <= lineIndex;i++) {
    for (var j = lines[i].startIndex;j <= lines[i].endIndex;j++) {
      characterToLineMap[j] = i;
    }
  }
  this.text_ = text;
  this.characterToLineMap_ = characterToLineMap;
  this.lines_ = lines;
  this.start_ = 0 <= selectionStartIndex ? selectionStartIndex : text.length;
  this.end_ = 0 <= selectionEndIndex ? selectionEndIndex : text.length;
};
cvox.ContentEditableExtractor.prototype.getText = function() {
  return this.text_;
};
cvox.ContentEditableExtractor.prototype.getStartIndex = function() {
  return this.start_;
};
cvox.ContentEditableExtractor.prototype.getEndIndex = function() {
  return this.end_;
};
cvox.ContentEditableExtractor.prototype.getLineIndex = function(index) {
  return this.characterToLineMap_[index];
};
cvox.ContentEditableExtractor.prototype.getLineStart = function(index) {
  return this.lines_[index].startIndex;
};
cvox.ContentEditableExtractor.prototype.getLineEnd = function(index) {
  return this.lines_[index].endIndex;
};
cvox.EditableTextAreaShadow = function() {
  this.shadowElement_ = document.createElement("div");
  this.lines_ = {};
  this.characterToLineMap_ = [];
};
cvox.EditableTextAreaShadow.prototype.update = function(element) {
  for (document.body.appendChild(this.shadowElement_);this.shadowElement_.childNodes.length;) {
    this.shadowElement_.removeChild(this.shadowElement_.childNodes[0]);
  }
  this.shadowElement_.style.cssText = window.getComputedStyle(element, null).cssText;
  this.shadowElement_.style.position = "absolute";
  this.shadowElement_.style.top = -9999;
  this.shadowElement_.style.left = -9999;
  this.shadowElement_.setAttribute("aria-hidden", "true");
  var text = element.value, textNode = document.createTextNode(text + ".");
  this.shadowElement_.appendChild(textNode);
  for (var lines = {0:{startIndex:0, endIndex:0}}, range = document.createRange(), offset = 0, lastGoodOffset = 0, lineIndex = 0, lastBottom = null, nearNewline = !1, rect;offset <= text.length;) {
    range.setStart(textNode, offset);
    if (offset + 8 > text.length || 0 <= text.substr(offset, 8).indexOf("\n")) {
      nearNewline = !0;
    }
    nearNewline ? (offset++, range.setEnd(textNode, offset), rect = range.getBoundingClientRect()) : (range.setEnd(textNode, offset + 8), rect = range.getBoundingClientRect(), rect.bottom == lastBottom ? offset += 8 : (rect && null !== lastBottom && (nearNewline = !0), offset++, range.setEnd(textNode, offset), rect = range.getBoundingClientRect()));
    0 < offset && "\n" == text[offset - 1] ? (lines[lineIndex].endIndex = offset - 1, lineIndex++, lines[lineIndex] = {startIndex:offset, endIndex:offset}, lastBottom = null, nearNewline = !1, lastGoodOffset = offset) : rect && null === lastBottom ? lastBottom = rect.bottom : rect && rect.bottom != lastBottom && (lines[lineIndex].endIndex = lastGoodOffset, lineIndex++, lines[lineIndex] = {startIndex:lastGoodOffset, endIndex:lastGoodOffset}, lastBottom = rect ? rect.bottom : null, nearNewline = !1);
    rect && (lastGoodOffset = offset);
  }
  lines[lineIndex].endIndex = text.length;
  for (var characterToLineMap = [], i = 0;i <= lineIndex;i++) {
    for (var j = lines[i].startIndex;j <= lines[i].endIndex;j++) {
      characterToLineMap[j] = i;
    }
  }
  this.characterToLineMap_ = characterToLineMap;
  this.lines_ = lines;
  document.body.removeChild(this.shadowElement_);
};
cvox.EditableTextAreaShadow.prototype.getLineIndex = function(index) {
  return this.characterToLineMap_[index];
};
cvox.EditableTextAreaShadow.prototype.getLineStart = function(index) {
  return this.lines_[index].startIndex;
};
cvox.EditableTextAreaShadow.prototype.getLineEnd = function(index) {
  return this.lines_[index].endIndex;
};
cvox.TextChangeEvent = function(newValue, newStart, newEnd, triggeredByUser) {
  this.value = newValue;
  this.start = newStart;
  this.end = newEnd;
  this.triggeredByUser = triggeredByUser;
  if (this.start > this.end) {
    var tempOffset = this.end;
    this.end = this.start;
    this.start = tempOffset;
  }
};
cvox.TypingEcho = {CHARACTER:0, WORD:1, CHARACTER_AND_WORD:2, NONE:3, COUNT:4};
cvox.TypingEcho.cycle = function(cur) {
  return (cur + 1) % cvox.TypingEcho.COUNT;
};
cvox.TypingEcho.shouldSpeakChar = function(typingEcho) {
  return typingEcho == cvox.TypingEcho.CHARACTER_AND_WORD || typingEcho == cvox.TypingEcho.CHARACTER;
};
cvox.TextHandlerInterface = function() {
};
cvox.TextHandlerInterface.prototype.changed = function() {
};
cvox.ChromeVoxEditableTextBase = function(value, start, end, isPassword, tts) {
  this.value = value;
  this.start = start;
  this.end = end;
  this.isPassword = isPassword;
  this.tts = tts;
  this.multiline = !1;
  this.brailleHandler_ = cvox.ChromeVox.braille ? new cvox.BrailleTextHandler(cvox.ChromeVox.braille) : void 0;
};
cvox.ChromeVoxEditableTextBase.prototype.setup = function() {
};
cvox.ChromeVoxEditableTextBase.prototype.teardown = function() {
};
cvox.ChromeVoxEditableTextBase.useIBeamCursor = cvox.ChromeVox.isMac;
cvox.ChromeVoxEditableTextBase.eventTypingEcho = !1;
cvox.ChromeVoxEditableTextBase.prototype.maxShortPhraseLen = 60;
cvox.ChromeVoxEditableTextBase.prototype.isPassword = !1;
cvox.ChromeVoxEditableTextBase.prototype.lastChangeDescribed = !1;
cvox.ChromeVoxEditableTextBase.prototype.getLineIndex = function() {
  return 0;
};
cvox.ChromeVoxEditableTextBase.prototype.getLineStart = function() {
  return 0;
};
cvox.ChromeVoxEditableTextBase.prototype.getLineEnd = function() {
  return this.value.length;
};
cvox.ChromeVoxEditableTextBase.prototype.getLine = function(index) {
  var lineStart = this.getLineStart(index), lineEnd = this.getLineEnd(index);
  return this.value.substr(lineStart, lineEnd - lineStart);
};
cvox.ChromeVoxEditableTextBase.prototype.isWordBreakChar = function(ch) {
  return !!ch.match(/^\W$/);
};
cvox.ChromeVoxEditableTextBase.prototype.shouldDescribeChange = function(evt) {
  return evt.value == this.value && evt.start == this.start && evt.end == this.end ? !1 : !0;
};
cvox.ChromeVoxEditableTextBase.prototype.speak = function(str, opt_triggeredByUser, opt_personality) {
  if (!this.node || document.activeElement == this.node) {
    var queueMode = cvox.AbstractTts.QUEUE_MODE_QUEUE;
    !0 === opt_triggeredByUser && (queueMode = cvox.AbstractTts.QUEUE_MODE_FLUSH);
    this.tts.speak(str, queueMode, opt_personality || {});
  }
};
cvox.ChromeVoxEditableTextBase.prototype.changed = function(evt) {
  if (this.shouldDescribeChange(evt)) {
    if (evt.value == this.value ? this.describeSelectionChanged(evt) : this.describeTextChanged(evt), this.lastChangeDescribed = !0, this.value = evt.value, this.start = evt.start, this.end = evt.end, this.brailleHandler_) {
      var line = this.getLine(this.getLineIndex(evt.start)), lineStart = this.getLineStart(this.getLineIndex(evt.start)), start = evt.start - lineStart, end = Math.min(evt.end - lineStart, line.length);
      this.brailleHandler_.changed(line, start, end, this.multiline, this.node, lineStart);
    }
  } else {
    this.lastChangeDescribed = !1;
  }
};
cvox.ChromeVoxEditableTextBase.prototype.describeSelectionChanged = function(evt) {
  if (this.isPassword) {
    this.speak((new goog.i18n.MessageFormat(cvox.ChromeVox.msgs.getMsg("dot"))).format({COUNT:1}), evt.triggeredByUser);
  } else {
    if (evt.start == evt.end) {
      if (this.start != this.end) {
        this.speak(cvox.ChromeVox.msgs.getMsg("Unselected"), evt.triggeredByUser);
      } else {
        if (this.getLineIndex(this.start) != this.getLineIndex(evt.start)) {
          var lineValue = this.getLine(this.getLineIndex(evt.start));
          "" == lineValue ? lineValue = cvox.ChromeVox.msgs.getMsg("text_box_blank") : /^\s+$/.test(lineValue) && (lineValue = cvox.ChromeVox.msgs.getMsg("text_box_whitespace"));
          this.speak(lineValue, evt.triggeredByUser);
        } else {
          this.start == evt.start + 1 || this.start == evt.start - 1 ? cvox.ChromeVoxEditableTextBase.useIBeamCursor ? this.speak(this.value.substr(Math.min(this.start, evt.start), 1), evt.triggeredByUser, {phoneticCharacters:evt.triggeredByUser}) : evt.start == this.value.length ? cvox.ChromeVox.verbosity == cvox.VERBOSITY_VERBOSE ? this.speak(cvox.ChromeVox.msgs.getMsg("end_of_text_verbose"), evt.triggeredByUser) : this.speak(cvox.ChromeVox.msgs.getMsg("end_of_text_brief"), evt.triggeredByUser) : 
          this.speak(this.value.substr(evt.start, 1), evt.triggeredByUser, {phoneticCharacters:evt.triggeredByUser}) : this.speak(this.value.substr(Math.min(this.start, evt.start), Math.abs(this.start - evt.start)), evt.triggeredByUser);
        }
      }
    } else {
      this.start + 1 == evt.start && this.end == this.value.length && evt.end == this.value.length ? (this.speak(this.value.substr(this.start, 1), evt.triggeredByUser), this.speak(this.value.substr(evt.start))) : this.start == this.end ? (this.speak(this.value.substr(evt.start, evt.end - evt.start), evt.triggeredByUser), this.speak(cvox.ChromeVox.msgs.getMsg("selected"))) : this.start == evt.start && this.end < evt.end ? (this.speak(this.value.substr(this.end, evt.end - this.end), evt.triggeredByUser), 
      this.speak(cvox.ChromeVox.msgs.getMsg("added_to_selection"))) : this.start == evt.start && this.end > evt.end ? (this.speak(this.value.substr(evt.end, this.end - evt.end), evt.triggeredByUser), this.speak(cvox.ChromeVox.msgs.getMsg("removed_from_selection"))) : this.end == evt.end && this.start > evt.start ? (this.speak(this.value.substr(evt.start, this.start - evt.start), evt.triggeredByUser), this.speak(cvox.ChromeVox.msgs.getMsg("added_to_selection"))) : this.end == evt.end && this.start < 
      evt.start ? (this.speak(this.value.substr(this.start, evt.start - this.start), evt.triggeredByUser), this.speak(cvox.ChromeVox.msgs.getMsg("removed_from_selection"))) : (this.speak(this.value.substr(evt.start, evt.end - evt.start), evt.triggeredByUser), this.speak(cvox.ChromeVox.msgs.getMsg("selected")));
    }
  }
};
cvox.ChromeVoxEditableTextBase.prototype.describeTextChanged = function(evt) {
  var personality = {};
  evt.value.length < this.value.length && (personality = cvox.AbstractTts.PERSONALITY_DELETED);
  if (this.isPassword) {
    this.speak((new goog.i18n.MessageFormat(cvox.ChromeVox.msgs.getMsg("dot"))).format({COUNT:1}), evt.triggeredByUser, personality);
  } else {
    var value = this.value, len = value.length, newLen = evt.value.length, autocompleteSuffix = "", evtValue = evt.value, evtEnd = evt.end;
    evt.start < evtEnd && evtEnd == newLen && (autocompleteSuffix = evtValue.substr(evt.start), evtValue = evtValue.substr(0, evt.start), evtEnd = evt.start);
    var prefixLen = this.start, suffixLen = len - this.end;
    if (newLen >= prefixLen + suffixLen + (evtEnd - evt.start) && evtValue.substr(0, prefixLen) == value.substr(0, prefixLen) && evtValue.substr(newLen - suffixLen) == value.substr(this.end)) {
      (!(this instanceof cvox.ChromeVoxEditableContentEditable) || newLen < len || this.isWordBreakChar(evt.value[newLen - 1] || "")) && this.describeTextChangedHelper(evt, prefixLen, suffixLen, autocompleteSuffix, personality);
    } else {
      if (prefixLen = evt.start, suffixLen = newLen - evtEnd, this.start == this.end && evt.start == evtEnd && evtValue.substr(0, prefixLen) == value.substr(0, prefixLen) && evtValue.substr(newLen - suffixLen) == value.substr(len - suffixLen)) {
        this.describeTextChangedHelper(evt, prefixLen, suffixLen, autocompleteSuffix, personality);
      } else {
        evtValue += autocompleteSuffix;
        if (evtValue.length == value.length + 1 || evtValue.length + 1 == value.length) {
          if (evtValue.length > value.length) {
            if (0 == evtValue.indexOf(value)) {
              this.speak(evtValue[evtValue.length - 1], evt.triggeredByUser, personality);
              return;
            }
            if (1 == evtValue.indexOf(value)) {
              this.speak(evtValue[0], evt.triggeredByUser, personality);
              return;
            }
          }
          if (evtValue.length < value.length) {
            if (0 == value.indexOf(evtValue)) {
              this.speak(value[value.length - 1], evt.triggeredByUser, personality);
              return;
            }
            if (1 == value.indexOf(evtValue)) {
              this.speak(value[0], evt.triggeredByUser, personality);
              return;
            }
          }
        }
        if (this.multiline) {
          evt.value.length < this.value.length && this.speak(cvox.ChromeVox.msgs.getMsg("text_deleted"), evt.triggeredByUser, personality);
        } else {
          if (newLen <= this.maxShortPhraseLen) {
            this.describeTextChangedHelper(evt, 0, 0, "", personality);
          } else {
            for (prefixLen = 0;prefixLen < len && prefixLen < newLen && value[prefixLen] == evtValue[prefixLen];) {
              prefixLen++;
            }
            for (;0 < prefixLen && !this.isWordBreakChar(value[prefixLen - 1]);) {
              prefixLen--;
            }
            for (suffixLen = 0;suffixLen < len - prefixLen && suffixLen < newLen - prefixLen && value[len - suffixLen - 1] == evtValue[newLen - suffixLen - 1];) {
              suffixLen++;
            }
            for (;0 < suffixLen && !this.isWordBreakChar(value[len - suffixLen]);) {
              suffixLen--;
            }
            this.describeTextChangedHelper(evt, prefixLen, suffixLen, "", personality);
          }
        }
      }
    }
  }
};
cvox.ChromeVoxEditableTextBase.prototype.describeTextChangedHelper = function(evt, prefixLen, suffixLen, autocompleteSuffix, opt_personality) {
  var len = this.value.length, newLen = evt.value.length, deletedLen = len - prefixLen - suffixLen, deleted = this.value.substr(prefixLen, deletedLen), insertedLen = newLen - prefixLen - suffixLen, inserted = evt.value.substr(prefixLen, insertedLen), utterance = "", triggeredByUser = evt.triggeredByUser;
  if (1 < insertedLen) {
    utterance = inserted;
  } else {
    if (1 == insertedLen) {
      if ((cvox.ChromeVox.typingEcho == cvox.TypingEcho.WORD || cvox.ChromeVox.typingEcho == cvox.TypingEcho.CHARACTER_AND_WORD) && this.isWordBreakChar(inserted) && 0 < prefixLen && !this.isWordBreakChar(evt.value.substr(prefixLen - 1, 1))) {
        for (var index = prefixLen;0 < index && !this.isWordBreakChar(evt.value[index - 1]);) {
          index--;
        }
        index < prefixLen ? utterance = evt.value.substr(index, prefixLen + 1 - index) : (utterance = inserted, triggeredByUser = !1);
      } else {
        if (cvox.ChromeVox.typingEcho == cvox.TypingEcho.CHARACTER || cvox.ChromeVox.typingEcho == cvox.TypingEcho.CHARACTER_AND_WORD) {
          utterance = cvox.ChromeVoxEditableTextBase.eventTypingEcho ? "" : inserted;
        }
      }
    } else {
      1 < deletedLen && !autocompleteSuffix ? utterance = deleted + ", deleted" : 1 == deletedLen && (utterance = deleted);
    }
  }
  autocompleteSuffix && utterance ? utterance += ", " + autocompleteSuffix : autocompleteSuffix && (utterance = autocompleteSuffix);
  utterance && this.speak(utterance, triggeredByUser, opt_personality);
};
cvox.ChromeVoxEditableTextBase.prototype.moveCursorToNextCharacter = function() {
  return !1;
};
cvox.ChromeVoxEditableTextBase.prototype.moveCursorToPreviousCharacter = function() {
  return !1;
};
cvox.ChromeVoxEditableTextBase.prototype.moveCursorToNextWord = function() {
  return !1;
};
cvox.ChromeVoxEditableTextBase.prototype.moveCursorToPreviousWord = function() {
  return !1;
};
cvox.ChromeVoxEditableTextBase.prototype.moveCursorToNextLine = function() {
  return !1;
};
cvox.ChromeVoxEditableTextBase.prototype.moveCursorToPreviousLine = function() {
  return !1;
};
cvox.ChromeVoxEditableTextBase.prototype.moveCursorToNextParagraph = function() {
  return !1;
};
cvox.ChromeVoxEditableTextBase.prototype.moveCursorToPreviousParagraph = function() {
  return !1;
};
cvox.ChromeVoxEditableElement = function(node, value, start, end, isPassword, tts) {
  cvox.ChromeVoxEditableTextBase.call(this, value, start, end, isPassword, tts);
  this.node = node;
  this.justSpokeDescription_ = !1;
};
goog.inherits(cvox.ChromeVoxEditableElement, cvox.ChromeVoxEditableTextBase);
cvox.ChromeVoxEditableElement.prototype.changed = function(evt) {
  this.justSpokeDescription_ && this.value == evt.value && (this.value = evt.value, this.start = evt.start, this.end = evt.end, this.justSpokeDescription_ = !1);
  cvox.ChromeVoxEditableElement.superClass_.changed.call(this, evt);
};
cvox.ChromeVoxEditableElement.prototype.moveCursorToNextCharacter = function() {
  var node = this.node;
  node.selectionEnd++;
  node.selectionStart = node.selectionEnd;
  cvox.ChromeVoxEventWatcher.handleTextChanged(!0);
  return !0;
};
cvox.ChromeVoxEditableElement.prototype.moveCursorToPreviousCharacter = function() {
  var node = this.node;
  node.selectionStart--;
  node.selectionEnd = node.selectionStart;
  cvox.ChromeVoxEventWatcher.handleTextChanged(!0);
  return !0;
};
cvox.ChromeVoxEditableElement.prototype.moveCursorToNextWord = function() {
  var node = this.node, length = node.value.length, re = /\W+/gm, substring = node.value.substring(node.selectionEnd), match = re.exec(substring);
  null !== match && 0 == match.index && (match = re.exec(substring));
  var index = null === match ? length : match.index + node.selectionEnd;
  node.selectionStart = node.selectionEnd = index;
  cvox.ChromeVoxEventWatcher.handleTextChanged(!0);
  return !0;
};
cvox.ChromeVoxEditableElement.prototype.moveCursorToPreviousWord = function() {
  for (var node = this.node, re = /\W+/gm, substring = node.value.substring(0, node.selectionStart), index = 0;null !== re.exec(substring);) {
    re.lastIndex < node.selectionStart && (index = re.lastIndex);
  }
  node.selectionStart = node.selectionEnd = index;
  cvox.ChromeVoxEventWatcher.handleTextChanged(!0);
  return !0;
};
cvox.ChromeVoxEditableElement.prototype.moveCursorToNextParagraph = function() {
  var node = this.node, length = node.value.length, index = node.selectionEnd >= length ? length : node.value.indexOf("\n", node.selectionEnd);
  0 > index && (index = length);
  node.selectionStart = node.selectionEnd = index + 1;
  cvox.ChromeVoxEventWatcher.handleTextChanged(!0);
  return !0;
};
cvox.ChromeVoxEditableElement.prototype.moveCursorToPreviousParagraph = function() {
  var node = this.node, index = 0 >= node.selectionStart ? 0 : node.value.lastIndexOf("\n", node.selectionStart - 2) + 1;
  0 > index && (index = 0);
  node.selectionStart = node.selectionEnd = index;
  cvox.ChromeVoxEventWatcher.handleTextChanged(!0);
  return !0;
};
cvox.ChromeVoxEditableHTMLInput = function(node, tts) {
  this.node = node;
  this.setup();
  cvox.ChromeVoxEditableElement.call(this, node, node.value, node.selectionStart, node.selectionEnd, "password" === node.type, tts);
};
goog.inherits(cvox.ChromeVoxEditableHTMLInput, cvox.ChromeVoxEditableElement);
cvox.ChromeVoxEditableHTMLInput.prototype.setup = function() {
  this.node && !cvox.DomUtil.doesInputSupportSelection(this.node) && (this.originalType = this.node.type, this.node.type = "text");
};
cvox.ChromeVoxEditableHTMLInput.prototype.teardown = function() {
  this.node && this.originalType && (this.node.type = this.originalType);
};
cvox.ChromeVoxEditableHTMLInput.prototype.update = function(triggeredByUser) {
  var newValue = this.node.value, textChangeEvent = new cvox.TextChangeEvent(newValue, this.node.selectionStart, this.node.selectionEnd, triggeredByUser);
  this.changed(textChangeEvent);
};
cvox.ChromeVoxEditableTextArea = function(node, tts) {
  cvox.ChromeVoxEditableElement.call(this, node, node.value, node.selectionStart, node.selectionEnd, !1, tts);
  this.multiline = !0;
  this.shadowIsCurrent_ = !1;
};
goog.inherits(cvox.ChromeVoxEditableTextArea, cvox.ChromeVoxEditableElement);
cvox.ChromeVoxEditableTextArea.prototype.update = function(triggeredByUser) {
  this.node.value != this.value && (this.shadowIsCurrent_ = !1);
  var textChangeEvent = new cvox.TextChangeEvent(this.node.value, this.node.selectionStart, this.node.selectionEnd, triggeredByUser);
  this.changed(textChangeEvent);
};
cvox.ChromeVoxEditableTextArea.prototype.getLineIndex = function(index) {
  return this.getShadow().getLineIndex(index);
};
cvox.ChromeVoxEditableTextArea.prototype.getLineStart = function(index) {
  return this.getShadow().getLineStart(index);
};
cvox.ChromeVoxEditableTextArea.prototype.getLineEnd = function(index) {
  return this.getShadow().getLineEnd(index);
};
cvox.ChromeVoxEditableTextArea.prototype.getShadow = function() {
  var shadow = cvox.ChromeVoxEditableTextArea.shadow_;
  shadow || (shadow = cvox.ChromeVoxEditableTextArea.shadow_ = new cvox.EditableTextAreaShadow);
  this.shadowIsCurrent_ || (shadow.update(this.node), this.shadowIsCurrent_ = !0);
  return shadow;
};
cvox.ChromeVoxEditableTextArea.prototype.moveCursorToNextLine = function() {
  var node = this.node, length = node.value.length;
  if (node.selectionEnd >= length) {
    return !1;
  }
  var shadow = this.getShadow(), lineIndex = shadow.getLineIndex(node.selectionEnd), lineStart = shadow.getLineStart(lineIndex), offset = node.selectionEnd - lineStart, lastLine = 0 == length ? 0 : shadow.getLineIndex(length - 1), newCursorPosition = lineIndex >= lastLine ? length : Math.min(shadow.getLineStart(lineIndex + 1) + offset, shadow.getLineEnd(lineIndex + 1));
  node.selectionStart = node.selectionEnd = newCursorPosition;
  cvox.ChromeVoxEventWatcher.handleTextChanged(!0);
  return !0;
};
cvox.ChromeVoxEditableTextArea.prototype.moveCursorToPreviousLine = function() {
  var node = this.node;
  if (0 >= node.selectionStart) {
    return !1;
  }
  var shadow = this.getShadow(), lineIndex = shadow.getLineIndex(node.selectionStart), lineStart = shadow.getLineStart(lineIndex), offset = node.selectionStart - lineStart, newCursorPosition = 0 >= lineIndex ? 0 : Math.min(shadow.getLineStart(lineIndex - 1) + offset, shadow.getLineEnd(lineIndex - 1));
  node.selectionStart = node.selectionEnd = newCursorPosition;
  cvox.ChromeVoxEventWatcher.handleTextChanged(!0);
  return !0;
};
cvox.ChromeVoxEditableContentEditable = function(node, tts) {
  cvox.ChromeVoxEditableElement.call(this, node, "", 0, 0, !1, tts);
  this.extractorIsCurrent_ = !1;
  var extractor = this.getExtractor();
  this.value = extractor.getText();
  this.start = extractor.getStartIndex();
  this.end = extractor.getEndIndex();
  this.multiline = !0;
};
goog.inherits(cvox.ChromeVoxEditableContentEditable, cvox.ChromeVoxEditableElement);
cvox.ChromeVoxEditableContentEditable.prototype.update = function(triggeredByUser) {
  this.extractorIsCurrent_ = !1;
  var textChangeEvent = new cvox.TextChangeEvent(this.getExtractor().getText(), this.getExtractor().getStartIndex(), this.getExtractor().getEndIndex(), triggeredByUser);
  this.changed(textChangeEvent);
};
cvox.ChromeVoxEditableContentEditable.prototype.getLineIndex = function(index) {
  return this.getExtractor().getLineIndex(index);
};
cvox.ChromeVoxEditableContentEditable.prototype.getLineStart = function(index) {
  return this.getExtractor().getLineStart(index);
};
cvox.ChromeVoxEditableContentEditable.prototype.getLineEnd = function(index) {
  return this.getExtractor().getLineEnd(index);
};
cvox.ChromeVoxEditableContentEditable.prototype.getExtractor = function() {
  var extractor = cvox.ChromeVoxEditableContentEditable.extractor_;
  extractor || (extractor = cvox.ChromeVoxEditableContentEditable.extractor_ = new cvox.ContentEditableExtractor);
  this.extractorIsCurrent_ || (extractor.update(this.node), this.extractorIsCurrent_ = !0);
  return extractor;
};
cvox.ChromeVoxEditableContentEditable.prototype.changed = function(evt) {
  evt.triggeredByUser && (this.shouldDescribeChange(evt) ? cvox.ChromeVoxEditableContentEditable.superClass_.changed.call(this, evt) : this.speak(cvox.ChromeVox.msgs.getMsg("text_box_blank"), !0));
};
cvox.ChromeVoxEditableContentEditable.prototype.moveCursorToNextCharacter = function() {
  window.getSelection().modify("move", "forward", "character");
  cvox.ChromeVoxEventWatcher.handleTextChanged(!0);
  return !0;
};
cvox.ChromeVoxEditableContentEditable.prototype.moveCursorToPreviousCharacter = function() {
  window.getSelection().modify("move", "backward", "character");
  cvox.ChromeVoxEventWatcher.handleTextChanged(!0);
  return !0;
};
cvox.ChromeVoxEditableContentEditable.prototype.moveCursorToNextParagraph = function() {
  window.getSelection().modify("move", "forward", "paragraph");
  cvox.ChromeVoxEventWatcher.handleTextChanged(!0);
  return !0;
};
cvox.ChromeVoxEditableContentEditable.prototype.moveCursorToPreviousParagraph = function() {
  window.getSelection().modify("move", "backward", "paragraph");
  cvox.ChromeVoxEventWatcher.handleTextChanged(!0);
  return !0;
};
cvox.ChromeVoxEditableContentEditable.prototype.shouldDescribeChange = function(evt) {
  var sel = window.getSelection(), cursor = new cvox.Cursor(sel.baseNode, sel.baseOffset, "");
  return 1 != Math.abs(this.start - evt.start) && this.start == this.end && evt.start == evt.end && sel.baseNode == sel.extentNode && sel.baseOffset == sel.extentOffset && sel.baseNode.nodeType == Node.ELEMENT_NODE && sel.baseNode.querySelector("BR") && cvox.TraverseUtil.forwardsChar(cursor, [], []) ? !1 : !0;
};
cvox.ChromeVoxHTMLMediaWidget = function(mediaElem) {
  var self = this;
  this.mediaElem_ = mediaElem;
  this.keyListener_ = function(evt) {
    self.eventHandler_(evt);
  };
  this.blurListener_ = function() {
    self.shutdown();
  };
  this.mediaElem_.addEventListener("keydown", this.keyListener_, !1);
  this.mediaElem_.addEventListener("keyup", this.keyListener_, !1);
  this.mediaElem_.addEventListener("blur", this.blurListener_, !1);
};
cvox.ChromeVoxHTMLMediaWidget.prototype.shutdown = function() {
  this.mediaElem_.removeEventListener("blur", this.blurListener_, !1);
  this.mediaElem_.removeEventListener("keydown", this.keyListener_, !1);
  this.mediaElem_.removeEventListener("keyup", this.keyListener_, !1);
};
cvox.ChromeVoxHTMLMediaWidget.prototype.jumpToTime_ = function(targetTime) {
  0 > targetTime && (targetTime = 0);
  targetTime > this.mediaElem_.duration && (targetTime = this.mediaElem_.duration);
  this.mediaElem_.currentTime = targetTime;
};
cvox.ChromeVoxHTMLMediaWidget.prototype.setVolume_ = function(targetVolume) {
  0 > targetVolume && (targetVolume = 0);
  1 < targetVolume && (targetVolume = 1);
  this.mediaElem_.volume = targetVolume;
};
cvox.ChromeVoxHTMLMediaWidget.prototype.eventHandler_ = function(evt) {
  "keydown" == evt.type && (13 == evt.keyCode || 32 == evt.keyCode ? this.mediaElem_.paused ? this.mediaElem_.play() : this.mediaElem_.pause() : 39 == evt.keyCode ? this.jumpToTime_(this.mediaElem_.currentTime + this.mediaElem_.duration / 10) : 37 == evt.keyCode ? this.jumpToTime_(this.mediaElem_.currentTime - this.mediaElem_.duration / 10) : 38 == evt.keyCode ? this.setVolume_(this.mediaElem_.volume + .1) : 40 == evt.keyCode && this.setVolume_(this.mediaElem_.volume - .1));
};
cvox.PlatformUtil = {};
cvox.PlatformFilter = {NONE:0, WINDOWS:1, MAC:2, LINUX:4, WML:7, CHROMEOS:8, ANDROID:16};
cvox.PlatformUtil.matchesPlatform = function(filter) {
  var uA = navigator.userAgent;
  return void 0 == filter ? !0 : -1 != uA.indexOf("Android") ? 0 != (filter & cvox.PlatformFilter.ANDROID) : -1 != uA.indexOf("Win") ? 0 != (filter & cvox.PlatformFilter.WINDOWS) : -1 != uA.indexOf("Mac") ? 0 != (filter & cvox.PlatformFilter.MAC) : -1 != uA.indexOf("Linux") ? 0 != (filter & cvox.PlatformFilter.LINUX) : -1 != uA.indexOf("CrOS") ? 0 != (filter & cvox.PlatformFilter.CHROMEOS) : !1;
};
cvox.ChromeVoxHTMLTimeWidget = function(timeElem, tts) {
  var self = this;
  this.timeElem_ = timeElem;
  this.timeTts_ = tts;
  this.pMinutes_ = this.pHours_ = -1;
  this.pMilliseconds_ = this.pSeconds_ = 0;
  this.pAmpm_ = "";
  this.pos_ = 0;
  this.maxPos_ = 2;
  this.keyListener_ = function(evt) {
    self.eventHandler_(evt);
  };
  this.blurListener_ = function() {
    self.shutdown();
  };
  if (this.timeElem_.hasAttribute("step")) {
    var step = this.timeElem_.getAttribute("step");
    0 < step && (this.maxPos_ = 1 <= step ? 3 : 4);
  }
  0 == this.timeElem_.value.length && this.forceInitTime_();
  for (var i = 0;i < this.maxPos_;i++) {
    var evt$$0 = document.createEvent("KeyboardEvent");
    evt$$0.initKeyboardEvent("keydown", !0, !0, window, "Left", 0, !1, !1, !1, !1);
    this.timeElem_.dispatchEvent(evt$$0);
    evt$$0 = document.createEvent("KeyboardEvent");
    evt$$0.initKeyboardEvent("keyup", !0, !0, window, "Left", 0, !1, !1, !1, !1);
    this.timeElem_.dispatchEvent(evt$$0);
  }
  this.timeElem_.addEventListener("keydown", this.keyListener_, !1);
  this.timeElem_.addEventListener("keyup", this.keyListener_, !1);
  this.timeElem_.addEventListener("blur", this.blurListener_, !1);
  this.update_(!0);
};
cvox.ChromeVoxHTMLTimeWidget.prototype.shutdown = function() {
  this.timeElem_.removeEventListener("blur", this.blurListener_, !1);
  this.timeElem_.removeEventListener("keydown", this.keyListener_, !1);
  this.timeElem_.removeEventListener("keyup", this.keyListener_, !1);
};
cvox.ChromeVoxHTMLTimeWidget.prototype.forceInitTime_ = function() {
  this.timeElem_.setAttribute("value", "12:00");
};
cvox.ChromeVoxHTMLTimeWidget.prototype.handlePosChange_ = function() {
  0 > this.pos_ && (this.pos_ = 0);
  this.pos_ > this.maxPos_ && (this.pos_ = this.maxPos_);
  if (this.pos_ == this.maxPos_) {
    this.pAmpm_ = "";
  } else {
    switch(this.pos_) {
      case 0:
        this.pHours_ = -1;
        break;
      case 1:
        this.pMinutes_ = -1;
        break;
      case 2:
        this.pSeconds_ = -1;
        break;
      case 3:
        this.pMilliseconds_ = -1;
    }
  }
};
cvox.ChromeVoxHTMLTimeWidget.prototype.update_ = function(shouldSpeakLabel) {
  var splitTime = this.timeElem_.value.split(":");
  if (1 > splitTime.length) {
    this.forceInitTime_();
  } else {
    var hours = splitTime[0], minutes = -1, seconds = 0, milliseconds = 0, ampm = cvox.ChromeVox.msgs.getMsg("timewidget_am");
    1 < splitTime.length && (minutes = splitTime[1]);
    if (2 < splitTime.length) {
      var splitSecondsAndMilliseconds = splitTime[2].split("."), seconds = splitSecondsAndMilliseconds[0];
      1 < splitSecondsAndMilliseconds.length && (milliseconds = splitSecondsAndMilliseconds[1]);
    }
    12 < hours && (hours -= 12, ampm = cvox.ChromeVox.msgs.getMsg("timewidget_pm"));
    12 == hours && (ampm = cvox.ChromeVox.msgs.getMsg("timewidget_pm"));
    0 == hours && (hours = 12, ampm = cvox.ChromeVox.msgs.getMsg("timewidget_am"));
    var changeMessage = "";
    shouldSpeakLabel && (changeMessage = cvox.DomUtil.getName(this.timeElem_, !0, !0) + "\n");
    hours != this.pHours_ && (changeMessage = changeMessage + hours + " " + cvox.ChromeVox.msgs.getMsg("timewidget_hours") + "\n", this.pHours_ = hours);
    minutes != this.pMinutes_ && (changeMessage = changeMessage + minutes + " " + cvox.ChromeVox.msgs.getMsg("timewidget_minutes") + "\n", this.pMinutes_ = minutes);
    seconds != this.pSeconds_ && (changeMessage = changeMessage + seconds + " " + cvox.ChromeVox.msgs.getMsg("timewidget_seconds") + "\n", this.pSeconds_ = seconds);
    milliseconds != this.pMilliseconds_ && (changeMessage = changeMessage + milliseconds + " " + cvox.ChromeVox.msgs.getMsg("timewidget_milliseconds") + "\n", this.pMilliseconds_ = milliseconds);
    ampm != this.pAmpm_ && (changeMessage += ampm, this.pAmpm_ = ampm);
    0 < changeMessage.length && this.timeTts_.speak(changeMessage, 0, null);
  }
};
cvox.ChromeVoxHTMLTimeWidget.prototype.eventHandler_ = function(evt) {
  var shouldSpeakLabel = !1;
  if ("keydown" == evt.type) {
    if (9 == evt.keyCode && !evt.shiftKey || 39 == evt.keyCode) {
      this.pos_++, this.handlePosChange_(), shouldSpeakLabel = !0;
    }
    if (9 == evt.keyCode && evt.shiftKey || 37 == evt.keyCode) {
      this.pos_--, this.handlePosChange_(), shouldSpeakLabel = !0;
    }
  }
  this.update_(shouldSpeakLabel);
};
cvox.ActiveIndicator = function() {
  this.lastMoveTime_ = 0;
  this.zoom_ = 1;
  this.updateIndicatorTimeoutId_ = this.lastClientRects_ = this.lastSyncTarget_ = this.container_ = null;
  this.blurred_ = !1;
  window.addEventListener("focus", goog.bind(function() {
    this.blurred_ = !1;
    this.container_ && this.container_.classList.remove("cvox_indicator_window_not_focused");
  }, this), !1);
  window.addEventListener("blur", goog.bind(function() {
    this.blurred_ = !0;
    this.container_ && this.container_.classList.add("cvox_indicator_window_not_focused");
  }, this), !1);
};
cvox.ActiveIndicator.STYLE = ".cvox_indicator_container {  position: absolute !important;  left: 0 !important;  top: 0 !important;  z-index: 2147483647 !important;  pointer-events: none !important;  margin: 0px !important;  padding: 0px !important;}.cvox_indicator_window_not_focused {  visibility: hidden !important;}.cvox_indicator_pulsing {  -webkit-animation:       cvox_indicator_pulsing_animation 0s 2 alternate !important;  -webkit-animation-timing-function: ease-in-out !important;}.cvox_indicator_region {  opacity: 0 !important;  -webkit-transition: opacity 1s !important;}.cvox_indicator_visible {  opacity: 1 !important;}.cvox_indicator_container .cvox_indicator_region * {  position:absolute !important;  box-shadow: 0 0 4px 4px #f7983a !important;  border-radius: 6px !important;  margin: 0px !important;  padding: 0px !important;  -webkit-transition: none !important;}.cvox_indicator_animate_normal .cvox_indicator_region * {  -webkit-transition: all 0.3s !important;}.cvox_indicator_animate_quick .cvox_indicator_region * {  -webkit-transition: all 0.1s !important;}.cvox_indicator_top {  border-radius: inherit inherit 0 0 !important;}.cvox_indicator_middle_nw {  border-radius: inherit 0 0 0 !important;}.cvox_indicator_middle_ne {  border-radius: 0 inherit 0 0 !important;}.cvox_indicator_middle_se {  border-radius: 0 0 inherit 0 !important;}.cvox_indicator_middle_sw {  border-radius: 0 0 0 inherit !important;}.cvox_indicator_bottom {  border-radius: 0 0 inherit inherit !important;}@-webkit-keyframes cvox_indicator_pulsing_animation {   0% {opacity: 1.0}  50% {opacity: 0.5} 100% {opacity: 1.0}}";
cvox.ActiveIndicator.QUICK_ANIM_DELAY_MS = 100;
cvox.ActiveIndicator.NORMAL_ANIM_DELAY_MS = 300;
cvox.ActiveIndicator.MARGIN = 8;
cvox.ActiveIndicator.prototype.removeFromDom = function() {
  this.container_ && this.container_.parentElement && this.container_.parentElement.removeChild(this.container_);
};
cvox.ActiveIndicator.prototype.syncToNode = function(node) {
  node && (node == document.body ? this.removeFromDom() : this.syncToNodes([node]));
};
cvox.ActiveIndicator.prototype.syncToNodes = function(nodes) {
  var clientRects = this.clientRectsFromNodes_(nodes);
  this.moveIndicator_(clientRects, cvox.ActiveIndicator.MARGIN);
  this.lastSyncTarget_ = nodes;
  this.lastClientRects_ = clientRects;
  null != this.updateIndicatorTimeoutId_ && (window.clearTimeout(this.updateIndicatorTimeoutId_), this.updateIndicatorTimeoutId_ = null);
};
cvox.ActiveIndicator.prototype.syncToRange = function(range) {
  var margin = cvox.ActiveIndicator.MARGIN;
  range.startContainer == range.endContainer && range.startOffset + 1 == range.endOffset && (margin = 1);
  var clientRects = range.getClientRects();
  this.moveIndicator_(clientRects, margin);
  this.lastSyncTarget_ = range;
  this.lastClientRects_ = clientRects;
  null != this.updateIndicatorTimeoutId_ && (window.clearTimeout(this.updateIndicatorTimeoutId_), this.updateIndicatorTimeoutId_ = null);
};
cvox.ActiveIndicator.prototype.syncToCursorSelection = function(sel) {
  if (sel.start.node == sel.end.node && sel.start.index == sel.end.index) {
    this.syncToNode(sel.start.node);
  } else {
    var range = document.createRange();
    range.setStart(sel.start.node, sel.start.index);
    range.setEnd(sel.end.node, sel.end.index);
    this.syncToRange(range);
  }
};
cvox.ActiveIndicator.prototype.updateIndicatorIfChanged = function() {
  this.updateIndicatorTimeoutId_ || (this.updateIndicatorTimeoutId_ = window.setTimeout(goog.bind(function() {
    this.handleUpdateIndicatorIfChanged_();
  }, this), 100));
};
cvox.ActiveIndicator.prototype.handleUpdateIndicatorIfChanged_ = function() {
  this.updateIndicatorTimeoutId_ = null;
  if (this.lastSyncTarget_) {
    var newClientRects;
    if ((newClientRects = this.lastSyncTarget_ instanceof Array ? this.clientRectsFromNodes_(this.lastSyncTarget_) : this.lastSyncTarget_.getClientRects()) && 0 != newClientRects.length) {
      var needsUpdate = !1;
      if (newClientRects.length != this.lastClientRects_.length) {
        needsUpdate = !0;
      } else {
        for (var i = 0;i < this.lastClientRects_.length;++i) {
          var last = this.lastClientRects_[i], current = newClientRects[i];
          if (last.top != current.top || last.right != current.right || last.bottom != current.bottom || last.left != last.left) {
            needsUpdate = !0;
            break;
          }
        }
      }
      needsUpdate && (this.moveIndicator_(newClientRects, cvox.ActiveIndicator.MARGIN), this.lastClientRects_ = newClientRects);
    } else {
      this.syncToNode(document.body);
    }
  }
};
cvox.ActiveIndicator.prototype.clientRectsFromNodes_ = function(nodes) {
  for (var clientRects = [], i = 0;i < nodes.length;++i) {
    var node = nodes[i];
    if (node.constructor == Text) {
      var range = document.createRange();
      range.selectNode(node);
      for (var rangeRects = range.getClientRects(), j = 0;j < rangeRects.length;++j) {
        clientRects.push(rangeRects[j]);
      }
    } else {
      for (;!node.getClientRects;) {
        node = node.parentElement;
      }
      for (var nodeRects = node.getClientRects(), j = 0;j < nodeRects.length;++j) {
        clientRects.push(nodeRects[j]);
      }
    }
  }
  return clientRects;
};
cvox.ActiveIndicator.prototype.moveIndicator_ = function(immutableRects, margin) {
  if (document.body.isContentEditable) {
    this.removeFromDom();
  } else {
    var n = immutableRects.length;
    if (0 != n) {
      var offsetX, offsetY;
      "static" != window.getComputedStyle(document.body, null).position ? (offsetX = -document.body.getBoundingClientRect().left, offsetY = -document.body.getBoundingClientRect().top) : "static" != window.getComputedStyle(document.documentElement, null).position ? (offsetX = -document.documentElement.getBoundingClientRect().left, offsetY = -document.documentElement.getBoundingClientRect().top) : (offsetX = window.pageXOffset, offsetY = window.pageYOffset);
      for (var rects = [], i = 0;i < n;i++) {
        rects.push(this.inset_(immutableRects[i], offsetX, offsetY, -offsetX, -offsetY));
      }
      if (!this.container_ || !this.container_.parentElement) {
        for (var oldContainers = document.getElementsByClassName("cvox_indicator_container"), j = 0, oldContainer;oldContainer = oldContainers[j];j++) {
          oldContainer.parentNode && oldContainer.parentNode.removeChild(oldContainer);
        }
        this.container_ = this.createDiv_(document.body, "cvox_indicator_container", document.body.firstChild);
      }
      var style = document.createElement("style");
      style.id = "cvox_indicator_style";
      style.innerHTML = cvox.ActiveIndicator.STYLE;
      cvox.DomUtil.addNodeToHead(style, style.id);
      var now = (new Date).getTime(), delta = now - this.lastMoveTime_;
      this.container_.className = "cvox_indicator_container";
      document.hasFocus() && !this.blurred_ || this.container_.classList.add("cvox_indicator_window_not_focused");
      delta > cvox.ActiveIndicator.NORMAL_ANIM_DELAY_MS ? this.container_.classList.add("cvox_indicator_animate_normal") : delta > cvox.ActiveIndicator.QUICK_ANIM_DELAY_MS && this.container_.classList.add("cvox_indicator_animate_quick");
      this.lastMoveTime_ = now;
      this.computeZoomLevel_();
      for (window.setTimeout(goog.bind(function() {
        this.container_.classList.add("cvox_indicator_pulsing");
      }, this), 0);1 < this.container_.childElementCount;) {
        this.container_.removeChild(this.container_.lastElementChild);
      }
      for (var regions = [[rects[0]]], regionRects = [rects[0]], i = 1;i < rects.length;i++) {
        for (var found = !1, j = 0;j < regions.length && !found;j++) {
          this.intersects_(rects[i], regionRects[j]) && (regions[j].push(rects[i]), regionRects[j] = this.union_(regionRects[j], rects[i]), found = !0);
        }
        found || (regions.push([rects[i]]), regionRects.push(rects[i]));
      }
      do {
        for (var merged = !1, i = 0;i < regions.length - 1 && !merged;i++) {
          for (j = i + 1;j < regions.length && !merged;j++) {
            this.intersects_(regionRects[i], regionRects[j]) && (regions[i] = regions[i].concat(regions[j]), regionRects[i] = this.union_(regionRects[i], regionRects[j]), regions.splice(j, 1), regionRects.splice(j, 1), merged = !0);
          }
        }
      } while (merged);
      for (i = 0;i < regions.length;i++) {
        regions[i].sort(function(r1, r2) {
          return r1.top != r2.top ? r1.top - r2.top : r1.left - r2.left;
        });
      }
      for (i = 0;i < regions.length;i++) {
        var parent = null;
        0 == i && 1 == this.container_.childElementCount && 6 == this.container_.children[0].childElementCount && (parent = this.container_.children[0]);
        this.updateIndicatorRegion_(regions[i], parent, margin);
      }
    }
  }
};
cvox.ActiveIndicator.prototype.updateIndicatorRegion_ = function(rects, parent, margin) {
  if (parent) {
    var regionTop = parent.children[0], regionMiddleNW = parent.children[1], regionMiddleNE = parent.children[2], regionMiddleSW = parent.children[3], regionMiddleSE = parent.children[4], regionBottom = parent.children[5]
  } else {
    parent = this.createDiv_(this.container_, "cvox_indicator_region"), window.setTimeout(function() {
      parent.classList.add("cvox_indicator_visible");
    }, 0), regionTop = this.createDiv_(parent, "cvox_indicator_top"), regionMiddleNW = this.createDiv_(parent, "cvox_indicator_middle_nw"), regionMiddleNE = this.createDiv_(parent, "cvox_indicator_middle_ne"), regionMiddleSW = this.createDiv_(parent, "cvox_indicator_middle_sw"), regionMiddleSE = this.createDiv_(parent, "cvox_indicator_middle_se"), regionBottom = this.createDiv_(parent, "cvox_indicator_bottom");
  }
  for (var topRect = rects[0], topMiddle = Math.floor((topRect.top + topRect.bottom) / 2), topIndex = 1, n = rects.length;topIndex < n && rects[topIndex].top < topMiddle;) {
    topRect = this.union_(topRect, rects[topIndex]), topMiddle = Math.floor((topRect.top + topRect.bottom) / 2), topIndex++;
  }
  if (topIndex == n) {
    var r = this.inset_(topRect, -margin, -margin, -margin, -margin), q1 = Math.floor((3 * r.top + 1 * r.bottom) / 4), q2 = Math.floor((2 * r.top + 2 * r.bottom) / 4), q3 = Math.floor((1 * r.top + 3 * r.bottom) / 4);
    this.setElementCoords_(regionTop, r.left, r.top, r.right, q1, !0, !0, !0, !1);
    this.setElementCoords_(regionMiddleNW, r.left, q1, r.left, q2, !0, !0, !1, !1);
    this.setElementCoords_(regionMiddleSW, r.left, q2, r.left, q3, !0, !1, !1, !0);
    this.setElementCoords_(regionMiddleNE, r.right, q1, r.right, q2, !1, !0, !0, !1);
    this.setElementCoords_(regionMiddleSE, r.right, q2, r.right, q3, !1, !1, !0, !0);
    this.setElementCoords_(regionBottom, r.left, q3, r.right, r.bottom, !0, !1, !0, !0);
  } else {
    for (var bottomRect = rects[n - 1], bottomMiddle = Math.floor((bottomRect.top + bottomRect.bottom) / 2), bottomIndex = n - 2;0 <= bottomIndex && rects[bottomIndex].bottom > bottomMiddle;) {
      bottomRect = this.union_(bottomRect, rects[bottomIndex]), bottomMiddle = Math.floor((bottomRect.top + bottomRect.bottom) / 2), bottomIndex--;
    }
    var topRect = this.inset_(topRect, -margin, -margin, -margin, margin), bottomRect = this.inset_(bottomRect, -margin, margin, -margin, -margin), middleRect;
    if (topIndex > bottomIndex) {
      middleRect = this.union_(topRect, bottomRect), middleRect.top = topRect.bottom, middleRect.bottom = bottomRect.top, middleRect.height = Math.floor((middleRect.top + middleRect.bottom) / 2);
    } else {
      middleRect = rects[topIndex];
      for (var middleIndex = topIndex + 1;middleIndex <= bottomIndex;) {
        middleRect = this.union_(middleRect, rects[middleIndex]), middleIndex++;
      }
      middleRect = this.inset_(middleRect, -margin, -margin, -margin, -margin);
      middleRect.left = Math.min(middleRect.left, topRect.left, bottomRect.left);
      middleRect.right = Math.max(middleRect.right, topRect.right, bottomRect.right);
      middleRect.width = middleRect.right - middleRect.left;
    }
    topRect.right > middleRect.right - 40 && (topRect.right = middleRect.right, topRect.width = topRect.right - topRect.left);
    topRect.left < middleRect.left + 40 && (topRect.left = middleRect.left, topRect.width = topRect.right - topRect.left);
    bottomRect.right > middleRect.right - 40 && (bottomRect.right = middleRect.right, bottomRect.width = bottomRect.right - bottomRect.left);
    bottomRect.left < middleRect.left + 40 && (bottomRect.left = middleRect.left, bottomRect.width = bottomRect.right - bottomRect.left);
    var midline = Math.floor((middleRect.top + middleRect.bottom) / 2);
    this.setElementRect_(regionTop, topRect, !0, !0, !0, !1);
    this.setElementRect_(regionBottom, bottomRect, !0, !1, !0, !0);
    this.setElementCoords_(regionMiddleNW, middleRect.left, topRect.bottom, topRect.left, midline, !0, !0, !1, !1);
    this.setElementCoords_(regionMiddleNE, topRect.right, topRect.bottom, middleRect.right, midline, !1, !0, !0, !1);
    this.setElementCoords_(regionMiddleSW, middleRect.left, midline, bottomRect.left, bottomRect.top, !0, !1, !1, !0);
    this.setElementCoords_(regionMiddleSE, bottomRect.right, midline, middleRect.right, bottomRect.top, !1, !1, !0, !0);
  }
};
cvox.ActiveIndicator.prototype.intersects_ = function(r1, r2) {
  var slop = 2 * cvox.ActiveIndicator.MARGIN;
  return r2.left <= r1.right + slop && r2.right >= r1.left - slop && r2.top <= r1.bottom + slop && r2.bottom >= r1.top - slop;
};
cvox.ActiveIndicator.prototype.union_ = function(r1, r2) {
  var result = {left:Math.min(r1.left, r2.left), top:Math.min(r1.top, r2.top), right:Math.max(r1.right, r2.right), bottom:Math.max(r1.bottom, r2.bottom)};
  result.width = result.right - result.left;
  result.height = result.bottom - result.top;
  return result;
};
cvox.ActiveIndicator.prototype.inset_ = function(r, left, top, right, bottom) {
  var result = {left:r.left + left, top:r.top + top, right:r.right - right, bottom:r.bottom - bottom};
  result.width = result.right - result.left;
  result.height = result.bottom - result.top;
  return result;
};
cvox.ActiveIndicator.prototype.createDiv_ = function(parent, className, opt_before) {
  var elem = document.createElement("div");
  elem.className = className;
  opt_before ? parent.insertBefore(elem, opt_before) : parent.appendChild(elem);
  return elem;
};
cvox.ActiveIndicator.prototype.fixZoom_ = function(x) {
  return (Math.round(x * this.zoom_) + .1) / this.zoom_;
};
cvox.ActiveIndicator.prototype.fixZoomSum_ = function(x, width) {
  var zoomedX = Math.round(x * this.zoom_), zoomedRight = Math.round((x + width) * this.zoom_), zoomedWidth = zoomedRight - zoomedX;
  return (zoomedWidth + .1) / this.zoom_;
};
cvox.ActiveIndicator.prototype.setElementCoords_ = function(element, left, top, right, bottom, showLeft, showTop, showRight, showBottom) {
  var origWidth = right - left, origHeight = bottom - top, width = right - left, height = bottom - top, clipLeft = showLeft ? -20 : 0, clipTop = showTop ? -20 : 0, clipRight = showRight ? 20 : 0, clipBottom = showBottom ? 20 : 0;
  0 == width && (showRight ? (left -= 5, width += 5) : showLeft && (width += 10), clipBottom = clipTop = 10, top -= 10, height += 20);
  showBottom || (height += 5);
  showTop || (top -= 5, height += 5, clipTop += 5, clipBottom += 5);
  clipRight = 0 == clipRight && 0 == origWidth ? 1 : this.fixZoomSum_(left, clipRight + origWidth);
  clipBottom = this.fixZoomSum_(top, clipBottom + origHeight);
  element.style.left = this.fixZoom_(left) + "px";
  element.style.top = this.fixZoom_(top) + "px";
  element.style.width = this.fixZoomSum_(left, width) + "px";
  element.style.height = this.fixZoomSum_(top, height) + "px";
  element.style.clip = "rect(" + [clipTop, clipRight, clipBottom, clipLeft].join("px ") + "px)";
};
cvox.ActiveIndicator.prototype.setElementRect_ = function(element, r, showLeft, showTop, showRight, showBottom) {
  this.setElementCoords_(element, r.left, r.top, r.right, r.bottom, showLeft, showTop, showRight, showBottom);
};
cvox.ActiveIndicator.prototype.computeZoomLevel_ = function() {
  if (window.innerHeight !== this.innerHeight_ || window.innerWidth !== this.innerWidth_) {
    this.innerHeight_ = window.innerHeight;
    this.innerWidth_ = window.innerWidth;
    var zoomMeasureElement = document.createElement("div");
    zoomMeasureElement.innerHTML = "X";
    zoomMeasureElement.setAttribute("style", "font: 5000px/1em sans-serif !important; -webkit-text-size-adjust:none !important; visibility:hidden !important; left: -10000px !important; top: -10000px !important; position:absolute !important;");
    document.body.appendChild(zoomMeasureElement);
    var zoomLevel = 5E3 / zoomMeasureElement.clientHeight, newZoom = Math.round(500 * zoomLevel) / 500;
    .1 < newZoom && 10 > newZoom && (this.zoom_ = newZoom);
    zoomMeasureElement.parentNode.removeChild(zoomMeasureElement);
  }
};
cvox.NodeBreadcrumb = function() {
  this.cvTagCounter_ = 0;
};
goog.addSingletonGetter(cvox.NodeBreadcrumb);
cvox.NodeBreadcrumb.TOUCHED_TAG = "chromevoxtag";
cvox.NodeBreadcrumb.NEEDED_TAG_ = "chromevoxneeded";
cvox.NodeBreadcrumb.prototype.tagCurrentNode = function() {
  for (var cvTag, currentNode = cvox.ChromeVox.navigationManager.getCurrentNode();currentNode && !currentNode.hasAttribute;) {
    currentNode = currentNode.parentNode;
  }
  currentNode ? currentNode.hasAttribute(cvox.NodeBreadcrumb.TOUCHED_TAG) ? cvTag = currentNode.getAttribute(cvox.NodeBreadcrumb.TOUCHED_TAG) : (cvTag = this.cvTagCounter_, currentNode.setAttribute(cvox.NodeBreadcrumb.TOUCHED_TAG, cvTag), this.cvTagCounter_++) : cvTag = -1;
  return cvTag;
};
cvox.NodeBreadcrumb.prototype.smartStart_ = function(node) {
  for (var i = 0;i < node.children.length;++i) {
    var child = node.children[i];
    this.smartStart_(child);
    child.getAttribute && !goog.isNull(child.getAttribute(cvox.NodeBreadcrumb.TOUCHED_TAG)) && this.setNeeded_(child);
  }
};
cvox.NodeBreadcrumb.prototype.setNeeded_ = function(node) {
  node && node.getAttribute && goog.isNull(node.getAttribute(cvox.NodeBreadcrumb.NEEDED_TAG_)) && (node.setAttribute(cvox.NodeBreadcrumb.NEEDED_TAG_, !0), "body" !== node.nodeName && this.setNeeded_(node.parentElement));
};
cvox.NodeBreadcrumb.prototype.smartClone_ = function(node) {
  var skipattrs = {};
  skipattrs[cvox.NodeBreadcrumb.TOUCHED_TAG] = !0;
  skipattrs[cvox.NodeBreadcrumb.NEEDED_TAG_] = !0;
  if (node.getAttribute && node.getAttribute(cvox.NodeBreadcrumb.TOUCHED_TAG)) {
    return cvox.DomUtil.deepClone(node, skipattrs);
  }
  for (var ret = cvox.DomUtil.shallowChildlessClone(node, skipattrs), i = 0;i < node.childNodes.length;++i) {
    var child = node.childNodes[i];
    child.getAttribute && !goog.isNull(child.getAttribute(cvox.NodeBreadcrumb.NEEDED_TAG_)) && ret.appendChild(this.smartClone_(child));
  }
  return ret;
};
cvox.NodeBreadcrumb.prototype.dumpWalkedDom = function() {
  this.smartStart_(document.body);
  return this.smartClone_(document.body);
};
cvox.NodeBreadcrumb.getCurrentNodeTag = function() {
  for (var currentNode = cvox.ChromeVox.navigationManager.getCurrentNode();currentNode && !currentNode.hasAttribute;) {
    currentNode = currentNode.parentNode;
  }
  return currentNode && currentNode.hasAttribute(cvox.NodeBreadcrumb.TOUCHED_TAG) ? currentNode.getAttribute(cvox.NodeBreadcrumb.TOUCHED_TAG) : -1;
};
cvox.HistoryEvent = function(opt_json) {
  this.spoken_ = [];
  opt_json ? this.userCommand_ = opt_json.cmd : this.startTime_ = (new Date).getTime();
};
cvox.HistoryEvent.prototype.withUserCommand = function(functionName) {
  if (this.userCommand_) {
    return window.console.error("Two user commands on " + functionName, this), this;
  }
  this.userCommand_ = functionName;
  return this;
};
cvox.HistoryEvent.prototype.speak = function(str) {
  this.spoken_.push(str);
  return this;
};
cvox.HistoryEvent.prototype.done = function() {
  this.endTime_ = (new Date).getTime();
  cvox.NodeBreadcrumb.getInstance().tagCurrentNode();
  window.console.log("User command done.", this);
  return this;
};
cvox.HistoryEvent.prototype.outputObject = function() {
  return {start:this.startTime_, end:this.endTime_, cmd:this.userCommand_, spoken:this.spoken_};
};
cvox.HistoryEvent.prototype.outputHTML = function() {
  var div = document.createElement("div");
  div.className = "cvoxHistoryEvent";
  var dur = this.endTime_ - this.startTime_;
  div.innerHTML = this.userCommand_ + " (" + dur + "ms)";
  for (var i = 0;i < this.spoken_.length;i++) {
    var sdiv = document.createElement("div");
    sdiv.className = "cvoxHistoryEventSpoken";
    sdiv.innerHTML = this.spoken_[i].substr(0, 20);
    20 < this.spoken_[i].length && (sdiv.innerHTML += "...");
    div.appendChild(sdiv);
  }
  return div;
};
cvox.HistoryEvent.prototype.outputJs = function() {
  var o = "this.waitForCalm(this.userCommand, '" + this.userCommand_ + "')";
  return o = 0 < this.spoken_.length ? o + ("\n  .waitForCalm(this.assertSpoken, '" + cvox.DomUtil.collapseWhitespace(this.spoken_.join(" ")) + "');\n") : o + ";\n";
};
cvox.History = function() {
  this.recording_ = !1;
  this.events_ = [];
  this.styleDiv_ = this.listDiv_ = this.mainDiv_ = this.currentEvent_ = null;
  this.nodeBreadcrumb_ = cvox.NodeBreadcrumb.getInstance();
};
goog.addSingletonGetter(cvox.History);
cvox.History.prototype.addListDiv_ = function() {
  this.mainDiv_ = document.createElement("div");
  this.mainDiv_.style.position = "fixed";
  this.mainDiv_.style.bottom = "0";
  this.mainDiv_.style.right = "0";
  this.mainDiv_.style.zIndex = "999";
  this.listDiv_ = document.createElement("div");
  this.listDiv_.id = "cvoxEventList";
  this.mainDiv_.appendChild(this.listDiv_);
  var buttonDiv = document.createElement("div"), button = document.createElement("button");
  button.onclick = cvox.History.sendToFeedback;
  button.innerHTML = "Create bug";
  buttonDiv.appendChild(button);
  this.mainDiv_.appendChild(buttonDiv);
  var dumpDiv = document.createElement("div"), dumpButton = document.createElement("button");
  dumpButton.onclick = cvox.History.dumpJs;
  dumpButton.innerHTML = "Dump test case";
  dumpDiv.appendChild(dumpButton);
  this.mainDiv_.appendChild(dumpDiv);
  document.body.appendChild(this.mainDiv_);
  this.styleDiv_ = document.createElement("style");
  this.styleDiv_.innerHTML = ".cvoxHistoryEventSpoken { color: gray; font-size: 75% }";
  document.body.appendChild(this.styleDiv_);
};
cvox.History.prototype.removeListDiv_ = function() {
  document.body.removeChild(this.mainDiv_);
  document.body.removeChild(this.styleDiv_);
  this.styleDiv_ = this.listDiv_ = this.mainDiv_ = null;
};
cvox.History.prototype.addBigTextBox_ = function() {
  function link(name, func) {
    var linkElt = document.createElement("button");
    linkElt.onclick = func;
    linkElt.innerHTML = name;
    buttons.appendChild(linkElt);
  }
  var bigBoxDiv = document.createElement("div");
  bigBoxDiv.style.position = "fixed";
  bigBoxDiv.style.top = "0";
  bigBoxDiv.style.left = "0";
  bigBoxDiv.style.zIndex = "999";
  var textarea = document.createElement("textarea");
  textarea.style.width = "500px";
  textarea.style.height = "500px";
  textarea.innerHTML = this.dumpJsOutput_();
  bigBoxDiv.appendChild(textarea);
  var buttons = document.createElement("div");
  bigBoxDiv.appendChild(buttons);
  link("Close dialog", function() {
    document.body.removeChild(bigBoxDiv);
  });
  link("Remove fluff", goog.bind(function() {
    textarea.innerHTML = this.dumpJsOutput_(["stopSpeech", "toggleKeyPrefix"]);
  }, this));
  document.body.appendChild(bigBoxDiv);
};
cvox.History.prototype.startRecording = function() {
  this.recording_ = !0;
  this.addListDiv_();
};
cvox.History.prototype.stopRecording = function() {
  this.recording_ = !1;
  this.removeListDiv_();
  this.events_ = [];
  this.currentEvent_ = null;
};
cvox.History.prototype.enterUserCommand = function(functionName) {
  this.recording_ && (this.currentEvent_ && window.console.error("User command " + functionName + " overlaps current event", this.currentEvent_), this.currentEvent_ = (new cvox.HistoryEvent).withUserCommand(functionName), this.events_.push(this.currentEvent_));
};
cvox.History.prototype.exitUserCommand = function() {
  this.recording_ && this.currentEvent_ && (this.currentEvent_.done(), this.listDiv_.appendChild(this.currentEvent_.outputHTML()), this.currentEvent_ = null);
};
cvox.History.prototype.speak = function(str) {
  if (!this.recording_) {
    return this;
  }
  if (!this.currentEvent_) {
    return window.console.error("Speak called outside of a user command."), this;
  }
  this.currentEvent_.speak(str);
  return this;
};
cvox.History.prototype.isSpeaking = function() {
  return !1;
};
cvox.History.prototype.stop = function() {
};
cvox.History.prototype.increaseOrDecreaseProperty = function() {
};
cvox.History.prototype.getDefaultProperty = function() {
};
cvox.History.dumpJs = function() {
  var history = cvox.History.getInstance();
  history.addBigTextBox_();
  window.console.log(history.dumpJsOutput_());
};
cvox.History.prototype.dumpJsOutput_ = function(opt_skipCommands) {
  var skipMap = {};
  opt_skipCommands && opt_skipCommands.forEach(function(e) {
    skipMap[e] = 1;
  });
  return ["/*DOC: += ", this.nodeBreadcrumb_.dumpWalkedDom().innerHTML, "*/\n"].concat(this.events_.filter(function(e) {
    return !(e.userCommand_ in skipMap);
  }).map(function(e) {
    return e.outputJs();
  })).join("");
};
cvox.History.sendToFeedback = function() {
  var history = cvox.History.getInstance(), output = history.events_.map(function(e) {
    return e.outputObject();
  }), feedbackScript = document.createElement("script");
  feedbackScript.type = "text/javascript";
  feedbackScript.src = "https://www.gstatic.com/feedback/api.js";
  var runFeedbackScript = document.createElement("script");
  runFeedbackScript.type = "text/javascript";
  runFeedbackScript.innerHTML = "userfeedback.api.startFeedback({ productId: '76092' }, { cvoxHistory: " + cvox.ChromeVoxJSON.stringify(cvox.ChromeVoxJSON.stringify(output)) + " });";
  feedbackScript.onload = function() {
    document.body.appendChild(runFeedbackScript);
  };
  document.body.appendChild(feedbackScript);
};
cvox.KeySequence = function(originalEvent, opt_cvoxModifier, opt_skipStripping, opt_doubleTap) {
  this.doubleTap = !!opt_doubleTap;
  this.cvoxModifier = void 0 == opt_cvoxModifier ? this.isCVoxModifierActive(originalEvent) : opt_cvoxModifier;
  this.stickyMode = !!originalEvent.stickyMode;
  this.prefixKey = !!originalEvent.keyPrefix;
  this.skipStripping = !!opt_skipStripping;
  if (this.stickyMode && this.prefixKey) {
    throw "Prefix key and sticky mode cannot both be enabled: " + originalEvent;
  }
  var event = this.resolveChromeOSSpecialKeys_(originalEvent);
  this.keys = {ctrlKey:[], searchKeyHeld:[], altKey:[], altGraphKey:[], shiftKey:[], metaKey:[], keyCode:[]};
  this.extractKey_(event);
};
cvox.KeySequence.KEY_PRESS_CODE = {39:222, 44:188, 45:189, 46:190, 47:191, 59:186, 91:219, 92:220, 93:221};
cvox.KeySequence.doubleTapCache = [];
cvox.KeySequence.prototype.addKeyEvent = function(additionalKeyEvent) {
  if (1 < this.keys.keyCode.length) {
    return !1;
  }
  this.extractKey_(additionalKeyEvent);
  return !0;
};
cvox.KeySequence.prototype.equals = function(rhs) {
  if (!this.checkKeyEquality_(rhs) || this.doubleTap != rhs.doubleTap) {
    return !1;
  }
  if (this.cvoxModifier === rhs.cvoxModifier) {
    return !0;
  }
  var unmodified = this.cvoxModifier ? rhs : this;
  return unmodified.stickyMode || unmodified.prefixKey;
};
cvox.KeySequence.prototype.extractKey_ = function(keyEvent) {
  for (var prop in this.keys) {
    if ("keyCode" == prop) {
      var keyCode;
      "keypress" == keyEvent.type && 97 <= keyEvent[prop] && 122 >= keyEvent[prop] ? keyCode = keyEvent[prop] - 32 : "keypress" == keyEvent.type && (keyCode = cvox.KeySequence.KEY_PRESS_CODE[keyEvent[prop]]);
      this.keys[prop].push(keyCode || keyEvent[prop]);
    } else {
      this.isKeyModifierActive(keyEvent, prop) ? this.keys[prop].push(!0) : this.keys[prop].push(!1);
    }
  }
  this.cvoxModifier && this.rationalizeKeys_();
};
cvox.KeySequence.prototype.rationalizeKeys_ = function() {
  if (!this.skipStripping) {
    var modifierKeyCombo = cvox.ChromeVox.modKeyStr.split(/\+/g), index = this.keys.keyCode.length - 1;
    -1 != modifierKeyCombo.indexOf("Ctrl") && (this.keys.ctrlKey[index] = !1);
    -1 != modifierKeyCombo.indexOf("Alt") && (this.keys.altKey[index] = !1);
    -1 != modifierKeyCombo.indexOf("Shift") && (this.keys.shiftKey[index] = !1);
    var metaKeyName = this.getMetaKeyName_();
    if (-1 != modifierKeyCombo.indexOf(metaKeyName)) {
      if ("Search" == metaKeyName) {
        this.keys.searchKeyHeld[index] = !1;
      } else {
        if ("Cmd" == metaKeyName || "Win" == metaKeyName) {
          this.keys.metaKey[index] = !1;
        }
      }
    }
  }
};
cvox.KeySequence.prototype.getMetaKeyName_ = function() {
  return cvox.ChromeVox.isChromeOS ? "Search" : cvox.ChromeVox.isMac ? "Cmd" : "Win";
};
cvox.KeySequence.prototype.checkKeyEquality_ = function(rhs) {
  for (var i in this.keys) {
    for (var j = this.keys[i].length;j--;) {
      if (this.keys[i][j] !== rhs.keys[i][j]) {
        return !1;
      }
    }
  }
  return !0;
};
cvox.KeySequence.prototype.length = function() {
  return this.keys.keyCode.length;
};
cvox.KeySequence.prototype.isModifierKey = function(keyCode) {
  return 16 == keyCode || 17 == keyCode || 18 == keyCode || 91 == keyCode || 93 == keyCode;
};
cvox.KeySequence.prototype.isCVoxModifierActive = function(keyEvent) {
  var modifierKeyCombo = cvox.ChromeVox.modKeyStr.split(/\+/g);
  this.isKeyModifierActive(keyEvent, "ctrlKey") && (modifierKeyCombo = modifierKeyCombo.filter(function(modifier) {
    return "Ctrl" != modifier;
  }));
  this.isKeyModifierActive(keyEvent, "altKey") && (modifierKeyCombo = modifierKeyCombo.filter(function(modifier) {
    return "Alt" != modifier;
  }));
  this.isKeyModifierActive(keyEvent, "shiftKey") && (modifierKeyCombo = modifierKeyCombo.filter(function(modifier) {
    return "Shift" != modifier;
  }));
  if (this.isKeyModifierActive(keyEvent, "metaKey") || this.isKeyModifierActive(keyEvent, "searchKeyHeld")) {
    var metaKeyName = this.getMetaKeyName_(), modifierKeyCombo = modifierKeyCombo.filter(function(modifier) {
      return modifier != metaKeyName;
    })
  }
  return 0 == modifierKeyCombo.length;
};
cvox.KeySequence.prototype.isKeyModifierActive = function(keyEvent, modifier) {
  switch(modifier) {
    case "ctrlKey":
      return keyEvent.ctrlKey || 17 == keyEvent.keyCode;
    case "altKey":
      return keyEvent.altKey || 18 == keyEvent.keyCode;
    case "shiftKey":
      return keyEvent.shiftKey || 16 == keyEvent.keyCode;
    case "metaKey":
      return keyEvent.metaKey || !cvox.ChromeVox.isChromeOS && 91 == keyEvent.keyCode;
    case "searchKeyHeld":
      return cvox.ChromeVox.isChromeOS && 91 == keyEvent.keyCode || keyEvent.searchKeyHeld;
  }
  return !1;
};
cvox.KeySequence.deserialize = function(sequenceObject) {
  var firstSequenceEvent = {};
  firstSequenceEvent.stickyMode = void 0 == sequenceObject.stickyMode ? !1 : sequenceObject.stickyMode;
  firstSequenceEvent.prefixKey = void 0 == sequenceObject.prefixKey ? !1 : sequenceObject.prefixKey;
  var secondKeyPressed = 1 < sequenceObject.keys.keyCode.length, secondSequenceEvent = {}, keyPressed;
  for (keyPressed in sequenceObject.keys) {
    firstSequenceEvent[keyPressed] = sequenceObject.keys[keyPressed][0], secondKeyPressed && (secondSequenceEvent[keyPressed] = sequenceObject.keys[keyPressed][1]);
  }
  var keySeq = new cvox.KeySequence(firstSequenceEvent, sequenceObject.cvoxModifier, !0, sequenceObject.doubleTap);
  secondKeyPressed && (cvox.ChromeVox.sequenceSwitchKeyCodes.push(new cvox.KeySequence(firstSequenceEvent, sequenceObject.cvoxModifier)), keySeq.addKeyEvent(secondSequenceEvent));
  sequenceObject.doubleTap && cvox.KeySequence.doubleTapCache.push(keySeq);
  return keySeq;
};
cvox.KeySequence.fromStr = function(keyStr) {
  var sequenceEvent = {}, secondSequenceEvent = {}, secondKeyPressed;
  secondKeyPressed = -1 == keyStr.indexOf(">") ? !1 : !0;
  var cvoxPressed = !1;
  sequenceEvent.stickyMode = !1;
  sequenceEvent.prefixKey = !1;
  for (var tokens = keyStr.split("+"), i = 0;i < tokens.length;i++) {
    for (var seqs = tokens[i].split(">"), j = 0;j < seqs.length;j++) {
      if ("#" == seqs[j].charAt(0)) {
        var keyCode = parseInt(seqs[j].substr(1), 10);
        0 < j ? secondSequenceEvent.keyCode = keyCode : sequenceEvent.keyCode = keyCode;
      }
      var keyName = seqs[j];
      1 == seqs[j].length ? 0 < j ? secondSequenceEvent.keyCode = seqs[j].charCodeAt(0) : sequenceEvent.keyCode = seqs[j].charCodeAt(0) : (0 < j ? cvox.KeySequence.setModifiersOnEvent_(keyName, secondSequenceEvent) : cvox.KeySequence.setModifiersOnEvent_(keyName, sequenceEvent), "Cvox" == keyName && (cvoxPressed = !0));
    }
  }
  var keySeq = new cvox.KeySequence(sequenceEvent, cvoxPressed);
  secondKeyPressed && keySeq.addKeyEvent(secondSequenceEvent);
  return keySeq;
};
cvox.KeySequence.setModifiersOnEvent_ = function(keyName, seqEvent) {
  "Ctrl" == keyName ? (seqEvent.ctrlKey = !0, seqEvent.keyCode = 17) : "Alt" == keyName ? (seqEvent.altKey = !0, seqEvent.keyCode = 18) : "Shift" == keyName ? (seqEvent.shiftKey = !0, seqEvent.keyCode = 16) : "Search" == keyName ? (seqEvent.searchKeyHeld = !0, seqEvent.keyCode = 91) : "Cmd" == keyName ? (seqEvent.metaKey = !0, seqEvent.keyCode = 91) : "Win" == keyName ? (seqEvent.metaKey = !0, seqEvent.keyCode = 91) : "Insert" == keyName && (seqEvent.keyCode = 45);
};
cvox.KeySequence.prototype.resolveChromeOSSpecialKeys_ = function(originalEvent) {
  if (!this.cvoxModifier || this.stickyMode || this.prefixKey || !cvox.ChromeVox.isChromeOS) {
    return originalEvent;
  }
  var evt = {}, key;
  for (key in originalEvent) {
    evt[key] = originalEvent[key];
  }
  switch(evt.keyCode) {
    case 33:
      evt.keyCode = 38;
      break;
    case 34:
      evt.keyCode = 40;
      break;
    case 35:
      evt.keyCode = 39;
      break;
    case 36:
      evt.keyCode = 37;
      break;
    case 45:
      evt.keyCode = 190;
      break;
    case 46:
      evt.keyCode = 8;
      break;
    case 112:
      evt.keyCode = 49;
      break;
    case 113:
      evt.keyCode = 50;
      break;
    case 114:
      evt.keyCode = 51;
      break;
    case 115:
      evt.keyCode = 52;
      break;
    case 116:
      evt.keyCode = 53;
      break;
    case 117:
      evt.keyCode = 54;
      break;
    case 118:
      evt.keyCode = 55;
      break;
    case 119:
      evt.keyCode = 56;
      break;
    case 120:
      evt.keyCode = 57;
      break;
    case 121:
      evt.keyCode = 48;
      break;
    case 122:
      evt.keyCode = 189;
      break;
    case 123:
      evt.keyCode = 187;
  }
  return evt;
};
cvox.KeyUtil = function() {
};
cvox.KeyUtil.modeKeyPressTime = 0;
cvox.KeyUtil.sequencing = !1;
cvox.KeyUtil.prevKeySequence = null;
cvox.KeyUtil.stickyKeySequence = null;
cvox.KeyUtil.maxSeqLength = 2;
cvox.KeyUtil.keyEventToKeySequence = function(keyEvent) {
  var util = cvox.KeyUtil;
  util.prevKeySequence && util.maxSeqLength == util.prevKeySequence.length() && (util.sequencing = !1, util.prevKeySequence = null);
  var keyIsPrefixed = util.sequencing || keyEvent.keyPrefix || keyEvent.stickyMode, keySequence = new cvox.KeySequence(keyEvent), keyWasCvox = keySequence.cvoxModifier;
  if (keyIsPrefixed || keyWasCvox) {
    if (!util.sequencing && util.isSequenceSwitchKeyCode(keySequence)) {
      return util.sequencing = !0, util.prevKeySequence = keySequence;
    }
    if (util.sequencing) {
      if (util.prevKeySequence.addKeyEvent(keyEvent)) {
        return keySequence = util.prevKeySequence, util.prevKeySequence = null, util.sequencing = !1, keySequence;
      }
      throw "Think sequencing is enabled, yet util.prevKeySequence alreadyhas two key codes" + util.prevKeySequence;
    }
  } else {
    util.sequencing = !1;
  }
  var currTime = (new Date).getTime();
  if (cvox.KeyUtil.isDoubleTapKey(keySequence) && util.prevKeySequence && keySequence.equals(util.prevKeySequence)) {
    var prevTime = util.modeKeyPressTime;
    if (0 < prevTime && 300 > currTime - prevTime) {
      return keySequence = util.prevKeySequence, keySequence.doubleTap = !0, util.prevKeySequence = null, util.sequencing = !1, cvox.ChromeVox.isChromeOS && keyEvent.keyCode == cvox.KeyUtil.getStickyKeyCode() && (cvox.ChromeVox.searchKeyHeld = !1), keySequence;
    }
  }
  util.prevKeySequence = keySequence;
  util.modeKeyPressTime = currTime;
  return keySequence;
};
cvox.KeyUtil.keyCodeToString = function(keyCode) {
  return 17 == keyCode ? "Ctrl" : 18 == keyCode ? "Alt" : 16 == keyCode ? "Shift" : 91 == keyCode || 93 == keyCode ? cvox.ChromeVox.isChromeOS ? "Search" : cvox.ChromeVox.isMac ? "Cmd" : "Win" : 45 == keyCode ? "Insert" : 65 <= keyCode && 90 >= keyCode ? String.fromCharCode(keyCode) : 48 <= keyCode && 57 >= keyCode ? String.fromCharCode(keyCode) : "#" + keyCode;
};
cvox.KeyUtil.modStringToKeyCode = function(keyString) {
  switch(keyString) {
    case "Ctrl":
      return 17;
    case "Alt":
      return 18;
    case "Shift":
      return 16;
    case "Cmd":
    ;
    case "Win":
      return 91;
  }
  return -1;
};
cvox.KeyUtil.cvoxModKeyCodes = function() {
  var modKeyCombo = cvox.ChromeVox.modKeyStr.split(/\+/g), modKeyCodes = modKeyCombo.map(function(keyString) {
    return cvox.KeyUtil.modStringToKeyCode(keyString);
  });
  return modKeyCodes;
};
cvox.KeyUtil.isSequenceSwitchKeyCode = function(rhKeySeq) {
  for (var i = 0;i < cvox.ChromeVox.sequenceSwitchKeyCodes.length;i++) {
    var lhKeySeq = cvox.ChromeVox.sequenceSwitchKeyCodes[i];
    if (lhKeySeq.equals(rhKeySeq)) {
      return !0;
    }
  }
  return !1;
};
cvox.KeyUtil.getReadableNameForKeyCode = function(keyCode) {
  if (0 == keyCode) {
    return "Power button";
  }
  if (17 == keyCode) {
    return "Control";
  }
  if (18 == keyCode) {
    return "Alt";
  }
  if (16 == keyCode) {
    return "Shift";
  }
  if (9 == keyCode) {
    return "Tab";
  }
  if (91 == keyCode || 93 == keyCode) {
    return cvox.ChromeVox.isChromeOS ? "Search" : cvox.ChromeVox.isMac ? "Cmd" : "Win";
  }
  if (8 == keyCode) {
    return "Backspace";
  }
  if (32 == keyCode) {
    return "Space";
  }
  if (35 == keyCode) {
    return "end";
  }
  if (36 == keyCode) {
    return "home";
  }
  if (37 == keyCode) {
    return "Left arrow";
  }
  if (38 == keyCode) {
    return "Up arrow";
  }
  if (39 == keyCode) {
    return "Right arrow";
  }
  if (40 == keyCode) {
    return "Down arrow";
  }
  if (45 == keyCode) {
    return "Insert";
  }
  if (13 == keyCode) {
    return "Enter";
  }
  if (27 == keyCode) {
    return "Escape";
  }
  if (112 == keyCode) {
    return cvox.ChromeVox.isChromeOS ? "Back" : "F1";
  }
  if (113 == keyCode) {
    return cvox.ChromeVox.isChromeOS ? "Forward" : "F2";
  }
  if (114 == keyCode) {
    return cvox.ChromeVox.isChromeOS ? "Refresh" : "F3";
  }
  if (115 == keyCode) {
    return cvox.ChromeVox.isChromeOS ? "Toggle full screen" : "F4";
  }
  if (116 == keyCode) {
    return "F5";
  }
  if (117 == keyCode) {
    return "F6";
  }
  if (118 == keyCode) {
    return "F7";
  }
  if (119 == keyCode) {
    return "F8";
  }
  if (120 == keyCode) {
    return "F9";
  }
  if (121 == keyCode) {
    return "F10";
  }
  if (122 == keyCode) {
    return "F11";
  }
  if (123 == keyCode) {
    return "F12";
  }
  if (186 == keyCode) {
    return "Semicolon";
  }
  if (187 == keyCode) {
    return "Equal sign";
  }
  if (188 == keyCode) {
    return "Comma";
  }
  if (189 == keyCode) {
    return "Dash";
  }
  if (190 == keyCode) {
    return "Period";
  }
  if (191 == keyCode) {
    return "Forward slash";
  }
  if (192 == keyCode) {
    return "Grave accent";
  }
  if (219 == keyCode) {
    return "Open bracket";
  }
  if (220 == keyCode) {
    return "Back slash";
  }
  if (221 == keyCode) {
    return "Close bracket";
  }
  if (222 == keyCode) {
    return "Single quote";
  }
  if (115 == keyCode) {
    return "Toggle full screen";
  }
  if (48 <= keyCode && 90 >= keyCode) {
    return String.fromCharCode(keyCode);
  }
};
cvox.KeyUtil.getStickyKeyCode = function() {
  var stickyKeyCode = 45;
  if (cvox.ChromeVox.isChromeOS || cvox.ChromeVox.isMac) {
    stickyKeyCode = 91;
  }
  return stickyKeyCode;
};
cvox.KeyUtil.getStickyKeySequence = function() {
  if (null == cvox.KeyUtil.stickyKeySequence) {
    var stickyKeyCode = cvox.KeyUtil.getStickyKeyCode(), stickyKeyObj = {keyCode:stickyKeyCode, stickyMode:!0}, stickyKeySequence = new cvox.KeySequence(stickyKeyObj);
    stickyKeySequence.addKeyEvent(stickyKeyObj);
    cvox.KeyUtil.stickyKeySequence = stickyKeySequence;
  }
  return cvox.KeyUtil.stickyKeySequence;
};
cvox.KeyUtil.getReadableNameForStr = function() {
  return null;
};
cvox.KeyUtil.keySequenceToString = function(keySequence, opt_readableKeyCode, opt_modifiers) {
  for (var str = "", numKeys = keySequence.length(), index = 0;index < numKeys;index++) {
    "" == str || opt_modifiers ? "" != str && (str += "+") : str += ">";
    var tempStr = "", keyPressed;
    for (keyPressed in keySequence.keys) {
      if (keySequence.keys[keyPressed][index]) {
        var modifier = "";
        switch(keyPressed) {
          case "ctrlKey":
            modifier = "Ctrl";
            break;
          case "searchKeyHeld":
            var searchKey = cvox.KeyUtil.getReadableNameForKeyCode(91), modifier = searchKey;
            break;
          case "altKey":
            modifier = "Alt";
            break;
          case "altGraphKey":
            modifier = "AltGraph";
            break;
          case "shiftKey":
            modifier = "Shift";
            break;
          case "metaKey":
            var metaKey = cvox.KeyUtil.getReadableNameForKeyCode(91), modifier = metaKey;
            break;
          case "keyCode":
            var keyCode = keySequence.keys[keyPressed][index];
            keySequence.isModifierKey(keyCode) || opt_modifiers || (tempStr = opt_readableKeyCode ? tempStr + cvox.KeyUtil.getReadableNameForKeyCode(keyCode) : tempStr + cvox.KeyUtil.keyCodeToString(keyCode));
        }
        -1 == str.indexOf(modifier) && (tempStr += modifier + "+");
      }
    }
    str += tempStr;
    "+" == str[str.length - 1] && (str = str.slice(0, -1));
  }
  keySequence.cvoxModifier || keySequence.prefixKey ? str = "" != str ? "Cvox+" + str : "Cvox" : keySequence.stickyMode && (">" == str[str.length - 1] && (str = str.slice(0, -1)), str = str + "+" + str);
  return str;
};
cvox.KeyUtil.isDoubleTapKey = function(key) {
  var isSet = !1, originalState = key.doubleTap;
  key.doubleTap = !0;
  for (var i = 0, keySeq;keySeq = cvox.KeySequence.doubleTapCache[i];i++) {
    if (keySeq.equals(key)) {
      isSet = !0;
      break;
    }
  }
  key.doubleTap = originalState;
  return isSet;
};
cvox.KeyMap = function(commandsAndKeySequences) {
  this.bindings_ = commandsAndKeySequences;
  this.commandToKey_ = {};
  this.buildCommandToKey_();
};
cvox.KeyMap.KEYMAP_PATH = "chromevox/background/keymaps/";
cvox.KeyMap.AVAILABLE_MAP_INFO = {keymap_classic:{file:"classic_keymap.json"}, keymap_flat:{file:"flat_keymap.json"}, keymap_experimental:{file:"experimental.json"}};
cvox.KeyMap.DEFAULT_KEYMAP = 0;
cvox.KeyMap.prototype.length = function() {
  return this.bindings_.length;
};
cvox.KeyMap.prototype.keys = function() {
  return this.bindings_.map(function(binding) {
    return binding.sequence;
  });
};
cvox.KeyMap.prototype.bindings = function() {
  return this.bindings_;
};
cvox.KeyMap.prototype.toJSON = function() {
  return JSON.stringify({bindings:this.bindings_});
};
cvox.KeyMap.prototype.hasKey = function(key) {
  for (var i = 0;i < this.bindings_.length;i++) {
    var binding = this.bindings_[i];
    if (binding.sequence.equals(key)) {
      return !0;
    }
  }
  return !1;
};
cvox.KeyMap.prototype.commandForKey = function(key) {
  if (null != key) {
    for (var i = 0;i < this.bindings_.length;i++) {
      var binding = this.bindings_[i];
      if (binding.sequence.equals(key)) {
        return binding.command;
      }
    }
  }
  return null;
};
cvox.KeyMap.fromDefaults = function() {
  return cvox.KeyMap.fromPath(cvox.KeyMap.KEYMAP_PATH + cvox.KeyMap.AVAILABLE_MAP_INFO.keymap_classic.file);
};
cvox.KeyMap.fromJSON = function(json) {
  try {
    var commandsAndKeySequences = JSON.parse(json).bindings, commandsAndKeySequences = commandsAndKeySequences.filter(function(value) {
      return void 0 === value.sequence.platformFilter || cvox.PlatformUtil.matchesPlatform(value.sequence.platformFilter);
    });
  } catch (e) {
    return null;
  }
  if ("object" != typeof commandsAndKeySequences) {
    return null;
  }
  for (var i = 0;i < commandsAndKeySequences.length;i++) {
    if (void 0 == commandsAndKeySequences[i].command || void 0 == commandsAndKeySequences[i].sequence) {
      return null;
    }
    commandsAndKeySequences[i].sequence = cvox.KeySequence.deserialize(commandsAndKeySequences[i].sequence);
  }
  return new cvox.KeyMap(commandsAndKeySequences);
};
cvox.KeyMap.fromLocalStorage = function() {
  return localStorage.keyBindings ? cvox.KeyMap.fromJSON(localStorage.keyBindings) : null;
};
cvox.KeyMap.fromPath = function(path) {
  return cvox.KeyMap.fromJSON(cvox.KeyMap.readJSON_(path));
};
cvox.KeyMap.fromCurrentKeyMap = function() {
  var map = localStorage.currentKeyMap;
  return map && cvox.KeyMap.AVAILABLE_MAP_INFO[map] ? cvox.KeyMap.fromPath(cvox.KeyMap.KEYMAP_PATH + cvox.KeyMap.AVAILABLE_MAP_INFO[map].file) : cvox.KeyMap.fromDefaults();
};
cvox.KeyMap.readJSON_ = function(path) {
  var url = chrome.extension.getURL(path);
  if (!url) {
    throw "Invalid path: " + path;
  }
  var xhr = new XMLHttpRequest;
  xhr.open("GET", url, !1);
  xhr.send();
  return xhr.responseText;
};
cvox.KeyMap.prototype.buildCommandToKey_ = function() {
  for (var i = 0;i < this.bindings_.length;i++) {
    var binding = this.bindings_[i];
    void 0 == this.commandToKey_[binding.command] && (this.commandToKey_[binding.command] = binding.sequence);
  }
};
cvox.CommandStore = {};
cvox.CommandStore.categories = function() {
  var categorySet = {}, cmd;
  for (cmd in cvox.CommandStore.CMD_WHITELIST) {
    var struct = cvox.CommandStore.CMD_WHITELIST[cmd];
    struct.category && (categorySet[struct.category] = !0);
  }
  var ret = [], category;
  for (category in categorySet) {
    ret.push(category);
  }
  return ret;
};
cvox.CommandStore.messageForCommand = function(command) {
  return (cvox.CommandStore.CMD_WHITELIST[command] || {}).msgId;
};
cvox.CommandStore.categoryForCommand = function(command) {
  return (cvox.CommandStore.CMD_WHITELIST[command] || {}).category;
};
cvox.CommandStore.commandsForCategory = function(category) {
  var ret = [], cmd;
  for (cmd in cvox.CommandStore.CMD_WHITELIST) {
    var struct = cvox.CommandStore.CMD_WHITELIST[cmd];
    category == struct.category && ret.push(cmd);
  }
  return ret;
};
cvox.CommandStore.CMD_WHITELIST = {toggleStickyMode:{announce:!1, msgId:"toggle_sticky_mode", disallowOOBE:!0, category:"modifier_keys"}, toggleKeyPrefix:{announce:!1, skipInput:!0, msgId:"prefix_key", disallowOOBE:!0, category:"modifier_keys"}, passThroughMode:{announce:!1, msgId:"pass_through_key_description", category:"modifier_keys"}, stopSpeech:{announce:!1, disallowContinuation:!0, doDefault:!0, msgId:"stop_speech_key", category:"controlling_speech"}, toggleChromeVox:{announce:!1, platformFilter:cvox.PlatformFilter.WML, 
msgId:"toggle_chromevox_active", category:"controlling_speech"}, decreaseTtsRate:{announce:!1, msgId:"decrease_tts_rate", category:"controlling_speech"}, increaseTtsRate:{announce:!1, msgId:"increase_tts_rate", category:"controlling_speech"}, decreaseTtsPitch:{announce:!1, msgId:"decrease_tts_pitch", category:"controlling_speech"}, increaseTtsPitch:{announce:!1, msgId:"increase_tts_pitch", category:"controlling_speech"}, decreaseTtsVolume:{announce:!1, msgId:"decrease_tts_volume", category:"controlling_speech"}, 
increaseTtsVolume:{announce:!1, msgId:"increase_tts_volume", category:"controlling_speech"}, cyclePunctuationEcho:{announce:!1, msgId:"cycle_punctuation_echo", category:"controlling_speech"}, cycleTypingEcho:{announce:!1, msgId:"cycle_typing_echo", category:"controlling_speech"}, toggleEarcons:{announce:!0, msgId:"toggle_earcons", category:"controlling_speech"}, handleTab:{allowEvents:!0, msgId:"handle_tab_next", disallowContinuation:!0, category:"navigation"}, handleTabPrev:{allowEvents:!0, msgId:"handle_tab_prev", 
disallowContinuation:!0, category:"navigation"}, forward:{forward:!0, announce:!0, msgId:"forward", category:"navigation"}, backward:{backward:!0, announce:!0, msgId:"backward", category:"navigation"}, right:{forward:!0, announce:!0, msgId:"right", category:"navigation"}, left:{backward:!0, announce:!0, msgId:"left", category:"navigation"}, previousGranularity:{announce:!0, msgId:"previous_granularity", category:"navigation"}, nextGranularity:{announce:!0, msgId:"next_granularity", category:"navigation"}, 
previousCharacter:{backward:!0, announce:!0, msgId:"previous_character", skipInput:!0, category:"navigation"}, nextCharacter:{forward:!0, announce:!0, msgId:"next_character", skipInput:!0, category:"navigation"}, previousWord:{backward:!0, announce:!0, msgId:"previous_word", skipInput:!0, category:"navigation"}, nextWord:{forward:!0, announce:!0, msgId:"next_word", skipInput:!0, category:"navigation"}, previousLine:{backward:!0, announce:!0, msgId:"previous_line", category:"navigation"}, nextLine:{forward:!0, 
announce:!0, msgId:"next_line", category:"navigation"}, previousSentence:{backward:!0, announce:!0, msgId:"previous_sentence", skipInput:!0, category:"navigation"}, nextSentence:{forward:!0, announce:!0, msgId:"next_sentence", skipInput:!0, category:"navigation"}, previousObject:{backward:!0, announce:!0, msgId:"previous_object", skipInput:!0, category:"navigation"}, nextObject:{forward:!0, announce:!0, msgId:"next_object", skipInput:!0, category:"navigation"}, previousGroup:{backward:!0, announce:!0, 
msgId:"previous_group", skipInput:!0, category:"navigation"}, nextGroup:{forward:!0, announce:!0, msgId:"next_group", skipInput:!0, category:"navigation"}, jumpToTop:{forward:!0, announce:!0, msgId:"jump_to_top", category:"navigation"}, jumpToBottom:{backward:!0, announce:!0, msgId:"jump_to_bottom", category:"navigation"}, moveToStartOfLine:{forward:!0, announce:!0}, moveToEndOfLine:{backward:!0, announce:!0}, readFromHere:{forward:!0, announce:!1, msgId:"read_from_here", category:"navigation"}, 
performDefaultAction:{disallowContinuation:!0, msgId:"perform_default_action", doDefault:!0, skipInput:!0, category:"navigation"}, forceClickOnCurrentItem:{announce:!0, disallowContinuation:!0, allowEvents:!0, msgId:"force_click_on_current_item", category:"navigation"}, forceDoubleClickOnCurrentItem:{announce:!0, allowEvents:!0, disallowContinuation:!0}, readLinkURL:{announce:!1, msgId:"read_link_url", category:"information"}, readCurrentTitle:{announce:!1, msgId:"read_current_title", category:"information"}, 
readCurrentURL:{announce:!1, msgId:"read_current_url", category:"information"}, fullyDescribe:{announce:!1, msgId:"fully_describe", category:"information"}, speakTimeAndDate:{announce:!1, msgId:"speak_time_and_date", category:"information"}, toggleSelection:{announce:!0, msgId:"toggle_selection", category:"information"}, toggleSearchWidget:{announce:!1, disallowContinuation:!0, msgId:"toggle_search_widget", category:"information"}, toggleKeyboardHelp:{announce:!1, disallowContinuation:!0, msgId:"show_power_key", 
category:"help_commands"}, help:{announce:!1, msgId:"help", disallowOOBE:!0, disallowContinuation:!0, category:"help_commands"}, contextMenu:{announce:!1, disallowContinuation:!0}, showOptionsPage:{announce:!1, disallowContinuation:!0, msgId:"show_options_page", disallowOOBE:!0, category:"help_commands"}, showKbExplorerPage:{announce:!1, disallowContinuation:!0, msgId:"show_kb_explorer_page", disallowOOBE:!0, category:"help_commands"}, showFormsList:{announce:!1, disallowContinuation:!0, nodeList:"formField", 
msgId:"show_forms_list", category:"overview"}, showHeadingsList:{announce:!1, nodeList:"heading", disallowContinuation:!0, msgId:"show_headings_list", category:"overview"}, showLandmarksList:{announce:!1, nodeList:"landmark", disallowContinuation:!0, msgId:"show_landmarks_list", category:"overview"}, showLinksList:{announce:!1, nodeList:"link", disallowContinuation:!0, msgId:"show_links_list", category:"overview"}, showTablesList:{announce:!1, nodeList:"table", disallowContinuation:!0, msgId:"show_tables_list", 
category:"overview"}, nextArticle:{forward:!0, findNext:"article"}, nextButton:{forward:!0, findNext:"button", msgId:"next_button", category:"jump_commands"}, nextCheckbox:{forward:!0, findNext:"checkbox", msgId:"next_checkbox", category:"jump_commands"}, nextComboBox:{forward:!0, findNext:"combobox", msgId:"next_combo_box", category:"jump_commands"}, nextControl:{forward:!0, findNext:"control"}, nextEditText:{forward:!0, findNext:"editText", msgId:"next_edit_text", category:"jump_commands"}, nextFormField:{forward:!0, 
findNext:"formField", msgId:"next_form_field", category:"jump_commands"}, nextGraphic:{forward:!0, findNext:"graphic", msgId:"next_graphic", category:"jump_commands"}, nextHeading:{forward:!0, findNext:"heading", msgId:"next_heading", category:"jump_commands"}, nextHeading1:{forward:!0, findNext:"heading1", msgId:"next_heading1", category:"jump_commands"}, nextHeading2:{forward:!0, findNext:"heading2", msgId:"next_heading2", category:"jump_commands"}, nextHeading3:{forward:!0, findNext:"heading3", 
msgId:"next_heading3", category:"jump_commands"}, nextHeading4:{forward:!0, findNext:"heading4", msgId:"next_heading4", category:"jump_commands"}, nextHeading5:{forward:!0, findNext:"heading5", msgId:"next_heading5", category:"jump_commands"}, nextHeading6:{forward:!0, findNext:"heading6", msgId:"next_heading6", category:"jump_commands"}, nextLandmark:{forward:!0, findNext:"landmark", msgId:"next_landmark", category:"jump_commands"}, nextLink:{forward:!0, findNext:"link", msgId:"next_link", category:"jump_commands"}, 
nextList:{forward:!0, findNext:"list", msgId:"next_list", category:"jump_commands"}, nextListItem:{forward:!0, findNext:"listItem", msgId:"next_list_item", category:"jump_commands"}, nextMath:{forward:!0, findNext:"math", msgId:"next_math", category:"jump_commands"}, nextMedia:{forward:!0, findNext:"media", msgId:"next_media", category:"jump_commands"}, nextRadio:{forward:!0, findNext:"radio", msgId:"next_radio", category:"jump_commands"}, nextSection:{forward:!0, findNext:"section"}, nextSlider:{forward:!0, 
findNext:"slider"}, nextTable:{forward:!0, findNext:"table", msgId:"next_table", category:"jump_commands"}, nextVisitedLink:{forward:!0, findNext:"visitedLink", msgId:"next_visited_link", category:"jump_commands"}, previousArticle:{backward:!0, findNext:"article"}, previousButton:{backward:!0, findNext:"button", msgId:"previous_button", category:"jump_commands"}, previousCheckbox:{backward:!0, findNext:"checkbox", msgId:"previous_checkbox", category:"jump_commands"}, previousComboBox:{backward:!0, 
findNext:"combobox", msgId:"previous_combo_box", category:"jump_commands"}, previousControl:{backward:!0, findNext:"control"}, previousEditText:{backward:!0, findNext:"editText", msgId:"previous_edit_text", category:"jump_commands"}, previousFormField:{backward:!0, findNext:"formField", msgId:"previous_form_field", category:"jump_commands"}, previousGraphic:{backward:!0, findNext:"graphic", msgId:"previous_graphic", category:"jump_commands"}, previousHeading:{backward:!0, findNext:"heading", msgId:"previous_heading", 
category:"jump_commands"}, previousHeading1:{backward:!0, findNext:"heading1", msgId:"previous_heading1", category:"jump_commands"}, previousHeading2:{backward:!0, findNext:"heading2", msgId:"previous_heading2", category:"jump_commands"}, previousHeading3:{backward:!0, findNext:"heading3", msgId:"previous_heading3", category:"jump_commands"}, previousHeading4:{backward:!0, findNext:"heading4", msgId:"previous_heading4", category:"jump_commands"}, previousHeading5:{backward:!0, findNext:"heading5", 
msgId:"previous_heading5", category:"jump_commands"}, previousHeading6:{backward:!0, findNext:"heading6", msgId:"previous_heading6", category:"jump_commands"}, previousLandmark:{backward:!0, findNext:"landmark", msgId:"previous_landmark", category:"jump_commands"}, previousLink:{backward:!0, findNext:"link", msgId:"previous_link", category:"jump_commands"}, previousList:{backward:!0, findNext:"list", msgId:"previous_list", category:"jump_commands"}, previousListItem:{backward:!0, findNext:"listItem", 
msgId:"previous_list_item", category:"jump_commands"}, previousMath:{backward:!0, findNext:"math", msgId:"previous_math", category:"jump_commands"}, previousMedia:{backward:!0, findNext:"media", msgId:"previous_media", category:"jump_commands"}, previousRadio:{backward:!0, findNext:"radio", msgId:"previous_radio", category:"jump_commands"}, previousSection:{backward:!0, findNext:"section"}, previousSlider:{backward:!0, findNext:"slider"}, previousTable:{backward:!0, findNext:"table", msgId:"previous_table", 
category:"jump_commands"}, previousVisitedLink:{backward:!0, findNext:"visitedLink", msgId:"previous_visited_link", category:"jump_commands"}, announceHeaders:{announce:!1, msgId:"announce_headers", category:"tables"}, speakTableLocation:{announce:!1, msgId:"speak_table_location", category:"tables"}, goToFirstCell:{announce:!0, msgId:"skip_to_beginning", category:"tables"}, goToLastCell:{announce:!0, msgId:"skip_to_end", category:"tables"}, goToRowFirstCell:{announce:!0, msgId:"skip_to_row_beginning", 
category:"tables"}, goToRowLastCell:{announce:!0, msgId:"skip_to_row_end", category:"tables"}, goToColFirstCell:{announce:!0, msgId:"skip_to_col_beginning", category:"tables"}, goToColLastCell:{announce:!0, msgId:"skip_to_col_end", category:"tables"}, previousRow:{backward:!0, announce:!0, skipInput:!0}, previousCol:{backward:!0, announce:!0, skipInput:!0}, nextRow:{forward:!0, announce:!0, skipInput:!0}, nextCol:{forward:!0, announce:!0, skipInput:!0}, enterShifter:{announce:!0, msgId:"enter_content", 
category:"navigation"}, exitShifter:{announce:!0, msgId:"exit_content", category:"navigation"}, exitShifterContent:{announce:!0}, openLongDesc:{announce:!1, msgId:"open_long_desc", category:"information"}, pauseAllMedia:{announce:!1, msgId:"pause_all_media", category:"information"}, toggleSemantics:{announce:!1, msgId:"toggle_semantics", category:"information"}, routing:{announce:!1, allowEvents:!0, msgId:"braille_routing", category:"braille"}, pan_left:{backward:!0, announce:!0, msgId:"braille_pan_left", 
category:"braille"}, pan_right:{forward:!0, announce:!0, msgId:"braille_pan_right", category:"braille"}, line_up:{backward:!0, announce:!0, msgId:"braille_line_up", category:"braille"}, line_down:{forward:!0, announce:!0, msgId:"braille_line_down", category:"braille"}, top:{forward:!0, announce:!0, msgId:"braille_top", category:"braille"}, bottom:{backward:!0, announce:!0, msgId:"braille_bottom", category:"braille"}, enableConsoleTts:{announce:!1, msgId:"enable_tts_log", category:"developer"}, toggleBrailleCaptions:{announce:!1, 
msgId:"braille_captions", category:"developer"}, startHistoryRecording:{announce:!1}, stopHistoryRecording:{announce:!1}, autorunner:{announce:!1}, debug:{announce:!1}, nop:{announce:!1}};
cvox.CommandStore.NODE_INFO_MAP = {checkbox:{predicate:"checkboxPredicate", forwardError:"no_next_checkbox", backwardError:"no_previous_checkbox", typeMsg:"aria_role_checkbox"}, radio:{predicate:"radioPredicate", forwardError:"no_next_radio_button", backwardError:"no_previous_radio_button", typeMsg:"aria_role_radio"}, slider:{predicate:"sliderPredicate", forwardError:"no_next_slider", backwardError:"no_previous_slider", typeMsg:"aria_role_slider"}, graphic:{predicate:"graphicPredicate", forwardError:"no_next_graphic", 
backwardError:"no_previous_graphic", typeMsg:"UNUSED"}, article:{predicate:"articlePredicate", forwardError:"no_next_ARTICLE", backwardError:"no_previous_ARTICLE", typeMsg:"TAG_ARTICLE"}, button:{predicate:"buttonPredicate", forwardError:"no_next_button", backwardError:"no_previous_button", typeMsg:"aria_role_button"}, combobox:{predicate:"comboBoxPredicate", forwardError:"no_next_combo_box", backwardError:"no_previous_combo_box", typeMsg:"aria_role_combobox"}, editText:{predicate:"editTextPredicate", 
forwardError:"no_next_edit_text", backwardError:"no_previous_edit_text", typeMsg:"input_type_text"}, heading:{predicate:"headingPredicate", forwardError:"no_next_heading", backwardError:"no_previous_heading", typeMsg:"aria_role_heading"}, heading1:{predicate:"heading1Predicate", forwardError:"no_next_heading_1", backwardError:"no_previous_heading_1"}, heading2:{predicate:"heading2Predicate", forwardError:"no_next_heading_2", backwardError:"no_previous_heading_2"}, heading3:{predicate:"heading3Predicate", 
forwardError:"no_next_heading_3", backwardError:"no_previous_heading_3"}, heading4:{predicate:"heading4Predicate", forwardError:"no_next_heading_4", backwardError:"no_previous_heading_4"}, heading5:{predicate:"heading5Predicate", forwardError:"no_next_heading_5", backwardError:"no_previous_heading_5"}, heading6:{predicate:"heading6Predicate", forwardError:"no_next_heading_6", backwardError:"no_previous_heading_6"}, link:{predicate:"linkPredicate", forwardError:"no_next_link", backwardError:"no_previous_link", 
typeMsg:"aria_role_link"}, table:{predicate:"tablePredicate", forwardError:"no_next_table", backwardError:"no_previous_table", typeMsg:"table_strategy"}, visitedLink:{predicate:"visitedLinkPredicate", forwardError:"no_next_visited_link", backwardError:"no_previous_visited_link", typeMsg:"tag_link"}, list:{predicate:"listPredicate", forwardError:"no_next_list", backwardError:"no_previous_list", typeMsg:"aria_role_list"}, listItem:{predicate:"listItemPredicate", forwardError:"no_next_list_item", backwardError:"no_previous_list_item", 
typeMsg:"aria_role_listitem"}, formField:{predicate:"formFieldPredicate", forwardError:"no_next_form_field", backwardError:"no_previous_form_field", typeMsg:"aria_role_form"}, landmark:{predicate:"landmarkPredicate", forwardError:"no_next_landmark", backwardError:"no_previous_landmark", typeMsg:"role_landmark"}, math:{predicate:"mathPredicate", forwardError:"no_next_math", backwardError:"no_previous_math", typeMsg:"math_expr"}, media:{predicate:"mediaPredicate", forwardError:"no_next_media_widget", 
backwardError:"no_previous_media_widget"}, section:{predicate:"sectionPredicate", forwardError:"no_next_section", backwardError:"no_previous_section"}, control:{predicate:"controlPredicate", forwardError:"no_next_control", backwardError:"no_previous_control"}};
cvox.Widget = function() {
  this.active = !1;
  this.initialNode = null;
  cvox.Widget.ref_ && cvox.Widget.ref_.isActive() || (cvox.Widget.ref_ = this);
};
cvox.Widget.prototype.isActive = function() {
  return this.active;
};
cvox.Widget.prototype.show = function() {
  this.isActive() && this.hide(!0);
  this.onKeyDown = goog.bind(this.onKeyDown, this);
  this.onKeyPress = goog.bind(this.onKeyPress, this);
  window.addEventListener("keydown", this.onKeyDown, !0);
  window.addEventListener("keypress", this.onKeyPress, !0);
  this.initialNode = cvox.ChromeVox.navigationManager.getCurrentNode();
  this.isStickyOn = cvox.ChromeVox.isStickyOn;
  this.getNameMsg() && this.getHelpMsg() && cvox.$m(this.getNameMsg()).andPause().andMessage(this.getHelpMsg()).speakFlush();
  cvox.ChromeVox.earcons.playEarcon(cvox.AbstractEarcons.OBJECT_OPEN);
  this.active = !0;
};
cvox.Widget.prototype.hide = function(opt_noSync) {
  window.removeEventListener("keypress", this.onKeyPress, !0);
  window.removeEventListener("keydown", this.onKeyDown, !0);
  cvox.ChromeVox.earcons.playEarcon(cvox.AbstractEarcons.OBJECT_CLOSE);
  opt_noSync || (this.initialNode = 1 == this.initialNode.nodeType ? this.initialNode : this.initialNode.parentNode, cvox.ApiImplementation.syncToNode(this.initialNode, !0, cvox.AbstractTts.QUEUE_MODE_QUEUE));
  this.active = !1;
};
cvox.Widget.prototype.toggle = function() {
  this.isActive() ? this.hide() : this.show();
};
cvox.Widget.prototype.onKeyDown = function(evt) {
  if (27 == evt.keyCode) {
    return this.hide(), evt.preventDefault(), !0;
  }
  if (9 == evt.keyCode) {
    return this.hide(), !0;
  }
  17 == evt.keyCode && cvox.ChromeVox.tts.stop();
  evt.stopPropagation();
  return !0;
};
cvox.Widget.prototype.onKeyPress = function() {
  return !1;
};
cvox.Widget.isActive = function() {
  return cvox.Widget.ref_ && cvox.Widget.ref_.isActive() || !1;
};
cvox.NavDescription = function(kwargs) {
  this.context = kwargs.context ? kwargs.context : "";
  this.text = kwargs.text ? kwargs.text : "";
  this.userValue = kwargs.userValue ? kwargs.userValue : "";
  this.annotation = kwargs.annotation ? kwargs.annotation : "";
  this.earcons = kwargs.earcons ? kwargs.earcons : [];
  this.personality = kwargs.personality;
  this.hint = kwargs.hint ? kwargs.hint : "";
};
cvox.NavDescription.prototype.isEmpty = function() {
  return 0 == this.context.length && 0 == this.earcons.length && 0 == this.text.length && 0 == this.userValue.length && 0 == this.annotation.length;
};
cvox.NavDescription.prototype.toString = function() {
  return 'NavDescription(context="' + this.context + '"  text="' + this.text + '"  userValue="' + this.userValue + '"  annotation="' + this.annotation + '")';
};
cvox.NavDescription.prototype.pushEarcon = function(earconId) {
  this.earcons.push(earconId);
};
cvox.NavDescription.prototype.speak = function(queueMode, startCallback, endCallback) {
  function makeAnnotationProps() {
    var properties = {}, src = cvox.AbstractTts.PERSONALITY_ANNOTATION, key;
    for (key in src) {
      properties[key] = src[key];
    }
    return properties;
  }
  var speakArgs = [];
  this.context && (speakArgs.push([this.context, queueMode, makeAnnotationProps()]), queueMode = 1);
  speakArgs.push([this.text, queueMode, this.personality ? this.personality : {}]);
  queueMode = 1;
  this.userValue && speakArgs.push([this.userValue, queueMode, {}]);
  this.annotation && speakArgs.push([this.annotation, queueMode, makeAnnotationProps()]);
  this.hint && speakArgs.push([this.hint, queueMode, makeAnnotationProps()]);
  for (var length = speakArgs.length, i = 0;i < length;i++) {
    0 == i && startCallback && (speakArgs[i][2].startCallback = startCallback), i == length - 1 && endCallback && (speakArgs[i][2].endCallback = endCallback), cvox.ChromeVox.tts.speak.apply(cvox.ChromeVox.tts, speakArgs[i]);
  }
};
cvox.NavDescription.prototype.equals = function(that) {
  return this.context == that.context && this.text == that.text && this.userValue == that.userValue && this.annotation == that.annotation;
};
cvox.NavMathDescription = function(kwargs) {
  cvox.NavDescription.call(this, kwargs);
  var newPersonality = this.personality ? this.personality : {}, mathDescr = {};
  mathDescr.domain = kwargs.domain ? kwargs.domain : "";
  mathDescr.style = kwargs.style ? kwargs.style : "";
  newPersonality.math = mathDescr;
  this.personality = newPersonality;
};
goog.inherits(cvox.NavMathDescription, cvox.NavDescription);
cvox.SemanticUtil = function() {
};
cvox.SemanticUtil.objectsToKeys = function(objects) {
  objects = Array.prototype.slice.call(arguments, 0);
  var keys = [];
  return keys.concat.apply(keys, objects.map(Object.keys));
};
cvox.SemanticUtil.objectsToValues = function(objects) {
  objects = Array.prototype.slice.call(arguments, 0);
  var result = [], collectValues = function(obj) {
    for (var key in obj) {
      result.push(obj[key]);
    }
  };
  objects.forEach(collectValues);
  return result;
};
cvox.SemanticUtil.unicodeToNumber = function(unicode) {
  if (!unicode || 2 < unicode.length) {
    return null;
  }
  if (2 == unicode.length) {
    var hi = unicode.charCodeAt(0), low = unicode.charCodeAt(1);
    return 55296 <= hi && 56319 >= hi && !isNaN(low) ? 1024 * (hi - 55296) + (low - 56320) + 65536 : null;
  }
  return unicode.charCodeAt(0);
};
cvox.SemanticUtil.numberToUnicode = function(number) {
  if (65536 <= number) {
    var hi = (number - 65536) / 1024 + 55296, lo = (number - 65536) % 1024 + 56320;
    return String.fromCharCode(hi, lo);
  }
  return String.fromCharCode(number);
};
cvox.SemanticUtil.tagName = function(node) {
  return node.tagName.toUpperCase();
};
cvox.SemanticUtil.IGNORETAGS = "MERROR MPHANTOM MSPACE MACTION MALIGNGROUP MALIGNMARK MACTION".split(" ");
cvox.SemanticUtil.EMPTYTAGS = ["MATH", "MROW", "MPADDED", "MSTYLE"];
cvox.SemanticUtil.purgeNodes = function(nodes) {
  for (var nodeArray = [], i = 0, node;node = nodes[i];i++) {
    var tagName = cvox.SemanticUtil.tagName(node);
    -1 == cvox.SemanticUtil.IGNORETAGS.indexOf(tagName) && (-1 != cvox.SemanticUtil.EMPTYTAGS.indexOf(tagName) && 0 == node.childNodes.length || nodeArray.push(node));
  }
  return nodeArray;
};
cvox.SemanticAttr = function() {
  this.generalPunctuations = "!\"#%&'*,:;?@\\\u00a1\u00a7\u00b6\u00b7\u00bf\u2017\u2020\u2021\u2022\u2023\u2024\u2025\u2027\u2030\u2031\u2038\u203b\u203c\u203d\u203e\u2041\u2042\u2043\u2047\u2048\u2049\u204b\u204c\u204d\u204e\u204f\u2050\u2051\u2053\u2055\u2056\u2058\u2059\u205a\u205b\u205c\u205d\u205e\ufe10\ufe13\ufe14\ufe15\ufe16\ufe30\ufe45\ufe46\ufe49\ufe4a\ufe4b\ufe4c\ufe50\ufe54\ufe55\ufe56\ufe57\ufe5f\ufe60\ufe61\ufe68\ufe6a\ufe6b\uff01\uff02\uff03\uff05\uff06\uff07\uff0a\uff0c\uff0f\uff1a\uff1b\uff1f\uff20\uff3c".split("");
  this.invisibleComma_ = cvox.SemanticUtil.numberToUnicode(8291);
  this.generalPunctuations.push(this.invisibleComma_);
  this.ellipses = "\u2026\u22ee\u22ef\u22f0\u22f1\ufe19".split("");
  this.fullStops = [".", "\ufe52", "\uff0e"];
  this.dashes = "\u2012\u2013\u2014\u2015\u301c\ufe31\ufe32\ufe58".split("");
  this.primes = "\u2032\u2033\u2034\u2035\u2036\u2037\u2057".split("");
  this.openClosePairs = {"(":")", "[":"]", "{":"}", "\u2045":"\u2046", "\u2329":"\u232a", "\u2768":"\u2769", "\u276a":"\u276b", "\u276c":"\u276d", "\u276e":"\u276f", "\u2770":"\u2771", "\u2772":"\u2773", "\u2774":"\u2775", "\u27c5":"\u27c6", "\u27e6":"\u27e7", "\u27e8":"\u27e9", "\u27ea":"\u27eb", "\u27ec":"\u27ed", "\u27ee":"\u27ef", "\u2983":"\u2984", "\u2985":"\u2986", "\u2987":"\u2988", "\u2989":"\u298a", "\u298b":"\u298c", "\u298d":"\u298e", "\u298f":"\u2990", "\u2991":"\u2992", "\u2993":"\u2994", 
  "\u2995":"\u2996", "\u2997":"\u2998", "\u29d8":"\u29d9", "\u29da":"\u29db", "\u29fc":"\u29fd", "\u2e22":"\u2e23", "\u2e24":"\u2e25", "\u2e26":"\u2e27", "\u2e28":"\u2e29", "\u3008":"\u3009", "\u300a":"\u300b", "\u300c":"\u300d", "\u300e":"\u300f", "\u3010":"\u3011", "\u3014":"\u3015", "\u3016":"\u3017", "\u3018":"\u3019", "\u301a":"\u301b", "\u301d":"\u301e", "\ufd3e":"\ufd3f", "\ufe17":"\ufe18", "\ufe59":"\ufe5a", "\ufe5b":"\ufe5c", "\ufe5d":"\ufe5e", "\uff08":"\uff09", "\uff3b":"\uff3d", "\uff5b":"\uff5d", 
  "\uff5f":"\uff60", "\uff62":"\uff63", "\u2308":"\u2309", "\u230a":"\u230b", "\u230c":"\u230d", "\u230e":"\u230f", "\u231c":"\u231d", "\u231e":"\u231f", "\u239b":"\u239e", "\u239c":"\u239f", "\u239d":"\u23a0", "\u23a1":"\u23a4", "\u23a2":"\u23a5", "\u23a3":"\u23a6", "\u23a7":"\u23ab", "\u23a8":"\u23ac", "\u23a9":"\u23ad", "\u23b0":"\u23b1", "\u23b8":"\u23b9"};
  this.topBottomPairs = {"\u23b4":"\u23b5", "\u23dc":"\u23dd", "\u23de":"\u23df", "\u23e0":"\u23e1", "\ufe35":"\ufe36", "\ufe37":"\ufe38", "\ufe39":"\ufe3a", "\ufe3b":"\ufe3c", "\ufe3d":"\ufe3e", "\ufe3f":"\ufe40", "\ufe41":"\ufe42", "\ufe43":"\ufe44", "\ufe47":"\ufe48"};
  this.leftFences = cvox.SemanticUtil.objectsToKeys(this.openClosePairs);
  this.rightFences = cvox.SemanticUtil.objectsToValues(this.openClosePairs);
  this.rightFences.push("\u301f");
  this.topFences = cvox.SemanticUtil.objectsToKeys(this.topBottomPairs);
  this.bottomFences = cvox.SemanticUtil.objectsToValues(this.topBottomPairs);
  this.neutralFences = "|\u00a6\u2016\u2758\u2980\u2af4\uffe4\uff5c".split("");
  this.capitalLatin = "ABCDEFGHIJKLMNOPQRSTUVWXYZ".split("");
  this.smallLatin = "abcdefghijklmnopqrstuvwxyz\u0131\u0237".split("");
  this.capitalLatinFullWidth = "\uff21\uff22\uff23\uff24\uff25\uff26\uff27\uff28\uff29\uff2a\uff2b\uff2c\uff2d\uff2e\uff2f\uff30\uff31\uff32\uff33\uff34\uff35\uff36\uff37\uff38\uff39\uff3a".split("");
  this.smallLatinFullWidth = "\uff41\uff42\uff43\uff44\uff45\uff46\uff47\uff48\uff49\uff4a\uff4b\uff4c\uff4d\uff4e\uff4f\uff50\uff51\uff52\uff53\uff54\uff55\uff56\uff57\uff58\uff59\uff5a".split("");
  this.capitalLatinBold = "\ud835\udc00 \ud835\udc01 \ud835\udc02 \ud835\udc03 \ud835\udc04 \ud835\udc05 \ud835\udc06 \ud835\udc07 \ud835\udc08 \ud835\udc09 \ud835\udc0a \ud835\udc0b \ud835\udc0c \ud835\udc0d \ud835\udc0e \ud835\udc0f \ud835\udc10 \ud835\udc11 \ud835\udc12 \ud835\udc13 \ud835\udc14 \ud835\udc15 \ud835\udc16 \ud835\udc17 \ud835\udc18 \ud835\udc19".split(" ");
  this.smallLatinBold = "\ud835\udc1a \ud835\udc1b \ud835\udc1c \ud835\udc1d \ud835\udc1e \ud835\udc1f \ud835\udc20 \ud835\udc21 \ud835\udc22 \ud835\udc23 \ud835\udc24 \ud835\udc25 \ud835\udc26 \ud835\udc27 \ud835\udc28 \ud835\udc29 \ud835\udc2a \ud835\udc2b \ud835\udc2c \ud835\udc2d \ud835\udc2e \ud835\udc2f \ud835\udc30 \ud835\udc31 \ud835\udc32 \ud835\udc33".split(" ");
  this.capitalLatinItalic = "\ud835\udc34 \ud835\udc35 \ud835\udc36 \ud835\udc37 \ud835\udc38 \ud835\udc39 \ud835\udc3a \ud835\udc3b \ud835\udc3c \ud835\udc3d \ud835\udc3e \ud835\udc3f \ud835\udc40 \ud835\udc41 \ud835\udc42 \ud835\udc43 \ud835\udc44 \ud835\udc45 \ud835\udc46 \ud835\udc47 \ud835\udc48 \ud835\udc49 \ud835\udc4a \ud835\udc4b \ud835\udc4c \ud835\udc4d".split(" ");
  this.smallLatinItalic = "\ud835\udc4e \ud835\udc4f \ud835\udc50 \ud835\udc51 \ud835\udc52 \ud835\udc53 \ud835\udc54 \u210e \ud835\udc56 \ud835\udc57 \ud835\udc58 \ud835\udc59 \ud835\udc5a \ud835\udc5b \ud835\udc5c \ud835\udc5d \ud835\udc5e \ud835\udc5f \ud835\udc60 \ud835\udc61 \ud835\udc62 \ud835\udc63 \ud835\udc64 \ud835\udc65 \ud835\udc66 \ud835\udc67 \ud835\udea4 \ud835\udea5".split(" ");
  this.capitalLatinScript = "\ud835\udc9c \u212c \ud835\udc9e \ud835\udc9f \u2130 \u2131 \ud835\udca2 \u210b \u2110 \ud835\udca5 \ud835\udca6 \u2112 \u2133 \ud835\udca9 \ud835\udcaa \ud835\udcab \ud835\udcac \u211b \ud835\udcae \ud835\udcaf \ud835\udcb0 \ud835\udcb1 \ud835\udcb2 \ud835\udcb3 \ud835\udcb4 \ud835\udcb5 \u2118".split(" ");
  this.smallLatinScript = "\ud835\udcb6 \ud835\udcb7 \ud835\udcb8 \ud835\udcb9 \u212f \ud835\udcbb \u210a \ud835\udcbd \ud835\udcbe \ud835\udcbf \ud835\udcc0 \ud835\udcc1 \ud835\udcc2 \ud835\udcc3 \u2134 \ud835\udcc5 \ud835\udcc6 \ud835\udcc7 \ud835\udcc8 \ud835\udcc9 \ud835\udcca \ud835\udccb \ud835\udccc \ud835\udccd \ud835\udcce \ud835\udccf \u2113".split(" ");
  this.capitalLatinBoldScript = "\ud835\udcd0 \ud835\udcd1 \ud835\udcd2 \ud835\udcd3 \ud835\udcd4 \ud835\udcd5 \ud835\udcd6 \ud835\udcd7 \ud835\udcd8 \ud835\udcd9 \ud835\udcda \ud835\udcdb \ud835\udcdc \ud835\udcdd \ud835\udcde \ud835\udcdf \ud835\udce0 \ud835\udce1 \ud835\udce2 \ud835\udce3 \ud835\udce4 \ud835\udce5 \ud835\udce6 \ud835\udce7 \ud835\udce8 \ud835\udce9".split(" ");
  this.smallLatinBoldScript = "\ud835\udcea \ud835\udceb \ud835\udcec \ud835\udced \ud835\udcee \ud835\udcef \ud835\udcf0 \ud835\udcf1 \ud835\udcf2 \ud835\udcf3 \ud835\udcf4 \ud835\udcf5 \ud835\udcf6 \ud835\udcf7 \ud835\udcf8 \ud835\udcf9 \ud835\udcfa \ud835\udcfb \ud835\udcfc \ud835\udcfd \ud835\udcfe \ud835\udcff \ud835\udd00 \ud835\udd01 \ud835\udd02 \ud835\udd03".split(" ");
  this.capitalLatinFraktur = "\ud835\udd04 \ud835\udd05 \u212d \ud835\udd07 \ud835\udd08 \ud835\udd09 \ud835\udd0a \u210c \u2111 \ud835\udd0d \ud835\udd0e \ud835\udd0f \ud835\udd10 \ud835\udd11 \ud835\udd12 \ud835\udd13 \ud835\udd14 \u211c \ud835\udd16 \ud835\udd17 \ud835\udd18 \ud835\udd19 \ud835\udd1a \ud835\udd1b \ud835\udd1c \u2128".split(" ");
  this.smallLatinFraktur = "\ud835\udd1e \ud835\udd1f \ud835\udd20 \ud835\udd21 \ud835\udd22 \ud835\udd23 \ud835\udd24 \ud835\udd25 \ud835\udd26 \ud835\udd27 \ud835\udd28 \ud835\udd29 \ud835\udd2a \ud835\udd2b \ud835\udd2c \ud835\udd2d \ud835\udd2e \ud835\udd2f \ud835\udd30 \ud835\udd31 \ud835\udd32 \ud835\udd33 \ud835\udd34 \ud835\udd35 \ud835\udd36 \ud835\udd37".split(" ");
  this.capitalLatinDoubleStruck = "\ud835\udd38 \ud835\udd39 \u2102 \ud835\udd3b \ud835\udd3c \ud835\udd3d \ud835\udd3e \u210d \ud835\udd40 \ud835\udd41 \ud835\udd42 \ud835\udd43 \ud835\udd44 \u2115 \ud835\udd46 \u2119 \u211a \u211d \ud835\udd4a \ud835\udd4b \ud835\udd4c \ud835\udd4d \ud835\udd4e \ud835\udd4f \ud835\udd50 \u2124".split(" ");
  this.smallLatinDoubleStruck = "\ud835\udd52 \ud835\udd53 \ud835\udd54 \ud835\udd55 \ud835\udd56 \ud835\udd57 \ud835\udd58 \ud835\udd59 \ud835\udd5a \ud835\udd5b \ud835\udd5c \ud835\udd5d \ud835\udd5e \ud835\udd5f \ud835\udd60 \ud835\udd61 \ud835\udd62 \ud835\udd63 \ud835\udd64 \ud835\udd65 \ud835\udd66 \ud835\udd67 \ud835\udd68 \ud835\udd69 \ud835\udd6a \ud835\udd6b".split(" ");
  this.capitalLatinBoldFraktur = "\ud835\udd6c \ud835\udd6d \ud835\udd6e \ud835\udd6f \ud835\udd70 \ud835\udd71 \ud835\udd72 \ud835\udd73 \ud835\udd74 \ud835\udd75 \ud835\udd76 \ud835\udd77 \ud835\udd78 \ud835\udd79 \ud835\udd7a \ud835\udd7b \ud835\udd7c \ud835\udd7d \ud835\udd7e \ud835\udd7f \ud835\udd80 \ud835\udd81 \ud835\udd82 \ud835\udd83 \ud835\udd84 \ud835\udd85".split(" ");
  this.smallLatinBoldFraktur = "\ud835\udd86 \ud835\udd87 \ud835\udd88 \ud835\udd89 \ud835\udd8a \ud835\udd8b \ud835\udd8c \ud835\udd8d \ud835\udd8e \ud835\udd8f \ud835\udd90 \ud835\udd91 \ud835\udd92 \ud835\udd93 \ud835\udd94 \ud835\udd95 \ud835\udd96 \ud835\udd97 \ud835\udd98 \ud835\udd99 \ud835\udd9a \ud835\udd9b \ud835\udd9c \ud835\udd9d \ud835\udd9e \ud835\udd9f".split(" ");
  this.capitalLatinSansSerif = "\ud835\udda0 \ud835\udda1 \ud835\udda2 \ud835\udda3 \ud835\udda4 \ud835\udda5 \ud835\udda6 \ud835\udda7 \ud835\udda8 \ud835\udda9 \ud835\uddaa \ud835\uddab \ud835\uddac \ud835\uddad \ud835\uddae \ud835\uddaf \ud835\uddb0 \ud835\uddb1 \ud835\uddb2 \ud835\uddb3 \ud835\uddb4 \ud835\uddb5 \ud835\uddb6 \ud835\uddb7 \ud835\uddb8 \ud835\uddb9".split(" ");
  this.smallLatinSansSerif = "\ud835\uddba \ud835\uddbb \ud835\uddbc \ud835\uddbd \ud835\uddbe \ud835\uddbf \ud835\uddc0 \ud835\uddc1 \ud835\uddc2 \ud835\uddc3 \ud835\uddc4 \ud835\uddc5 \ud835\uddc6 \ud835\uddc7 \ud835\uddc8 \ud835\uddc9 \ud835\uddca \ud835\uddcb \ud835\uddcc \ud835\uddcd \ud835\uddce \ud835\uddcf \ud835\uddd0 \ud835\uddd1 \ud835\uddd2 \ud835\uddd3".split(" ");
  this.capitalLatinSansSerifBold = "\ud835\uddd4 \ud835\uddd5 \ud835\uddd6 \ud835\uddd7 \ud835\uddd8 \ud835\uddd9 \ud835\uddda \ud835\udddb \ud835\udddc \ud835\udddd \ud835\uddde \ud835\udddf \ud835\udde0 \ud835\udde1 \ud835\udde2 \ud835\udde3 \ud835\udde4 \ud835\udde5 \ud835\udde6 \ud835\udde7 \ud835\udde8 \ud835\udde9 \ud835\uddea \ud835\uddeb \ud835\uddec \ud835\udded".split(" ");
  this.smallLatinSansSerifBold = "\ud835\uddee \ud835\uddef \ud835\uddf0 \ud835\uddf1 \ud835\uddf2 \ud835\uddf3 \ud835\uddf4 \ud835\uddf5 \ud835\uddf6 \ud835\uddf7 \ud835\uddf8 \ud835\uddf9 \ud835\uddfa \ud835\uddfb \ud835\uddfc \ud835\uddfd \ud835\uddfe \ud835\uddff \ud835\ude00 \ud835\ude01 \ud835\ude02 \ud835\ude03 \ud835\ude04 \ud835\ude05 \ud835\ude06 \ud835\ude07".split(" ");
  this.capitalLatinSansSerifItalic = "\ud835\ude08 \ud835\ude09 \ud835\ude0a \ud835\ude0b \ud835\ude0c \ud835\ude0d \ud835\ude0e \ud835\ude0f \ud835\ude10 \ud835\ude11 \ud835\ude12 \ud835\ude13 \ud835\ude14 \ud835\ude15 \ud835\ude16 \ud835\ude17 \ud835\ude18 \ud835\ude19 \ud835\ude1a \ud835\ude1b \ud835\ude1c \ud835\ude1d \ud835\ude1e \ud835\ude1f \ud835\ude20 \ud835\ude21".split(" ");
  this.smallLatinSansSerifItalic = "\ud835\ude22 \ud835\ude23 \ud835\ude24 \ud835\ude25 \ud835\ude26 \ud835\ude27 \ud835\ude28 \ud835\ude29 \ud835\ude2a \ud835\ude2b \ud835\ude2c \ud835\ude2d \ud835\ude2e \ud835\ude2f \ud835\ude30 \ud835\ude31 \ud835\ude32 \ud835\ude33 \ud835\ude34 \ud835\ude35 \ud835\ude36 \ud835\ude37 \ud835\ude38 \ud835\ude39 \ud835\ude3a \ud835\ude3b".split(" ");
  this.capitalLatinMonospace = "\ud835\ude70 \ud835\ude71 \ud835\ude72 \ud835\ude73 \ud835\ude74 \ud835\ude75 \ud835\ude76 \ud835\ude77 \ud835\ude78 \ud835\ude79 \ud835\ude7a \ud835\ude7b \ud835\ude7c \ud835\ude7d \ud835\ude7e \ud835\ude7f \ud835\ude80 \ud835\ude81 \ud835\ude82 \ud835\ude83 \ud835\ude84 \ud835\ude85 \ud835\ude86 \ud835\ude87 \ud835\ude88 \ud835\ude89".split(" ");
  this.smallLatinMonospace = "\ud835\ude8a \ud835\ude8b \ud835\ude8c \ud835\ude8d \ud835\ude8e \ud835\ude8f \ud835\ude90 \ud835\ude91 \ud835\ude92 \ud835\ude93 \ud835\ude94 \ud835\ude95 \ud835\ude96 \ud835\ude97 \ud835\ude98 \ud835\ude99 \ud835\ude9a \ud835\ude9b \ud835\ude9c \ud835\ude9d \ud835\ude9e \ud835\ude9f \ud835\udea0 \ud835\udea1 \ud835\udea2 \ud835\udea3".split(" ");
  this.latinDoubleStruckItalic = ["\u2145", "\u2146", "\u2147", "\u2148", "\u2149"];
  this.capitalGreek = "\u0391\u0392\u0393\u0394\u0395\u0396\u0397\u0398\u0399\u039a\u039b\u039c\u039d\u039e\u039f\u03a0\u03a1\u03a3\u03a4\u03a5\u03a6\u03a7\u03a8\u03a9".split("");
  this.smallGreek = "\u03b1\u03b2\u03b3\u03b4\u03b5\u03b6\u03b7\u03b8\u03b9\u03ba\u03bb\u03bc\u03bd\u03be\u03bf\u03c0\u03c1\u03c2\u03c3\u03c4\u03c5\u03c6\u03c7\u03c8\u03c9".split("");
  this.capitalGreekBold = "\ud835\udea8 \ud835\udea9 \ud835\udeaa \ud835\udeab \ud835\udeac \ud835\udead \ud835\udeae \ud835\udeaf \ud835\udeb0 \ud835\udeb1 \ud835\udeb2 \ud835\udeb3 \ud835\udeb4 \ud835\udeb5 \ud835\udeb6 \ud835\udeb7 \ud835\udeb8 \ud835\udeba \ud835\udebb \ud835\udebc \ud835\udebd \ud835\udebe \ud835\udebf \ud835\udec0".split(" ");
  this.smallGreekBold = "\ud835\udec2 \ud835\udec3 \ud835\udec4 \ud835\udec5 \ud835\udec6 \ud835\udec7 \ud835\udec8 \ud835\udec9 \ud835\udeca \ud835\udecb \ud835\udecc \ud835\udecd \ud835\udece \ud835\udecf \ud835\uded0 \ud835\uded1 \ud835\uded2 \ud835\uded3 \ud835\uded4 \ud835\uded5 \ud835\uded6 \ud835\uded7 \ud835\uded8 \ud835\uded9 \ud835\udeda".split(" ");
  this.capitalGreekItalic = "\ud835\udee2 \ud835\udee3 \ud835\udee4 \ud835\udee5 \ud835\udee6 \ud835\udee7 \ud835\udee8 \ud835\udee9 \ud835\udeea \ud835\udeeb \ud835\udeec \ud835\udeed \ud835\udeee \ud835\udeef \ud835\udef0 \ud835\udef1 \ud835\udef2 \ud835\udef4 \ud835\udef5 \ud835\udef6 \ud835\udef7 \ud835\udef8 \ud835\udef9 \ud835\udefa".split(" ");
  this.smallGreekItalic = "\ud835\udefc \ud835\udefd \ud835\udefe \ud835\udeff \ud835\udf00 \ud835\udf01 \ud835\udf02 \ud835\udf03 \ud835\udf04 \ud835\udf05 \ud835\udf06 \ud835\udf07 \ud835\udf08 \ud835\udf09 \ud835\udf0a \ud835\udf0b \ud835\udf0c \ud835\udf0d \ud835\udf0e \ud835\udf0f \ud835\udf10 \ud835\udf11 \ud835\udf12 \ud835\udf13 \ud835\udf14".split(" ");
  this.capitalGreekSansSerifBold = "\ud835\udf56 \ud835\udf57 \ud835\udf58 \ud835\udf59 \ud835\udf5a \ud835\udf5b \ud835\udf5c \ud835\udf5d \ud835\udf5e \ud835\udf5f \ud835\udf60 \ud835\udf61 \ud835\udf62 \ud835\udf63 \ud835\udf64 \ud835\udf65 \ud835\udf66 \ud835\udf68 \ud835\udf69 \ud835\udf6a \ud835\udf6b \ud835\udf6c \ud835\udf6d \ud835\udf6e".split(" ");
  this.smallGreekSansSerifBold = "\ud835\udf70 \ud835\udf71 \ud835\udf72 \ud835\udf73 \ud835\udf74 \ud835\udf75 \ud835\udf76 \ud835\udf77 \ud835\udf78 \ud835\udf79 \ud835\udf7a \ud835\udf7b \ud835\udf7c \ud835\udf7d \ud835\udf7e \ud835\udf7f \ud835\udf80 \ud835\udf81 \ud835\udf82 \ud835\udf83 \ud835\udf84 \ud835\udf85 \ud835\udf86 \ud835\udf87 \ud835\udf88".split(" ");
  this.greekDoubleStruck = ["\u213c", "\u213d", "\u213e", "\u213f"];
  this.hebrewLetters = ["\u2135", "\u2136", "\u2137", "\u2138"];
  this.additions = "+\u00b1\u2213\u2214\u2227\u2228\u2229\u222a\u228c\u2293\u2294\u229d\u229e\u22a4\u22a5\u22ba\u22bb\u22bc\u22c4\u22ce\u22cf\u22d2\u22d3\u25b3\u25b7\u25bd\u25c1\u2a5e\u2295".split("");
  this.invisiblePlus_ = cvox.SemanticUtil.numberToUnicode(8292);
  this.additions.push(this.invisiblePlus_);
  this.multiplications = "\u2020\u2021\u2210\u2217\u2218\u2219\u2240\u229a\u229b\u22a0\u22a1\u22c5\u22c6\u22c7\u22c9\u22ca\u22cb\u22cc\u25cb".split("");
  this.invisibleTimes_ = cvox.SemanticUtil.numberToUnicode(8290);
  this.multiplications.push(this.invisibleTimes_);
  this.subtractions = "-\u2052\u207b\u208b\u2212\u2216\u2238\u2242\u2296\u229f\u2796\u2a29\u2a2a\u2a2b\u2a2c\u2a3a\u2a41\u2a6c\ufe63\uff0d\u2010\u2011".split("");
  this.divisions = "/\u00f7\u2044\u2215\u2298\u27cc\u29bc\u2a38".split("");
  this.functionApplication_ = cvox.SemanticUtil.numberToUnicode(8289);
  this.equalities = "=~\u207c\u208c\u223c\u223d\u2243\u2245\u2248\u224a\u224b\u224c\u224d\u224e\u2251\u2252\u2253\u2254\u2255\u2256\u2257\u2258\u2259\u225a\u225b\u225c\u225d\u225e\u225f\u2261\u2263\u29e4\u2a66\u2a6e\u2a6f\u2a70\u2a71\u2a72\u2a73\u2a74\u2a75\u2a76\u2a77\u2a78\u22d5\u2a6d\u2a6a\u2a6b\u2a6c\ufe66\uff1d".split("");
  this.inequalities = "<>\u2241\u2242\u2244\u2246\u2247\u2249\u224f\u2250\u2260\u2262\u2264\u2265\u2266\u2267\u2268\u2269\u226a\u226b\u226c\u226d\u226e\u226f\u2270\u2271\u2272\u2273\u2274\u2275\u2276\u2277\u2278\u2279\u227a\u227b\u227c\u227d\u227e\u227f\u2280\u2281\u22d6\u22d7\u22d8\u22d9\u22da\u22db\u22dc\u22dd\u22de\u22df\u22e0\u22e1\u22e2\u22e3\u22e4\u22e5\u22e6\u22e7\u22e8\u22e9\u2a79\u2a7a\u2a7b\u2a7c\u2a7d\u2a7e\u2a7f\u2a80\u2a81\u2a82\u2a83\u2a84\u2a85\u2a86\u2a87\u2a88\u2a89\u2a8a\u2a8b\u2a8c\u2a8d\u2a8e\u2a8f\u2a90\u2a91\u2a92\u2a93\u2a94\u2a95\u2a96\u2a97\u2a98\u2a99\u2a9a\u2a9b\u2a9c\u2a9d\u2a9e\u2a9f\u2aa0\u2aa1\u2aa2\u2aa3\u2aa4\u2aa5\u2aa6\u2aa7\u2aa8\u2aa9\u2aaa\u2aab\u2aac\u2aad\u2aae\u2aaf\u2ab0\u2ab1\u2ab2\u2ab3\u2ab4\u2ab5\u2ab6\u2ab7\u2ab8\u2ab9\u2aba\u2abb\u2abc\u2af7\u2af8\u2af9\u2afa\u29c0\u29c1\ufe64\ufe65\uff1c\uff1e".split("");
  this.relations = [];
  this.arrows = "\u2190\u2191\u2192\u2193\u2194\u2195\u2196\u2197\u2198\u2199\u219a\u219b\u219c\u219d\u219e\u219f\u21a0\u21a1\u21a2\u21a3\u21a4\u21a5\u21a6\u21a7\u21a8\u21a9\u21aa\u21ab\u21ac\u21ad\u21ae\u21af\u21b0\u21b1\u21b2\u21b3\u21b4\u21b5\u21b6\u21b7\u21b8\u21b9\u21ba\u21bb\u21c4\u21c5\u21c6\u21c7\u21c8\u21c9\u21ca\u21cd\u21ce\u21cf\u21d0\u21d1\u21d2\u21d3\u21d4\u21d5\u21d6\u21d7\u21d8\u21d9\u21da\u21db\u21dc\u21dd\u21de\u21df\u21e0\u21e1\u21e2\u21e3\u21e4\u21e5\u21e6\u21e7\u21e8\u21e9\u21ea\u21eb\u21ec\u21ed\u21ee\u21ef\u21f0\u21f1\u21f2\u21f3\u21f4\u21f5\u21f6\u21f7\u21f8\u21f9\u21fa\u21fb\u21fc\u21fd\u21fe\u21ff\u2301\u2303\u2304\u2324\u238b\u2794\u2798\u2799\u279a\u279b\u279c\u279d\u279e\u279f\u27a0\u27a1\u27a2\u27a3\u27a4\u27a5\u27a6\u27a7\u27a8\u27a9\u27aa\u27ab\u27ac\u27ad\u27ae\u27af\u27b1\u27b2\u27b3\u27b4\u27b5\u27b6\u27b7\u27b8\u27b9\u27ba\u27bb\u27bc\u27bd\u27be\u27f0\u27f1\u27f2\u27f3\u27f4\u27f5\u27f6\u27f7\u27f8\u27f9\u27fa\u27fb\u27fc\u27fd\u27fe\u27ff\u2900\u2901\u2902\u2903\u2904\u2905\u2906\u2907\u2908\u2909\u290a\u290b\u290c\u290d\u290e\u290f\u2910\u2911\u2912\u2913\u2914\u2915\u2916\u2917\u2918\u2919\u291a\u291b\u291c\u291d\u291e\u291f\u2920\u2921\u2922\u2923\u2924\u2925\u2926\u2927\u2928\u2929\u292a\u292d\u292e\u292f\u2930\u2931\u2932\u2933\u2934\u2935\u2936\u2937\u2938\u2939\u293a\u293b\u293c\u293d\u293e\u293f\u2940\u2941\u2942\u2943\u2944\u2945\u2946\u2947\u2948\u2949\u2970\u2971\u2972\u2973\u2974\u2975\u2976\u2977\u2978\u2979\u297a\u297b\u29b3\u29b4\u29bd\u29ea\u29ec\u29ed\u2a17\u2b00\u2b01\u2b02\u2b03\u2b04\u2b05\u2b06\u2b07\u2b08\u2b09\u2b0a\u2b0b\u2b0c\u2b0d\u2b0e\u2b0f\u2b10\u2b11\u2b30\u2b31\u2b32\u2b33\u2b34\u2b35\u2b36\u2b37\u2b38\u2b39\u2b3a\u2b3b\u2b3c\u2b3d\u2b3e\u2b3f\u2b40\u2b41\u2b42\u2b43\u2b44\u2b45\u2b46\u2b47\u2b48\u2b49\u2b4a\u2b4b\u2b4c\uffe9\uffea\uffeb\uffec\u21bc\u21bd\u21be\u21bf\u21c0\u21c1\u21c2\u21c3\u21cb\u21cc\u294a\u294b\u294c\u294d\u294e\u294f\u2950\u2951\u2952\u2953\u2954\u2955\u2956\u2957\u2958\u2959\u295a\u295b\u295c\u295d\u295e\u295f\u2960\u2961\u2962\u2963\u2964\u2965\u2966\u2967\u2968\u2969\u296a\u296b\u296c\u296d\u296e\u296f\u297c\u297d\u297e\u297f".split("");
  this.sumOps = "\u2140\u220f\u2210\u2211\u22c0\u22c1\u22c2\u22c3\u2a00\u2a01\u2a02\u2a03\u2a04\u2a05\u2a06\u2a07\u2a08\u2a09\u2a0a\u2a0b\u2afc\u2aff".split("");
  this.intOps = "\u222b\u222c\u222d\u222e\u222f\u2230\u2231\u2232\u2233\u2a0c\u2a0d\u2a0e\u2a0f\u2a10\u2a11\u2a12\u2a13\u2a14\u2a15\u2a16\u2a17\u2a18\u2a19\u2a1a\u2a1b\u2a1c".split("");
  this.prefixOps = ["\u2200", "\u2203"];
  this.digitsNormal = "0123456789".split("");
  this.digitsFullWidth = "\uff10\uff11\uff12\uff13\uff14\uff15\uff16\uff17\uff18\uff19".split("");
  this.digitsBold = "\ud835\udfce \ud835\udfcf \ud835\udfd0 \ud835\udfd1 \ud835\udfd2 \ud835\udfd3 \ud835\udfd4 \ud835\udfd5 \ud835\udfd6 \ud835\udfd7".split(" ");
  this.digitsDoubleStruck = "\ud835\udfd8 \ud835\udfd9 \ud835\udfda \ud835\udfdb \ud835\udfdc \ud835\udfdd \ud835\udfde \ud835\udfdf \ud835\udfe0 \ud835\udfe1".split(" ");
  this.digitsSansSerif = "\ud835\udfe2 \ud835\udfe3 \ud835\udfe4 \ud835\udfe5 \ud835\udfe6 \ud835\udfe7 \ud835\udfe8 \ud835\udfe9 \ud835\udfea \ud835\udfeb".split(" ");
  this.digitsSansSerifBold = "\ud835\udfec \ud835\udfed \ud835\udfee \ud835\udfef \ud835\udff0 \ud835\udff1 \ud835\udff2 \ud835\udff3 \ud835\udff4 \ud835\udff5".split(" ");
  this.digitsMonospace = "\ud835\udff6 \ud835\udff7 \ud835\udff8 \ud835\udff9 \ud835\udffa \ud835\udffb \ud835\udffc \ud835\udffd \ud835\udffe \ud835\udfff".split(" ");
  this.digitsSuperscript = "\u00b2\u00b3\u00b9\u2070\u2074\u2075\u2076\u2077\u2078\u2079".split("");
  this.digitsSubscript = "\u2080\u2081\u2082\u2083\u2084\u2085\u2086\u2087\u2088\u2089".split("");
  this.fractions = "\u00bc\u00bd\u00be\u2150\u2151\u2152\u2153\u2154\u2155\u2156\u2157\u2158\u2159\u215a\u215b\u215c\u215d\u215e\u215f\u2189".split("");
  this.enclosedNumbers = "\u2460\u2461\u2462\u2463\u2464\u2465\u2466\u2467\u2468\u2469\u246a\u246b\u246c\u246d\u246e\u246f\u2470\u2471\u2472\u2473\u24ea\u24eb\u24ec\u24ed\u24ee\u24ef\u24f0\u24f1\u24f2\u24f3\u24f4\u24f5\u24f6\u24f7\u24f8\u24f9\u24fa\u24fb\u24fc\u24fd\u24fe\u24ff\u2776\u2777\u2778\u2779\u277a\u277b\u277c\u277d\u277e\u277f\u2780\u2781\u2782\u2783\u2784\u2785\u2786\u2787\u2788\u2789\u278a\u278b\u278c\u278d\u278e\u278f\u2790\u2791\u2792\u2793\u3248\u3249\u324a\u324b\u324c\u324d\u324e\u324f\u3251\u3252\u3253\u3254\u3255\u3256\u3257\u3258\u3259\u325a\u325b\u325c\u325d\u325e\u325f\u32b1\u32b2\u32b3\u32b4\u32b5\u32b6\u32b7\u32b8\u32b9\u32ba\u32bb\u32bc\u32bd\u32be\u32bf".split("");
  this.fencedNumbers = "\u2474\u2475\u2476\u2477\u2478\u2479\u247a\u247b\u247c\u247d\u247e\u247f\u2480\u2481\u2482\u2483\u2484\u2485\u2486\u2487".split("");
  this.punctuatedNumbers = "\u2488 \u2489 \u248a \u248b \u248c \u248d \u248e \u248f \u2490 \u2491 \u2492 \u2493 \u2494 \u2495 \u2496 \u2497 \u2498 \u2499 \u249a \u249b \ud83c\udd00 \ud83c\udd01 \ud83c\udd02 \ud83c\udd03 \ud83c\udd04 \ud83c\udd05 \ud83c\udd06 \ud83c\udd07 \ud83c\udd08 \ud83c\udd09 \ud83c\udd0a".split(" ");
  this.numbers = this.fractions.concat(this.digitsSuperscript, this.digitsSubscript, this.enclosedNumbers, this.fencedNumbers, this.punctuatedNumbers);
  this.trigonometricFunctions = "cos cot csc sec sin tan arccos arccot arccsc arcsec arcsin arctan".split(" ");
  this.hyperbolicFunctions = "cosh coth csch sech sinh tanh arcosh arcoth arcsch arsech arsinh artanh arccosh arccoth arccsch arcsech arcsinh arctanh".split(" ");
  this.algebraicFunctions = "deg det dim hom ker Tr tr".split(" ");
  this.elementaryFunctions = "log ln lg exp expt gcd gcd arg im re Pr".split(" ");
  this.prefixFunctions = this.trigonometricFunctions.concat(this.hyperbolicFunctions, this.algebraicFunctions, this.elementaryFunctions);
  this.limitFunctions = "inf lim liminf limsup max min sup injlim projlim".split(" ");
  this.infixFunctions = ["mod", "rem"];
  this.symbolSetToSemantic_ = [{set:this.generalPunctuations, type:cvox.SemanticAttr.Type.PUNCTUATION, role:cvox.SemanticAttr.Role.UNKNOWN}, {set:this.ellipses, type:cvox.SemanticAttr.Type.PUNCTUATION, role:cvox.SemanticAttr.Role.ELLIPSIS}, {set:this.fullStops, type:cvox.SemanticAttr.Type.PUNCTUATION, role:cvox.SemanticAttr.Role.FULLSTOP}, {set:this.dashes, type:cvox.SemanticAttr.Type.PUNCTUATION, role:cvox.SemanticAttr.Role.DASH}, {set:this.primes, type:cvox.SemanticAttr.Type.PUNCTUATION, role:cvox.SemanticAttr.Role.PRIME}, 
  {set:this.leftFences, type:cvox.SemanticAttr.Type.FENCE, role:cvox.SemanticAttr.Role.OPEN}, {set:this.rightFences, type:cvox.SemanticAttr.Type.FENCE, role:cvox.SemanticAttr.Role.CLOSE}, {set:this.topFences, type:cvox.SemanticAttr.Type.FENCE, role:cvox.SemanticAttr.Role.TOP}, {set:this.bottomFences, type:cvox.SemanticAttr.Type.FENCE, role:cvox.SemanticAttr.Role.BOTTOM}, {set:this.neutralFences, type:cvox.SemanticAttr.Type.FENCE, role:cvox.SemanticAttr.Role.NEUTRAL}, {set:this.smallLatin, type:cvox.SemanticAttr.Type.IDENTIFIER, 
  role:cvox.SemanticAttr.Role.LATINLETTER, font:cvox.SemanticAttr.Font.NORMAL}, {set:this.capitalLatin, type:cvox.SemanticAttr.Type.IDENTIFIER, role:cvox.SemanticAttr.Role.LATINLETTER, font:cvox.SemanticAttr.Font.NORMAL}, {set:this.smallLatinFullWidth, type:cvox.SemanticAttr.Type.IDENTIFIER, role:cvox.SemanticAttr.Role.LATINLETTER, font:cvox.SemanticAttr.Font.NORMAL}, {set:this.capitalLatinFullWidth, type:cvox.SemanticAttr.Type.IDENTIFIER, role:cvox.SemanticAttr.Role.LATINLETTER, font:cvox.SemanticAttr.Font.NORMAL}, 
  {set:this.smallLatinBold, type:cvox.SemanticAttr.Type.IDENTIFIER, role:cvox.SemanticAttr.Role.LATINLETTER, font:cvox.SemanticAttr.Font.BOLD}, {set:this.capitalLatinBold, type:cvox.SemanticAttr.Type.IDENTIFIER, role:cvox.SemanticAttr.Role.LATINLETTER, font:cvox.SemanticAttr.Font.BOLD}, {set:this.smallLatinItalic, type:cvox.SemanticAttr.Type.IDENTIFIER, role:cvox.SemanticAttr.Role.LATINLETTER, font:cvox.SemanticAttr.Font.ITALIC}, {set:this.capitalLatinItalic, type:cvox.SemanticAttr.Type.IDENTIFIER, 
  role:cvox.SemanticAttr.Role.LATINLETTER, font:cvox.SemanticAttr.Font.ITALIC}, {set:this.smallLatinScript, type:cvox.SemanticAttr.Type.IDENTIFIER, role:cvox.SemanticAttr.Role.LATINLETTER, font:cvox.SemanticAttr.Font.SCRIPT}, {set:this.capitalLatinScript, type:cvox.SemanticAttr.Type.IDENTIFIER, role:cvox.SemanticAttr.Role.LATINLETTER, font:cvox.SemanticAttr.Font.SCRIPT}, {set:this.smallLatinBoldScript, type:cvox.SemanticAttr.Type.IDENTIFIER, role:cvox.SemanticAttr.Role.LATINLETTER, font:cvox.SemanticAttr.Font.BOLDSCRIPT}, 
  {set:this.capitalLatinBoldScript, type:cvox.SemanticAttr.Type.IDENTIFIER, role:cvox.SemanticAttr.Role.LATINLETTER, font:cvox.SemanticAttr.Font.BOLDSCRIPT}, {set:this.smallLatinFraktur, type:cvox.SemanticAttr.Type.IDENTIFIER, role:cvox.SemanticAttr.Role.LATINLETTER, font:cvox.SemanticAttr.Font.FRAKTUR}, {set:this.capitalLatinFraktur, type:cvox.SemanticAttr.Type.IDENTIFIER, role:cvox.SemanticAttr.Role.LATINLETTER, font:cvox.SemanticAttr.Font.FRAKTUR}, {set:this.smallLatinDoubleStruck, type:cvox.SemanticAttr.Type.IDENTIFIER, 
  role:cvox.SemanticAttr.Role.LATINLETTER, font:cvox.SemanticAttr.Font.DOUBLESTRUCK}, {set:this.capitalLatinDoubleStruck, type:cvox.SemanticAttr.Type.IDENTIFIER, role:cvox.SemanticAttr.Role.LATINLETTER, font:cvox.SemanticAttr.Font.DOUBLESTRUCK}, {set:this.smallLatinBoldFraktur, type:cvox.SemanticAttr.Type.IDENTIFIER, role:cvox.SemanticAttr.Role.LATINLETTER, font:cvox.SemanticAttr.Font.BOLDFRAKTUR}, {set:this.capitalLatinBoldFraktur, type:cvox.SemanticAttr.Type.IDENTIFIER, role:cvox.SemanticAttr.Role.LATINLETTER, 
  font:cvox.SemanticAttr.Font.BOLDFRAKTUR}, {set:this.smallLatinSansSerif, type:cvox.SemanticAttr.Type.IDENTIFIER, role:cvox.SemanticAttr.Role.LATINLETTER, font:cvox.SemanticAttr.Font.SANSSERIF}, {set:this.capitalLatinSansSerif, type:cvox.SemanticAttr.Type.IDENTIFIER, role:cvox.SemanticAttr.Role.LATINLETTER, font:cvox.SemanticAttr.Font.SANSSERIF}, {set:this.smallLatinSansSerifBold, type:cvox.SemanticAttr.Type.IDENTIFIER, role:cvox.SemanticAttr.Role.LATINLETTER, font:cvox.SemanticAttr.Font.SANSSERIFBOLD}, 
  {set:this.capitalLatinSansSerifBold, type:cvox.SemanticAttr.Type.IDENTIFIER, role:cvox.SemanticAttr.Role.LATINLETTER, font:cvox.SemanticAttr.Font.SANSSERIFBOLD}, {set:this.smallLatinSansSerifItalic, type:cvox.SemanticAttr.Type.IDENTIFIER, role:cvox.SemanticAttr.Role.LATINLETTER, font:cvox.SemanticAttr.Font.SANSSERIFITALIC}, {set:this.capitalLatinSansSerifItalic, type:cvox.SemanticAttr.Type.IDENTIFIER, role:cvox.SemanticAttr.Role.LATINLETTER, font:cvox.SemanticAttr.Font.SANSSERIFITALIC}, {set:this.smallLatinMonospace, 
  type:cvox.SemanticAttr.Type.IDENTIFIER, role:cvox.SemanticAttr.Role.LATINLETTER, font:cvox.SemanticAttr.Font.MONOSPACE}, {set:this.capitalLatinMonospace, type:cvox.SemanticAttr.Type.IDENTIFIER, role:cvox.SemanticAttr.Role.LATINLETTER, font:cvox.SemanticAttr.Font.MONOSPACE}, {set:this.latinDoubleStruckItalic, type:cvox.SemanticAttr.Type.IDENTIFIER, role:cvox.SemanticAttr.Role.LATINLETTER, font:cvox.SemanticAttr.Font.DOUBLESTRUCKITALIC}, {set:this.smallGreek, type:cvox.SemanticAttr.Type.IDENTIFIER, 
  role:cvox.SemanticAttr.Role.GREEKLETTER, font:cvox.SemanticAttr.Font.NORMAL}, {set:this.capitalGreek, type:cvox.SemanticAttr.Type.IDENTIFIER, role:cvox.SemanticAttr.Role.GREEKLETTER, font:cvox.SemanticAttr.Font.NORMAL}, {set:this.smallGreekBold, type:cvox.SemanticAttr.Type.IDENTIFIER, role:cvox.SemanticAttr.Role.GREEKLETTER, font:cvox.SemanticAttr.Font.BOLD}, {set:this.capitalGreekBold, type:cvox.SemanticAttr.Type.IDENTIFIER, role:cvox.SemanticAttr.Role.GREEKLETTER, font:cvox.SemanticAttr.Font.BOLD}, 
  {set:this.smallGreekItalic, type:cvox.SemanticAttr.Type.IDENTIFIER, role:cvox.SemanticAttr.Role.GREEKLETTER, font:cvox.SemanticAttr.Font.ITALIC}, {set:this.capitalGreekItalic, type:cvox.SemanticAttr.Type.IDENTIFIER, role:cvox.SemanticAttr.Role.GREEKLETTER, font:cvox.SemanticAttr.Font.ITALIC}, {set:this.smallGreekSansSerifBold, type:cvox.SemanticAttr.Type.IDENTIFIER, role:cvox.SemanticAttr.Role.GREEKLETTER, font:cvox.SemanticAttr.Font.SANSSERIFBOLD}, {set:this.capitalGreekSansSerifBold, type:cvox.SemanticAttr.Type.IDENTIFIER, 
  role:cvox.SemanticAttr.Role.GREEKLETTER, font:cvox.SemanticAttr.Font.SANSSERIFBOLD}, {set:this.greekDoubleStruck, type:cvox.SemanticAttr.Type.IDENTIFIER, role:cvox.SemanticAttr.Role.GREEKLETTER, font:cvox.SemanticAttr.Font.DOUBLESTRUCK}, {set:this.hebrewLetters, type:cvox.SemanticAttr.Type.IDENTIFIER, role:cvox.SemanticAttr.Role.OTHERLETTER, font:cvox.SemanticAttr.Font.NORMAL}, {set:this.digitsNormal, type:cvox.SemanticAttr.Type.NUMBER, role:cvox.SemanticAttr.Role.INTEGER, font:cvox.SemanticAttr.Font.NORMAL}, 
  {set:this.digitsFullWidth, type:cvox.SemanticAttr.Type.NUMBER, role:cvox.SemanticAttr.Role.INTEGER, font:cvox.SemanticAttr.Font.NORMAL}, {set:this.digitsBold, type:cvox.SemanticAttr.Type.NUMBER, role:cvox.SemanticAttr.Role.INTEGER, font:cvox.SemanticAttr.Font.BOLD}, {set:this.digitsDoubleStruck, type:cvox.SemanticAttr.Type.NUMBER, role:cvox.SemanticAttr.Role.INTEGER, font:cvox.SemanticAttr.Font.DOUBLESTRUCK}, {set:this.digitsSansSerif, type:cvox.SemanticAttr.Type.NUMBER, role:cvox.SemanticAttr.Role.INTEGER, 
  font:cvox.SemanticAttr.Font.SANSSERIF}, {set:this.digitsSansSerifBold, type:cvox.SemanticAttr.Type.NUMBER, role:cvox.SemanticAttr.Role.INTEGER, font:cvox.SemanticAttr.Font.SANSSERIFBOLD}, {set:this.digitsMonospace, type:cvox.SemanticAttr.Type.NUMBER, role:cvox.SemanticAttr.Role.INTEGER, font:cvox.SemanticAttr.Font.MONOSPACE}, {set:this.numbers, type:cvox.SemanticAttr.Type.NUMBER, role:cvox.SemanticAttr.Role.INTEGER}, {set:this.additions, type:cvox.SemanticAttr.Type.OPERATOR, role:cvox.SemanticAttr.Role.ADDITION}, 
  {set:this.multiplications, type:cvox.SemanticAttr.Type.OPERATOR, role:cvox.SemanticAttr.Role.MULTIPLICATION}, {set:this.subtractions, type:cvox.SemanticAttr.Type.OPERATOR, role:cvox.SemanticAttr.Role.SUBTRACTION}, {set:this.divisions, type:cvox.SemanticAttr.Type.OPERATOR, role:cvox.SemanticAttr.Role.DIVISION}, {set:this.prefixOps, type:cvox.SemanticAttr.Type.PREFIXOP, role:cvox.SemanticAttr.Role.PREFIXFUNC}, {set:this.equalities, type:cvox.SemanticAttr.Type.RELATION, role:cvox.SemanticAttr.Role.EQUALITY}, 
  {set:this.inequalities, type:cvox.SemanticAttr.Type.RELATION, role:cvox.SemanticAttr.Role.INEQUALITY}, {set:this.relations, type:cvox.SemanticAttr.Type.RELATION, role:cvox.SemanticAttr.Role.UNKNOWN}, {set:this.arrows, type:cvox.SemanticAttr.Type.RELATION, role:cvox.SemanticAttr.Role.ARROW}, {set:this.sumOps, type:cvox.SemanticAttr.Type.LARGEOP, role:cvox.SemanticAttr.Role.SUM}, {set:this.intOps, type:cvox.SemanticAttr.Type.LARGEOP, role:cvox.SemanticAttr.Role.INTEGRAL}, {set:this.limitFunctions, 
  type:cvox.SemanticAttr.Type.FUNCTION, role:cvox.SemanticAttr.Role.LIMFUNC}, {set:this.prefixFunctions, type:cvox.SemanticAttr.Type.FUNCTION, role:cvox.SemanticAttr.Role.PREFIXFUNC}, {set:this.infixFunctions, type:cvox.SemanticAttr.Type.OPERATOR, role:cvox.SemanticAttr.Role.MULTIPLICATION}];
};
goog.addSingletonGetter(cvox.SemanticAttr);
cvox.SemanticAttr.Type = {PUNCTUATION:"punctuation", FENCE:"fence", NUMBER:"number", IDENTIFIER:"identifier", TEXT:"text", OPERATOR:"operator", RELATION:"relation", LARGEOP:"largeop", FUNCTION:"function", ACCENT:"accent", FENCED:"fenced", FRACTION:"fraction", PUNCTUATED:"punctuated", RELSEQ:"relseq", MULTIREL:"multirel", INFIXOP:"infixop", PREFIXOP:"prefixop", POSTFIXOP:"postfixop", APPL:"appl", INTEGRAL:"integral", BIGOP:"bigop", SQRT:"sqrt", ROOT:"root", LIMUPPER:"limupper", LIMLOWER:"limlower", 
LIMBOTH:"limboth", SUBSCRIPT:"subscript", SUPERSCRIPT:"superscript", UNDERSCORE:"underscore", OVERSCORE:"overscore", TABLE:"table", MULTILINE:"multiline", MATRIX:"matrix", VECTOR:"vector", CASES:"cases", ROW:"row", LINE:"line", CELL:"cell", UNKNOWN:"unknown", EMPTY:"empty"};
cvox.SemanticAttr.Role = {ELLIPSIS:"ellipsis", FULLSTOP:"fullstop", DASH:"dash", PRIME:"prime", VBAR:"vbar", OPENFENCE:"openfence", CLOSEFENCE:"closefence", APPLICATION:"application", OPEN:"open", CLOSE:"close", TOP:"top", BOTTOM:"bottom", NEUTRAL:"neutral", LATINLETTER:"latinletter", GREEKLETTER:"greekletter", OTHERLETTER:"otherletter", INTEGER:"integer", FLOAT:"float", OTHERNUMBER:"othernumber", MULTIACCENT:"multiaccent", OVERACCENT:"overaccent", UNDERACCENT:"underaccent", LEFTRIGHT:"leftright", 
ABOVEBELOW:"abovebelow", SEQUENCE:"sequence", ENDPUNCT:"endpunct", STARTPUNCT:"startpunct", NEGATIVE:"negative", NEGATION:"negation", MULTIOP:"multiop", LIMFUNC:"limit function", INFIXFUNC:"infix function", PREFIXFUNC:"prefix function", POSTFIXFUNC:"postfix function", SUM:"sum", INTEGRAL:"integral", ADDITION:"addition", MULTIPLICATION:"multiplication", DIVISION:"division", SUBTRACTION:"subtraction", IMPLICIT:"implicit", EQUALITY:"equality", INEQUALITY:"inequality", ELEMENT:"element", BINREL:"binrel", 
ARROW:"arrow", MULTILINE:"multiline", MATRIX:"matrix", VECTOR:"vector", CASES:"cases", TABLE:"table", UNKNOWN:"unknown"};
cvox.SemanticAttr.Font = {BOLD:"bold", BOLDFRAKTUR:"bold-fraktur", BOLDITALIC:"bold-italic", BOLDSCRIPT:"bold-script", DOUBLESTRUCK:"double-struck", DOUBLESTRUCKITALIC:"double-struck-italic", FRAKTUR:"fraktur", ITALIC:"italic", MONOSPACE:"monospace", NORMAL:"normal", SCRIPT:"script", SANSSERIF:"sans-serif", SANSSERIFITALIC:"sans-serif-italic", SANSSERIFBOLD:"sans-serif-bold", SANSSERIFBOLDITALIC:"sans-serif-bold-italic", UNKNOWN:"unknown"};
cvox.SemanticAttr.lookupMeaning = function(symbol) {
  return cvox.SemanticAttr.getInstance().lookupMeaning_(symbol);
};
cvox.SemanticAttr.invisibleTimes = function() {
  return cvox.SemanticAttr.getInstance().invisibleTimes_;
};
cvox.SemanticAttr.invisibleComma = function() {
  return cvox.SemanticAttr.getInstance().invisibleComma_;
};
cvox.SemanticAttr.functionApplication = function() {
  return cvox.SemanticAttr.getInstance().functionApplication_;
};
cvox.SemanticAttr.isMatchingFenceRole = function(open, close) {
  return open == cvox.SemanticAttr.Role.OPEN && close == cvox.SemanticAttr.Role.CLOSE || open == cvox.SemanticAttr.Role.NEUTRAL && close == cvox.SemanticAttr.Role.NEUTRAL || open == cvox.SemanticAttr.Role.TOP && close == cvox.SemanticAttr.Role.BOTTOM;
};
cvox.SemanticAttr.isMatchingFence = function(open, close) {
  return cvox.SemanticAttr.getInstance().isMatchingFence_(open, close);
};
cvox.SemanticAttr.isOpeningFence = function(fence) {
  return fence == cvox.SemanticAttr.Role.OPEN || fence == cvox.SemanticAttr.Role.NEUTRAL;
};
cvox.SemanticAttr.isClosingFence = function(fence) {
  return fence == cvox.SemanticAttr.Role.CLOSE || fence == cvox.SemanticAttr.Role.NEUTRAL;
};
cvox.SemanticAttr.isCharacterD = function(chr) {
  var Ds = "d \u2146 \uff44 \ud835\udc1d \ud835\udc51 \ud835\udcb9 \ud835\udced \ud835\udd21 \ud835\udd55 \ud835\udd89 \ud835\uddbd \ud835\uddf1 \ud835\ude25 \ud835\ude8d".split(" ");
  return -1 != Ds.indexOf(chr);
};
cvox.SemanticAttr.prototype.isMatchingFence_ = function(open, close) {
  return -1 != this.neutralFences.indexOf(open) ? open == close : this.openClosePairs[open] == close || this.topBottomPairs[open] == close;
};
cvox.SemanticAttr.prototype.lookupMeaning_ = function(symbol) {
  for (var i = 0, set;set = this.symbolSetToSemantic_[i];i++) {
    if (-1 != set.set.indexOf(symbol)) {
      return {role:set.role || cvox.SemanticAttr.Role.UNKNOWN, type:set.type || cvox.SemanticAttr.Type.UNKNOWN, font:set.font || cvox.SemanticAttr.Font.UNKNOWN};
    }
  }
  return {role:cvox.SemanticAttr.Role.UNKNOWN, type:cvox.SemanticAttr.Type.UNKNOWN, font:cvox.SemanticAttr.Font.UNKNOWN};
};
cvox.SemanticTree = function(mml) {
  this.idCounter_ = 0;
  this.mathml = mml;
  this.root = this.parseMathml_(mml);
};
cvox.SemanticTree.Node = function(id) {
  this.id = id;
  this.mathml = [];
  this.parent = null;
  this.type = cvox.SemanticAttr.Type.UNKNOWN;
  this.role = cvox.SemanticAttr.Role.UNKNOWN;
  this.font = cvox.SemanticAttr.Font.UNKNOWN;
  this.childNodes = [];
  this.textContent = "";
  this.contentNodes = [];
};
cvox.SemanticTree.Node.prototype.querySelectorAll = function(pred) {
  for (var result = [], i = 0, child;child = this.childNodes[i];i++) {
    result = result.concat(child.querySelectorAll(pred));
  }
  pred(this) && result.unshift(this);
  return result;
};
cvox.SemanticTree.prototype.xml = function(brief) {
  var dp = new DOMParser, xml = dp.parseFromString("<stree></stree>", "text/xml"), xmlRoot = this.root.xml(xml, brief);
  xml.childNodes[0].appendChild(xmlRoot);
  return xml.childNodes[0];
};
cvox.SemanticTree.Node.prototype.xml = function(xml, brief) {
  var xmlNodeList = function(tag, nodes) {
    for (var xmlNodes = nodes.map(function(x) {
      return x.xml(xml, brief);
    }), tagNode = xml.createElement(tag), i = 0, child;child = xmlNodes[i];i++) {
      tagNode.appendChild(child);
    }
    return tagNode;
  }, node = xml.createElement(this.type);
  brief || this.xmlAttributes_(node);
  node.textContent = this.textContent;
  0 < this.contentNodes.length && node.appendChild(xmlNodeList("content", this.contentNodes));
  0 < this.childNodes.length && node.appendChild(xmlNodeList("children", this.childNodes));
  return node;
};
cvox.SemanticTree.prototype.toString = function(brief) {
  var xmls = new XMLSerializer;
  return xmls.serializeToString(this.xml(brief));
};
cvox.SemanticTree.prototype.formatXml = function(brief) {
  var xml = this.toString(brief);
  return cvox.SemanticTree.formatXml(xml);
};
cvox.SemanticTree.formatXml = function(xml) {
  var reg = /(>)(<)(\/*)/g;
  xml = xml.replace(reg, "$1\r\n$2$3");
  reg = /(>)(.+)(<c)/g;
  xml = xml.replace(reg, "$1\r\n$2\r\n$3");
  var formatted = "", padding = "";
  xml.split("\r\n").forEach(function(node) {
    node.match(/.+<\/\w[^>]*>$/) ? formatted += padding + node + "\r\n" : node.match(/^<\/\w/) ? padding && (padding = padding.slice(2), formatted += padding + node + "\r\n") : node.match(/^<\w[^>]*[^\/]>.*$/) ? (formatted += padding + node + "\r\n", padding += "  ") : formatted += padding + node + "\r\n";
  });
  return formatted;
};
cvox.SemanticTree.Node.prototype.toString = function(brief) {
  var xmls = new XMLSerializer, dp = new DOMParser, xml = dp.parseFromString("", "text/xml");
  return xmls.serializeToString(this.xml(xml, brief));
};
cvox.SemanticTree.Node.prototype.xmlAttributes_ = function(node) {
  node.setAttribute("role", this.role);
  this.font != cvox.SemanticAttr.Font.UNKNOWN && node.setAttribute("font", this.font);
  node.setAttribute("id", this.id);
};
cvox.SemanticTree.prototype.createNode_ = function() {
  return new cvox.SemanticTree.Node(this.idCounter_++);
};
cvox.SemanticTree.Node.prototype.updateContent_ = function(content) {
  content = content.trim();
  if (this.textContent != content) {
    var meaning = cvox.SemanticAttr.lookupMeaning(content);
    this.textContent = content;
    this.role = meaning.role;
    this.type = meaning.type;
    this.font = meaning.font;
  }
};
cvox.SemanticTree.Node.prototype.addMathmlNodes_ = function(mmlNodes) {
  for (var i = 0, mml;mml = mmlNodes[i];i++) {
    -1 == this.mathml.indexOf(mml) && this.mathml.push(mml);
  }
};
cvox.SemanticTree.Node.prototype.appendChild_ = function(child) {
  this.childNodes.push(child);
  this.addMathmlNodes_(child.mathml);
  child.parent = this;
};
cvox.SemanticTree.Node.prototype.appendContentNode_ = function(node) {
  node && (this.contentNodes.push(node), this.addMathmlNodes_(node.mathml), node.parent = this);
};
cvox.SemanticTree.prototype.parseMathml_ = function(mml) {
  var children = cvox.DomUtil.toArray(mml.children);
  switch(cvox.SemanticUtil.tagName(mml)) {
    case "MATH":
    ;
    case "MROW":
    ;
    case "MPADDED":
    ;
    case "MSTYLE":
      return children = cvox.SemanticUtil.purgeNodes(children), 1 == children.length ? this.parseMathml_(children[0]) : this.processRow_(this.parseMathmlChildren_(children));
    case "MFRAC":
      var newNode = this.makeBranchNode_(cvox.SemanticAttr.Type.FRACTION, [this.parseMathml_(children[0]), this.parseMathml_(children[1])], []);
      newNode.role = cvox.SemanticAttr.Role.DIVISION;
      return newNode;
    case "MSUB":
    ;
    case "MSUP":
    ;
    case "MSUBSUP":
    ;
    case "MOVER":
    ;
    case "MUNDER":
    ;
    case "MUNDEROVER":
      return this.makeLimitNode_(cvox.SemanticUtil.tagName(mml), this.parseMathmlChildren_(children));
    case "MROOT":
      return this.makeBranchNode_(cvox.SemanticAttr.Type.ROOT, [this.parseMathml_(children[0]), this.parseMathml_(children[1])], []);
    case "MSQRT":
      return children = this.parseMathmlChildren_(cvox.SemanticUtil.purgeNodes(children)), this.makeBranchNode_(cvox.SemanticAttr.Type.SQRT, [this.processRow_(children)], []);
    case "MTABLE":
      return newNode = this.makeBranchNode_(cvox.SemanticAttr.Type.TABLE, this.parseMathmlChildren_(children), []), cvox.SemanticTree.tableIsMultiline_(newNode) && this.tableToMultiline_(newNode), newNode;
    case "MTR":
      return newNode = this.makeBranchNode_(cvox.SemanticAttr.Type.ROW, this.parseMathmlChildren_(children), []), newNode.role = cvox.SemanticAttr.Role.TABLE, newNode;
    case "MTD":
      return children = this.parseMathmlChildren_(cvox.SemanticUtil.purgeNodes(children)), newNode = this.makeBranchNode_(cvox.SemanticAttr.Type.CELL, [this.processRow_(children)], []), newNode.role = cvox.SemanticAttr.Role.TABLE, newNode;
    case "MTEXT":
      var leaf = this.makeLeafNode_(mml);
      leaf.type = cvox.SemanticAttr.Type.TEXT;
      return leaf;
    case "MI":
      return leaf = this.makeLeafNode_(mml), leaf.type == cvox.SemanticAttr.Type.UNKNOWN && (leaf.type = cvox.SemanticAttr.Type.IDENTIFIER), leaf;
    case "MN":
      return leaf = this.makeLeafNode_(mml), leaf.type == cvox.SemanticAttr.Type.UNKNOWN && (leaf.type = cvox.SemanticAttr.Type.NUMBER), leaf;
    case "MO":
      return leaf = this.makeLeafNode_(mml), leaf.type == cvox.SemanticAttr.Type.UNKNOWN && (leaf.type = cvox.SemanticAttr.Type.OPERATOR), leaf;
    default:
      return this.makeUnprocessed_(mml);
  }
};
cvox.SemanticTree.prototype.parseMathmlChildren_ = function(mmls) {
  for (var result = [], i = 0, mml;mml = mmls[i];i++) {
    result.push(this.parseMathml_(mml));
  }
  return result;
};
cvox.SemanticTree.prototype.makeUnprocessed_ = function(mml) {
  var node = this.createNode_();
  node.mathml = [mml];
  return node;
};
cvox.SemanticTree.prototype.makeEmptyNode_ = function() {
  var node = this.createNode_();
  node.type = cvox.SemanticAttr.Type.EMPTY;
  return node;
};
cvox.SemanticTree.prototype.makeLeafNode_ = function(mml) {
  var node = this.createNode_();
  node.mathml = [mml];
  node.updateContent_(mml.textContent);
  node.font = mml.getAttribute("mathvariant") || node.font;
  return node;
};
cvox.SemanticTree.prototype.makeBranchNode_ = function(type, children, contentNodes, content) {
  var node = this.createNode_();
  content && node.updateContent_(content);
  node.type = type;
  node.childNodes = children;
  node.contentNodes = contentNodes;
  children.concat(contentNodes).forEach(function(x) {
    x.parent = node;
    node.addMathmlNodes_(x.mathml);
  });
  return node;
};
cvox.SemanticTree.prototype.makeImplicitNode_ = function(nodes) {
  if (1 == nodes.length) {
    return nodes[0];
  }
  var operator = this.createNode_();
  operator.updateContent_(cvox.SemanticAttr.invisibleTimes());
  var newNode = this.makeInfixNode_(nodes, operator);
  newNode.role = cvox.SemanticAttr.Role.IMPLICIT;
  return newNode;
};
cvox.SemanticTree.prototype.makeInfixNode_ = function(children, opNode) {
  return this.makeBranchNode_(cvox.SemanticAttr.Type.INFIXOP, children, [opNode], opNode.textContent);
};
cvox.SemanticTree.prototype.makeConcatNode_ = function(inner, nodeList, type) {
  if (0 == nodeList.length) {
    return inner;
  }
  var content = nodeList.map(function(x) {
    return x.textContent;
  }).join(" "), newNode = this.makeBranchNode_(type, [inner], nodeList, content);
  0 < nodeList.length && (newNode.role = cvox.SemanticAttr.Role.MULTIOP);
  return newNode;
};
cvox.SemanticTree.prototype.makePrefixNode_ = function(node, prefixes) {
  for (var negatives = cvox.SemanticTree.partitionNodes_(prefixes, cvox.SemanticTree.attrPred_("role", "SUBTRACTION")), newNode = this.makeConcatNode_(node, negatives.comp.pop(), cvox.SemanticAttr.Type.PREFIXOP);0 < negatives.rel.length;) {
    newNode = this.makeConcatNode_(newNode, [negatives.rel.pop()], cvox.SemanticAttr.Type.PREFIXOP), newNode.role = cvox.SemanticAttr.Role.NEGATIVE, newNode = this.makeConcatNode_(newNode, negatives.comp.pop(), cvox.SemanticAttr.Type.PREFIXOP);
  }
  return newNode;
};
cvox.SemanticTree.prototype.makePostfixNode_ = function(node, postfixes) {
  return this.makeConcatNode_(node, postfixes, cvox.SemanticAttr.Type.POSTFIXOP);
};
cvox.SemanticTree.prototype.processRow_ = function(nodes) {
  if (0 == nodes.length) {
    return this.makeEmptyNode_();
  }
  nodes = this.getFencesInRow_(nodes);
  nodes = this.processTablesInRow_(nodes);
  nodes = this.getPunctuationInRow_(nodes);
  nodes = this.getFunctionsInRow_(nodes);
  return this.processRelationsInRow_(nodes);
};
cvox.SemanticTree.prototype.processRelationsInRow_ = function(nodes) {
  var partition = cvox.SemanticTree.partitionNodes_(nodes, cvox.SemanticTree.attrPred_("type", "RELATION")), firstRel = partition.rel[0];
  if (!firstRel) {
    return this.processOperationsInRow_(nodes);
  }
  if (1 == nodes.length) {
    return nodes[0];
  }
  var children = partition.comp.map(goog.bind(this.processOperationsInRow_, this));
  return partition.rel.every(function(x) {
    return x.textContent == firstRel.textContent;
  }) ? this.makeBranchNode_(cvox.SemanticAttr.Type.RELSEQ, children, partition.rel, firstRel.textContent) : this.makeBranchNode_(cvox.SemanticAttr.Type.MULTIREL, children, partition.rel);
};
cvox.SemanticTree.prototype.processOperationsInRow_ = function(nodes) {
  if (0 == nodes.length) {
    return this.makeEmptyNode_();
  }
  if (1 == nodes.length) {
    return nodes[0];
  }
  for (var prefix = [];0 < nodes.length && nodes[0].type == cvox.SemanticAttr.Type.OPERATOR;) {
    prefix.push(nodes.shift());
  }
  if (0 == nodes.length) {
    return this.makePrefixNode_(prefix.pop(), prefix);
  }
  if (1 == nodes.length) {
    return this.makePrefixNode_(nodes[0], prefix);
  }
  var split = cvox.SemanticTree.sliceNodes_(nodes, cvox.SemanticTree.attrPred_("type", "OPERATOR")), node = this.makePrefixNode_(this.makeImplicitNode_(split.head), prefix);
  return split.div ? this.makeOperationsTree_(split.tail, node, split.div) : node;
};
cvox.SemanticTree.prototype.makeOperationsTree_ = function(nodes, root, lastop, prefixes) {
  prefixes = prefixes || [];
  if (0 == nodes.length) {
    prefixes.unshift(lastop);
    if (root.type == cvox.SemanticAttr.Type.INFIXOP) {
      var node = this.makePostfixNode_(root.childNodes.pop(), prefixes);
      root.appendChild_(node);
      return root;
    }
    return this.makePostfixNode_(root, prefixes);
  }
  var split = cvox.SemanticTree.sliceNodes_(nodes, cvox.SemanticTree.attrPred_("type", "OPERATOR"));
  if (0 == split.head.length) {
    return prefixes.push(split.div), this.makeOperationsTree_(split.tail, root, lastop, prefixes);
  }
  var node = this.makePrefixNode_(this.makeImplicitNode_(split.head), prefixes), newNode = this.appendOperand_(root, lastop, node);
  return split.div ? this.makeOperationsTree_(split.tail, newNode, split.div, []) : newNode;
};
cvox.SemanticTree.prototype.appendOperand_ = function(root, op, node) {
  return root.type != cvox.SemanticAttr.Type.INFIXOP ? this.makeInfixNode_([root, node], op) : this.appendExistingOperator_(root, op, node) ? root : op.role == cvox.SemanticAttr.Role.MULTIPLICATION ? this.appendMultiplicativeOp_(root, op, node) : this.appendAdditiveOp_(root, op, node);
};
cvox.SemanticTree.prototype.appendMultiplicativeOp_ = function(root, op, node) {
  for (var lastRoot = root, lastChild = root.childNodes[root.childNodes.length - 1];lastChild && lastChild.type == cvox.SemanticAttr.Type.INFIXOP;) {
    lastRoot = lastChild, lastChild = lastRoot.childNodes[root.childNodes.length - 1];
  }
  var newNode = this.makeInfixNode_([lastRoot.childNodes.pop(), node], op);
  lastRoot.appendChild_(newNode);
  return root;
};
cvox.SemanticTree.prototype.appendAdditiveOp_ = function(root, op, node) {
  return this.makeInfixNode_([root, node], op);
};
cvox.SemanticTree.prototype.appendExistingOperator_ = function(root, op, node) {
  if (!root || root.type != cvox.SemanticAttr.Type.INFIXOP) {
    return !1;
  }
  if (root.textContent == op.textContent) {
    return root.appendContentNode_(op), root.appendChild_(node), !0;
  }
  this.appendExistingOperator_(root.childNodes[root.childNodes.length - 1], op, node);
};
cvox.SemanticTree.prototype.getFencesInRow_ = function(nodes) {
  var partition = cvox.SemanticTree.partitionNodes_(nodes, cvox.SemanticTree.attrPred_("type", "FENCE")), felem = partition.comp.shift();
  return this.processFences_(partition.rel, partition.comp, [], [felem]);
};
cvox.SemanticTree.prototype.processFences_ = function(fences, content, openStack, contentStack) {
  if (0 == fences.length && 0 == openStack.length) {
    return contentStack[0];
  }
  var openPred = cvox.SemanticTree.attrPred_("role", "OPEN");
  if (0 == fences.length) {
    for (var result = contentStack.shift();0 < openStack.length;) {
      if (openPred(openStack[0])) {
        var firstOpen = openStack.shift();
        cvox.SemanticTree.fenceToPunct_(firstOpen);
        result.push(firstOpen);
      } else {
        var split = cvox.SemanticTree.sliceNodes_(openStack, openPred), cutLength = split.head.length - 1, innerNodes = this.processNeutralFences_(split.head, contentStack.slice(0, cutLength));
        contentStack = contentStack.slice(cutLength);
        result.push.apply(result, innerNodes);
        split.div && split.tail.unshift(split.div);
        openStack = split.tail;
      }
      result.push.apply(result, contentStack.shift());
    }
    return result;
  }
  var lastOpen = openStack[openStack.length - 1], firstRole = fences[0].role;
  if (firstRole == cvox.SemanticAttr.Role.OPEN || firstRole == cvox.SemanticAttr.Role.NEUTRAL && (!lastOpen || fences[0].textContent != lastOpen.textContent)) {
    return openStack.push(fences.shift()), contentStack.push(content.shift()), this.processFences_(fences, content, openStack, contentStack);
  }
  if (lastOpen && (firstRole == cvox.SemanticAttr.Role.CLOSE && lastOpen.role == cvox.SemanticAttr.Role.OPEN || firstRole == cvox.SemanticAttr.Role.NEUTRAL && fences[0].textContent == lastOpen.textContent)) {
    var fenced = this.makeHorizontalFencedNode_(openStack.pop(), fences.shift(), contentStack.pop());
    contentStack.push(contentStack.pop().concat([fenced], content.shift()));
    return this.processFences_(fences, content, openStack, contentStack);
  }
  if (lastOpen && firstRole == cvox.SemanticAttr.Role.CLOSE && lastOpen.role == cvox.SemanticAttr.Role.NEUTRAL && openStack.some(openPred)) {
    var split = cvox.SemanticTree.sliceNodes_(openStack, openPred, !0), rightContent = contentStack.pop(), cutLength = contentStack.length - split.tail.length + 1, innerNodes = this.processNeutralFences_(split.tail, contentStack.slice(cutLength));
    contentStack = contentStack.slice(0, cutLength);
    fenced = this.makeHorizontalFencedNode_(split.div, fences.shift(), contentStack.pop().concat(innerNodes, rightContent));
    contentStack.push(contentStack.pop().concat([fenced], content.shift()));
    return this.processFences_(fences, content, split.head, contentStack);
  }
  fenced = fences.shift();
  cvox.SemanticTree.fenceToPunct_(fenced);
  contentStack.push(contentStack.pop().concat([fenced], content.shift()));
  return this.processFences_(fences, content, openStack, contentStack);
};
cvox.SemanticTree.prototype.processNeutralFences_ = function(fences, content) {
  if (0 == fences.length) {
    return fences;
  }
  if (1 == fences.length) {
    return cvox.SemanticTree.fenceToPunct_(fences[0]), fences;
  }
  var firstFence = fences.shift(), split = cvox.SemanticTree.sliceNodes_(fences, function(x) {
    return x.textContent == firstFence.textContent;
  });
  if (!split.div) {
    cvox.SemanticTree.fenceToPunct_(firstFence);
    var restContent = content.shift();
    restContent.unshift(firstFence);
    return restContent.concat(this.processNeutralFences_(fences, content));
  }
  var newContent = this.combineFencedContent_(firstFence, split.div, split.head, content);
  if (0 < split.tail.length) {
    var leftContent = newContent.shift(), result = this.processNeutralFences_(split.tail, newContent);
    return leftContent.concat(result);
  }
  return newContent[0];
};
cvox.SemanticTree.prototype.combineFencedContent_ = function(leftFence, rightFence, midFences, content) {
  if (0 == midFences.length) {
    var fenced = this.makeHorizontalFencedNode_(leftFence, rightFence, content.shift());
    content.unshift(fenced);
    return content;
  }
  var leftContent = content.shift(), cutLength = midFences.length - 1, midContent = content.slice(0, cutLength);
  content = content.slice(cutLength);
  var rightContent = content.shift(), innerNodes = this.processNeutralFences_(midFences, midContent);
  leftContent.push.apply(leftContent, innerNodes);
  leftContent.push.apply(leftContent, rightContent);
  fenced = this.makeHorizontalFencedNode_(leftFence, rightFence, leftContent);
  0 < content.length ? content[0].unshift(fenced) : content = [[fenced]];
  return content;
};
cvox.SemanticTree.fenceToPunct_ = function(fence) {
  fence.type = cvox.SemanticAttr.Type.PUNCTUATION;
  switch(fence.role) {
    case cvox.SemanticAttr.Role.NEUTRAL:
      fence.role = cvox.SemanticAttr.Role.VBAR;
      break;
    case cvox.SemanticAttr.Role.OPEN:
      fence.role = cvox.SemanticAttr.Role.OPENFENCE;
      break;
    case cvox.SemanticAttr.Role.CLOSE:
      fence.role = cvox.SemanticAttr.Role.CLOSEFENCE;
  }
};
cvox.SemanticTree.prototype.makeHorizontalFencedNode_ = function(ofence, cfence, content) {
  var childNode = this.processRow_(content), newNode = this.makeBranchNode_(cvox.SemanticAttr.Type.FENCED, [childNode], [ofence, cfence]);
  newNode.role = ofence.role == cvox.SemanticAttr.Role.OPEN ? cvox.SemanticAttr.Role.LEFTRIGHT : ofence.role;
  return newNode;
};
cvox.SemanticTree.prototype.getPunctuationInRow_ = function(nodes) {
  var partition = cvox.SemanticTree.partitionNodes_(nodes, function(x) {
    return cvox.SemanticTree.attrPred_("type", "PUNCTUATION")(x) && !cvox.SemanticTree.attrPred_("role", "ELLIPSIS")(x);
  });
  if (0 == partition.rel.length) {
    return nodes;
  }
  var newNodes = [], firstComp = partition.comp.shift();
  0 < firstComp.length && newNodes.push(this.processRow_(firstComp));
  for (var relCounter = 0;0 < partition.comp.length;) {
    newNodes.push(partition.rel[relCounter++]), firstComp = partition.comp.shift(), 0 < firstComp.length && newNodes.push(this.processRow_(firstComp));
  }
  return [this.makePunctuatedNode_(newNodes, partition.rel)];
};
cvox.SemanticTree.prototype.makePunctuatedNode_ = function(nodes, punctuations) {
  var newNode = this.makeBranchNode_(cvox.SemanticAttr.Type.PUNCTUATED, nodes, punctuations);
  newNode.role = 1 == punctuations.length && nodes[0].type == cvox.SemanticAttr.Type.PUNCTUATION ? cvox.SemanticAttr.Role.STARTPUNCT : 1 == punctuations.length && nodes[nodes.length - 1].type == cvox.SemanticAttr.Type.PUNCTUATION ? cvox.SemanticAttr.Role.ENDPUNCT : cvox.SemanticAttr.Role.SEQUENCE;
  return newNode;
};
cvox.SemanticTree.prototype.makeLimitNode_ = function(mmlTag, children) {
  var center = children[0], isFunction = cvox.SemanticTree.attrPred_("type", "FUNCTION")(center), isLimit = cvox.SemanticTree.attrPred_("type", "LARGEOP")(center) || cvox.SemanticTree.attrPred_("type", "LIMBOTH")(center) || cvox.SemanticTree.attrPred_("type", "LIMLOWER")(center) || cvox.SemanticTree.attrPred_("type", "LIMUPPER")(center) || isFunction && cvox.SemanticTree.attrPred_("role", "LIMFUNC")(center), type = cvox.SemanticAttr.Type.UNKNOWN;
  if (isLimit) {
    switch(mmlTag) {
      case "MSUB":
      ;
      case "MUNDER":
        type = cvox.SemanticAttr.Type.LIMLOWER;
        break;
      case "MSUP":
      ;
      case "MOVER":
        type = cvox.SemanticAttr.Type.LIMUPPER;
        break;
      case "MSUBSUP":
      ;
      case "MUNDEROVER":
        type = cvox.SemanticAttr.Type.LIMBOTH;
    }
  } else {
    switch(mmlTag) {
      case "MSUB":
        type = cvox.SemanticAttr.Type.SUBSCRIPT;
        break;
      case "MSUP":
        type = cvox.SemanticAttr.Type.SUPERSCRIPT;
        break;
      case "MSUBSUP":
        var innerNode = this.makeBranchNode_(cvox.SemanticAttr.Type.SUBSCRIPT, [center, children[1]], []);
        innerNode.role = center.role;
        children = [innerNode, children[2]];
        type = cvox.SemanticAttr.Type.SUPERSCRIPT;
        break;
      case "MOVER":
        type = cvox.SemanticAttr.Type.OVERSCORE;
        break;
      case "MUNDER":
        type = cvox.SemanticAttr.Type.UNDERSCORE;
        break;
      default:
        innerNode = this.makeBranchNode_(cvox.SemanticAttr.Type.UNDERSCORE, [center, children[1]], []), innerNode.role = center.role, children = [innerNode, children[2]], type = cvox.SemanticAttr.Type.OVERSCORE;
    }
  }
  var newNode = this.makeBranchNode_(type, children, []);
  newNode.role = center.role;
  return newNode;
};
cvox.SemanticTree.prototype.getFunctionsInRow_ = function(restNodes, result) {
  result = result || [];
  if (0 == restNodes.length) {
    return result;
  }
  var firstNode = restNodes.shift(), heuristic = cvox.SemanticTree.classifyFunction_(firstNode, restNodes);
  if (!heuristic) {
    return result.push(firstNode), this.getFunctionsInRow_(restNodes, result);
  }
  var processedRest = this.getFunctionsInRow_(restNodes, []), newRest = this.getFunctionArgs_(firstNode, processedRest, heuristic);
  return result.concat(newRest);
};
cvox.SemanticTree.classifyFunction_ = function(funcNode, restNodes) {
  if (funcNode.type == cvox.SemanticAttr.Type.APPL || funcNode.type == cvox.SemanticAttr.Type.BIGOP || funcNode.type == cvox.SemanticAttr.Type.INTEGRAL) {
    return "";
  }
  if (restNodes[0] && restNodes[0].textContent == cvox.SemanticAttr.functionApplication()) {
    return restNodes.shift(), cvox.SemanticTree.propagatePrefixFunc_(funcNode), "prefix";
  }
  switch(funcNode.role) {
    case cvox.SemanticAttr.Role.INTEGRAL:
      return "integral";
    case cvox.SemanticAttr.Role.SUM:
      return "bigop";
    case cvox.SemanticAttr.Role.PREFIXFUNC:
    ;
    case cvox.SemanticAttr.Role.LIMFUNC:
      return "prefix";
    default:
      if (funcNode.type == cvox.SemanticAttr.Type.IDENTIFIER) {
        return "simple";
      }
    ;
  }
  return "";
};
cvox.SemanticTree.propagatePrefixFunc_ = function(funcNode) {
  funcNode && (funcNode.role = cvox.SemanticAttr.Role.PREFIXFUNC, cvox.SemanticTree.propagatePrefixFunc_(funcNode.childNodes[0]));
};
cvox.SemanticTree.prototype.getFunctionArgs_ = function(func, rest, heuristic) {
  switch(heuristic) {
    case "integral":
      var components = this.getIntegralArgs_(rest), integrand = this.processRow_(components.integrand), funcNode = this.makeIntegralNode_(func, integrand, components.intvar);
      components.rest.unshift(funcNode);
      return components.rest;
    case "prefix":
      if (rest[0] && rest[0].type == cvox.SemanticAttr.Type.FENCED) {
        return funcNode = this.makeFunctionNode_(func, rest.shift()), rest.unshift(funcNode), rest;
      }
    ;
    case "bigop":
      var partition = cvox.SemanticTree.sliceNodes_(rest, cvox.SemanticTree.prefixFunctionBoundary_), arg = this.processRow_(partition.head), funcNode = "prefix" == heuristic ? this.makeFunctionNode_(func, arg) : this.makeBigOpNode_(func, arg);
      partition.div && partition.tail.unshift(partition.div);
      partition.tail.unshift(funcNode);
      return partition.tail;
    case "simple":
      if (0 == rest.length) {
        return [func];
      }
      var firstArg = rest[0];
      if (firstArg.type == cvox.SemanticAttr.Type.FENCED && firstArg.role != cvox.SemanticAttr.Role.NEUTRAL && this.simpleFunctionHeuristic_(firstArg)) {
        return funcNode = this.makeFunctionNode_(func, rest.shift()), rest.unshift(funcNode), rest;
      }
      rest.unshift(func);
      return rest;
  }
};
cvox.SemanticTree.prototype.getIntegralArgs_ = function(nodes, args) {
  args = args || [];
  if (0 == nodes.length) {
    return {integrand:args, intvar:null, rest:nodes};
  }
  var firstNode = nodes[0];
  if (cvox.SemanticTree.generalFunctionBoundary_(firstNode)) {
    return {integrand:args, intvar:null, rest:nodes};
  }
  if (cvox.SemanticTree.integralDxBoundarySingle_(firstNode)) {
    return {integrand:args, intvar:firstNode, rest:nodes.slice(1)};
  }
  if (nodes[1] && cvox.SemanticTree.integralDxBoundary_(firstNode, nodes[1])) {
    var comma = this.createNode_();
    comma.updateContent_(cvox.SemanticAttr.invisibleComma());
    var intvar = this.makePunctuatedNode_([firstNode, comma, nodes[1]], [comma]);
    intvar.role = cvox.SemanticAttr.Role.INTEGRAL;
    return {integrand:args, intvar:intvar, rest:nodes.slice(2)};
  }
  args.push(nodes.shift());
  return this.getIntegralArgs_(nodes, args);
};
cvox.SemanticTree.prototype.makeFunctionNode_ = function(func, arg) {
  var applNode = this.createNode_();
  applNode.updateContent_(cvox.SemanticAttr.functionApplication());
  applNode.type = cvox.SemanticAttr.Type.PUNCTUATION;
  applNode.role = cvox.SemanticAttr.Role.APPLICATION;
  var newNode = this.makeBranchNode_(cvox.SemanticAttr.Type.APPL, [func, arg], [applNode]);
  newNode.role = func.role;
  return newNode;
};
cvox.SemanticTree.prototype.makeBigOpNode_ = function(bigOp, arg) {
  var newNode = this.makeBranchNode_(cvox.SemanticAttr.Type.BIGOP, [bigOp, arg], []);
  newNode.role = bigOp.role;
  return newNode;
};
cvox.SemanticTree.prototype.makeIntegralNode_ = function(integral, integrand, intvar) {
  integrand = integrand || this.makeEmptyNode_();
  intvar = intvar || this.makeEmptyNode_();
  var newNode = this.makeBranchNode_(cvox.SemanticAttr.Type.INTEGRAL, [integral, integrand, intvar], []);
  newNode.role = integral.role;
  return newNode;
};
cvox.SemanticTree.prototype.simpleFunctionHeuristic_ = function(node) {
  var children = node.childNodes;
  if (0 == children.length) {
    return !0;
  }
  if (1 < children.length) {
    return !1;
  }
  var child = children[0];
  return child.type != cvox.SemanticAttr.Type.INFIXOP || child.role == cvox.SemanticAttr.Role.IMPLICIT && !child.childNodes.some(cvox.SemanticTree.attrPred_("type", "INFIXOP")) ? !0 : !1;
};
cvox.SemanticTree.prefixFunctionBoundary_ = function(node) {
  return cvox.SemanticTree.attrPred_("type", "OPERATOR")(node) || cvox.SemanticTree.generalFunctionBoundary_(node);
};
cvox.SemanticTree.integralDxBoundary_ = function(firstNode, secondNode) {
  return !!secondNode && cvox.SemanticTree.attrPred_("type", "IDENTIFIER")(secondNode) && cvox.SemanticAttr.isCharacterD(firstNode.textContent);
};
cvox.SemanticTree.integralDxBoundarySingle_ = function(node) {
  if (cvox.SemanticTree.attrPred_("type", "IDENTIFIER")(node)) {
    var firstChar = node.textContent[0];
    return firstChar && node.textContent[1] && cvox.SemanticAttr.isCharacterD(firstChar);
  }
  return !1;
};
cvox.SemanticTree.generalFunctionBoundary_ = function(node) {
  return cvox.SemanticTree.attrPred_("type", "RELATION")(node) || cvox.SemanticTree.attrPred_("type", "PUNCTUATION")(node);
};
cvox.SemanticTree.prototype.processTablesInRow_ = function(nodes) {
  for (var partition = cvox.SemanticTree.partitionNodes_(nodes, cvox.SemanticTree.tableIsMatrixOrVector_), result = [], i = 0, matrix;matrix = partition.rel[i];i++) {
    result = result.concat(partition.comp.shift()), result.push(this.tableToMatrixOrVector_(matrix));
  }
  for (var result = result.concat(partition.comp.shift()), partition = cvox.SemanticTree.partitionNodes_(result, cvox.SemanticTree.isTableOrMultiline_), result = [], i = 0, table;table = partition.rel[i];i++) {
    var prevNodes = partition.comp.shift();
    cvox.SemanticTree.tableIsCases_(table, prevNodes) && this.tableToCases_(table, prevNodes.pop());
    result = result.concat(prevNodes);
    result.push(table);
  }
  return result.concat(partition.comp.shift());
};
cvox.SemanticTree.isTableOrMultiline_ = function(node) {
  return !!node && (cvox.SemanticTree.attrPred_("type", "TABLE")(node) || cvox.SemanticTree.attrPred_("type", "MULTILINE")(node));
};
cvox.SemanticTree.tableIsMatrixOrVector_ = function(node) {
  return !!node && cvox.SemanticTree.attrPred_("type", "FENCED")(node) && cvox.SemanticTree.attrPred_("role", "LEFTRIGHT")(node) && 1 == node.childNodes.length && cvox.SemanticTree.isTableOrMultiline_(node.childNodes[0]);
};
cvox.SemanticTree.prototype.tableToMatrixOrVector_ = function(node) {
  var matrix = node.childNodes[0], type = cvox.SemanticTree.attrPred_("type", "MULTILINE")(matrix) ? "VECTOR" : "MATRIX";
  matrix.type = cvox.SemanticAttr.Type[type];
  node.contentNodes.forEach(goog.bind(matrix.appendContentNode_, matrix));
  for (var i = 0, row;row = matrix.childNodes[i];i++) {
    cvox.SemanticTree.assignRoleToRow_(row, cvox.SemanticAttr.Role[type]);
  }
  return matrix;
};
cvox.SemanticTree.tableIsCases_ = function(table, prevNodes) {
  return 0 < prevNodes.length && cvox.SemanticTree.attrPred_("role", "OPENFENCE")(prevNodes[prevNodes.length - 1]);
};
cvox.SemanticTree.prototype.tableToCases_ = function(table, openFence) {
  for (var i = 0, row;row = table.childNodes[i];i++) {
    cvox.SemanticTree.assignRoleToRow_(row, cvox.SemanticAttr.Role.CASES);
  }
  table.type = cvox.SemanticAttr.Type.CASES;
  table.appendContentNode_(openFence);
  return table;
};
cvox.SemanticTree.tableIsMultiline_ = function(table) {
  return table.childNodes.every(function(row) {
    var length = row.childNodes.length;
    return 1 >= length;
  });
};
cvox.SemanticTree.prototype.tableToMultiline_ = function(table) {
  table.type = cvox.SemanticAttr.Type.MULTILINE;
  for (var i = 0, row;row = table.childNodes[i];i++) {
    cvox.SemanticTree.rowToLine_(row, cvox.SemanticAttr.Role.MULTILINE);
  }
};
cvox.SemanticTree.rowToLine_ = function(row, role) {
  role = role || cvox.SemanticAttr.Role.UNKNOWN;
  cvox.SemanticTree.attrPred_("type", "ROW")(row) && 1 == row.childNodes.length && cvox.SemanticTree.attrPred_("type", "CELL")(row.childNodes[0]) && (row.type = cvox.SemanticAttr.Type.LINE, row.role = role, row.childNodes = row.childNodes[0].childNodes);
};
cvox.SemanticTree.assignRoleToRow_ = function(row, role) {
  if (cvox.SemanticTree.attrPred_("type", "LINE")(row)) {
    row.role = role;
  } else {
    if (cvox.SemanticTree.attrPred_("type", "ROW")(row)) {
      row.role = role;
      var cellPred = cvox.SemanticTree.attrPred_("type", "CELL");
      row.childNodes.forEach(function(cell) {
        cellPred(cell) && (cell.role = role);
      });
    }
  }
};
cvox.SemanticTree.sliceNodes_ = function(nodes, pred, reverse) {
  reverse && nodes.reverse();
  for (var head = [], i = 0, node;node = nodes[i];i++) {
    if (pred(node)) {
      return reverse ? {head:nodes.slice(i + 1).reverse(), div:node, tail:head.reverse()} : {head:head, div:node, tail:nodes.slice(i + 1)};
    }
    head.push(node);
  }
  return reverse ? {head:[], div:null, tail:head.reverse()} : {head:head, div:null, tail:[]};
};
cvox.SemanticTree.partitionNodes_ = function(nodes, pred) {
  var restNodes = nodes, rel = [], comp = [];
  do {
    var result = cvox.SemanticTree.sliceNodes_(restNodes, pred);
    comp.push(result.head);
    rel.push(result.div);
    restNodes = result.tail;
  } while (result.div);
  rel.pop();
  return {rel:rel, comp:comp};
};
cvox.SemanticTree.attrPred_ = function(prop, attr) {
  return function(node) {
    var JSCompiler_inline_result;
    a: {
      switch(prop) {
        case "type":
          JSCompiler_inline_result = cvox.SemanticAttr.Type[attr];
          break a;
        case "role":
          JSCompiler_inline_result = cvox.SemanticAttr.Role[attr];
          break a;
        case "font":
          JSCompiler_inline_result = cvox.SemanticAttr.Font[attr];
          break a;
      }
      JSCompiler_inline_result = void 0;
    }
    return node[prop] == JSCompiler_inline_result;
  };
};
cvox.TraverseMath = function() {
  this.activeNode = this.activeMath = null;
  this.allTexs_ = {};
  this.allMathjaxs_ = {};
  this.activeMathmlHost = null;
  this.domain = "default";
  this.style = "short";
  cvox.ChromeVox.mathJax && (this.initializeMathjaxs(), this.initializeAltMaths());
};
goog.addSingletonGetter(cvox.TraverseMath);
cvox.TraverseMath.setSemantic_ = !1;
cvox.TraverseMath.toggleSemantic = function() {
  return cvox.TraverseMath.setSemantic_ = !cvox.TraverseMath.setSemantic_;
};
cvox.TraverseMath.prototype.initialize = function(node) {
  if (cvox.DomUtil.isMathImg(node)) {
    if (!node.hasAttribute("cvoxid")) {
      return;
    }
    var cvoxid = node.getAttribute("cvoxid");
    node = this.allTexs_[cvoxid];
  }
  cvox.DomUtil.isMathJax(node) && (this.activeMathmlHost = this.allMathjaxs_[node.getAttribute("id")]);
  this.activeMath = this.activeMathmlHost || node;
  (this.activeNode = this.activeMathmlHost || node) && cvox.TraverseMath.setSemantic_ && this.activeNode.nodeType == Node.ELEMENT_NODE && (this.activeNode = (new cvox.SemanticTree(this.activeNode)).xml());
};
cvox.TraverseMath.prototype.addMathjax = function(mml, id) {
  var spanId = cvox.DomUtil.getMathSpanId(id);
  spanId ? this.allMathjaxs_[spanId] = mml : this.redoMathjaxs(mml, id);
};
cvox.TraverseMath.prototype.redoMathjaxs = function(mml, id) {
  var fetch = goog.bind(function() {
    this.addMathjax(mml, id);
  }, this);
  setTimeout(fetch, 500);
};
cvox.TraverseMath.prototype.initializeMathjaxs = function() {
  var callback = goog.bind(function(mml, id) {
    this.addMathjax(mml, id);
  }, this);
  cvox.ChromeVox.mathJax.isMathjaxActive(function(bool) {
    bool && (cvox.ChromeVox.mathJax.getAllJax(callback), cvox.ChromeVox.mathJax.registerSignal(callback, "New Math"));
  });
};
cvox.TraverseMath.prototype.initializeAltMaths = function() {
  if (document.querySelector(cvox.DomUtil.altMathQuerySelector("tex") + ", " + cvox.DomUtil.altMathQuerySelector("asciimath"))) {
    var callback = goog.bind(function(mml, id) {
      this.allTexs_[id] = mml;
    }, this);
    cvox.ChromeVox.mathJax.injectScripts();
    cvox.ChromeVox.mathJax.isMathjaxActive(function(active) {
      active && (cvox.ChromeVox.mathJax.configMediaWiki(), cvox.ChromeVox.mathJax.getAllTexs(callback), cvox.ChromeVox.mathJax.getAllAsciiMaths(callback));
    });
  }
};
cvox.TraverseMath.prototype.nextSibling = function(r) {
  if (!this.activeNode || !this.activeMath) {
    return null;
  }
  var node = this.activeNode, node = r ? node.previousSibling : node.nextSibling;
  return node ? this.activeNode = node : null;
};
cvox.TraverseMath.prototype.nextParentChild = function(r) {
  if (!this.activeNode || !this.activeMath || this.activeNode == this.activeMath && r) {
    return null;
  }
  var node = this.activeNode, node = r ? node.parentNode : node.firstChild;
  return node ? this.activeNode = node : null;
};
cvox.TraverseMath.prototype.getAttachedActiveNode = function() {
  var node = this.activeNode;
  if (!node || node.nodeType != Node.ELEMENT_NODE) {
    return null;
  }
  var id = node.getAttribute("spanID");
  return document.getElementById(id);
};
cvox.MathUtil = {};
cvox.MathUtil.isMathmlNodeOfClass_ = function(node, tags) {
  return -1 != tags.indexOf(node.tagName.toUpperCase());
};
cvox.MathUtil.isMathjaxNodeOfClass_ = function(node, tags) {
  if ("SPAN" == node.tagName) {
    var classes = node.className.split(" ");
    return classes.some(function(x) {
      return -1 != tags.indexOf(x.toUpperCase());
    });
  }
  return !1;
};
cvox.MathUtil.isMathNodeOfClass_ = function(node, tags) {
  return node.nodeType == Node.ELEMENT_NODE && (cvox.MathUtil.isMathmlNodeOfClass_(node, tags) || cvox.MathUtil.isMathjaxNodeOfClass_(node, tags));
};
cvox.MathUtil.TOKEN_LIST = "MI MN MO MTEXT MSPACE MS".split(" ");
cvox.MathUtil.isToken = function(element) {
  return cvox.MathUtil.isMathNodeOfClass_(element, cvox.MathUtil.TOKEN_LIST);
};
cvox.MathUtil.LAYOUT_LIST = "MROW MFRAC MSQRT MROOT MSTYLE MERROR MPADDED MPHANTOM MFENCED MENCLOSE".split(" ");
cvox.MathUtil.isLayout = function(element) {
  return cvox.MathUtil.isMathNodeOfClass_(element, cvox.MathUtil.LAYOUT_LIST);
};
cvox.MathUtil.SCRIPT_LIST = "MSUB MSUP MSUBSUP MUNDER MOVER MUNDEROVER MMULTISCRIPTS MPRESCRIPTS".split(" ");
cvox.MathUtil.isScript = function(element) {
  return cvox.MathUtil.isMathNodeOfClass_(element, cvox.MathUtil.SCRIPT_LIST);
};
cvox.MathUtil.TABLES_LIST = "MTABLE MLABELEDTR MTR MTD MALIGNGROUP MALIGNMARK".split(" ");
cvox.MathUtil.isTables = function(element) {
  return cvox.MathUtil.isMathNodeOfClass_(element, cvox.MathUtil.TABLES_LIST);
};
cvox.MathUtil.ELEMENTARY_LIST = "MSTACK MLONGDIV MSGROUP MSROW MSCARRIES MSCARRY MSLINE".split(" ");
cvox.MathUtil.isElementary = function(element) {
  return cvox.MathUtil.isMathNodeOfClass_(element, cvox.MathUtil.ELEMENTARY_LIST);
};
cvox.MathUtil.MATHML_TAG_LIST = [cvox.MathUtil.TOKEN_LIST, cvox.MathUtil.LAYOUT_LIST, cvox.MathUtil.SCRIPT_LIST, cvox.MathUtil.TABLES_LIST, cvox.MathUtil.ELEMENTARY_LIST].reduce(function(x, y) {
  return x.concat(y);
});
cvox.MathUtil.isMathmlTag = function(element) {
  return cvox.MathUtil.isMathNodeOfClass_(element, cvox.MathUtil.MATHML_TAG_LIST);
};
cvox.MathUtil.WHITESPACE_LIST = ["MSROW", "MROW", "MSPACE", "MPHANTOM", "MPADDED"];
cvox.MathUtil.isWhitespace = function(element) {
  return cvox.MathUtil.isMathNodeOfClass_(element, cvox.MathUtil.WHITESPACE_LIST);
};
cvox.MathUtil.isNotWhitespace = function(element) {
  return cvox.MathUtil.isMathmlTag(element) && !cvox.MathUtil.isWhitespace(element);
};
cvox.MathUtil.union = function(a, b) {
  return a.concat(b.filter(function(x) {
    return 0 > a.indexOf(x);
  }));
};
cvox.SpeechRule = function(name, dynamic, prec, action) {
  this.name = name;
  this.dynamicCstr = dynamic;
  this.precondition = prec;
  this.action = action;
};
cvox.SpeechRule.prototype.toString = function() {
  var cstrStrings = [], key;
  for (key in this.dynamicCstr) {
    cstrStrings.push(this.dynamicCstr[key]);
  }
  return this.name + " | " + cstrStrings.join(".") + " | " + this.precondition.toString() + " ==> " + this.action.toString();
};
cvox.SpeechRule.Type = {NODE:"NODE", MULTI:"MULTI", TEXT:"TEXT", PERSONALITY:"PERSONALITY"};
cvox.SpeechRule.Type.fromString = function(str) {
  switch(str) {
    case "[n]":
      return cvox.SpeechRule.Type.NODE;
    case "[m]":
      return cvox.SpeechRule.Type.MULTI;
    case "[t]":
      return cvox.SpeechRule.Type.TEXT;
    case "[p]":
      return cvox.SpeechRule.Type.PERSONALITY;
    default:
      throw "Parse error: " + str;;
  }
};
cvox.SpeechRule.Type.toString = function(speechType) {
  switch(speechType) {
    case cvox.SpeechRule.Type.NODE:
      return "[n]";
    case cvox.SpeechRule.Type.MULTI:
      return "[m]";
    case cvox.SpeechRule.Type.TEXT:
      return "[t]";
    case cvox.SpeechRule.Type.PERSONALITY:
      return "[p]";
    default:
      throw "Unknown type error: " + speechType;;
  }
};
cvox.SpeechRule.Component = function(kwargs) {
  this.type = kwargs.type;
  this.content = kwargs.content;
};
cvox.SpeechRule.Component.fromString = function(input) {
  var output = {};
  output.type = cvox.SpeechRule.Type.fromString(input.substring(0, 3));
  var rest = input.slice(3).trimLeft();
  if (!rest) {
    throw new cvox.SpeechRule.OutputError("Missing content.");
  }
  switch(output.type) {
    case cvox.SpeechRule.Type.TEXT:
      if ('"' == rest[0]) {
        var quotedString = cvox.SpeechRule.splitString_(rest, "\\(")[0].trim();
        if ('"' != quotedString.slice(-1)) {
          throw new cvox.SpeechRule.OutputError("Invalid string syntax.");
        }
        output.content = quotedString;
        rest = rest.slice(quotedString.length).trim();
        -1 == rest.indexOf("(") && (rest = "");
        break;
      }
    ;
    case cvox.SpeechRule.Type.NODE:
    ;
    case cvox.SpeechRule.Type.MULTI:
      var bracket = rest.indexOf(" (");
      -1 == bracket ? (output.content = rest.trim(), rest = "") : (output.content = rest.substring(0, bracket).trim(), rest = rest.slice(bracket).trimLeft());
  }
  output = new cvox.SpeechRule.Component(output);
  rest && output.addAttributes(rest);
  return output;
};
cvox.SpeechRule.Component.prototype.toString = function() {
  var strs = "", strs = strs + cvox.SpeechRule.Type.toString(this.type), strs = strs + (this.content ? " " + this.content : ""), attribs = this.getAttributes();
  0 < attribs.length && (strs += " (" + attribs.join(", ") + ")");
  return strs;
};
cvox.SpeechRule.Component.prototype.addAttribute = function(attr) {
  var colon = attr.indexOf(":");
  -1 == colon ? this[attr.trim()] = "true" : this[attr.substring(0, colon).trim()] = attr.slice(colon + 1).trim();
};
cvox.SpeechRule.Component.prototype.addAttributes = function(attrs) {
  if ("(" != attrs[0] || ")" != attrs.slice(-1)) {
    throw new cvox.SpeechRule.OutputError("Invalid attribute expression: " + attrs);
  }
  for (var attribs = cvox.SpeechRule.splitString_(attrs.slice(1, -1), ","), i = 0;i < attribs.length;i++) {
    this.addAttribute(attribs[i]);
  }
};
cvox.SpeechRule.Component.prototype.getAttributes = function() {
  var attribs = [], key;
  for (key in this) {
    "content" != key && "type" != key && "function" != typeof this[key] && attribs.push(key + ":" + this[key]);
  }
  return attribs;
};
cvox.SpeechRule.Action = function(components) {
  this.components = components;
};
cvox.SpeechRule.Action.fromString = function(input) {
  for (var comps = cvox.SpeechRule.splitString_(input, ";").filter(function(x) {
    return x.match(/\S/);
  }).map(function(x) {
    return x.trim();
  }), newComps = [], i = 0;i < comps.length;i++) {
    var comp = cvox.SpeechRule.Component.fromString(comps[i]);
    comp && newComps.push(comp);
  }
  return new cvox.SpeechRule.Action(newComps);
};
cvox.SpeechRule.Action.prototype.toString = function() {
  var comps = this.components.map(function(c) {
    return c.toString();
  });
  return comps.join("; ");
};
cvox.SpeechRule.Precondition = function(query, opt_constraints) {
  this.query = query;
  this.constraints = opt_constraints || [];
};
cvox.SpeechRule.Precondition.prototype.toString = function() {
  var constrs = this.constraints.join(", ");
  return this.query + ", " + constrs;
};
cvox.SpeechRule.splitString_ = function(str, sep) {
  for (var strList = [], prefix = "";"" != str;) {
    var sepPos = str.search(sep);
    if (-1 == sepPos) {
      if (0 != (str.match(/"/g) || []).length % 2) {
        throw new cvox.SpeechRule.OutputError("Invalid string in expression: " + str);
      }
      strList.push(prefix + str);
      str = prefix = "";
    } else {
      if (0 == (str.substring(0, sepPos).match(/"/g) || []).length % 2) {
        strList.push(prefix + str.substring(0, sepPos)), prefix = "", str = str.substring(sepPos + 1);
      } else {
        var nextQuot = str.substring(sepPos).search('"');
        if (-1 == nextQuot) {
          throw new cvox.SpeechRule.OutputError("Invalid string in expression: " + str);
        }
        prefix += str.substring(0, sepPos + nextQuot + 1);
        str = str.substring(sepPos + nextQuot + 1);
      }
    }
  }
  prefix && strList.push(prefix);
  return strList;
};
cvox.SpeechRule.DynamicCstrAttrib = {STYLE:"style"};
cvox.SpeechRule.OutputError = function(msg) {
  this.name = "RuleError";
  this.message = msg || "";
};
goog.inherits(cvox.SpeechRule.OutputError, Error);
cvox.SpeechRuleFunctions = function() {
};
cvox.SpeechRuleFunctions.Store_ = function(prefix, store) {
  this.prefix_ = prefix;
  this.store_ = store;
};
cvox.SpeechRuleFunctions.Store_.prototype.add = function(name, func) {
  this.checkCustomFunctionSyntax_(name) && (this.store_[name] = func);
};
cvox.SpeechRuleFunctions.Store_.prototype.lookup = function(name) {
  return this.store_[name];
};
cvox.SpeechRuleFunctions.CustomQueries = function() {
  var store = {};
  cvox.SpeechRuleFunctions.Store_.call(this, "CQF", store);
};
goog.inherits(cvox.SpeechRuleFunctions.CustomQueries, cvox.SpeechRuleFunctions.Store_);
cvox.SpeechRuleFunctions.CustomStrings = function() {
  var store = {};
  cvox.SpeechRuleFunctions.Store_.call(this, "CSF", store);
};
goog.inherits(cvox.SpeechRuleFunctions.CustomStrings, cvox.SpeechRuleFunctions.Store_);
cvox.SpeechRuleFunctions.ContextFunctions = function() {
  var store = {};
  cvox.SpeechRuleFunctions.Store_.call(this, "CTXF", store);
};
goog.inherits(cvox.SpeechRuleFunctions.ContextFunctions, cvox.SpeechRuleFunctions.Store_);
cvox.SpeechRuleFunctions.Store_.prototype.checkCustomFunctionSyntax_ = function(name) {
  var reg = new RegExp("^" + this.prefix_);
  return name.match(reg) ? !0 : (console.log("FunctionError: Invalid function name. Expected prefix" + this.prefix_), !1);
};
cvox.BaseRuleStore = function() {
  this.customQueries = new cvox.SpeechRuleFunctions.CustomQueries;
  this.customStrings = new cvox.SpeechRuleFunctions.CustomStrings;
  this.contextFunctions = new cvox.SpeechRuleFunctions.ContextFunctions;
  this.speechRules_ = [];
  this.dynamicCstrAttribs = [cvox.SpeechRule.DynamicCstrAttrib.STYLE];
  this.defaultTtsProps = [];
};
cvox.BaseRuleStore.prototype.lookupRule = function(node, dynamic) {
  if (!node || node.nodeType != Node.ELEMENT_NODE && node.nodeType != Node.TEXT_NODE) {
    return null;
  }
  var matchingRules = this.speechRules_.filter(goog.bind(function(rule) {
    return this.testDynamicConstraints(dynamic, rule) && this.testPrecondition_(node, rule);
  }, this));
  return 0 < matchingRules.length ? this.pickMostConstraint_(dynamic, matchingRules) : null;
};
cvox.BaseRuleStore.prototype.defineRule = function(name, dynamic, action, prec, cstr) {
  try {
    var postc = cvox.SpeechRule.Action.fromString(action), cstrList = Array.prototype.slice.call(arguments, 4), fullPrec = new cvox.SpeechRule.Precondition(prec, cstrList), dynamicCstr = {};
    dynamicCstr[cvox.SpeechRule.DynamicCstrAttrib.STYLE] = dynamic;
    var rule = new cvox.SpeechRule(name, dynamicCstr, fullPrec, postc);
  } catch (err) {
    if ("RuleError" == err.name) {
      return console.log("Rule Error ", prec, "(" + dynamic + "):", err.message), null;
    }
    throw err;
  }
  this.addRule(rule);
  return rule;
};
cvox.BaseRuleStore.prototype.addRule = function(rule) {
  this.speechRules_.unshift(rule);
};
cvox.BaseRuleStore.prototype.deleteRule = function(rule) {
  var index = this.speechRules_.indexOf(rule);
  -1 != index && this.speechRules_.splice(index, 1);
};
cvox.BaseRuleStore.prototype.findRule = function(pred) {
  for (var i = 0, rule;rule = this.speechRules_[i];i++) {
    if (pred(rule)) {
      return rule;
    }
  }
  return null;
};
cvox.BaseRuleStore.prototype.findAllRules = function(pred) {
  return this.speechRules_.filter(pred);
};
cvox.BaseRuleStore.prototype.evaluateDefault = function(node) {
  return [new cvox.NavDescription({text:node.textContent})];
};
cvox.BaseRuleStore.prototype.removeDuplicates = function(rule) {
  for (var i = this.speechRules_.length - 1, oldRule;oldRule = this.speechRules_[i];i--) {
    oldRule != rule && cvox.BaseRuleStore.compareDynamicConstraints_(oldRule.dynamicCstr, rule.dynamicCstr) && cvox.BaseRuleStore.comparePreconditions_(oldRule, rule) && this.speechRules_.splice(i, 1);
  }
};
cvox.BaseRuleStore.prototype.applyCustomQuery = function(node, funcName) {
  var func = this.customQueries.lookup(funcName);
  return func ? func(node) : null;
};
cvox.BaseRuleStore.prototype.applySelector = function(node, expr) {
  var result = this.applyCustomQuery(node, expr);
  return result || cvox.XpathUtil.evalXPath(expr, node);
};
cvox.BaseRuleStore.prototype.applyQuery = function(node, expr) {
  var results = this.applySelector(node, expr);
  return 0 < results.length ? results[0] : null;
};
cvox.BaseRuleStore.prototype.applyConstraint = function(node, expr) {
  var result = this.applyQuery(node, expr);
  return !!result || cvox.XpathUtil.evaluateBoolean(expr, node);
};
cvox.BaseRuleStore.prototype.testDynamicConstraints = function(dynamic, rule) {
  var allKeys = Object.keys(dynamic);
  return allKeys.every(function(key) {
    return dynamic[key] == rule.dynamicCstr[key] || "default" == rule.dynamicCstr[key];
  });
};
cvox.BaseRuleStore.prototype.getDynamicConstraintValues = function() {
  for (var result = {}, i = 0, rule;rule = this.speechRules_[i];i++) {
    for (var key in rule.dynamicCstr) {
      var newKey = [rule.dynamicCstr[key]];
      result[key] = result[key] ? cvox.MathUtil.union(result[key], newKey) : newKey;
    }
  }
  return result;
};
cvox.BaseRuleStore.prototype.countMatchingDynamicConstraintValues_ = function(dynamic, rule) {
  for (var result = 0, i = 0, key;key = this.dynamicCstrAttribs[i];i++) {
    if (dynamic[key] == rule.dynamicCstr[key]) {
      result++;
    } else {
      break;
    }
  }
  return result;
};
cvox.BaseRuleStore.prototype.pickMostConstraint_ = function(dynamic, rules) {
  rules.sort(goog.bind(function(r1, r2) {
    var count1 = this.countMatchingDynamicConstraintValues_(dynamic, r1), count2 = this.countMatchingDynamicConstraintValues_(dynamic, r2);
    return count1 > count2 ? -1 : count2 > count1 ? 1 : r2.precondition.constraints.length - r1.precondition.constraints.length;
  }, this));
  return rules[0];
};
cvox.BaseRuleStore.prototype.testPrecondition_ = function(node, rule) {
  var prec = rule.precondition;
  return this.applyQuery(node, prec.query) === node && prec.constraints.every(goog.bind(function(cstr) {
    return this.applyConstraint(node, cstr);
  }, this));
};
cvox.BaseRuleStore.compareDynamicConstraints_ = function(cstr1, cstr2) {
  if (Object.keys(cstr1).length != Object.keys(cstr2).length) {
    return !1;
  }
  for (var key in cstr1) {
    if (!cstr2[key] || cstr1[key] !== cstr2[key]) {
      return !1;
    }
  }
  return !0;
};
cvox.BaseRuleStore.compareStaticConstraints_ = function(cstr1, cstr2) {
  if (cstr1.length != cstr2.length) {
    return !1;
  }
  for (var i = 0, cstr;cstr = cstr1[i];i++) {
    if (-1 == cstr2.indexOf(cstr)) {
      return !1;
    }
  }
  return !0;
};
cvox.BaseRuleStore.comparePreconditions_ = function(rule1, rule2) {
  var prec1 = rule1.precondition, prec2 = rule2.precondition;
  return prec1.query != prec2.query ? !1 : cvox.BaseRuleStore.compareStaticConstraints_(prec1.constraints, prec2.constraints);
};
cvox.MathStore = function() {
  cvox.BaseRuleStore.call(this);
  this.dynamicCstrAttribs = [cvox.SpeechRule.DynamicCstrAttrib.DOMAIN, cvox.SpeechRule.DynamicCstrAttrib.STYLE];
  this.defaultTtsProps = [cvox.AbstractTts.PITCH, cvox.AbstractTts.RATE];
};
goog.inherits(cvox.MathStore, cvox.BaseRuleStore);
cvox.SpeechRule.DynamicCstrAttrib.DOMAIN = "domain";
cvox.MathStore.prototype.defineRule = function(name, dynamic, action, query, cstr) {
  var dynamicCstr = this.parseDynamicConstraint(dynamic), cstrList = Array.prototype.slice.call(arguments, 4), rule = cvox.MathStore.superClass_.defineRule.apply(this, [name, dynamicCstr[cvox.SpeechRule.DynamicCstrAttrib.STYLE], action, query].concat(cstrList));
  rule.dynamicCstr = dynamicCstr;
  this.removeDuplicates(rule);
  return rule;
};
cvox.MathStore.prototype.parseDynamicConstraint = function(cstr) {
  var domainStyle = cstr.split(".");
  if (!domainStyle[0] || !domainStyle[1]) {
    throw new cvox.SpeechRule.OutputError("Invalid domain assignment:" + cstr);
  }
  return cvox.MathStore.createDynamicConstraint(domainStyle[0], domainStyle[1]);
};
cvox.MathStore.createDynamicConstraint = function(domain, style) {
  var dynamicCstr = {};
  dynamicCstr[cvox.SpeechRule.DynamicCstrAttrib.DOMAIN] = domain;
  dynamicCstr[cvox.SpeechRule.DynamicCstrAttrib.STYLE] = style;
  return dynamicCstr;
};
cvox.MathStore.prototype.defineRuleAlias = function(name, query, cstr) {
  var rule$$0 = this.findRule(function(rule) {
    return rule.name == name;
  });
  if (!rule$$0) {
    throw new cvox.SpeechRule.OutputError("Rule with named " + name + " does not exist.");
  }
  this.addAlias_(rule$$0, query, Array.prototype.slice.call(arguments, 2));
};
cvox.MathStore.prototype.addAlias_ = function(rule, query, cstrList) {
  var prec = new cvox.SpeechRule.Precondition(query, cstrList), newRule = new cvox.SpeechRule(rule.name, rule.dynamicCstr, prec, rule.action);
  newRule.name = rule.name;
  this.addRule(newRule);
};
cvox.MathStore.prototype.evaluateDefault = function(node) {
  return this.evaluateString_(node.textContent);
};
cvox.MathStore.prototype.evaluateString_ = function(str) {
  var descs = [];
  if (str.match(/^\s+$/)) {
    return descs;
  }
  for (var split = cvox.MathStore.removeEmpty_(str.replace(/\s/g, " ").split(" ")), i = 0, s;s = split[i];i++) {
    if (1 == s.length) {
      descs.push(this.evaluate_(s));
    } else {
      if (s.match(/^[a-zA-Z]+$/)) {
        descs.push(this.evaluate_(s));
      } else {
        for (var rest = s;rest;) {
          var num = rest.match(/^\d+/), alpha = rest.match(/^[a-zA-Z]+/);
          if (num) {
            descs.push(this.evaluate_(num[0])), rest = rest.substring(num[0].length);
          } else {
            if (alpha) {
              descs.push(this.evaluate_(alpha[0])), rest = rest.substring(alpha[0].length);
            } else {
              var chr = rest[0], code = chr.charCodeAt(0);
              55296 <= code && 56319 >= code && 1 < rest.length && !isNaN(rest.charCodeAt(1)) ? (descs.push(this.evaluate_(rest.slice(0, 2))), rest = rest.substring(2)) : (descs.push(this.evaluate_(rest[0])), rest = rest.substring(1));
            }
          }
        }
      }
    }
  }
  return descs;
};
cvox.MathStore.prototype.evaluate_ = function(text) {
  return cvox.ChromeVox.host.mathMap ? cvox.ChromeVox.host.mathMap.evaluate(text, cvox.TraverseMath.getInstance().domain, cvox.TraverseMath.getInstance().style) : new cvox.NavMathDescription({text:text, domain:cvox.TraverseMath.getInstance().domain, style:cvox.TraverseMath.getInstance().style});
};
cvox.MathStore.removeEmpty_ = function(strs) {
  return strs.filter(function(str) {
    return str;
  });
};
cvox.MathmlStore = function() {
  cvox.MathStore.call(this);
};
goog.inherits(cvox.MathmlStore, cvox.MathStore);
goog.addSingletonGetter(cvox.MathmlStore);
cvox.MathmlStore.prototype.defineDefaultMathmlRule = function(name, rule) {
  this.defineRule(name, "default.default", rule, "self::mathml:" + name);
};
cvox.SpeechRuleEngine = function() {
  this.activeStore_ = null;
  this.dynamicCstr = {};
  this.dynamicCstr[cvox.SpeechRule.DynamicCstrAttrib.STYLE] = "short";
};
goog.addSingletonGetter(cvox.SpeechRuleEngine);
cvox.SpeechRuleEngine.prototype.parameterize = function(store) {
  try {
    store.initialize();
  } catch (err) {
    if ("StoreError" == err.name) {
      console.log("Store Error:", err.message);
    } else {
      throw err;
    }
  }
  this.activeStore_ = store;
};
cvox.SpeechRuleEngine.prototype.setDynamicConstraint = function(dynamic) {
  dynamic && (this.dynamicCstr = dynamic);
};
cvox.SpeechRuleEngine.prototype.constructString = function(node, expr) {
  if (!expr) {
    return "";
  }
  if ('"' == expr.charAt(0)) {
    return expr.slice(1, -1);
  }
  var func = this.activeStore_.customStrings.lookup(expr);
  return func ? func(node) : cvox.XpathUtil.evaluateString(expr, node);
};
cvox.SpeechRuleEngine.prototype.evaluateNode = function(node) {
  return node ? this.evaluateTree_(node) : [];
};
cvox.SpeechRuleEngine.prototype.evaluateTree_ = function(node) {
  var rule = this.activeStore_.lookupRule(node, this.dynamicCstr);
  if (!rule) {
    return this.activeStore_.evaluateDefault(node);
  }
  for (var components = rule.action.components, result = [], i = 0, component;component = components[i];i++) {
    var navs = [], content = component.content || "";
    switch(component.type) {
      case cvox.SpeechRule.Type.NODE:
        var selected = this.activeStore_.applyQuery(node, content);
        selected && (navs = this.evaluateTree_(selected));
        break;
      case cvox.SpeechRule.Type.MULTI:
        selected = this.activeStore_.applySelector(node, content);
        0 < selected.length && (navs = this.evaluateNodeList_(selected, component.sepFunc, this.constructString(node, component.separator), component.ctxtFunc, this.constructString(node, component.context)));
        break;
      case cvox.SpeechRule.Type.TEXT:
        (selected = this.constructString(node, content)) && (navs = [new cvox.NavDescription({text:selected})]);
        break;
      default:
        navs = [new cvox.NavDescription({text:content})];
    }
    navs[0] && component.context && component.type != cvox.SpeechRule.Type.MULTI && (navs[0].context = this.constructString(node, component.context) + (navs[0].context || ""));
    result = result.concat(this.addPersonality_(navs, component));
  }
  return result;
};
cvox.SpeechRuleEngine.prototype.evaluateNodeList_ = function(nodes, sepFunc, separator, ctxtFunc, context) {
  if (nodes == []) {
    return [];
  }
  for (var sep = separator || "", cont = context || "", cFunc = this.activeStore_.contextFunctions.lookup(ctxtFunc), ctxtClosure = cFunc ? cFunc(nodes, cont) : function() {
    return cont;
  }, sFunc = this.activeStore_.contextFunctions.lookup(sepFunc), sepClosure = sFunc ? sFunc(nodes, sep) : function() {
    return sep;
  }, result = [], i = 0, node;node = nodes[i];i++) {
    var navs = this.evaluateTree_(node);
    if (0 < navs.length && (navs[0].context = ctxtClosure() + (navs[0].context || ""), result = result.concat(navs), i < nodes.length - 1)) {
      var text = sepClosure();
      text && result.push(new cvox.NavDescription({text:text}));
    }
  }
  return result;
};
cvox.SpeechRuleEngine.propMap = {pitch:cvox.AbstractTts.RELATIVE_PITCH, rate:cvox.AbstractTts.RELATIVE_RATE, volume:cvox.AbstractTts.RELATIVE_VOLUME, pause:cvox.AbstractTts.PAUSE};
cvox.SpeechRuleEngine.prototype.addPersonality_ = function(navs, props) {
  var personality = {}, key;
  for (key in cvox.SpeechRuleEngine.propMap) {
    var value = parseFloat(props[key]);
    isNaN(value) || (personality[cvox.SpeechRuleEngine.propMap[key]] = value);
  }
  navs.forEach(goog.bind(function(nav) {
    this.addRelativePersonality_(nav, personality);
    this.resetPersonality_(nav);
  }, this));
  return navs;
};
cvox.SpeechRuleEngine.prototype.addRelativePersonality_ = function(nav, personality) {
  if (!nav.personality) {
    return nav.personality = personality, nav;
  }
  var navPersonality = nav.personality, p;
  for (p in personality) {
    navPersonality[p] = navPersonality[p] && "number" == typeof navPersonality[p] ? navPersonality[p] + personality[p] : personality[p];
  }
  return nav;
};
cvox.SpeechRuleEngine.prototype.resetPersonality_ = function(nav) {
  if (this.activeStore_.defaultTtsProps) {
    for (var i = 0, prop;prop = this.activeStore_.defaultTtsProps[i];i++) {
      nav.personality[prop] = cvox.ChromeVox.tts.getDefaultProperty(prop);
    }
  }
};
cvox.SpeechRuleEngine.debugMode = !1;
cvox.SpeechRuleEngine.outputDebug = function(output) {
  if (cvox.SpeechRuleEngine.debugMode) {
    var outputList = Array.prototype.slice.call(arguments, 0);
    console.log.apply(console, ["Speech Rule Engine Debugger:"].concat(outputList));
  }
};
cvox.SpeechRuleEngine.prototype.toString = function() {
  var allRules = this.activeStore_.findAllRules(function() {
    return !0;
  });
  return allRules.map(function(rule) {
    return rule.toString();
  }).join("\n");
};
cvox.SpeechRuleEngine.debugSpeechRule = function(rule, node) {
  var store = cvox.SpeechRuleEngine.getInstance().activeStore_;
  if (store) {
    var prec = rule.precondition;
    cvox.SpeechRuleEngine.outputDebug(prec.query, store.applyQuery(node, prec.query));
    prec.constraints.forEach(function(cstr) {
      cvox.SpeechRuleEngine.outputDebug(cstr, store.applyConstraint(node, cstr));
    });
  }
};
cvox.SpeechRuleEngine.debugNamedSpeechRule = function(name, node) {
  for (var store = cvox.SpeechRuleEngine.getInstance().activeStore_, allRules = store.findAllRules(function(rule) {
    return rule.name == name;
  }), i = 0, rule$$0;rule$$0 = allRules[i];i++) {
    cvox.SpeechRuleEngine.outputDebug("Rule", name, "number", i), cvox.SpeechRuleEngine.debugSpeechRule(rule$$0, node);
  }
};
cvox.AbstractWalker = function() {
};
cvox.AbstractWalker.prototype.begin = function(kwargs) {
  kwargs = kwargs || {reversed:!1};
  return this.sync(cvox.CursorSelection.fromBody().setReversed(kwargs.reversed));
};
cvox.AbstractWalker.prototype.hasAction = function(name) {
  return "function" == typeof this[name];
};
cvox.AbstractWalker.prototype.performAction = function(name, sel) {
  return this.hasAction(name) ? this[name](sel) : null;
};
cvox.AbstractNodeWalker = function() {
  this.wasBegin_ = !1;
};
goog.inherits(cvox.AbstractNodeWalker, cvox.AbstractWalker);
cvox.AbstractNodeWalker.prototype.next = function(sel) {
  var r = sel.isReversed(), node = sel.end.node || document.body;
  do {
    if (node = cvox.DomUtil.directedNextLeafLikeNode(node, r, goog.bind(this.stopNodeDescent, this)), !node) {
      return null;
    }
  } while (node && !cvox.DomUtil.hasContent(node));
  return cvox.CursorSelection.fromNode(node).setReversed(r);
};
cvox.AbstractNodeWalker.prototype.sync = function(sel) {
  var ret = this.privateSync_(sel);
  this.wasBegin_ = !1;
  return ret;
};
cvox.AbstractNodeWalker.prototype.privateSync_ = function(sel) {
  var r = sel.isReversed();
  if (sel.equals(cvox.CursorSelection.fromBody())) {
    if (this.wasBegin_) {
      return cvox.CursorSelection.fromBody().setReversed(r);
    }
    this.wasBegin_ = !0;
  }
  for (var node = sel.start.node;node != document.body && node.parentNode && this.stopNodeDescent(node.parentNode);) {
    node = node.parentNode;
  }
  for (;!this.stopNodeDescent(node);) {
    node = cvox.DomUtil.directedFirstChild(node, r);
  }
  var n = cvox.CursorSelection.fromNode(node);
  cvox.DomUtil.hasContent(node) || (n = this.next(cvox.CursorSelection.fromNode(node).setReversed(r)));
  return n ? n.setReversed(r) : this.begin({reversed:r});
};
cvox.BareObjectWalker = function() {
  cvox.AbstractNodeWalker.call(this);
};
goog.inherits(cvox.BareObjectWalker, cvox.AbstractNodeWalker);
cvox.BareObjectWalker.prototype.stopNodeDescent = function(node) {
  return cvox.DomUtil.isLeafNode(node);
};
cvox.AuralStyleConverter = {};
cvox.AuralStyleUtil = {};
cvox.AuralProperty = {VOLUME:"VOLUME", SPEAK:"SPEAK", PAUSE_BEFORE:"PAUSE_BEFORE", PAUSE_AFTER:"PAUSE_AFTER", PAUSE:"PAUSE", CUE_BEFORE:"CUE_BEFORE", CUE_AFTER:"CUE_AFTER", CUE:"CUE", PLAY_DURING:"PLAY_DURING", AZIMUTH:"AZIMUTH", ELEVATION:"ELEVATION", SPEECH_RATE:"SPEECH_RATE", VOICE_FAMILY:"VOICE_FAMILY", PITCH:"PITCH", PITCH_RANGE:"PITCH_RANGE", STRESS:"STRESS", RICHNESS:"RICHNESS", SPEAK_PUNCTUATION:"SPEAK_PUNCTUATION", SPEAK_NUMERIAL:"SPEAK_NUMERIAL", SPEAK_HEADER:"SPEAK_HEADER", NONE:"NONE"};
cvox.AuralStyleConverter.identity = function(value) {
  return value;
};
cvox.AuralStyleConverter.propertyTable = {VOLUME:"volume", SPEAK:"no-op", PAUSE_BEFORE:"no-op", PAUSE_AFTER:"no-op", PAUSE:"no-op", CUE_BEFORE:"no-op", CUE_AFTER:"no-op", CUE:"no-op", PLAY_DURING:"no-op", AZIMUTH:"no-op", ELEVATION:"no-op", SPEECH_RATE:"relativeRate", VOICE_FAMILY:"no-op", PITCH:"relativePitch", PITCH_RANGE:"no-op", STRESS:"no-op", RICHNESS:"no-op", SPEAK_PUNCTUATION:"no-op", SPEAK_NUMERIAL:"no-op", SPEAK_HEADER:"no-op", NONE:"no-op"};
cvox.AuralStyleConverter.valueTable = {VOLUME:cvox.AuralStyleConverter.identity, SPEAK:cvox.AuralStyleConverter.identity, PAUSE_BEFORE:cvox.AuralStyleConverter.identity, PAUSE_AFTER:cvox.AuralStyleConverter.identity, PAUSE:cvox.AuralStyleConverter.identity, CUE_BEFORE:cvox.AuralStyleConverter.identity, CUE_AFTER:cvox.AuralStyleConverter.identity, CUE:cvox.AuralStyleConverter.identity, PLAY_DURING:cvox.AuralStyleConverter.identity, AZIMUTH:cvox.AuralStyleConverter.identity, ELEVATION:cvox.AuralStyleConverter.identity, 
SPEECH_RATE:cvox.AuralStyleConverter.identity, VOICE_FAMILY:cvox.AuralStyleConverter.identity, PITCH:cvox.AuralStyleConverter.identity, PITCH_RANGE:cvox.AuralStyleConverter.identity, STRESS:cvox.AuralStyleConverter.identity, RICHNESS:cvox.AuralStyleConverter.identity, SPEAK_PUNCTUATION:cvox.AuralStyleConverter.identity, SPEAK_NUMERIAL:cvox.AuralStyleConverter.identity, SPEAK_HEADER:cvox.AuralStyleConverter.identity, NONE:cvox.AuralStyleConverter.identity};
cvox.AuralStyleConverter.convertRule = function(property, value) {
  return {property:cvox.AuralStyleConverter.propertyTable[property], value:cvox.AuralStyleConverter.valueTable[property](value)};
};
cvox.AuralStyleConverter.convertStyle = function(style) {
  var ttsProperties = {}, property;
  for (property in style) {
    var ttsProperty = cvox.AuralStyleConverter.convertRule(property, style[property]);
    ttsProperties[ttsProperty.property] = ttsProperty.value;
  }
  return ttsProperties;
};
cvox.AuralStyleUtil.getStyleForNode = function(node) {
  var style = cvox.AuralStyleUtil.defaultStyles[node.tagName];
  return style ? cvox.AuralStyleConverter.convertStyle(style) : null;
};
cvox.AuralStyleUtil.defaultStyles = {ARTICLE:{PITCH:-.1}, ASIDE:{PITCH:-.1}, FOOTER:{PITCH:-.1}, H1:{PITCH:-.3}, H2:{PITCH:-.25}, H3:{PITCH:-.2}, H4:{PITCH:-.15}, H5:{PITCH:-.1}, H6:{PITCH:-.05}, HEADER:{PITCH:-.1}, HGROUP:{PITCH:-.1}, MARK:{PITCH:-.1}, NAV:{PITCH:-.1}, SECTION:{PITCH:-.1}, TIME:{PITCH:-.1}};
cvox.EarconUtil = {};
cvox.EarconUtil.getEarcon = function(node) {
  var earcon = cvox.AriaUtil.getEarcon(node);
  if (null != earcon) {
    return earcon;
  }
  switch(node.tagName) {
    case "BUTTON":
      return cvox.AbstractEarcons.BUTTON;
    case "A":
      if (node.hasAttribute("href")) {
        return cvox.AbstractEarcons.LINK;
      }
      break;
    case "IMG":
      if (cvox.DomUtil.hasLongDesc(node)) {
        return cvox.AbstractEarcons.LONG_DESC;
      }
      break;
    case "LI":
      return cvox.AbstractEarcons.LIST_ITEM;
    case "SELECT":
      return cvox.AbstractEarcons.LISTBOX;
    case "TEXTAREA":
      return cvox.AbstractEarcons.EDITABLE_TEXT;
    case "INPUT":
      switch(node.type) {
        case "button":
        ;
        case "submit":
        ;
        case "reset":
          return cvox.AbstractEarcons.BUTTON;
        case "checkbox":
        ;
        case "radio":
          return node.checked ? cvox.AbstractEarcons.CHECK_ON : cvox.AbstractEarcons.CHECK_OFF;
        default:
          if (cvox.DomUtil.isInputTypeText(node)) {
            return cvox.AbstractEarcons.EDITABLE_TEXT;
          }
        ;
      }
    ;
  }
  return null;
};
cvox.DescriptionUtil = {};
cvox.DescriptionUtil.COLLECTION_NODE_TYPE = {H1:!0, H2:!0, H3:!0, H4:!0, H5:!0, H6:!0};
cvox.DescriptionUtil.getControlDescription = function(control, opt_changedAncestors) {
  var ancestors = [control];
  if (opt_changedAncestors && 0 < opt_changedAncestors.length) {
    ancestors = opt_changedAncestors;
  } else {
    var surroundingControl = cvox.DomUtil.getSurroundingControl(control);
    surroundingControl && (ancestors = [surroundingControl, control]);
  }
  var description = cvox.DescriptionUtil.getDescriptionFromAncestors(ancestors, !0, cvox.VERBOSITY_VERBOSE);
  if (surroundingControl) {
    var name = cvox.DomUtil.getName(surroundingControl);
    0 == name.length && (name = cvox.DomUtil.getControlLabelHeuristics(surroundingControl), 0 < name.length && (description.context = name + " " + description.context));
  } else {
    name = cvox.DomUtil.getName(control);
    0 == name.length && (name = cvox.DomUtil.getControlLabelHeuristics(control), 0 < name.length && (description.text = cvox.DomUtil.collapseWhitespace(name)));
    var value = cvox.DomUtil.getValue(control);
    0 < value.length && (description.userValue = cvox.DomUtil.collapseWhitespace(value));
  }
  return description;
};
cvox.DescriptionUtil.getDescriptionFromAncestors = function(ancestorsArray, recursive, verbosity) {
  "undefined" === typeof recursive && (recursive = !0);
  var len = ancestorsArray.length, context = "", text = "", userValue = "", annotation = "", earcons = [], personality = null, hint = "";
  0 < len && (text = cvox.DomUtil.getName(ancestorsArray[len - 1], recursive), userValue = cvox.DomUtil.getValue(ancestorsArray[len - 1]));
  var hintText = "";
  for (var i = len - 1;0 <= i;i--) {
    var node = ancestorsArray[i], hint = cvox.DomUtil.getHint(node), role = node.getAttribute ? node.getAttribute("role") : null; hintText.length === 0 ? hintText = hint : hintText += " " + hint;
    if ("alertdialog" != role) {
      var roleText = cvox.DomUtil.getRole(node, verbosity);
      personality || (personality = cvox.AuralStyleUtil.getStyleForNode(node));
      if (i < len - 1 && node.hasAttribute("role")) {
        var name = cvox.DomUtil.getName(node, !1);
        name && (roleText = name + " " + roleText);
      }
      0 < roleText.length && (0 < context.length || 0 < annotation.length && 1 < node.childElementCount ? context = roleText + " " + cvox.DomUtil.getState(node, !1) + " " + context : annotation = 0 < annotation.length ? annotation + (" " + roleText + " " + cvox.DomUtil.getState(node, !0)) : roleText + " " + cvox.DomUtil.getState(node, !0));
      var earcon = cvox.EarconUtil.getEarcon(node);
      null != earcon && -1 == earcons.indexOf(earcon) && earcons.push(earcon);
    }
  }
  return new cvox.NavDescription({context:cvox.DomUtil.collapseWhitespace(context), text:cvox.DomUtil.collapseWhitespace(text), userValue:cvox.DomUtil.collapseWhitespace(userValue), annotation:cvox.DomUtil.collapseWhitespace(annotation), earcons:earcons, personality:personality, hint:cvox.DomUtil.collapseWhitespace(hintText)});
};
cvox.DescriptionUtil.getDescriptionFromNavigation = function(prevNode, node, recursive, verbosity) {
  if (!prevNode || !node) {
    return [];
  }
  if (cvox.DomUtil.isMath(node) && !cvox.AriaUtil.isMath(node)) {
    return cvox.DescriptionUtil.getMathDescription(node);
  }
  if (cvox.DescriptionUtil.COLLECTION_NODE_TYPE[node.tagName]) {
    return cvox.DescriptionUtil.getCollectionDescription(cvox.CursorSelection.fromNode(prevNode), cvox.CursorSelection.fromNode(node));
  }
  var ancestors = cvox.DomUtil.getUniqueAncestors(prevNode, node, !0), desc = cvox.DescriptionUtil.getDescriptionFromAncestors(ancestors, recursive, verbosity), prevAncestors = cvox.DomUtil.getUniqueAncestors(node, prevNode);
  if (cvox.DescriptionUtil.shouldDescribeExit_(prevAncestors)) {
    var prevDesc = cvox.DescriptionUtil.getDescriptionFromAncestors(prevAncestors, recursive, verbosity);
    prevDesc.context && !desc.context && (desc.context = cvox.ChromeVox.msgs.getMsg("exited_container", [prevDesc.context]));
  }
  return [desc];
};
cvox.DescriptionUtil.getCollectionDescription = function(prevSel, sel) {
  var descriptions = cvox.DescriptionUtil.getRawDescriptions_(prevSel, sel);
  cvox.DescriptionUtil.insertCollectionDescription_(descriptions);
  return descriptions;
};
cvox.DescriptionUtil.subWalker_ = new cvox.BareObjectWalker;
cvox.DescriptionUtil.getRawDescriptions_ = function(prevSel, sel) {
  var descriptions = [];
  sel = sel.clone().setReversed(!1);
  var node = cvox.DescriptionUtil.subWalker_.sync(sel).start.node, prevNode = prevSel.end.node, curSel = cvox.CursorSelection.fromNode(node);
  if (!curSel) {
    return [];
  }
  for (;cvox.DomUtil.isDescendantOfNode(node, sel.start.node);) {
    var ancestors = cvox.DomUtil.getUniqueAncestors(prevNode, node);
    if (cvox.DomUtil.isMath(node) && !cvox.AriaUtil.isMath(node)) {
      descriptions = descriptions.concat(cvox.DescriptionUtil.getMathDescription(node));
    } else {
      var description = cvox.DescriptionUtil.getDescriptionFromAncestors(ancestors, !0, cvox.ChromeVox.verbosity);
      descriptions.push(description);
    }
    curSel = cvox.DescriptionUtil.subWalker_.next(curSel);
    if (!curSel) {
      break;
    }
    prevNode = node;
    node = curSel.start.node;
  }
  return descriptions;
};
cvox.DescriptionUtil.getFullDescriptionsFromChildren = function(prevnode, node) {
  var descriptions = [];
  if (!node) {
    return descriptions;
  }
  var desc;
  if (cvox.DomUtil.isLeafNode(node)) {
    var ancestors;
    prevnode ? ancestors = cvox.DomUtil.getUniqueAncestors(prevnode, node) : (ancestors = [], ancestors.push(node));
    desc = cvox.DescriptionUtil.getDescriptionFromAncestors(ancestors, !0, cvox.ChromeVox.verbosity);
    descriptions.push(desc);
    return descriptions;
  }
  var originalNode = node, curSel = cvox.CursorSelection.fromNode(node);
  if (!curSel) {
    return descriptions;
  }
  node = cvox.DescriptionUtil.subWalker_.sync(curSel).start.node;
  curSel = cvox.CursorSelection.fromNode(node);
  if (!curSel) {
    return descriptions;
  }
  for (;cvox.DomUtil.isDescendantOfNode(node, originalNode);) {
    descriptions = descriptions.concat(cvox.DescriptionUtil.getFullDescriptionsFromChildren(prevnode, node));
    curSel = cvox.DescriptionUtil.subWalker_.next(curSel);
    if (!curSel) {
      break;
    }
    prevnode = node;
    node = curSel.start.node;
  }
  return descriptions;
};
cvox.DescriptionUtil.insertCollectionDescription_ = function(descriptions) {
  var annotations = cvox.DescriptionUtil.getAnnotations_(descriptions);
  if (3 <= descriptions.length && 0 == descriptions[0].context.length && 1 == annotations.length && 0 < annotations[0].length && cvox.DescriptionUtil.isAnnotationCollection_(annotations[0])) {
    var commonAnnotation = annotations[0], firstContext = descriptions[0].context;
    descriptions[0].context = "";
    for (var i = 0;i < descriptions.length;i++) {
      descriptions[i].annotation = "";
    }
    descriptions.splice(0, 0, new cvox.NavDescription({context:firstContext, text:"", annotation:cvox.ChromeVox.msgs.getMsg("collection", [commonAnnotation, cvox.ChromeVox.msgs.getNumber(descriptions.length)])}));
  }
};
cvox.DescriptionUtil.getAnnotations_ = function(descriptions) {
  for (var annotations = [], i = 0;i < descriptions.length;++i) {
    var description = descriptions[i];
    if (-1 == annotations.indexOf(description.annotation)) {
      var linkMsg = cvox.ChromeVox.msgs.getMsg("tag_link");
      -1 != description.annotation.toLowerCase().indexOf(linkMsg.toLowerCase()) ? -1 == annotations.indexOf(linkMsg) && annotations.push(linkMsg) : annotations.push(description.annotation);
    }
  }
  return annotations;
};
cvox.DescriptionUtil.isAnnotationCollection_ = function(annotation) {
  return annotation == cvox.ChromeVox.msgs.getMsg("tag_link");
};
cvox.DescriptionUtil.shouldDescribeExit_ = function(ancestors) {
  return ancestors.some(function(node) {
    switch(node.tagName) {
      case "TABLE":
      ;
      case "MATH":
        return !0;
    }
    return cvox.AriaUtil.isLandmark(node);
  });
};
cvox.DescriptionUtil.getMathDescription = function(node) {
  var speechEngine = cvox.SpeechRuleEngine.getInstance(), traverse = cvox.TraverseMath.getInstance();
  speechEngine.parameterize(cvox.MathmlStore.getInstance());
  traverse.initialize(node);
  var ret = speechEngine.evaluateNode(traverse.activeNode);
  if (ret == []) {
    return [new cvox.NavDescription({text:"empty math"})];
  }
  cvox.ChromeVox.verbosity == cvox.VERBOSITY_VERBOSE && (ret[ret.length - 1].annotation = "math");
  ret[0].pushEarcon(cvox.AbstractEarcons.SPECIAL_CONTENT);
  return ret;
};
cvox.FindUtil = {};
cvox.FindUtil.objectWalker_ = new cvox.BareObjectWalker;
cvox.FindUtil.findNext = function(sel, predicate, opt_initialNode) {
  var r = sel.isReversed(), cur = (new cvox.CursorSelection(sel.absStart(), sel.absStart())).setReversed(r), ancestor;
  if (ancestor = predicate(cvox.DomUtil.getAncestors(cur.start.node))) {
    if (cur = cvox.CursorSelection.fromNode(ancestor).setReversed(r), opt_initialNode) {
      return cur;
    }
  }
  for (;cur;) {
    var cur = cvox.FindUtil.objectWalker_.next(cur), retNode = null;
    if (!cur || (retNode = predicate(cvox.DomUtil.getAncestors(cur.start.node)))) {
      return retNode ? cvox.CursorSelection.fromNode(retNode) : null;
    }
    if ("IFRAME" == cur.start.node.tagName) {
      return cur;
    }
  }
  return null;
};
cvox.Interframe = function() {
};
cvox.Interframe.IF_MSG_PREFIX = "cvox.INTERFRAME:";
cvox.Interframe.SET_ID = "cvox.INTERFRAME_SET_ID";
cvox.Interframe.listeners = [];
cvox.Interframe.allowAccessToIframeContentWindow = !0;
cvox.Interframe.init = function() {
  cvox.Interframe.messageListener = function(event) {
    if ("string" === typeof event.data && 0 == event.data.indexOf(cvox.Interframe.IF_MSG_PREFIX)) {
      var suffix = event.data.substr(cvox.Interframe.IF_MSG_PREFIX.length), message = cvox.ChromeVoxJSON.parse(suffix);
      message.command == cvox.Interframe.SET_ID && (cvox.Interframe.id = message.id);
      for (var i = 0, listener;listener = cvox.Interframe.listeners[i];i++) {
        listener(message);
      }
    }
    return !1;
  };
  window.addEventListener("message", cvox.Interframe.messageListener, !0);
};
cvox.Interframe.shutdown = function() {
  window.removeEventListener("message", cvox.Interframe.messageListener, !0);
};
cvox.Interframe.addListener = function(listener) {
  cvox.Interframe.listeners.push(listener);
};
cvox.Interframe.sendMessageToWindow = function(message, window) {
  var encodedMessage = cvox.Interframe.IF_MSG_PREFIX + cvox.ChromeVoxJSON.stringify(message, null, null);
  window.postMessage(encodedMessage, "*");
};
cvox.Interframe.sendMessageToIFrame = function(message, iframe) {
  if (cvox.Interframe.allowAccessToIframeContentWindow && iframe.contentWindow) {
    cvox.Interframe.sendMessageToWindow(message, iframe.contentWindow);
  } else {
    var encodedMessage = cvox.Interframe.IF_MSG_PREFIX + cvox.ChromeVoxJSON.stringify(message, null, null), script = document.createElement("script");
    script.type = "text/javascript";
    if (iframe.hasAttribute("id") && document.getElementById(iframe.id) == iframe) {
      script.innerHTML = "document.getElementById(decodeURI('" + encodeURI(iframe.id) + "')).contentWindow.postMessage(decodeURI('" + encodeURI(encodedMessage) + "'), '*');";
    } else {
      var styleName = "cvox_iframe" + message.id;
      "" === iframe.className ? iframe.className = styleName : -1 == iframe.className.indexOf(styleName) && (iframe.className += " " + styleName);
      script.innerHTML = "document.getElementsByClassName(decodeURI('" + encodeURI(styleName) + "'))[0].contentWindow.postMessage(decodeURI('" + encodeURI(encodedMessage) + "'), '*');";
    }
    document.head.appendChild(script);
    window.setTimeout(function() {
      document.head.removeChild(script);
    }, 1E3);
  }
};
cvox.Interframe.sendMessageToParentWindow = function(message) {
  if (cvox.Interframe.isIframe()) {
    if (message.sourceId = cvox.Interframe.id, window.parent) {
      cvox.Interframe.sendMessageToWindow(message, window.parent);
    } else {
      var encodedMessage = cvox.Interframe.IF_MSG_PREFIX + cvox.ChromeVoxJSON.stringify(message, null, null);
      window.location.href = "javascript:window.parent.postMessage('" + encodeURI(encodedMessage) + "', '*');";
    }
  }
};
cvox.Interframe.sendIdToIFrame = function(id, iframe) {
  var message = {command:cvox.Interframe.SET_ID, id:id};
  cvox.Interframe.sendMessageToIFrame(message, iframe);
};
cvox.Interframe.isIframe = function() {
  return window != window.parent;
};
cvox.Interframe.init();
cvox.PageSelection = function(sel) {
  this.sel_ = sel.clone();
  this.sel_.select();
  this.wasBegin_ = !0;
};
cvox.PageSelection.prototype.getDescription = function(navShifter, prevSel, curSel) {
  var desc = [];
  if (this.sel_.isReversed() != curSel.isReversed()) {
    desc = navShifter.getDescription(curSel, prevSel), desc[0].annotation = cvox.ChromeVox.msgs.getMsg("describe_unselected"), desc[0].pushEarcon(cvox.AbstractEarcons.SELECTION_REVERSE);
  } else {
    if (desc = navShifter.getDescription(prevSel, curSel), desc[0].annotation = cvox.ChromeVox.msgs.getMsg("describe_selected"), desc[0].pushEarcon(cvox.AbstractEarcons.SELECTION), !this.wasBegin_ && this.sel_.absEquals(curSel.clone().normalize())) {
      var prevDesc = navShifter.getDescription(curSel, prevSel);
      prevDesc[0].annotation = cvox.ChromeVox.msgs.getMsg("describe_unselected");
      prevDesc[0].pushEarcon(cvox.AbstractEarcons.SELECTION_REVERSE);
      prevDesc[0].pushEarcon(cvox.AbstractEarcons.WRAP);
      desc = prevDesc.concat(desc);
    }
  }
  return desc;
};
cvox.PageSelection.prototype.getFullDescription = function() {
  return [new cvox.NavDescription({text:window.getSelection().toString(), context:cvox.ChromeVox.msgs.getMsg("selection_is")})];
};
cvox.PageSelection.prototype.extend = function(sel) {
  this.sel_.directedBefore(sel) ? this.sel_.end = this.sel_.isReversed() == sel.isReversed() ? sel.end.clone() : sel.start.clone() : this.sel_ = sel.clone();
  this.sel_.select();
  this.wasBegin_ = !1;
  return !this.sel_.absEquals(sel);
};
cvox.MathmlStoreUtil = {};
cvox.MathmlStoreUtil.matchMathjaxToMathml = function(inner) {
  var mml = cvox.TraverseMath.getInstance().activeMathmlHost;
  return mml.querySelector("#" + inner.id);
};
cvox.MathmlStoreUtil.retrieveMathjaxExtender = function(jax) {
  var ext = cvox.MathmlStoreUtil.matchMathjaxToMathml(jax);
  return ext ? [ext] : [];
};
cvox.MathmlStoreUtil.retrieveMathjaxLeaf = function(jax) {
  var leaf = cvox.MathmlStoreUtil.matchMathjaxToMathml(jax);
  return leaf ? [leaf] : [];
};
cvox.MathmlStoreUtil.checkMathjaxTag = function(jax, tag) {
  var node = cvox.MathmlStoreUtil.matchMathjaxToMathml(jax);
  return node && node.tagName.toUpperCase() == tag ? [node] : [];
};
cvox.MathmlStoreUtil.checkMathjaxMunder = function(jax) {
  return cvox.MathmlStoreUtil.checkMathjaxTag(jax, "MUNDER");
};
cvox.MathmlStoreUtil.checkMathjaxMover = function(jax) {
  return cvox.MathmlStoreUtil.checkMathjaxTag(jax, "MOVER");
};
cvox.MathmlStoreUtil.checkMathjaxMsub = function(jax) {
  return cvox.MathmlStoreUtil.checkMathjaxTag(jax, "MSUB");
};
cvox.MathmlStoreUtil.checkMathjaxMsup = function(jax) {
  return cvox.MathmlStoreUtil.checkMathjaxTag(jax, "MSUP");
};
cvox.MathmlStoreUtil.nextSeparatorFunction = function(separators) {
  if (separators) {
    if (separators.match(/^\s+$/)) {
      return null;
    }
    var sepList = separators.replace(/\s/g, "").split("").filter(function(x) {
      return x;
    });
  } else {
    sepList = [","];
  }
  return function() {
    return 1 < sepList.length ? sepList.shift() : sepList[0];
  };
};
cvox.MathmlStoreUtil.mfencedSeparators = function(nodes, context) {
  var nextSeparator = cvox.MathmlStoreUtil.nextSeparatorFunction(context);
  return function() {
    return nextSeparator ? nextSeparator() : "";
  };
};
cvox.MathmlStoreUtil.contentIterator = function(nodes, context) {
  var contentNodes = 0 < nodes.length ? cvox.XpathUtil.evalXPath("../../content/*", nodes[0]) : [];
  return function() {
    var content = contentNodes.shift();
    return context + (content ? content.textContent : "");
  };
};
cvox.StoreUtil = {};
cvox.StoreUtil.nodeCounter = function(nodes, context) {
  var localLength = nodes.length, localCounter = 0, localContext = context;
  context || (localContext = "");
  return function() {
    localCounter < localLength && (localCounter += 1);
    return localContext + " " + localCounter;
  };
};
cvox.MathmlStoreRules = function() {
  cvox.MathmlStoreRules.initCustomFunctions_();
  cvox.MathmlStoreRules.initDefaultRules_();
  cvox.MathmlStoreRules.initMathjaxRules_();
  cvox.MathmlStoreRules.initAliases_();
  cvox.MathmlStoreRules.initSpecializationRules_();
  cvox.MathmlStoreRules.initSemanticRules_();
};
goog.addSingletonGetter(cvox.MathmlStoreRules);
cvox.MathmlStoreRules.mathStore = cvox.MathmlStore.getInstance();
cvox.MathmlStoreRules.mathStore.initialize = cvox.MathmlStoreRules.getInstance;
cvox.MathmlStoreRules.defineDefaultMathmlRule_ = goog.bind(cvox.MathmlStoreRules.mathStore.defineDefaultMathmlRule, cvox.MathmlStoreRules.mathStore);
cvox.MathmlStoreRules.defineRule_ = goog.bind(cvox.MathmlStoreRules.mathStore.defineRule, cvox.MathmlStoreRules.mathStore);
cvox.MathmlStoreRules.defineRuleAlias_ = goog.bind(cvox.MathmlStoreRules.mathStore.defineRuleAlias, cvox.MathmlStoreRules.mathStore);
cvox.MathmlStoreRules.addContextFunction_ = goog.bind(cvox.MathmlStoreRules.mathStore.contextFunctions.add, cvox.MathmlStoreRules.mathStore.contextFunctions);
cvox.MathmlStoreRules.addCustomQuery_ = goog.bind(cvox.MathmlStoreRules.mathStore.customQueries.add, cvox.MathmlStoreRules.mathStore.customQueries);
cvox.MathmlStoreRules.initCustomFunctions_ = function() {
  (0,cvox.MathmlStoreRules.addContextFunction_)("CTXFnodeCounter", cvox.StoreUtil.nodeCounter);
  (0,cvox.MathmlStoreRules.addContextFunction_)("CTXFmfSeparators", cvox.MathmlStoreUtil.mfencedSeparators);
  (0,cvox.MathmlStoreRules.addContextFunction_)("CTXFcontentIterator", cvox.MathmlStoreUtil.contentIterator);
  (0,cvox.MathmlStoreRules.addCustomQuery_)("CQFextender", cvox.MathmlStoreUtil.retrieveMathjaxExtender);
  (0,cvox.MathmlStoreRules.addCustomQuery_)("CQFmathmlmunder", cvox.MathmlStoreUtil.checkMathjaxMunder);
  (0,cvox.MathmlStoreRules.addCustomQuery_)("CQFmathmlmover", cvox.MathmlStoreUtil.checkMathjaxMover);
  (0,cvox.MathmlStoreRules.addCustomQuery_)("CQFmathmlmsub", cvox.MathmlStoreUtil.checkMathjaxMsub);
  (0,cvox.MathmlStoreRules.addCustomQuery_)("CQFmathmlmsup", cvox.MathmlStoreUtil.checkMathjaxMsup);
  (0,cvox.MathmlStoreRules.addCustomQuery_)("CQFlookupleaf", cvox.MathmlStoreUtil.retrieveMathjaxLeaf);
};
cvox.MathmlStoreRules.initDefaultRules_ = function() {
  (0,cvox.MathmlStoreRules.defineDefaultMathmlRule_)("math", "[m] ./*");
  (0,cvox.MathmlStoreRules.defineDefaultMathmlRule_)("mspace", "[p] (pause:250)");
  (0,cvox.MathmlStoreRules.defineDefaultMathmlRule_)("mstyle", "[m] ./*");
  (0,cvox.MathmlStoreRules.defineDefaultMathmlRule_)("mpadded", "[m] ./*");
  (0,cvox.MathmlStoreRules.defineDefaultMathmlRule_)("merror", "[m] ./*");
  (0,cvox.MathmlStoreRules.defineDefaultMathmlRule_)("mphantom", "[m] ./*");
  (0,cvox.MathmlStoreRules.defineDefaultMathmlRule_)("mtext", "[t] text(); [p] (pause:200)");
  (0,cvox.MathmlStoreRules.defineDefaultMathmlRule_)("mi", "[n] text()");
  (0,cvox.MathmlStoreRules.defineDefaultMathmlRule_)("mo", "[n] text() (rate:-0.1)");
  (0,cvox.MathmlStoreRules.defineDefaultMathmlRule_)("mn", "[n] text()");
  (0,cvox.MathmlStoreRules.defineRule_)("mtext-variant", "default.default", '[t] "begin"; [t] @mathvariant (pause:150);[t] text() (pause:150); [t] "end"; [t] @mathvariant (pause:200)', "self::mathml:mtext", "@mathvariant", '@mathvariant!="normal"');
  (0,cvox.MathmlStoreRules.defineRule_)("mi-variant", "default.default", "[t] @mathvariant; [n] text()", "self::mathml:mi", "@mathvariant", '@mathvariant!="normal"');
  (0,cvox.MathmlStoreRules.defineRuleAlias_)("mi-variant", "self::mathml:mn", "@mathvariant", '@mathvariant!="normal"');
  (0,cvox.MathmlStoreRules.defineRule_)("mo-variant", "default.default", "[t] @mathvariant; [n] text() (rate:-0.1)", "self::mathml:mo", "@mathvariant", '@mathvariant!="normal"');
  (0,cvox.MathmlStoreRules.defineDefaultMathmlRule_)("ms", '[t] "string" (pitch:0.5, rate:0.5); [t] text()');
  (0,cvox.MathmlStoreRules.defineDefaultMathmlRule_)("msup", '[n] ./*[1]; [t] "super";[n] ./*[2] (pitch:0.35); [p] (pause:300)');
  (0,cvox.MathmlStoreRules.defineDefaultMathmlRule_)("msubsup", '[n] ./*[1]; [t] "sub"; [n] ./*[2] (pitch:-0.35); [p] (pause:200);[t] "super"; [n] ./*[3] (pitch:0.35); [p] (pause:300)');
  (0,cvox.MathmlStoreRules.defineDefaultMathmlRule_)("msub", '[n] ./*[1]; [t] "sub"; [n] ./*[2] (pitch:-0.35); [p] (pause:300)');
  (0,cvox.MathmlStoreRules.defineDefaultMathmlRule_)("mover", '[n] ./*[2] (pitch:0.35); [p] (pause:200); [t] "over"; [n] ./*[1]; [p] (pause:400)');
  (0,cvox.MathmlStoreRules.defineDefaultMathmlRule_)("munder", '[n] ./*[2] (pitch:-0.35); [t] "under"; [n] ./*[1]; [p] (pause:400)');
  (0,cvox.MathmlStoreRules.defineDefaultMathmlRule_)("munderover", '[n] ./*[2] (pitch:-0.35); [t] "under and"; [n] ./*[3] (pitch:0.35); [t] "over"; [n] ./*[1]; [p] (pause:400)');
  (0,cvox.MathmlStoreRules.defineDefaultMathmlRule_)("mrow", "[m] ./*");
  (0,cvox.MathmlStoreRules.defineDefaultMathmlRule_)("msqrt", '[t] "Square root of"; [m] ./* (rate:0.2); [p] (pause:400)');
  (0,cvox.MathmlStoreRules.defineDefaultMathmlRule_)("mroot", '[t] "root of order"; [n] ./*[2]; [t] "of";[n] ./*[1] (rate:0.2); [p] (pause:400)');
  (0,cvox.MathmlStoreRules.defineDefaultMathmlRule_)("mfrac", ' [p] (pause:400); [n] ./*[1] (pitch:0.3); [t] "divided by"; [n] ./*[2] (pitch:-0.3); [p] (pause:400)');
  (0,cvox.MathmlStoreRules.defineRule_)("mfenced-single", "default.default", '[t] @open (context:"opening"); [m] ./* (separator:@separators);[t] @close (context:"closing")', "self::mathml:mfenced", "string-length(string(@separators))=1");
  (0,cvox.MathmlStoreRules.defineRule_)("mfenced-empty", "default.default", '[t] @open (context:"opening"); [m] ./*;[t] @close (context:"closing")', "self::mathml:mfenced", "string-length(string(@separators))=1", 'string(@separators)=" "');
  (0,cvox.MathmlStoreRules.defineRule_)("mfenced-comma", "default.default", '[t] @open (context:"opening"); [m] ./* (separator:"comma");[t] @close (context:"closing")', "self::mathml:mfenced");
  (0,cvox.MathmlStoreRules.defineRule_)("mfenced-multi", "default.default", '[t] @open (context:"opening"); [m] ./* (sepFunc:CTXFmfSeparators,separator:@separators); [t] @close (context:"closing")', "self::mathml:mfenced", "string-length(string(@separators))>1");
  (0,cvox.MathmlStoreRules.defineRule_)("mtable", "default.default", '[t] "matrix"; [m] ./* (ctxtFunc:CTXFnodeCounter,context:"row",pause:100)', "self::mathml:mtable");
  (0,cvox.MathmlStoreRules.defineRule_)("mtr", "default.default", '[m] ./* (ctxtFunc:CTXFnodeCounter,context:"column",pause:100)', "self::mathml:mtr");
  (0,cvox.MathmlStoreRules.defineRule_)("mtd", "default.default", "[m] ./*", "self::mathml:mtd");
  (0,cvox.MathmlStoreRules.defineRule_)("mtable", "default.superbrief", '[t] count(child::mathml:mtr);  [t] "by";[t] count(child::mathml:mtr[1]/mathml:mtd); [t] "matrix";', "self::mathml:mtable");
  (0,cvox.MathmlStoreRules.defineRule_)("mtable", "default.short", '[t] "matrix"; [m] ./*', "self::mathml:mtable");
  (0,cvox.MathmlStoreRules.defineRule_)("mtr", "default.short", "[m] ./*", "self::mathml:mtr");
  (0,cvox.MathmlStoreRules.defineRule_)("mtd", "default.short", '[t] "Element"; [t] count(./preceding-sibling::mathml:mtd)+1;[t] count(./parent::mathml:mtr/preceding-sibling::mathml:mtr)+1;[p] (pause:500); [m] ./*', "self::mathml:mtd");
  (0,cvox.MathmlStoreRules.defineRule_)("mmultiscripts-4", "default.default", '[n] ./*[1]; [p] (pause:200);[t] "left sub"; [n] ./*[5] (pitch:-0.35); [p] (pause:200);[t] "left super"; [n] ./*[6] (pitch:0.35); [p] (pause:200);[t] "right sub"; [n] ./*[2] (pitch:-0.35); [p] (pause:200);[t] "right super"; [n] ./*[3] (pitch:0.35); [p] (pause:300);', "self::mathml:mmultiscripts");
  (0,cvox.MathmlStoreRules.defineRule_)("mmultiscripts-3-1", "default.default", '[n] ./*[1]; [p] (pause:200);[t] "left sub"; [n] ./*[5] (pitch:-0.35); [p] (pause:200);[t] "left super"; [n] ./*[6] (pitch:0.35); [p] (pause:200);[t] "right super"; [n] ./*[3] (pitch:0.35); [p] (pause:300);', "self::mathml:mmultiscripts", "./mathml:none=./*[2]", "./mathml:mprescripts=./*[4]");
  (0,cvox.MathmlStoreRules.defineRule_)("mmultiscripts-3-2", "default.default", '[n] ./*[1]; [p] (pause:200);[t] "left sub"; [n] ./*[5] (pitch:-0.35); [p] (pause:200);[t] "left super"; [n] ./*[6] (pitch:0.35); [p] (pause:200);[t] "right sub"; [n] ./*[2] (pitch:-0.35); [p] (pause:200);', "self::mathml:mmultiscripts", "./mathml:none=./*[3]", "./mathml:mprescripts=./*[4]");
  (0,cvox.MathmlStoreRules.defineRule_)("mmultiscripts-3-3", "default.default", '[n] ./*[1]; [p] (pause:200);[t] "left super"; [n] ./*[6] (pitch:0.35); [p] (pause:200);[t] "right sub"; [n] ./*[2] (pitch:-0.35); [p] (pause:200);[t] "right super"; [n] ./*[3] (pitch:0.35); [p] (pause:300);', "self::mathml:mmultiscripts", "./mathml:none=./*[5]", "./mathml:mprescripts=./*[4]");
  (0,cvox.MathmlStoreRules.defineRule_)("mmultiscripts-3-4", "default.default", '[n] ./*[1]; [p] (pause:200);[t] "left sub"; [n] ./*[5] (pitch:-0.35); [p] (pause:200);[t] "right sub"; [n] ./*[2] (pitch:-0.35); [p] (pause:200);[t] "right super"; [n] ./*[3] (pitch:0.35); [p] (pause:300);', "self::mathml:mmultiscripts", "./mathml:none=./*[6]", "./mathml:mprescripts=./*[4]");
  (0,cvox.MathmlStoreRules.defineRule_)("mmultiscripts-2-1", "default.default", '[n] ./*[1]; [p] (pause:200);[t] "left sub"; [n] ./*[5] (pitch:-0.35); [p] (pause:200);[t] "left super"; [n] ./*[6] (pitch:0.35); [p] (pause:300);', "self::mathml:mmultiscripts", "./mathml:none=./*[2]", "./mathml:none=./*[3]", "./mathml:mprescripts=./*[4]");
  (0,cvox.MathmlStoreRules.defineRule_)("mmultiscripts-1-1", "default.default", '[n] ./*[1]; [p] (pause:200);[t] "left super"; [n] ./*[6] (pitch:0.35); [p] (pause:300);', "self::mathml:mmultiscripts", "./mathml:none=./*[2]", "./mathml:none=./*[3]", "./mathml:mprescripts=./*[4]", "./mathml:none=./*[5]");
  (0,cvox.MathmlStoreRules.defineRule_)("mmultiscripts-1-2", "default.default", '[n] ./*[1]; [p] (pause:200);[t] "left sub"; [n] ./*[5] (pitch:-0.35); [p] (pause:200);', "self::mathml:mmultiscripts", "./mathml:none=./*[2]", "./mathml:none=./*[3]", "./mathml:mprescripts=./*[4]", "./mathml:none=./*[6]");
};
cvox.MathmlStoreRules.initMathjaxRules_ = function() {
  (0,cvox.MathmlStoreRules.defineRule_)("mj-math", "default.default", "[n] ./*[1]/*[1]/*[1]", 'self::span[@class="math"]');
  (0,cvox.MathmlStoreRules.defineRule_)("mj-leaf", "default.default", "[n] CQFlookupleaf", 'self::span[@class="mi"]');
  (0,cvox.MathmlStoreRules.defineRuleAlias_)("mj-leaf", 'self::span[@class="mo"]');
  (0,cvox.MathmlStoreRules.defineRuleAlias_)("mj-leaf", 'self::span[@class="mn"]');
  (0,cvox.MathmlStoreRules.defineRuleAlias_)("mj-leaf", 'self::span[@class="mtext"]');
  (0,cvox.MathmlStoreRules.defineRule_)("mj-mo-ext", "default.default", "[n] CQFextender", 'self::span[@class="mo"]', "./*[1]/*[1]/text()", "./*[1]/*[2]/text()");
  (0,cvox.MathmlStoreRules.defineRule_)("mj-texatom", "default.default", "[n] ./*[1]", 'self::span[@class="texatom"]');
  (0,cvox.MathmlStoreRules.defineRule_)("mj-msubsup", "default.default", '[n] ./*[1]/*[1]/*[1]; [t] "sub"; [n] ./*[1]/*[3]/*[1] (pitch:-0.35);[p] (pause:200); [t] "super"; [n] ./*[1]/*[2]/*[1] (pitch:0.35);[p] (pause:300)', 'self::span[@class="msubsup"]');
  (0,cvox.MathmlStoreRules.defineRule_)("mj-msub", "default.default", '[n] ./*[1]/*[1]/*[1]; [t] "sub";[n] ./*[1]/*[2]/*[1] (pitch:-0.35); [p] (pause:300)', 'self::span[@class="msub"]');
  (0,cvox.MathmlStoreRules.defineRule_)("mj-msup", "default.default", '[n] ./*[1]/*[1]/*[1]; [t] "super";[n] ./*[1]/*[2]/*[1] (pitch:0.35); [p] (pause:300)', 'self::span[@class="msup"]');
  (0,cvox.MathmlStoreRules.defineRule_)("mj-munderover", "default.default", '[n] ./*[1]/*[2]/*[1] (pitch:0.35); [t] "under and";[n] ./*[1]/*[3]/*[1] (pitch:-0.35); [t] "over";[n] ./*[1]/*[1]/*[1]; [p] (pause:400)', 'self::span[@class="munderover"]');
  (0,cvox.MathmlStoreRules.defineRule_)("mj-munder", "default.default", '[n] ./*[1]/*[2]/*[1] (pitch:0.35); [t] "under";[n] ./*[1]/*[1]/*[1]; [p] (pause:400)', 'self::span[@class="munder"]');
  (0,cvox.MathmlStoreRules.defineRule_)("mj-mover", "default.default", '[n] ./*[1]/*[2]/*[1] (pitch:0.35); [t] "over";[n] ./*[1]/*[1]/*[1]; [p] (pause:400)', 'self::span[@class="mover"]');
  (0,cvox.MathmlStoreRules.defineRule_)("mj-mfrac", "default.default", '[p] (pause:250); [n] ./*[1]/*[1]/*[1] (pitch:0.3); [p] (pause:250); [t] "divided by"; [n] ./*[1]/*[2]/*[1] (pitch:-0.3);[p] (pause:400)', 'self::span[@class="mfrac"]');
  (0,cvox.MathmlStoreRules.defineRule_)("mj-msqrt", "default.default", '[t] "Square root of";[n] ./*[1]/*[1]/*[1] (rate:0.2); [p] (pause:400)', 'self::span[@class="msqrt"]');
  (0,cvox.MathmlStoreRules.defineRule_)("mj-mroot", "default.default", '[t] "root of order"; [n] ./*[1]/*[4]/*[1]; [t] "of";[n] ./*[1]/*[1]/*[1] (rate:0.2); [p] (pause:400)', 'self::span[@class="mroot"]');
  (0,cvox.MathmlStoreRules.defineRule_)("mj-mfenced", "default.default", '[t] "opening"; [n] ./*[1]; [m] ./*[position()>1 and position()<last()]; [t] "closing"; [n] ./*[last()]', 'self::span[@class="mfenced"]');
  (0,cvox.MathmlStoreRules.defineRuleAlias_)("mj-leaf", 'self::span[@class="mtable"]');
  (0,cvox.MathmlStoreRules.defineRuleAlias_)("mj-leaf", 'self::span[@class="mmultiscripts"]');
};
cvox.MathmlStoreRules.initAliases_ = function() {
  (0,cvox.MathmlStoreRules.defineRuleAlias_)("mspace", 'self::span[@class="mspace"]');
  (0,cvox.MathmlStoreRules.defineRuleAlias_)("mstyle", 'self::span[@class="mstyle"]');
  (0,cvox.MathmlStoreRules.defineRuleAlias_)("mpadded", 'self::span[@class="mpadded"]');
  (0,cvox.MathmlStoreRules.defineRuleAlias_)("merror", 'self::span[@class="merror"]');
  (0,cvox.MathmlStoreRules.defineRuleAlias_)("mphantom", 'self::span[@class="mphantom"]');
  (0,cvox.MathmlStoreRules.defineRuleAlias_)("ms", 'self::span[@class="ms"]');
  (0,cvox.MathmlStoreRules.defineRuleAlias_)("mrow", 'self::span[@class="mrow"]');
  (0,cvox.MathmlStoreRules.defineRuleAlias_)("mj-msub", 'self::span[@class="msubsup"]', "CQFmathmlmsub");
  (0,cvox.MathmlStoreRules.defineRuleAlias_)("mj-msup", 'self::span[@class="msubsup"]', "CQFmathmlmsup");
  (0,cvox.MathmlStoreRules.defineRuleAlias_)("mj-munder", 'self::span[@class="munderover"]', "CQFmathmlmunder");
  (0,cvox.MathmlStoreRules.defineRuleAlias_)("mj-mover", 'self::span[@class="munderover"]', "CQFmathmlmover");
};
cvox.MathmlStoreRules.initSpecializationRules_ = function() {
  (0,cvox.MathmlStoreRules.defineRule_)("square", "default.default", '[n] ./*[1]; [t] "square" (pitch:0.35); [p] (pause:300)', "self::mathml:msup", "./*[2][text()=2]");
  (0,cvox.MathmlStoreRules.defineRuleAlias_)("square", "self::mathml:msup", "./mathml:mrow=./*[2]", "count(./*[2]/*)=1", "./*[2]/*[1][text()=2]");
  (0,cvox.MathmlStoreRules.defineRule_)("cube", "default.default", '[n] ./*[1]; [t] "cube" (pitch:0.35); [p] (pause:300)', "self::mathml:msup", "./*[2][text()=3]");
  (0,cvox.MathmlStoreRules.defineRuleAlias_)("cube", "self::mathml:msup", "./mathml:mrow=./*[2]", "count(./*[2]/*)=1", "./*[2]/*[1][text()=3]");
  (0,cvox.MathmlStoreRules.defineRule_)("square-sub", "default.default", '[n] ./*[1]; [t] "sub"; [n] ./*[2] (pitch:-0.35);[p] (pause:300); [t] "square" (pitch:0.35); [p] (pause:400)', "self::mathml:msubsup", "./*[3][text()=2]");
  (0,cvox.MathmlStoreRules.defineRuleAlias_)("square-sub", "self::mathml:msubsup", "./mathml:mrow=./*[3]", "count(./*[3]/*)=1", "./*[3]/*[1][text()=2]");
  (0,cvox.MathmlStoreRules.defineRule_)("cube-sub", "default.default", '[n] ./*[1]; [t] "sub"; [n] ./*[2] (pitch:-0.35);[p] (pause:300); [t] "cube" (pitch:0.35); [p] (pause:400)', "self::mathml:msubsup", "./*[3][text()=3]");
  (0,cvox.MathmlStoreRules.defineRuleAlias_)("cube-sub", "self::mathml:msubsup", "./mathml:mrow=./*[3]", "count(./*[3]/*)=1", "./*[3]/*[1][text()=3]");
  (0,cvox.MathmlStoreRules.defineRule_)("mj-square", "default.default", '[n] ./*[1]/*[1]/*[1]; [t] "square" (pitch:0.35); [p] (pause:300)', 'self::span[@class="msup"]', "./*[1]/*[2]/*[1][text()=2]");
  (0,cvox.MathmlStoreRules.defineRuleAlias_)("mj-square", 'self::span[@class="msup"]', './*[1]/*[2]/*[1]=./*[1]/*[2]/span[@class="mrow"]', "count(./*[1]/*[2]/*[1]/*)=1", "./*[1]/*[2]/*[1]/*[1][text()=2]");
  (0,cvox.MathmlStoreRules.defineRuleAlias_)("mj-square", 'self::span[@class="msubsup"]', "CQFmathmlmsup", "./*[1]/*[2]/*[1][text()=2]");
  (0,cvox.MathmlStoreRules.defineRuleAlias_)("mj-square", 'self::span[@class="msubsup"]', "CQFmathmlmsup", './*[1]/*[2]/*[1]=./*[1]/*[2]/span[@class="mrow"]', "count(./*[1]/*[2]/*[1]/*)=1", "./*[1]/*[2]/*[1]/*[1][text()=2]");
  (0,cvox.MathmlStoreRules.defineRule_)("mj-cube", "default.default", '[n] ./*[1]/*[1]/*[1]; [t] "cube" (pitch:0.35); [p] (pause:300)', 'self::span[@class="msup"]', "./*[1]/*[2]/*[1][text()=3]");
  (0,cvox.MathmlStoreRules.defineRuleAlias_)("mj-cube", 'self::span[@class="msup"]', './*[1]/*[2]/*[1]=./*[1]/*[2]/span[@class="mrow"]', "count(./*[1]/*[2]/*[1]/*)=1", "./*[1]/*[2]/*[1]/*[1][text()=3]");
  (0,cvox.MathmlStoreRules.defineRuleAlias_)("mj-cube", 'self::span[@class="msubsup"]', "CQFmathmlmsup", "./*[1]/*[2]/*[1][text()=3]");
  (0,cvox.MathmlStoreRules.defineRuleAlias_)("mj-cube", 'self::span[@class="msubsup"]', "CQFmathmlmsup", './*[1]/*[2]/*[1]=./*[1]/*[2]/span[@class="mrow"]', "count(./*[1]/*[2]/*[1]/*)=1", "./*[1]/*[2]/*[1]/*[1][text()=3]");
  (0,cvox.MathmlStoreRules.defineRule_)("mj-square-sub", "default.default", '[n] ./*[1]/*[1]/*[1]; [t] "sub"; [n] ./*[1]/*[3]/*[1] (pitch:-0.35); [p] (pause:300); [t] "square" (pitch:0.35); [p] (pause:400)', 'self::span[@class="msubsup"]', "./*[1]/*[2]/*[1][text()=2]");
  (0,cvox.MathmlStoreRules.defineRuleAlias_)("mj-square-sub", 'self::span[@class="msubsup"]', './*[1]/*[2]/*[1]=./*[1]/*[2]/span[@class="mrow"]', "count(./*[1]/*[2]/*[1]/*)=1", "./*[1]/*[2]/*[1]/*[1][text()=2]");
  (0,cvox.MathmlStoreRules.defineRule_)("mj-cube-sub", "default.default", '[n] ./*[1]/*[1]/*[1]; [t] "sub"; [n] ./*[1]/*[3]/*[1] (pitch:-0.35); [p] (pause:300); [t] "cube" (pitch:0.35); [p] (pause:400)', 'self::span[@class="msubsup"]', "./*[1]/*[2]/*[1][text()=3]");
  (0,cvox.MathmlStoreRules.defineRuleAlias_)("mj-cube-sub", 'self::span[@class="msubsup"]', './*[1]/*[2]/*[1]=./*[1]/*[2]/span[@class="mrow"]', "count(./*[1]/*[2]/*[1]/*)=1", "./*[1]/*[2]/*[1]/*[1][text()=3]");
};
cvox.MathmlStoreRules.initSemanticRules_ = function() {
  (0,cvox.MathmlStoreRules.defineRule_)("stree", "default.default", "[n] ./*[1]", "self::stree");
  (0,cvox.MathmlStoreRules.defineRule_)("multrel", "default.default", '[t] "multirelation"; [m] children/* (sepFunc:CTXFcontentIterator)', "self::multirel");
  (0,cvox.MathmlStoreRules.defineRule_)("variable-equality", "default.default", '[t] "equation sequence"; [m] ./children/* (context:"part",ctxtFunc:CTXFnodeCounter,separator:./text())', 'self::relseq[@role="equality"]', "count(./children/*)>2", './children/punct[@role="ellipsis"]');
  (0,cvox.MathmlStoreRules.defineRule_)("multi-equality", "default.default", '[t] "equation sequence"; [m] ./children/* (context:"part",ctxtFunc:CTXFnodeCounter,separator:./text())', 'self::relseq[@role="equality"]', "count(./children/*)>2");
  (0,cvox.MathmlStoreRules.defineRule_)("multi-equality", "default.short", '[t] "equation sequence"; [m] ./children/* (separator:./text())', 'self::relseq[@role="equality"]', "count(./children/*)>2");
  (0,cvox.MathmlStoreRules.defineRule_)("equality", "default.default", '[t] "equation"; [t] "left hand side"; [n] children/*[1];[p] (pause:200); [n] text() (pause:200);[t] "right hand side"; [n] children/*[2]', 'self::relseq[@role="equality"]', "count(./children/*)=2");
  (0,cvox.MathmlStoreRules.defineRule_)("simple-equality", "default.default", "[n] children/*[1]; [p] (pause:200); [n] text() (pause:200);[n] children/*[2]", 'self::relseq[@role="equality"]', "count(./children/*)=2", "./children/identifier or ./children/number");
  (0,cvox.MathmlStoreRules.defineRule_)("simple-equality2", "default.default", "[n] children/*[1]; [p] (pause:200); [n] text() (pause:200);[n] children/*[2]", 'self::relseq[@role="equality"]', "count(./children/*)=2", "./children/function or ./children/appl");
  (0,cvox.MathmlStoreRules.defineRule_)("multrel", "default.default", "[m] children/* (separator:./text())", "self::relseq");
  (0,cvox.MathmlStoreRules.defineRule_)("binary-operation", "default.default", "[m] children/* (separator:text());", "self::infixop");
  (0,cvox.MathmlStoreRules.defineRule_)("variable-addition", "default.default", '[t] "sum with variable number of summands";[p] (pause:400); [m] children/* (separator:./text())', 'self::infixop[@role="addition"]', "count(children/*)>2", 'children/punct[@role="ellipsis"]');
  (0,cvox.MathmlStoreRules.defineRule_)("multi-addition", "default.default", '[t] "sum with,"; [t] count(./children/*); [t] ", summands";[p] (pause:400); [m] ./children/* (separator:./text())', 'self::infixop[@role="addition"]', "count(./children/*)>2");
  (0,cvox.MathmlStoreRules.defineRule_)("prefix", "default.default", '[t] "prefix"; [n] text(); [t] "of" (pause 150);[n] children/*[1]', "self::prefixop");
  (0,cvox.MathmlStoreRules.defineRule_)("negative", "default.default", '[t] "negative"; [n] children/*[1]', "self::prefixop", 'self::prefixop[@role="negative"]');
  (0,cvox.MathmlStoreRules.defineRule_)("postfix", "default.default", '[n] children/*[1]; [t] "postfix"; [n] text() (pause 300)', "self::postfixop");
  (0,cvox.MathmlStoreRules.defineRule_)("identifier", "default.default", "[n] text()", "self::identifier");
  (0,cvox.MathmlStoreRules.defineRule_)("number", "default.default", "[n] text()", "self::number");
  (0,cvox.MathmlStoreRules.defineRule_)("fraction", "default.default", '[p] (pause:250); [n] children/*[1] (pitch:0.3); [p] (pause:250); [t] "divided by"; [n] children/*[2] (pitch:-0.3); [p] (pause:400)', "self::fraction");
  (0,cvox.MathmlStoreRules.defineRule_)("superscript", "default.default", '[n] children/*[1]; [t] "super"; [n] children/*[2] (pitch:0.35);[p] (pause:300)', "self::superscript");
  (0,cvox.MathmlStoreRules.defineRule_)("subscript", "default.default", '[n] children/*[1]; [t] "sub"; [n] children/*[2] (pitch:-0.35);[p] (pause:300)', "self::subscript");
  (0,cvox.MathmlStoreRules.defineRule_)("ellipsis", "default.default", '[p] (pause:200); [t] "dot dot dot"; [p] (pause:300)', "self::punct", 'self::punct[@role="ellipsis"]');
  (0,cvox.MathmlStoreRules.defineRule_)("fence-single", "default.default", "[n] text()", "self::punct", 'self::punct[@role="openfence"]');
  (0,cvox.MathmlStoreRules.defineRuleAlias_)("fence-single", "self::punct", 'self::punct[@role="closefence"]');
  (0,cvox.MathmlStoreRules.defineRuleAlias_)("fence-single", "self::punct", 'self::punct[@role="vbar"]');
  (0,cvox.MathmlStoreRules.defineRuleAlias_)("fence-single", "self::punct", 'self::punct[@role="application"]');
  (0,cvox.MathmlStoreRules.defineRule_)("omit-punct", "default.default", "[p] (pause:200);", "self::punct");
  (0,cvox.MathmlStoreRules.defineRule_)("omit-empty", "default.default", "", "self::empty");
  (0,cvox.MathmlStoreRules.defineRule_)("fences-open-close", "default.default", '[p] (pause:100); [t] "open"; [n] children/*[1]; [p] (pause:200);[t] "close"', 'self::fenced[@role="leftright"]');
  (0,cvox.MathmlStoreRules.defineRule_)("fences-open-close-in-appl", "default.default", "[p] (pause:100); [n] children/*[1]; [p] (pause:200);", 'self::fenced[@role="leftright"]', "./parent::children/parent::appl");
  (0,cvox.MathmlStoreRules.defineRule_)("fences-neutral", "default.default", '[p] (pause:100); [t] "absolute value of"; [n] children/*[1];[p] (pause:350);', "self::fenced", 'self::fenced[@role="neutral"]');
  (0,cvox.MathmlStoreRules.defineRule_)("omit-fences", "default.default", "[p] (pause:500); [n] children/*[1]; [p] (pause:200);", "self::fenced");
  (0,cvox.MathmlStoreRules.defineRule_)("matrix", "default.default", '[t] "matrix"; [m] children/* (ctxtFunc:CTXFnodeCounter,context:"row",pause:100)', "self::matrix");
  (0,cvox.MathmlStoreRules.defineRule_)("matrix-row", "default.default", '[m] children/* (ctxtFunc:CTXFnodeCounter,context:"column",pause:100)', 'self::row[@role="matrix"]');
  (0,cvox.MathmlStoreRules.defineRule_)("matrix-cell", "default.default", "[n] children/*[1]", 'self::cell[@role="matrix"]');
  (0,cvox.MathmlStoreRules.defineRule_)("vector", "default.default", '[t] "vector"; [m] children/* (ctxtFunc:CTXFnodeCounter,context:"element",pause:100)', "self::vector");
  (0,cvox.MathmlStoreRules.defineRule_)("cases", "default.default", '[t] "case statement"; [m] children/* (ctxtFunc:CTXFnodeCounter,context:"case",pause:100)', "self::cases");
  (0,cvox.MathmlStoreRules.defineRule_)("cases-row", "default.default", "[m] children/*", 'self::row[@role="cases"]');
  (0,cvox.MathmlStoreRules.defineRule_)("cases-cell", "default.default", "[n] children/*[1]", 'self::cell[@role="cases"]');
  (0,cvox.MathmlStoreRules.defineRule_)("row", "default.default", '[m] ./* (ctxtFunc:CTXFnodeCounter,context:"column",pause:100)', 'self::row"');
  (0,cvox.MathmlStoreRules.defineRule_)("cases-end", "default.default", '[t] "case statement"; [m] children/* (ctxtFunc:CTXFnodeCounter,context:"case",pause:100);[t] "end cases"', "self::cases", "following-sibling::*");
  (0,cvox.MathmlStoreRules.defineRule_)("multiline", "default.default", '[t] "multiline equation";[m] children/* (ctxtFunc:CTXFnodeCounter,context:"line",pause:100)', "self::multiline");
  (0,cvox.MathmlStoreRules.defineRule_)("line", "default.default", "[m] children/*", "self::line");
  (0,cvox.MathmlStoreRules.defineRule_)("table", "default.default", '[t] "multiline equation";[m] children/* (ctxtFunc:CTXFnodeCounter,context:"row",pause:200)', "self::table");
  (0,cvox.MathmlStoreRules.defineRule_)("table-row", "default.default", "[m] children/* (pause:100)", 'self::row[@role="table"]');
  (0,cvox.MathmlStoreRules.defineRuleAlias_)("cases-cell", 'self::cell[@role="table"]');
  (0,cvox.MathmlStoreRules.defineRule_)("end-punct", "default.default", "[m] children/*; [p] (pause:300)", "self::punctuated", '@role="endpunct"');
  (0,cvox.MathmlStoreRules.defineRule_)("start-punct", "default.default", "[n] content/*[1]; [p] (pause:200); [m] children/*", "self::punctuated", '@role="startpunct"');
  (0,cvox.MathmlStoreRules.defineRule_)("integral-punct", "default.default", "[n] children/*[1] (rate:0.2); [n] children/*[3] (rate:0.2)", "self::punctuated", '@role="integral"');
  (0,cvox.MathmlStoreRules.defineRule_)("punctuated", "default.default", "[m] children/* (pause:100)", "self::punctuated");
  (0,cvox.MathmlStoreRules.defineRule_)("function", "default.default", "[n] text()", "self::function");
  (0,cvox.MathmlStoreRules.defineRule_)("appl", "default.default", "[n] children/*[1]; [n] content/*[1]; [n] children/*[2]", "self::appl");
  (0,cvox.MathmlStoreRules.defineRule_)("limboth", "default.default", '[n] children/*[1]; [t] "from"; [n] children/*[2]; [t] "to";[n] children/*[3]', "self::limboth");
  (0,cvox.MathmlStoreRules.defineRule_)("sum-only", "default.default", '[n] children/*[1]; [p] (pause 100); [t] "over"; [n] children/*[2];[p] (pause 250);', "self::limboth", 'self::limboth[@role="sum"]');
  (0,cvox.MathmlStoreRules.defineRule_)("limlower", "default.default", '[n] children/*[1]; [t] "over"; [n] children/*[2];', "self::limlower");
  (0,cvox.MathmlStoreRules.defineRule_)("limupper", "default.default", '[n] children/*[1]; [t] "under"; [n] children/*[2];', "self::limupper");
  (0,cvox.MathmlStoreRules.defineRule_)("largeop", "default.default", "[n] text()", "self::largeop");
  (0,cvox.MathmlStoreRules.defineRule_)("bigop", "default.default", '[n] children/*[1]; [p] (pause 100); [t] "over"; [n] children/*[2];[p] (pause 250);', "self::bigop");
  (0,cvox.MathmlStoreRules.defineRule_)("integral", "default.default", "[n] children/*[1]; [p] (pause 100); [n] children/*[2]; [p] (pause 200);[n] children/*[3] (rate:0.35);", "self::integral");
  (0,cvox.MathmlStoreRules.defineRule_)("sqrt", "default.default", '[t] "Square root of"; [n] children/*[1] (rate:0.2); [p] (pause:400)', "self::sqrt");
  (0,cvox.MathmlStoreRules.defineRule_)("square", "default.default", '[n] children/*[1]; [t] "square" (pitch:0.35); [p] (pause:300)', "self::superscript", "children/*[2][text()=2]");
  (0,cvox.MathmlStoreRules.defineRule_)("text-no-mult", "default.default", "[n] children/*[1]; [p] (pause:200); [n] children/*[2]", "self::infixop", "children/text");
};
cvox.AbstractShifter = function() {
  this.isSubnavigating_ = !1;
};
cvox.AbstractShifter.prototype.begin = function(sel, kwargs) {
  return this.currentWalker_.begin(kwargs);
};
cvox.AbstractShifter.prototype.makeLessGranular = function() {
  this.ensureNotSubnavigating();
};
cvox.AbstractShifter.prototype.makeMoreGranular = function() {
  this.ensureNotSubnavigating();
};
cvox.AbstractShifter.prototype.ensureSubnavigating = function() {
  0 == this.isSubnavigating_ && (this.makeMoreGranular(), this.isSubnavigating_ = !0);
};
cvox.AbstractShifter.prototype.ensureNotSubnavigating = function() {
  1 == this.isSubnavigating_ && (this.isSubnavigating_ = !1, this.makeLessGranular());
};
cvox.AbstractShifter.prototype.isSubnavigating = function() {
  return this.isSubnavigating_;
};
cvox.AbstractShifter.prototype.hasAction = function(name) {
  return this.currentWalker_.hasAction(name);
};
cvox.AbstractShifter.prototype.performAction = function(name, sel) {
  return this.currentWalker_.performAction(name, sel);
};
cvox.MathShifter = function(sel) {
  cvox.AbstractShifter.call(this);
  this.level_ = 0;
  this.bumped_ = this.direction_ = !1;
  cvox.TraverseMath.getInstance().initialize(sel.start.node);
};
goog.inherits(cvox.MathShifter, cvox.AbstractShifter);
cvox.MathShifter.prototype.next = function(sel) {
  var r = sel.isReversed();
  this.bumped_ = !cvox.TraverseMath.getInstance().nextSibling(r);
  var attachedNode = cvox.TraverseMath.getInstance().getAttachedActiveNode();
  return attachedNode ? cvox.CursorSelection.fromNode(attachedNode) : sel;
};
cvox.MathShifter.prototype.sync = function(sel) {
  var attachedNode = cvox.TraverseMath.getInstance().getAttachedActiveNode();
  return attachedNode ? cvox.CursorSelection.fromNode(attachedNode) : sel;
};
cvox.MathShifter.prototype.getName = function() {
  return cvox.ChromeVox.msgs.getMsg("math_shifter");
};
cvox.MathShifter.prototype.getDescription = function() {
  var descs = cvox.SpeechRuleEngine.getInstance().evaluateNode(cvox.TraverseMath.getInstance().activeNode);
  this.bumped_ && 0 < descs.length && descs[0].pushEarcon(cvox.AbstractEarcons.WRAP_EDGE);
  return descs;
};
cvox.MathShifter.prototype.getBraille = function(prevSel, sel) {
  return new cvox.NavBraille({text:cvox.BrailleUtil.getTemplated(prevSel.start.node, sel.start.node)});
};
cvox.MathShifter.prototype.getGranularityMsg = function() {
  return this.direction_ ? "up to level " + this.level_ : "down to level " + this.level_;
};
cvox.MathShifter.prototype.makeLessGranular = function() {
  this.level_ = 0 < this.level_ ? this.level_ - 1 : 0;
  this.direction_ = !0;
  this.bumped_ = !cvox.TraverseMath.getInstance().nextParentChild(!0);
};
cvox.MathShifter.prototype.makeMoreGranular = function() {
  this.direction_ = !1;
  (this.bumped_ = !cvox.TraverseMath.getInstance().nextParentChild(!1)) || this.level_++;
};
cvox.MathShifter.create = function(sel) {
  if (cvox.DomPredicates.mathPredicate(cvox.DomUtil.getAncestors(sel.start.node))) {
    var mathNode = cvox.DomUtil.getContainingMath(sel.end.node);
    cvox.TraverseMath.getInstance().initialize(mathNode);
    cvox.SpeechRuleEngine.getInstance().parameterize(cvox.MathmlStore.getInstance());
    var dynamicCstr = cvox.MathStore.createDynamicConstraint(cvox.TraverseMath.getInstance().domain, cvox.TraverseMath.getInstance().style);
    cvox.SpeechRuleEngine.getInstance().setDynamicConstraint(dynamicCstr);
    return new cvox.MathShifter(sel);
  }
  return null;
};
cvox.TableUtil = {};
cvox.TableUtil.checkIfHeader = function(cell) {
  return "TH" == cell.tagName || cell.hasAttribute("scope") || cell.hasAttribute("role") && ("rowheader" == cell.getAttribute("role") || "columnheader" == cell.getAttribute("role"));
};
cvox.TableUtil.determineColGroups = function(colGroups) {
  var colToColGroup = [];
  if (0 == colGroups.length) {
    return colToColGroup;
  }
  for (var colGroupCtr = 0;colGroupCtr < colGroups.length;colGroupCtr++) {
    var currentColGroup = colGroups[colGroupCtr], childCols = cvox.TableUtil.getColNodes(currentColGroup);
    if (0 < childCols.length) {
      for (var colNodeCtr = 0;colNodeCtr < childCols.length;colNodeCtr++) {
        var colElement = childCols[colNodeCtr];
        if (colElement.hasAttribute("span")) {
          for (var span = parseInt(colElement.getAttribute("span"), 10), s = 0;s < span;s++) {
            colToColGroup.push(colGroupCtr);
          }
        } else {
          colToColGroup.push(colGroupCtr);
        }
      }
    } else {
      if (currentColGroup.hasAttribute("span")) {
        for (span = parseInt(currentColGroup.getAttribute("span"), 10), s = 0;s < span;s++) {
          colToColGroup.push(colGroupCtr);
        }
      } else {
        colToColGroup.push(colGroupCtr);
      }
    }
  }
  return colToColGroup;
};
cvox.TableUtil.pushIfNotContained = function(givenArray, givenElement) {
  -1 == givenArray.indexOf(givenElement) && givenArray.push(givenElement);
};
cvox.TableUtil.getChildRows = function(table) {
  return cvox.XpathUtil.evalXPath('child::tbody/tr | child::thead/tr | child::*[attribute::role="row"]', table);
};
cvox.TableUtil.getChildCells = function(rowNode) {
  return cvox.XpathUtil.evalXPath('child::td | child::th | child::*[attribute::role="gridcell"] |child::*[attribute::role="rowheader"] |child::*[attribute::role="columnheader"]', rowNode);
};
cvox.TableUtil.getCellWithID = function(table, cellID) {
  return cvox.XpathUtil.evalXPath("id('" + cellID + "')", table);
};
cvox.TableUtil.getColGroups = function(table) {
  return cvox.XpathUtil.evalXPath("child::colgroup", table);
};
cvox.TableUtil.getColNodes = function(colGroupNode) {
  return cvox.XpathUtil.evalXPath("child::col", colGroupNode);
};
function ShadowTableNode() {
}
ShadowTableNode.prototype.rowHeaderCells = [];
ShadowTableNode.prototype.colHeaderCells = [];
cvox.TraverseTable = function(tableNode) {
  this.activeTable_ = null;
  this.shadowTable_ = [];
  this.candidateHeaders_ = [];
  this.idToShadowNode_ = [];
  this.initialize(tableNode);
};
cvox.TraverseTable.prototype.colCount = null;
cvox.TraverseTable.prototype.rowCount = null;
cvox.TraverseTable.prototype.tableRowHeaders = null;
cvox.TraverseTable.prototype.tableColHeaders = null;
cvox.TraverseTable.prototype.initialize = function(tableNode) {
  tableNode && tableNode != this.activeTable_ && (this.activeTable_ = tableNode, this.currentCellCursor = null, this.tableRowHeaders = [], this.tableColHeaders = [], this.buildShadowTable_(), this.colCount = this.shadowColCount_(), this.rowCount = this.countRows_(), this.findHeaderCells_(), this.activeTable_.addEventListener("DOMSubtreeModified", goog.bind(function() {
    this.buildShadowTable_();
    this.colCount = this.shadowColCount_();
    this.rowCount = this.countRows_();
    this.tableRowHeaders = [];
    this.tableColHeaders = [];
    this.findHeaderCells_();
    0 == this.colCount && 0 == this.rowCount || null != this.getCell() || this.attachCursorToNearestCell_();
  }, this), !1));
};
cvox.TraverseTable.prototype.findNearestCursor = function(node) {
  for (var n = node;n.firstElementChild && "TABLE" != n.firstElementChild.tagName && !cvox.AriaUtil.isGrid(n.firstElementChild);) {
    n = n.firstElementChild;
  }
  for (;!cvox.DomPredicates.cellPredicate(cvox.DomUtil.getAncestors(n));) {
    if (n = cvox.DomUtil.directedNextLeafNode(n), !cvox.DomUtil.getContainingTable(n, {allowCaptions:!0})) {
      return null;
    }
  }
  for (var i = 0;i < this.rowCount;++i) {
    for (var j = 0;j < this.colCount;++j) {
      if (this.shadowTable_[i][j] && cvox.DomUtil.isDescendantOfNode(n, this.shadowTable_[i][j].activeCell)) {
        return [i, j];
      }
    }
  }
  return null;
};
cvox.TraverseTable.prototype.attachCursorToNearestCell_ = function() {
  if (this.currentCellCursor) {
    var currentCursor = this.currentCellCursor, currentRow = this.shadowTable_[currentCursor[0]];
    if (currentRow) {
      this.currentCellCursor = [currentCursor[0], currentRow.length - 1];
    } else {
      var numRows = this.shadowTable_.length;
      if (0 == numRows) {
        this.currentCellCursor = null;
      } else {
        var aboveCell = this.shadowTable_[numRows - 1][currentCursor[1]];
        aboveCell ? this.currentCellCursor = [numRows - 1, currentCursor[1]] : this.goToLastCell();
      }
    }
  } else {
    this.goToLastCell();
  }
};
cvox.TraverseTable.prototype.buildShadowTable_ = function() {
  this.shadowTable_ = [];
  for (var allRows = cvox.TableUtil.getChildRows(this.activeTable_), currentRowParent = null, currentRowGroup = null, colGroups = cvox.TableUtil.getColGroups(this.activeTable_), colToColGroup = cvox.TableUtil.determineColGroups(colGroups), ctr = 0;ctr < allRows.length;ctr++) {
    this.shadowTable_.push([]);
  }
  for (var i = 0;i < allRows.length;i++) {
    for (var childCells = cvox.TableUtil.getChildCells(allRows[i]), activeTableCol = 0, shadowTableCol = 0;activeTableCol < childCells.length;) {
      if (null == this.shadowTable_[i][shadowTableCol]) {
        var activeTableCell = childCells[activeTableCol], colsSpanned = 1, rowsSpanned = 1;
        activeTableCell.hasAttribute("colspan") && (colsSpanned = parseInt(activeTableCell.getAttribute("colspan"), 10), isNaN(colsSpanned) || 0 >= colsSpanned) && (colsSpanned = 1);
        activeTableCell.hasAttribute("rowspan") && (rowsSpanned = parseInt(activeTableCell.getAttribute("rowspan"), 10), isNaN(rowsSpanned) || 0 >= rowsSpanned) && (rowsSpanned = 1);
        for (var r = 0;r < rowsSpanned;r++) {
          for (var c = 0;c < colsSpanned;c++) {
            var shadowNode = new ShadowTableNode;
            0 == r && 0 == c ? (shadowNode.spanned = !1, shadowNode.rowSpan = !1, shadowNode.colSpan = !1) : (shadowNode.spanned = !0, shadowNode.rowSpan = 1 < rowsSpanned, shadowNode.colSpan = 1 < colsSpanned);
            shadowNode.i = i;
            shadowNode.j = shadowTableCol;
            shadowNode.activeCell = activeTableCell;
            shadowNode.rowHeaderCells = [];
            shadowNode.colHeaderCells = [];
            shadowNode.isRowHeader = !1;
            shadowNode.isColHeader = !1;
            cvox.TableUtil.checkIfHeader(shadowNode.activeCell) ? this.candidateHeaders_.push(shadowNode) : shadowNode.activeCell.hasAttribute("headers") && this.candidateHeaders_.push(shadowNode);
            null == currentRowParent ? (currentRowParent = allRows[i].parentNode, currentRowGroup = 0) : allRows[i].parentNode != currentRowParent && (currentRowParent = allRows[i].parentNode, currentRowGroup += 1);
            shadowNode.rowGroup = currentRowGroup;
            shadowNode.colGroup = 0 < colToColGroup.length ? colToColGroup[shadowTableCol] : 0;
            shadowNode.spanned || null != activeTableCell.id && (this.idToShadowNode_[activeTableCell.id] = shadowNode);
            this.shadowTable_[i + r][shadowTableCol + c] = shadowNode;
          }
        }
        shadowTableCol += colsSpanned;
        activeTableCol++;
      } else {
        shadowTableCol += 1;
      }
    }
  }
  return this.shadowTable_;
};
cvox.TraverseTable.prototype.findHeaderCells_ = function() {
  for (var i = 0;i < this.candidateHeaders_.length;i++) {
    var currentShadowNode = this.candidateHeaders_[i], currentCell = currentShadowNode.activeCell, assumedScope = null, specifiedScope = null;
    if (!currentShadowNode.spanned) {
      "TH" != currentCell.tagName || currentCell.hasAttribute("scope") ? currentCell.hasAttribute("scope") ? specifiedScope = currentCell.getAttribute("scope") : currentCell.hasAttribute("role") && "rowheader" == currentCell.getAttribute("role") ? specifiedScope = "row" : currentCell.hasAttribute("role") && "columnheader" == currentCell.getAttribute("role") && (specifiedScope = "col") : (0 < currentShadowNode.j ? "TH" == this.shadowTable_[currentShadowNode.i][currentShadowNode.j - 1].activeCell.tagName && 
      (assumedScope = "col") : currentShadowNode.j < this.shadowTable_[currentShadowNode.i].length - 1 ? "TH" == this.shadowTable_[currentShadowNode.i][currentShadowNode.j + 1].activeCell.tagName && (assumedScope = "col") : assumedScope = "col", null == assumedScope && (0 < currentShadowNode.i ? "TH" == this.shadowTable_[currentShadowNode.i - 1][currentShadowNode.j].activeCell.tagName && (assumedScope = "row") : currentShadowNode.i < this.shadowTable_.length - 1 ? "TH" == this.shadowTable_[currentShadowNode.i + 
      1][currentShadowNode.j].activeCell.tagName && (assumedScope = "row") : assumedScope = "row"));
      if ("row" == specifiedScope || "row" == assumedScope) {
        currentShadowNode.isRowHeader = !0;
        for (var rightCtr = currentShadowNode.j;rightCtr < this.shadowTable_[currentShadowNode.i].length;rightCtr++) {
          var rightShadowNode = this.shadowTable_[currentShadowNode.i][rightCtr];
          rightShadowNode.rowHeaderCells.push(currentCell);
        }
        this.tableRowHeaders.push(currentCell);
      } else {
        if ("col" == specifiedScope || "col" == assumedScope) {
          currentShadowNode.isColHeader = !0;
          for (var downCtr = currentShadowNode.i;downCtr < this.shadowTable_.length;downCtr++) {
            var downShadowNode = this.shadowTable_[downCtr][currentShadowNode.j];
            if (null == downShadowNode) {
              break;
            }
            downShadowNode.colHeaderCells.push(currentCell);
          }
          this.tableColHeaders.push(currentCell);
        } else {
          if ("rowgroup" == specifiedScope) {
            currentShadowNode.isRowHeader = !0;
            for (var currentRowGroup = currentShadowNode.rowGroup, cellsInRow = currentShadowNode.j + 1;cellsInRow < this.shadowTable_[currentShadowNode.i].length;cellsInRow++) {
              this.shadowTable_[currentShadowNode.i][cellsInRow].rowHeaderCells.push(currentCell);
            }
            for (downCtr = currentShadowNode.i + 1;downCtr < this.shadowTable_.length && this.shadowTable_[downCtr][0].rowGroup == currentRowGroup;downCtr++) {
              for (rightCtr = 0;rightCtr < this.shadowTable_[downCtr].length;rightCtr++) {
                this.shadowTable_[downCtr][rightCtr].rowHeaderCells.push(currentCell);
              }
            }
            this.tableRowHeaders.push(currentCell);
          } else {
            if ("colgroup" == specifiedScope) {
              currentShadowNode.isColHeader = !0;
              for (var currentColGroup = currentShadowNode.colGroup, cellsInCol = currentShadowNode.j + 1;cellsInCol < this.shadowTable_[currentShadowNode.i].length;cellsInCol++) {
                this.shadowTable_[currentShadowNode.i][cellsInCol].colGroup == currentColGroup && this.shadowTable_[currentShadowNode.i][cellsInCol].colHeaderCells.push(currentCell);
              }
              for (downCtr = currentShadowNode.i + 1;downCtr < this.shadowTable_.length;downCtr++) {
                for (rightCtr = 0;rightCtr < this.shadowTable_[downCtr].length;rightCtr++) {
                  this.shadowTable_[downCtr][rightCtr].colGroup == currentColGroup && this.shadowTable_[downCtr][rightCtr].colHeaderCells.push(currentCell);
                }
              }
              this.tableColHeaders.push(currentCell);
            }
          }
        }
      }
      currentCell.hasAttribute("headers") && this.findAttrbHeaders_(currentShadowNode);
      currentCell.hasAttribute("aria-describedby") && this.findAttrbDescribedBy_(currentShadowNode);
    }
  }
};
cvox.TraverseTable.prototype.findAttrbHeaders_ = function(currentShadowNode) {
  for (var activeTableCell = currentShadowNode.activeCell, idList = activeTableCell.getAttribute("headers").split(" "), idToken = 0;idToken < idList.length;idToken++) {
    for (var idCellArray = cvox.TableUtil.getCellWithID(this.activeTable_, idList[idToken]), idCtr = 0;idCtr < idCellArray.length && idCellArray[idCtr].id != activeTableCell.id;idCtr++) {
      var possibleHeaderNode = this.idToShadowNode_[idCellArray[idCtr].id];
      if (!cvox.TableUtil.checkIfHeader(possibleHeaderNode.activeCell)) {
        var iDiff = Math.abs(possibleHeaderNode.i - currentShadowNode.i), jDiff = Math.abs(possibleHeaderNode.j - currentShadowNode.j);
        0 == iDiff || iDiff < jDiff ? (cvox.TableUtil.pushIfNotContained(currentShadowNode.rowHeaderCells, possibleHeaderNode.activeCell), cvox.TableUtil.pushIfNotContained(this.tableRowHeaders, possibleHeaderNode.activeCell)) : (cvox.TableUtil.pushIfNotContained(currentShadowNode.colHeaderCells, possibleHeaderNode.activeCell), cvox.TableUtil.pushIfNotContained(this.tableColHeaders, possibleHeaderNode.activeCell));
      }
    }
  }
};
cvox.TraverseTable.prototype.findAttrbDescribedBy_ = function(currentShadowNode) {
  for (var activeTableCell = currentShadowNode.activeCell, idList = activeTableCell.getAttribute("aria-describedby").split(" "), idToken = 0;idToken < idList.length;idToken++) {
    for (var idCellArray = cvox.TableUtil.getCellWithID(this.activeTable_, idList[idToken]), idCtr = 0;idCtr < idCellArray.length && idCellArray[idCtr].id != activeTableCell.id;idCtr++) {
      var possibleHeaderNode = this.idToShadowNode_[idCellArray[idCtr].id];
      cvox.TableUtil.checkIfHeader(possibleHeaderNode.activeCell) || (possibleHeaderNode.activeCell.hasAttribute("role") && "rowheader" == possibleHeaderNode.activeCell.getAttribute("role") ? (cvox.TableUtil.pushIfNotContained(currentShadowNode.rowHeaderCells, possibleHeaderNode.activeCell), cvox.TableUtil.pushIfNotContained(this.tableRowHeaders, possibleHeaderNode.activeCell)) : possibleHeaderNode.activeCell.hasAttribute("role") && "columnheader" == possibleHeaderNode.activeCell.getAttribute("role") && 
      (cvox.TableUtil.pushIfNotContained(currentShadowNode.colHeaderCells, possibleHeaderNode.activeCell), cvox.TableUtil.pushIfNotContained(this.tableColHeaders, possibleHeaderNode.activeCell)));
    }
  }
};
cvox.TraverseTable.prototype.getCell = function() {
  if (!this.currentCellCursor || !this.shadowTable_) {
    return null;
  }
  var shadowEntry = this.shadowTable_[this.currentCellCursor[0]][this.currentCellCursor[1]];
  return shadowEntry && shadowEntry.activeCell;
};
cvox.TraverseTable.prototype.getCellAt = function(index) {
  if (index[0] < this.rowCount && 0 <= index[0] && index[1] < this.colCount && 0 <= index[1]) {
    var shadowEntry = this.shadowTable_[index[0]][index[1]];
    if (null != shadowEntry) {
      return shadowEntry.activeCell;
    }
  }
  return null;
};
cvox.TraverseTable.prototype.getCellRowHeaders = function() {
  var shadowEntry = this.shadowTable_[this.currentCellCursor[0]][this.currentCellCursor[1]];
  return shadowEntry.rowHeaderCells;
};
cvox.TraverseTable.prototype.getCellColHeaders = function() {
  var shadowEntry = this.shadowTable_[this.currentCellCursor[0]][this.currentCellCursor[1]];
  return shadowEntry.colHeaderCells;
};
cvox.TraverseTable.prototype.isSpanned = function() {
  var shadowEntry = this.shadowTable_[this.currentCellCursor[0]][this.currentCellCursor[1]];
  return shadowEntry.spanned;
};
cvox.TraverseTable.prototype.isRowHeader = function() {
  var shadowEntry = this.shadowTable_[this.currentCellCursor[0]][this.currentCellCursor[1]];
  return shadowEntry.isRowHeader;
};
cvox.TraverseTable.prototype.isColHeader = function() {
  var shadowEntry = this.shadowTable_[this.currentCellCursor[0]][this.currentCellCursor[1]];
  return shadowEntry.isColHeader;
};
cvox.TraverseTable.prototype.getCol = function() {
  for (var colArray = [], i = 0;i < this.shadowTable_.length;i++) {
    if (this.shadowTable_[i][this.currentCellCursor[1]]) {
      var shadowEntry = this.shadowTable_[i][this.currentCellCursor[1]];
      if (shadowEntry.colSpan && shadowEntry.rowSpan) {
        var prev = colArray[colArray.length - 1];
        prev != shadowEntry.activeCell && colArray.push(shadowEntry.activeCell);
      } else {
        !shadowEntry.colSpan && shadowEntry.rowSpan || colArray.push(shadowEntry.activeCell);
      }
    }
  }
  return colArray;
};
cvox.TraverseTable.prototype.summaryText = function() {
  return this.activeTable_.hasAttribute("summary") ? this.activeTable_.getAttribute("summary") : null;
};
cvox.TraverseTable.prototype.shadowColCount_ = function() {
  for (var max = 0, i = 0;i < this.shadowTable_.length;i++) {
    this.shadowTable_[i].length > max && (max = this.shadowTable_[i].length);
  }
  return max;
};
cvox.TraverseTable.prototype.countRows_ = function() {
  var rowCount = cvox.TableUtil.getChildRows(this.activeTable_);
  return rowCount.length;
};
cvox.TraverseTable.prototype.nextRow = function() {
  return this.currentCellCursor ? this.goToRow(this.currentCellCursor[0] + 1) : this.goToRow(0);
};
cvox.TraverseTable.prototype.nextCol = function() {
  return this.currentCellCursor ? this.goToCol(this.currentCellCursor[1] + 1) : this.goToCol(0);
};
cvox.TraverseTable.prototype.goToRow = function(index) {
  return null != this.shadowTable_[index] ? (this.currentCellCursor = null == this.currentCellCursor ? [index, 0] : [index, this.currentCellCursor[1]], !0) : !1;
};
cvox.TraverseTable.prototype.goToCol = function(index) {
  if (0 > index || index >= this.colCount) {
    return !1;
  }
  this.currentCellCursor = null == this.currentCellCursor ? [0, index] : [this.currentCellCursor[0], index];
  return !0;
};
cvox.TraverseTable.prototype.goToCell = function(index) {
  if (index[0] < this.rowCount && 0 <= index[0] && index[1] < this.colCount && 0 <= index[1]) {
    var cell = this.shadowTable_[index[0]][index[1]];
    if (null != cell) {
      return this.currentCellCursor = index, !0;
    }
  }
  return !1;
};
cvox.TraverseTable.prototype.goToLastCell = function() {
  var numRows = this.shadowTable_.length;
  if (0 == numRows) {
    return !1;
  }
  var lastRow = this.shadowTable_[numRows - 1], lastIndex = [numRows - 1, lastRow.length - 1], cell = this.shadowTable_[lastIndex[0]][lastIndex[1]];
  return null != cell ? (this.currentCellCursor = lastIndex, !0) : !1;
};
cvox.TraverseTable.prototype.goToRowLastCell = function() {
  var currentRow = this.currentCellCursor[0], lastIndex = [currentRow, this.shadowTable_[currentRow].length - 1], cell = this.shadowTable_[lastIndex[0]][lastIndex[1]];
  return null != cell ? (this.currentCellCursor = lastIndex, !0) : !1;
};
cvox.TraverseTable.prototype.goToColLastCell = function() {
  var currentCol = this.getCol(), lastIndex = [currentCol.length - 1, this.currentCellCursor[1]], cell = this.shadowTable_[lastIndex[0]][lastIndex[1]];
  return null != cell ? (this.currentCellCursor = lastIndex, !0) : !1;
};
cvox.TableWalker = function() {
  this.tt = new cvox.TraverseTable(null);
};
goog.inherits(cvox.TableWalker, cvox.AbstractWalker);
cvox.TableWalker.prototype.next = function(sel) {
  return this.nextRow(sel);
};
cvox.TableWalker.prototype.sync = function(sel) {
  return this.goTo_(sel, goog.bind(function(position) {
    return this.tt.goToCell(position);
  }, this));
};
cvox.TableWalker.prototype.getDescription = function(prevSel, sel) {
  var position = this.syncPosition_(sel);
  if (!position) {
    return [];
  }
  this.tt.goToCell(position);
  var descs = cvox.DescriptionUtil.getCollectionDescription(prevSel, sel);
  0 == descs.length && descs.push(new cvox.NavDescription({annotation:cvox.ChromeVox.msgs.getMsg("empty_cell")}));
  return descs;
};
cvox.TableWalker.prototype.getBraille = function(prevSel, sel) {
  new cvox.NavBraille({});
  var position = this.syncPosition_(sel);
  if (position) {
    var text = cvox.BrailleUtil.getTemplated(prevSel.start.node, sel.start.node);
    text.append(" " + ++position[0] + "/" + ++position[1]);
  }
  return new cvox.NavBraille({text:text});
};
cvox.TableWalker.prototype.goToFirstCell = function(sel) {
  return this.goTo_(sel, goog.bind(function() {
    return this.tt.goToCell([0, 0]);
  }, this));
};
cvox.TableWalker.prototype.goToLastCell = function(sel) {
  return this.goTo_(sel, goog.bind(function() {
    return this.tt.goToLastCell();
  }, this));
};
cvox.TableWalker.prototype.goToRowFirstCell = function(sel) {
  return this.goTo_(sel, goog.bind(function(position) {
    return this.tt.goToCell([position[0], 0]);
  }, this));
};
cvox.TableWalker.prototype.goToRowLastCell = function(sel) {
  return this.goTo_(sel, goog.bind(function() {
    return this.tt.goToRowLastCell();
  }, this));
};
cvox.TableWalker.prototype.goToColFirstCell = function(sel) {
  return this.goTo_(sel, goog.bind(function(position) {
    return this.tt.goToCell([0, position[1]]);
  }, this));
};
cvox.TableWalker.prototype.goToColLastCell = function(sel) {
  return this.goTo_(sel, goog.bind(function() {
    return this.tt.goToColLastCell();
  }, this));
};
cvox.TableWalker.prototype.nextRow = function(sel) {
  return this.goTo_(sel, goog.bind(function(position) {
    return this.tt.goToCell([position[0] + (sel.isReversed() ? -1 : 1), position[1]]);
  }, this));
};
cvox.TableWalker.prototype.nextCol = function(sel) {
  return this.goTo_(sel, goog.bind(function(position) {
    return this.tt.goToCell([position[0], position[1] + (sel.isReversed() ? -1 : 1)]);
  }, this));
};
cvox.TableWalker.prototype.announceHeaders = function(sel) {
  cvox.ChromeVox.tts.speak(this.getHeaderText_(sel), cvox.AbstractTts.QUEUE_MODE_FLUSH, cvox.AbstractTts.PERSONALITY_ANNOTATION);
  return sel;
};
cvox.TableWalker.prototype.speakTableLocation = function(sel) {
  cvox.ChromeVox.navigationManager.speakDescriptionArray(this.getLocationDescription_(sel), cvox.AbstractTts.QUEUE_MODE_FLUSH, null);
  return sel;
};
cvox.TableWalker.prototype.exitShifterContent = function(sel) {
  var tableNode = this.getTableNode_(sel);
  if (!tableNode) {
    return null;
  }
  var nextNode = cvox.DomUtil.directedNextLeafNode(tableNode, !1);
  return cvox.CursorSelection.fromNode(nextNode);
};
cvox.TableWalker.prototype.getHeaderText_ = function(sel) {
  this.tt.initialize(this.getTableNode_(sel));
  var position = this.tt.findNearestCursor(sel.start.node);
  return position && this.tt.goToCell(position) ? this.getRowHeaderText_(position) + " " + this.getColHeaderText_(position) : cvox.ChromeVox.msgs.getMsg("not_inside_table");
};
cvox.TableWalker.prototype.getLocationDescription_ = function(sel) {
  var locationInfo = this.getLocationInfo(sel);
  return null == locationInfo ? null : [new cvox.NavDescription({text:cvox.ChromeVox.msgs.getMsg("table_location", locationInfo)})];
};
cvox.TableWalker.prototype.getRowHeaderText_ = function(position) {
  var rowHeaderText = "", rowHeaders = this.tt.getCellRowHeaders();
  if (0 == rowHeaders.length) {
    var firstCellInRow = this.tt.getCellAt([position[0], 0]), rowHeaderText = rowHeaderText + cvox.DomUtil.collapseWhitespace(cvox.DomUtil.getValue(firstCellInRow) + " " + cvox.DomUtil.getName(firstCellInRow));
    return cvox.ChromeVox.msgs.getMsg("row_header") + rowHeaderText;
  }
  for (var i = 0;i < rowHeaders.length;++i) {
    rowHeaderText += cvox.DomUtil.collapseWhitespace(cvox.DomUtil.getValue(rowHeaders[i]) + " " + cvox.DomUtil.getName(rowHeaders[i]));
  }
  return "" == rowHeaderText ? cvox.ChromeVox.msgs.getMsg("empty_row_header") : cvox.ChromeVox.msgs.getMsg("row_header") + rowHeaderText;
};
cvox.TableWalker.prototype.getColHeaderText_ = function(position) {
  var colHeaderText = "", colHeaders = this.tt.getCellColHeaders();
  if (0 == colHeaders.length) {
    var firstCellInCol = this.tt.getCellAt([0, position[1]]), colHeaderText = colHeaderText + cvox.DomUtil.collapseWhitespace(cvox.DomUtil.getValue(firstCellInCol) + " " + cvox.DomUtil.getName(firstCellInCol));
    return cvox.ChromeVox.msgs.getMsg("column_header") + colHeaderText;
  }
  for (var i = 0;i < colHeaders.length;++i) {
    colHeaderText += cvox.DomUtil.collapseWhitespace(cvox.DomUtil.getValue(colHeaders[i]) + " " + cvox.DomUtil.getName(colHeaders[i]));
  }
  return "" == colHeaderText ? cvox.ChromeVox.msgs.getMsg("empty_row_header") : cvox.ChromeVox.msgs.getMsg("column_header") + colHeaderText;
};
cvox.TableWalker.prototype.getLocationInfo = function(sel) {
  this.tt.initialize(this.getTableNode_(sel));
  var position = this.tt.findNearestCursor(sel.start.node);
  return position ? [position[0] + 1, this.tt.rowCount, position[1] + 1, this.tt.colCount].map(function(x) {
    return cvox.ChromeVox.msgs.getNumber(x);
  }) : null;
};
cvox.TableWalker.prototype.goTo_ = function(sel, f) {
  this.tt.initialize(this.getTableNode_(sel));
  var position = this.tt.findNearestCursor(sel.end.node);
  if (!position) {
    return null;
  }
  this.tt.goToCell(position);
  return f(position) ? cvox.CursorSelection.fromNode(this.tt.getCell()).setReversed(sel.isReversed()) : null;
};
cvox.TableWalker.prototype.getTableNode_ = function(sel) {
  return cvox.DomUtil.getContainingTable(sel.end.node);
};
cvox.TableWalker.prototype.syncPosition_ = function(sel) {
  var tableNode = this.getTableNode_(sel);
  this.tt.initialize(tableNode);
  return this.tt.findNearestCursor(sel.end.node);
};
cvox.ColumnWalker = function() {
  cvox.TableWalker.call(this);
};
goog.inherits(cvox.ColumnWalker, cvox.TableWalker);
cvox.ColumnWalker.prototype.next = function(sel) {
  return this.nextCol(sel);
};
cvox.ColumnWalker.prototype.getGranularityMsg = function() {
  return cvox.ChromeVox.msgs.getMsg("column_granularity");
};
cvox.RowWalker = function() {
  cvox.TableWalker.call(this);
};
goog.inherits(cvox.RowWalker, cvox.TableWalker);
cvox.RowWalker.prototype.next = function(sel) {
  return this.nextRow(sel);
};
cvox.RowWalker.prototype.getGranularityMsg = function() {
  return cvox.ChromeVox.msgs.getMsg("row_granularity");
};
cvox.TableShifter = function() {
  this.rowWalker_ = new cvox.RowWalker;
  this.columnWalker_ = new cvox.ColumnWalker;
  this.currentWalker_ = this.rowWalker_;
  this.bumpedEdge_ = !1;
  this.begin_ = !0;
  cvox.AbstractShifter.call(this);
};
goog.inherits(cvox.TableShifter, cvox.AbstractShifter);
cvox.TableShifter.prototype.next = function(sel) {
  var nextSel = this.currentWalker_.next(sel);
  return nextSel ? nextSel : (this.bumpedEdge_ = !0, sel);
};
cvox.TableShifter.prototype.sync = function(sel) {
  return "TABLE" == sel.start.node.tagName ? sel.isReversed() ? this.currentWalker_.goToLastCell(sel) : this.currentWalker_.goToFirstCell(sel) : this.currentWalker_.sync(sel);
};
cvox.TableShifter.prototype.getName = function() {
  return cvox.ChromeVox.msgs.getMsg("table_shifter");
};
cvox.TableShifter.prototype.getDescription = function(prevSel, sel) {
  var descs = this.currentWalker_.getDescription(prevSel, sel);
  if (0 < descs.length && (this.bumpedEdge_ && (descs[0].pushEarcon(cvox.AbstractEarcons.WRAP_EDGE), this.bumpedEdge_ = !1), this.begin_)) {
    var summaryText = this.currentWalker_.tt.summaryText(), locationInfo = this.currentWalker_.getLocationInfo(sel);
    null != locationInfo && descs.push(new cvox.NavDescription({context:cvox.ChromeVox.msgs.getMsg("table_location", locationInfo), text:"", annotation:summaryText ? summaryText + " " : ""}));
    this.currentWalker_.tt.isSpanned() && descs.push(new cvox.NavDescription({text:"", annotation:cvox.ChromeVox.msgs.getMsg("spanned")}));
    this.begin_ = !1;
  }
  return descs;
};
cvox.TableShifter.prototype.getBraille = function(prevSel, sel) {
  return this.currentWalker_.getBraille(prevSel, sel);
};
cvox.TableShifter.prototype.getGranularityMsg = function() {
  return this.currentWalker_.getGranularityMsg();
};
cvox.TableShifter.prototype.makeLessGranular = function() {
  cvox.TableShifter.superClass_.makeLessGranular.call(this);
  this.currentWalker_ = this.rowWalker_;
};
cvox.TableShifter.prototype.makeMoreGranular = function() {
  cvox.TableShifter.superClass_.makeMoreGranular.call(this);
  this.currentWalker_ = this.columnWalker_;
};
cvox.TableShifter.create = function(sel) {
  var ancestors = cvox.DomUtil.getAncestors(sel.start.node);
  return cvox.DomPredicates.tablePredicate(ancestors) && !cvox.DomPredicates.captionPredicate(ancestors) ? new cvox.TableShifter : null;
};
cvox.NavigationHistory = function() {
  this.reset_();
};
cvox.NavigationHistory.MAX_HISTORY_LEN_ = 30;
cvox.NavigationHistory.prototype.reset_ = function() {
  var startNode = document.body;
  this.history_ = [startNode];
  this.arrivedValid_ = !0;
};
cvox.NavigationHistory.prototype.update = function(newNode) {
  var previousNode = this.history_[0];
  newNode && newNode != previousNode && this.history_.unshift(newNode);
  this.history_.length > cvox.NavigationHistory.MAX_HISTORY_LEN_ && this.history_.pop();
  this.arrivedValid_ = this.isValidNode_(newNode);
};
cvox.NavigationHistory.prototype.becomeInvalid = function(node) {
  this.clean_();
  return this.arrivedValid_ ? !this.isValidNode_(node) : (this.arrivedValid_ = !0, !1);
};
cvox.NavigationHistory.prototype.revert = function(opt_predicate) {
  var active = document.activeElement;
  active != document.body && this.isValidNode_(active) && this.update(active);
  if (opt_predicate) {
    for (;0 < this.history_.length;) {
      var node = this.history_[0];
      if (opt_predicate(node)) {
        break;
      }
      this.history_.shift();
    }
  }
  return {current:this.history_[0], previous:this.history_[1]};
};
cvox.NavigationHistory.prototype.clean_ = function() {
  for (var changed = !1, i = this.history_.length - 1;0 <= i;i--) {
    var valid = this.isValidNode_(this.history_[i]);
    valid || (this.history_.splice(i, 1), changed = !0);
  }
  return changed;
};
cvox.NavigationHistory.prototype.isValidNode_ = function(node) {
  return cvox.DomUtil.isAttachedToDocument(node) && cvox.DomUtil.isVisible(node) ? !0 : !1;
};
cvox.TraverseContent = function(domObj) {
  this.currentDomObj = null != domObj ? domObj : document.body;
  var range = document.createRange();
  try {
    range.selectNode(this.currentDomObj), this.startCursor_ = new cvox.Cursor(range.startContainer, range.startOffset, cvox.TraverseUtil.getNodeText(range.startContainer)), this.endCursor_ = new cvox.Cursor(range.endContainer, range.endOffset, cvox.TraverseUtil.getNodeText(range.endContainer));
  } catch (e) {
    window.console.log("Error: Unselectable node:"), window.console.log(domObj);
  }
};
goog.addSingletonGetter(cvox.TraverseContent);
cvox.TraverseContent.prototype.lastSelectionWasWhitespace = !1;
cvox.TraverseContent.prototype.skipWhitespace = !1;
cvox.TraverseContent.prototype.skipInvalidSelections = !0;
cvox.TraverseContent.prototype.breakAtLinks = !0;
cvox.TraverseContent.kCharacter = "character";
cvox.TraverseContent.kWord = "word";
cvox.TraverseContent.kSentence = "sentence";
cvox.TraverseContent.kLine = "line";
cvox.TraverseContent.kParagraph = "paragraph";
cvox.TraverseContent.kAllGrains = [cvox.TraverseContent.kParagraph, cvox.TraverseContent.kSentence, cvox.TraverseContent.kLine, cvox.TraverseContent.kWord, cvox.TraverseContent.kCharacter];
cvox.TraverseContent.prototype.syncToCursorSelection = function(sel) {
  this.startCursor_ = sel.start.clone();
  this.endCursor_ = sel.end.clone();
};
cvox.TraverseContent.prototype.getCurrentCursorSelection = function() {
  return new cvox.CursorSelection(this.startCursor_, this.endCursor_);
};
cvox.TraverseContent.prototype.updateSelection = function() {
  cvox.TraverseUtil.setSelection(this.startCursor_, this.endCursor_);
  cvox.SelectionUtil.scrollToSelection(window.getSelection());
};
cvox.TraverseContent.prototype.getCurrentRange = function() {
  var range = document.createRange();
  try {
    range.setStart(this.startCursor_.node, this.startCursor_.index), range.setEnd(this.endCursor_.node, this.endCursor_.index);
  } catch (e) {
    console.log("Invalid range ");
  }
  return range;
};
cvox.TraverseContent.prototype.getCurrentText = function() {
  return cvox.SelectionUtil.getRangeText(this.getCurrentRange());
};
cvox.TraverseContent.prototype.collapseToEnd = function() {
  this.startCursor_ = this.endCursor_.clone();
};
cvox.TraverseContent.prototype.collapseToStart = function() {
  this.endCursor_ = this.startCursor_.clone();
};
cvox.TraverseContent.prototype.moveNext = function(grain) {
  var breakTags = this.getBreakTags(), skipWhitespace = this.skipWhitespace, range = this.getCurrentRange();
  cvox.SelectionUtil.isRangeValid(range) || (skipWhitespace = !0);
  var elementsEntered = [], elementsLeft = [], str;
  do {
    grain === cvox.TraverseContent.kSentence ? str = cvox.TraverseUtil.getNextSentence(this.startCursor_, this.endCursor_, elementsEntered, elementsLeft, breakTags) : grain === cvox.TraverseContent.kWord ? str = cvox.TraverseUtil.getNextWord(this.startCursor_, this.endCursor_, elementsEntered, elementsLeft) : grain === cvox.TraverseContent.kCharacter ? str = cvox.TraverseUtil.getNextChar(this.startCursor_, this.endCursor_, elementsEntered, elementsLeft, skipWhitespace) : grain === cvox.TraverseContent.kParagraph ? 
    str = cvox.TraverseUtil.getNextParagraph(this.startCursor_, this.endCursor_, elementsEntered, elementsLeft) : grain === cvox.TraverseContent.kLine ? str = cvox.TraverseUtil.getNextLine(this.startCursor_, this.endCursor_, elementsEntered, elementsLeft, breakTags) : (window.console.log('Invalid selection granularity: "' + grain + '"'), grain = cvox.TraverseContent.kSentence, str = cvox.TraverseUtil.getNextSentence(this.startCursor_, this.endCursor_, elementsEntered, elementsLeft, breakTags));
    if (null == str) {
      return null;
    }
    var range = this.getCurrentRange(), isInvalid = !range.getBoundingClientRect();
  } while (this.skipInvalidSelections && isInvalid);
  if (cvox.SelectionUtil.isRangeValid(range)) {
    this.lastSelectionWasWhitespace = !1;
  } else {
    if (this.lastSelectionWasWhitespace || grain != cvox.TraverseContent.kCharacter) {
      for (;!cvox.SelectionUtil.isRangeValid(this.getCurrentRange()) && null != this.moveNext(grain);) {
      }
    } else {
      this.lastSelectionWasWhitespace = !0;
    }
  }
  return this.getCurrentText();
};
cvox.TraverseContent.prototype.movePrev = function(grain) {
  var breakTags = this.getBreakTags(), skipWhitespace = this.skipWhitespace, range = this.getCurrentRange();
  cvox.SelectionUtil.isRangeValid(range) || (skipWhitespace = !0);
  var elementsEntered = [], elementsLeft = [], str;
  do {
    grain === cvox.TraverseContent.kSentence ? str = cvox.TraverseUtil.getPreviousSentence(this.startCursor_, this.endCursor_, elementsEntered, elementsLeft, breakTags) : grain === cvox.TraverseContent.kWord ? str = cvox.TraverseUtil.getPreviousWord(this.startCursor_, this.endCursor_, elementsEntered, elementsLeft) : grain === cvox.TraverseContent.kCharacter ? str = cvox.TraverseUtil.getPreviousChar(this.startCursor_, this.endCursor_, elementsEntered, elementsLeft, skipWhitespace) : grain === cvox.TraverseContent.kParagraph ? 
    str = cvox.TraverseUtil.getPreviousParagraph(this.startCursor_, this.endCursor_, elementsEntered, elementsLeft) : grain === cvox.TraverseContent.kLine ? str = cvox.TraverseUtil.getPreviousLine(this.startCursor_, this.endCursor_, elementsEntered, elementsLeft, breakTags) : (window.console.log('Invalid selection granularity: "' + grain + '"'), grain = cvox.TraverseContent.kSentence, str = cvox.TraverseUtil.getPreviousSentence(this.startCursor_, this.endCursor_, elementsEntered, elementsLeft, breakTags));
    if (null == str) {
      return null;
    }
    var range = this.getCurrentRange(), isInvalid = !range.getBoundingClientRect();
  } while (this.skipInvalidSelections && isInvalid);
  if (cvox.SelectionUtil.isRangeValid(range)) {
    this.lastSelectionWasWhitespace = !1;
  } else {
    if (this.lastSelectionWasWhitespace || grain != cvox.TraverseContent.kCharacter) {
      for (;!cvox.SelectionUtil.isRangeValid(this.getCurrentRange()) && null != this.movePrev(grain);) {
      }
    } else {
      this.lastSelectionWasWhitespace = !0;
    }
  }
  return this.getCurrentText();
};
cvox.TraverseContent.prototype.getBreakTags = function() {
  return {A:this.breakAtLinks, BR:!0, HR:!0};
};
cvox.TraverseContent.prototype.nextElement = function(grain, domObj) {
  null != domObj && (this.currentDomObj = domObj);
  var result = this.moveNext(grain);
  return null == result || cvox.DomUtil.isDescendantOfNode(this.startCursor_.node, this.currentDomObj) && cvox.DomUtil.isDescendantOfNode(this.endCursor_.node, this.currentDomObj) ? result : null;
};
cvox.TraverseContent.prototype.prevElement = function(grain, domObj) {
  null != domObj && (this.currentDomObj = domObj);
  var result = this.movePrev(grain);
  return null == result || cvox.DomUtil.isDescendantOfNode(this.startCursor_.node, this.currentDomObj) && cvox.DomUtil.isDescendantOfNode(this.endCursor_.node, this.currentDomObj) ? result : null;
};
cvox.TraverseContent.prototype.reset = function() {
  window.getSelection().removeAllRanges();
};
cvox.AbstractSelectionWalker = function() {
  this.objWalker_ = new cvox.BareObjectWalker;
  this.tc_ = cvox.TraverseContent.getInstance();
  this.grain = "";
};
goog.inherits(cvox.AbstractSelectionWalker, cvox.AbstractWalker);
cvox.AbstractSelectionWalker.prototype.next = function(sel) {
  var r = sel.isReversed();
  this.tc_.syncToCursorSelection(sel.clone().setReversed(!1));
  var ret = r ? this.tc_.prevElement(this.grain) : this.tc_.nextElement(this.grain);
  if (null == ret) {
    return this.objWalker_.next(sel);
  }
  var retSel = this.tc_.getCurrentCursorSelection().setReversed(r), objSel = this.objWalker_.next(sel), objSel = objSel ? objSel.setReversed(r) : null;
  return !objSel || "Text" == retSel.end.node.constructor.name && "Text" == objSel.end.node.constructor.name || cvox.DomUtil.isDescendantOfNode(retSel.end.node, sel.end.node) || cvox.DomUtil.isDescendantOfNode(retSel.end.node, objSel.end.node) ? retSel : objSel;
};
cvox.AbstractSelectionWalker.prototype.sync = function(sel) {
  var r = sel.isReversed(), newSel = null;
  if (sel.start.equals(sel.end) && "Text" != sel.start.node.constructor.name) {
    for (var node = sel.start.node;node && cvox.DomUtil.directedFirstChild(node, r) && !cvox.TraverseUtil.treatAsLeafNode(node);) {
      for (var child = cvox.DomUtil.directedFirstChild(node, r);child;) {
        if (cvox.DomUtil.isVisible(child, {checkAncestors:!1, checkDescendants:!1})) {
          node = child;
          break;
        } else {
          child = cvox.DomUtil.directedNextSibling(child, r);
        }
      }
      if (!child) {
        break;
      }
    }
    newSel = cvox.CursorSelection.fromNode(node);
  } else {
    newSel = sel.clone(), r ? newSel.start = newSel.end : newSel.end = newSel.start;
  }
  var newSel = this.next(newSel.setReversed(!1)), objSel = this.objWalker_.sync(sel), objSel = objSel ? objSel.setReversed(r) : null;
  if (!newSel) {
    return objSel;
  }
  newSel.setReversed(r);
  return !objSel || "Text" == newSel.end.node.constructor.name && "Text" == objSel.end.node.constructor.name || cvox.DomUtil.isDescendantOfNode(newSel.end.node, sel.end.node) || cvox.DomUtil.isDescendantOfNode(newSel.end.node, objSel.end.node) ? newSel : objSel;
};
cvox.AbstractSelectionWalker.prototype.getDescription = function(prevSel, sel) {
  var description = cvox.DescriptionUtil.getDescriptionFromAncestors(cvox.DomUtil.getUniqueAncestors(prevSel.end.node, sel.start.node), !0, cvox.ChromeVox.verbosity);
  description.text = sel.getText() || description.text;
  return [description];
};
cvox.AbstractSelectionWalker.prototype.getBraille = function(prevSel, sel) {
  var node = sel.absStart().node, text = cvox.TraverseUtil.getNodeText(node), spannable = new cvox.Spannable(text);
  spannable.setSpan(node, 0, text.length);
  return new cvox.NavBraille({text:spannable, startIndex:sel.absStart().index, endIndex:sel.absEnd().index});
};
cvox.CharacterWalker = function() {
  cvox.AbstractSelectionWalker.call(this);
  this.grain = cvox.TraverseContent.kCharacter;
};
goog.inherits(cvox.CharacterWalker, cvox.AbstractSelectionWalker);
cvox.CharacterWalker.prototype.getDescription = function(prevSel, sel) {
  var desc = cvox.CharacterWalker.superClass_.getDescription.call(this, prevSel, sel);
  desc.forEach(function(item) {
    item.personality || (item.personality = {});
    item.personality.phoneticCharacters = !0;
  });
  return desc;
};
cvox.CharacterWalker.prototype.getGranularityMsg = function() {
  return cvox.ChromeVox.msgs.getMsg("character_granularity");
};
cvox.GroupUtil = {};
cvox.GroupUtil.MAX_CHARCOUNT_ = 1500;
cvox.GroupUtil.BREAKOUT_SELECTOR_ = 'blockquote,button,code,form,frame,h1,h2,h3,h4,h5,h6,hr,iframe,input,object,ol,p,pre,select,table,tr,ul,math,span.math,[role~="alert alertdialog button checkbox combobox dialog log marquee menubar progressbar radio radiogroup scrollbar slider spinbutton status tab tabpanel textbox toolbar tooltip treeitem article document group heading img list math region row separator"]';
cvox.GroupUtil.isLeafNode = function(node) {
  if ("LABEL" == node.tagName) {
    return cvox.DomUtil.isLeafNode(node);
  }
  if (cvox.DomUtil.isLeafNode(node)) {
    return !0;
  }
  if (!cvox.DomUtil.isSemanticElt(node)) {
    for (var breakingNodes = node.querySelectorAll(cvox.GroupUtil.BREAKOUT_SELECTOR_), i = 0;i < breakingNodes.length;++i) {
      if (cvox.DomUtil.hasContent(breakingNodes[i])) {
        return !1;
      }
    }
  }
  if (cvox.AriaUtil.isCompositeControl(node) && !cvox.DomUtil.isFocusable(node)) {
    return !1;
  }
  var content = cvox.DomUtil.collapseWhitespace(cvox.DomUtil.getValue(node) + " " + cvox.DomUtil.getName(node));
  return content.length > cvox.GroupUtil.MAX_CHARCOUNT_ || "" === content.replace(/\s/g, "") ? !1 : !0;
};
cvox.GroupWalker = function() {
  cvox.AbstractNodeWalker.call(this);
};
goog.inherits(cvox.GroupWalker, cvox.AbstractNodeWalker);
cvox.GroupWalker.prototype.getDescription = function(prevSel, sel) {
  return cvox.DescriptionUtil.getCollectionDescription(prevSel, sel);
};
cvox.GroupWalker.prototype.getBraille = function() {
  throw "getBraille is unsupported";
};
cvox.GroupWalker.prototype.getGranularityMsg = function() {
  return cvox.ChromeVox.msgs.getMsg("group_strategy");
};
cvox.GroupWalker.prototype.stopNodeDescent = function(node) {
  return cvox.GroupUtil.isLeafNode(node);
};
cvox.StructuralLineWalker = function() {
  cvox.AbstractSelectionWalker.call(this);
  this.grain = cvox.TraverseContent.kLine;
};
goog.inherits(cvox.StructuralLineWalker, cvox.AbstractSelectionWalker);
cvox.StructuralLineWalker.prototype.getGranularityMsg = function() {
  return cvox.ChromeVox.msgs.getMsg("structural_line");
};
cvox.StructuralLineWalker.prototype.getDescription = function(prevSel, sel) {
  var desc = cvox.StructuralLineWalker.superClass_.getDescription.call(this, prevSel, sel);
  desc[0].text = cvox.DomUtil.getPrefixText(sel.absStart().node, sel.absStart().index) + desc[0].text;
  return desc;
};
cvox.StructuralLineWalker.prototype.getBraille = function(prevSel, sel) {
  var braille = cvox.StructuralLineWalker.superClass_.getBraille.call(this, prevSel, sel), objNode = this.objWalker_.sync(sel).absStart().node, prevNode = prevSel.absEnd().node, name = void 0;
  if (!sel.start.equals(sel.end) && !cvox.DomPredicates.editTextPredicate([objNode])) {
    var prefix = cvox.DomUtil.getPrefixText(sel.absStart().node, sel.absStart().index), name = prefix + sel.getText()
  }
  var spannable = cvox.BrailleUtil.getTemplated(prevNode, objNode, {name:name});
  spannable.setSpan(objNode, 0, spannable.getLength());
  braille.text = spannable;
  braille.startIndex = 0;
  braille.endIndex = 0;
  return braille;
};
cvox.LayoutLineWalker = function() {
  this.subWalker_ = new cvox.StructuralLineWalker;
};
goog.inherits(cvox.LayoutLineWalker, cvox.AbstractWalker);
cvox.LayoutLineWalker.prototype.next = function(sel) {
  var endSel = new cvox.CursorSelection(sel.end, sel.end, sel.isReversed()), sync = this.subWalker_.sync(endSel);
  if (!sync) {
    return null;
  }
  var start = this.subWalker_.next(endSel);
  if (!start) {
    return null;
  }
  start.setReversed(sel.isReversed());
  return this.extend_(start).setReversed(!1);
};
cvox.LayoutLineWalker.prototype.sync = function(sel) {
  var line = this.subWalker_.sync(sel);
  if (!line) {
    return null;
  }
  var end = this.extend_(line), start = this.extend_(line.setReversed(!line.isReversed()));
  return new cvox.CursorSelection(start.end, end.end, sel.isReversed());
};
cvox.LayoutLineWalker.prototype.getDescription = function(prevSel, sel) {
  var descriptions = [], prev = prevSel, absSel = sel.clone().setReversed(!1), cur = new cvox.CursorSelection(absSel.start, absSel.start), cur = this.subWalker_.sync(cur);
  if (!cur) {
    return [];
  }
  if (absSel.start.node == absSel.end.node) {
    return this.subWalker_.getDescription(prevSel, sel);
  }
  for (;cur && !cur.end.equals(absSel.end);) {
    descriptions.push.apply(descriptions, this.subWalker_.getDescription(prev, cur)), prev = cur, cur = this.subWalker_.next(cur);
  }
  cur && descriptions.push.apply(descriptions, this.subWalker_.getDescription(prev, cur));
  return descriptions;
};
cvox.LayoutLineWalker.prototype.getBraille = function(prevSel, sel) {
  var braille = new cvox.NavBraille({}), absSel = this.subWalker_.sync(sel.clone().setReversed(!1)), layoutSel = this.sync(sel).setReversed(!1);
  if (!layoutSel || !absSel) {
    return braille;
  }
  var cur = new cvox.CursorSelection(layoutSel.start, layoutSel.start), cur = this.subWalker_.sync(cur);
  if (!cur) {
    return braille;
  }
  for (;cur && !cur.end.equals(layoutSel.end);) {
    this.appendBraille_(prevSel, absSel, cur, braille), prevSel = cur, cur = this.subWalker_.next(cur);
  }
  cur && this.appendBraille_(prevSel, absSel, cur, braille);
  return braille;
};
cvox.LayoutLineWalker.prototype.getGranularityMsg = function() {
  return cvox.ChromeVox.msgs.getMsg("layout_line");
};
cvox.LayoutLineWalker.prototype.isVisualLineBreak_ = function(lSel, rSel) {
  if (this.wantsOwnLine_(lSel.end.node) || this.wantsOwnLine_(rSel.start.node)) {
    return !0;
  }
  var lRect = lSel.getRange().getBoundingClientRect(), rRect = rSel.getRange().getBoundingClientRect();
  0 == lRect.width && 0 == lRect.height && lSel.end.node.nodeType == Node.ELEMENT_NODE && (lRect = lSel.end.node.getBoundingClientRect());
  0 == rRect.width && 0 == rRect.height && rSel.start.node.nodeType == Node.ELEMENT_NODE && (rRect = rSel.start.node.getBoundingClientRect());
  return lRect.bottom != rRect.bottom;
};
cvox.LayoutLineWalker.prototype.wantsOwnLine_ = function(node) {
  return node instanceof HTMLTextAreaElement || node.parentNode instanceof HTMLTextAreaElement;
};
cvox.LayoutLineWalker.prototype.extend_ = function(start) {
  var end = start, next = start;
  do {
    end = next, next = this.subWalker_.next(end);
  } while (next && !this.isVisualLineBreak_(end, next));
  return new cvox.CursorSelection(start.start, end.end, start.isReversed());
};
cvox.LayoutLineWalker.prototype.appendBraille_ = function(prevSel, sel, cur, braille) {
  var item = this.subWalker_.getBraille(prevSel, cur).text, valueSelectionSpan = item.getSpanInstanceOf(cvox.BrailleUtil.ValueSelectionSpan);
  0 < braille.text.getLength() && braille.text.append(cvox.BrailleUtil.ITEM_SEPARATOR);
  for (var node = cur.start.node;node.parentNode && cvox.DomUtil.isLeafNode(node.parentNode);) {
    node = node.parentNode;
  }
  var nodeStart = braille.text.getLength(), nodeEnd = nodeStart + item.getLength();
  braille.text.append(item);
  braille.text.setSpan(node, nodeStart, nodeEnd);
  sel && cur.absEquals(sel) && (valueSelectionSpan ? (braille.startIndex = nodeStart + item.getSpanStart(valueSelectionSpan), braille.endIndex = nodeStart + item.getSpanEnd(valueSelectionSpan)) : (braille.startIndex = nodeStart, braille.endIndex = nodeStart + 1));
};
cvox.ObjectWalker = function() {
  cvox.AbstractNodeWalker.call(this);
};
goog.inherits(cvox.ObjectWalker, cvox.AbstractNodeWalker);
cvox.ObjectWalker.prototype.stopNodeDescent = function(node) {
  return cvox.DomUtil.isLeafNode(node);
};
cvox.AbstractNodeWalker.prototype.getDescription = function(prevSel, sel) {
  return cvox.DescriptionUtil.getDescriptionFromNavigation(prevSel.end.node, sel.start.node, !0, cvox.ChromeVox.verbosity);
};
cvox.ObjectWalker.prototype.getBraille = function() {
  throw "getBraille is unsupported";
};
cvox.ObjectWalker.prototype.getGranularityMsg = function() {
  return cvox.ChromeVox.msgs.getMsg("object_strategy");
};
cvox.SentenceWalker = function() {
  cvox.AbstractSelectionWalker.call(this);
  this.grain = cvox.TraverseContent.kSentence;
};
goog.inherits(cvox.SentenceWalker, cvox.AbstractSelectionWalker);
cvox.SentenceWalker.prototype.getGranularityMsg = function() {
  return cvox.ChromeVox.msgs.getMsg("sentence_granularity");
};
cvox.WordWalker = function() {
  cvox.AbstractSelectionWalker.call(this);
  this.grain = cvox.TraverseContent.kWord;
};
goog.inherits(cvox.WordWalker, cvox.AbstractSelectionWalker);
cvox.WordWalker.prototype.getGranularityMsg = function() {
  return cvox.ChromeVox.msgs.getMsg("word_granularity");
};
cvox.NavigationShifter = function() {
  this.reset_();
  cvox.AbstractShifter.call(this);
};
goog.inherits(cvox.NavigationShifter, cvox.AbstractShifter);
cvox.NavigationShifter.GRANULARITIES = {CHARACTER:0, WORD:1, LINE:2, SENTENCE:3, OBJECT:4, GROUP:5};
cvox.NavigationShifter.prototype.storeOn = function(store) {
  store.granularity = this.getGranularity();
};
cvox.NavigationShifter.prototype.readFrom = function(store) {
  this.setGranularity(store.granularity);
};
cvox.NavigationShifter.prototype.next = function(sel) {
  var ret = this.currentWalker_.next(sel);
  this.currentWalkerIndex_ <= cvox.NavigationShifter.GRANULARITIES.LINE && ret && (cvox.TraverseContent.getInstance().syncToCursorSelection(ret.clone().setReversed(!1)), cvox.TraverseContent.getInstance().updateSelection());
  return ret;
};
cvox.NavigationShifter.prototype.sync = function(sel) {
  return this.currentWalker_.sync(sel);
};
cvox.NavigationShifter.prototype.getName = function() {
  return cvox.ChromeVox.msgs.getMsg("navigation_shifter");
};
cvox.NavigationShifter.prototype.getDescription = function(prevSel, sel) {
  return this.currentWalker_.getDescription(prevSel, sel);
};
cvox.NavigationShifter.prototype.getBraille = function(prevSel, sel) {
  return this.lineWalker_.getBraille(prevSel, sel);
};
cvox.NavigationShifter.prototype.getGranularityMsg = function() {
  return this.currentWalker_.getGranularityMsg();
};
cvox.NavigationShifter.prototype.makeMoreGranular = function() {
  cvox.NavigationShifter.superClass_.makeMoreGranular.call(this);
  this.currentWalkerIndex_ = Math.max(this.currentWalkerIndex_ - 1, 0);
  cvox.NavigationShifter.allowSentence || this.currentWalkerIndex_ != cvox.NavigationShifter.GRANULARITIES.SENTENCE || this.currentWalkerIndex_--;
  this.currentWalker_ = this.walkers_[this.currentWalkerIndex_];
};
cvox.NavigationShifter.prototype.makeLessGranular = function() {
  cvox.NavigationShifter.superClass_.makeLessGranular.call(this);
  this.currentWalkerIndex_ = Math.min(this.currentWalkerIndex_ + 1, this.walkers_.length - 1);
  cvox.NavigationShifter.allowSentence || this.currentWalkerIndex_ != cvox.NavigationShifter.GRANULARITIES.SENTENCE || this.currentWalkerIndex_++;
  this.currentWalker_ = this.walkers_[this.currentWalkerIndex_];
};
cvox.NavigationShifter.prototype.setGranularity = function(granularity) {
  this.ensureNotSubnavigating();
  this.currentWalkerIndex_ = granularity;
  this.currentWalker_ = this.walkers_[this.currentWalkerIndex_];
};
cvox.NavigationShifter.prototype.getGranularity = function() {
  var wasSubnavigating = this.isSubnavigating();
  this.ensureNotSubnavigating();
  var ret = this.currentWalkerIndex_;
  wasSubnavigating && this.ensureSubnavigating();
  return ret;
};
cvox.NavigationShifter.prototype.hasAction = function(name) {
  return "toggleLineType" == name ? !0 : cvox.NavigationShifter.superClass_.hasAction.call(this, name);
};
cvox.NavigationShifter.create = function() {
  return new cvox.NavigationShifter;
};
cvox.NavigationShifter.prototype.reset_ = function() {
  this.groupWalker_ = new cvox.GroupWalker;
  this.objectWalker_ = new cvox.ObjectWalker;
  this.sentenceWalker_ = new cvox.SentenceWalker;
  this.lineWalker_ = new cvox.LayoutLineWalker;
  this.wordWalker_ = new cvox.WordWalker;
  this.characterWalker_ = new cvox.CharacterWalker;
  this.walkers_ = [this.characterWalker_, this.wordWalker_, this.lineWalker_, this.sentenceWalker_, this.objectWalker_, this.groupWalker_];
  this.currentWalkerIndex_ = this.walkers_.indexOf(this.groupWalker_);
  this.currentWalker_ = this.walkers_[this.currentWalkerIndex_];
};
cvox.NavigationShifter.allowSentence = !1;
cvox.NavigationSpeaker = function() {
  this.stopReading = !1;
  this.id_ = 1;
};
cvox.NavigationSpeaker.prototype.speakDescriptionArray = function(descriptionArray, initialQueueMode, completionFunction) {
  descriptionArray = this.reorderAnnotations(descriptionArray);
  this.stopReading = !1;
  this.id_ = (this.id_ + 1) % 1E4;
  var self = this, speakDescriptionChain = function(i, queueMode, id) {
    var description = descriptionArray[i];
    if (description && !self.stopReading && self.id_ == id) {
      var startCallback = function() {
        for (var j = 0;j < description.earcons.length;j++) {
          cvox.ChromeVox.earcons.playEarcon(description.earcons[j]);
        }
      }, endCallbackHelper = function() {
        speakDescriptionChain(i + 1, cvox.AbstractTts.QUEUE_MODE_QUEUE, id);
      }, endCallback = function() {
        description.personality && description.personality[cvox.AbstractTts.PAUSE] && "number" == typeof description.personality[cvox.AbstractTts.PAUSE] ? setTimeout(endCallbackHelper, description.personality[cvox.AbstractTts.PAUSE]) : endCallbackHelper();
        i == descriptionArray.length - 1 && completionFunction && completionFunction();
      };
      description.isEmpty() ? (startCallback(), endCallback()) : (description.speak(queueMode, startCallback, endCallback), cvox.ChromeVox.host.hasTtsCallback() || (startCallback(), endCallback()));
    }
  };
  speakDescriptionChain(0, initialQueueMode, this.id_);
  0 == descriptionArray.length && completionFunction && completionFunction();
};
cvox.NavigationSpeaker.structuredElement = function(annon) {
  switch(annon) {
    case "table":
    ;
    case "Math":
      return !0;
  }
  return !1;
};
cvox.NavigationSpeaker.prototype.reorderAnnotations = function(descriptionArray) {
  for (var descs = [], i = 0;i < descriptionArray.length;i++) {
    var descr = descriptionArray[i];
    cvox.NavigationSpeaker.structuredElement(descr.annotation) && (descs.push(new cvox.NavDescription({text:"", annotation:descr.annotation})), descr.annotation = "");
    descs.push(descr);
  }
  return descs;
};
cvox.NavigationManager = function() {
  this.addInterframeListener_();
  this.reset();
};
cvox.NavigationManager.prototype.storeOn = function(store) {
  store.reversed = this.isReversed();
  store.keepReading = this.keepReading_;
  store.findNext = this.predicate_;
  this.shifter_.storeOn(store);
};
cvox.NavigationManager.prototype.readFrom = function(store) {
  this.curSel_.setReversed(store.reversed);
  this.shifter_.readFrom(store);
  store.keepReading && this.startReading(cvox.AbstractTts.QUEUE_MODE_FLUSH);
};
cvox.NavigationManager.prototype.reset = function() {
  this.navSpeaker_ = new cvox.NavigationSpeaker;
  this.shifterTypes_ = [cvox.NavigationShifter, cvox.TableShifter, cvox.MathShifter];
  this.shifterStack_ = [];
  this.shifter_ = new cvox.NavigationShifter;
  this.curSel_ = document.activeElement != document.body ? cvox.CursorSelection.fromNode(document.activeElement) : this.shifter_.begin(this.curSel_, {reversed:!1});
  this.prevSel_ = this.curSel_.clone();
  this.ignoreIframesNoMatterWhat_ = this.exitedShifter_ = this.enteredShifter_ = this.pageEndAnnounced_ = this.pageEnd_ = this.keepReading_ = this.recovered_ = this.skipped_ = !1;
  this.pageSel_ = null;
  this.predicate_ = "";
  this.saveSel_ = null;
  this.activeIndicator && this.activeIndicator.removeFromDom();
  this.activeIndicator = new cvox.ActiveIndicator;
  this.navigationHistory_ = new cvox.NavigationHistory;
  this.focusRecovery_ = "chrome:" != window.location.protocol;
  this.iframeIdMap = {};
  this.nextIframeId = 1;
  document.activeElement != document.body && this.sync();
  cvox.TraverseMath.getInstance();
};
cvox.NavigationManager.prototype.resolve = function(opt_predicate) {
  if (!this.getFocusRecovery()) {
    return !0;
  }
  var current = this.getCurrentNode();
  if (!this.navigationHistory_.becomeInvalid(current) || this.hasNext_()) {
    return !0;
  }
  var revert = this.navigationHistory_.revert(opt_predicate);
  if (!revert.current) {
    return !0;
  }
  var newSel = cvox.CursorSelection.fromNode(revert.current), context = cvox.CursorSelection.fromNode(revert.previous), newSel = newSel || cvox.CursorSelection.fromBody(), context = context || cvox.CursorSelection.fromBody();
  newSel.setReversed(this.isReversed());
  this.updateSel(newSel, context);
  this.recovered_ = !0;
  return !1;
};
cvox.NavigationManager.prototype.getFocusRecovery = function() {
  return this.focusRecovery_;
};
cvox.NavigationManager.prototype.setFocusRecovery = function(value) {
  this.focusRecovery_ = value;
};
cvox.NavigationManager.prototype.next_ = function(iframes) {
  return this.tryBoundaries_(this.shifter_.next(this.curSel_), iframes) ? (this.pageSel_ && this.pageSel_.extend(this.curSel_), !0) : !1;
};
cvox.NavigationManager.prototype.hasNext_ = function() {
  if (0 < this.shifterStack_.length) {
    return !0;
  }
  var dummySel = this.curSel_.clone(), result = !1, dummyNavShifter = new cvox.NavigationShifter;
  dummyNavShifter.setGranularity(this.shifter_.getGranularity());
  dummyNavShifter.sync(dummySel);
  dummyNavShifter.next(dummySel) && (result = !0);
  return result;
};
cvox.NavigationManager.prototype.findNext = function(predicate, opt_predicateName, opt_initialNode) {
  this.predicate_ = opt_predicateName || "";
  this.resolve();
  this.shifter_ = this.shifterStack_[0] || this.shifter_;
  this.shifterStack_ = [];
  var ret = cvox.FindUtil.findNext(this.curSel_, predicate, opt_initialNode);
  this.ignoreIframesNoMatterWhat_ || this.tryIframe_(ret && ret.start.node);
  ret && this.updateSelToArbitraryNode(ret.start.node);
  this.predicate_ = "";
  return ret;
};
cvox.NavigationManager.prototype.sync = function() {
  this.resolve();
  var ret = this.shifter_.sync(this.curSel_);
  ret && (this.curSel_ = ret);
};
cvox.NavigationManager.prototype.syncAll = function(opt_skipText) {
  this.sync();
  this.setFocus(opt_skipText);
  this.updateIndicator();
};
cvox.NavigationManager.prototype.clearPageSel = function(opt_announce) {
  var hasSel = !!this.pageSel_;
  if (hasSel && opt_announce) {
    var announcement = cvox.ChromeVox.msgs.getMsg("clear_page_selection");
    cvox.ChromeVox.tts.speak(announcement, cvox.AbstractTts.QUEUE_MODE_FLUSH, cvox.AbstractTts.PERSONALITY_ANNOTATION);
  }
  this.pageSel_ = null;
  return hasSel;
};
cvox.NavigationManager.prototype.togglePageSel = function() {
  this.pageSel_ = this.pageSel_ ? null : new cvox.PageSelection(this.curSel_.setReversed(!1));
  return !!this.pageSel_;
};
cvox.NavigationManager.prototype.getDescription = function() {
  if (this.getCurrentNode().hasAttribute && this.getCurrentNode().hasAttribute("cvoxnodedesc")) {
    for (var preDesc = cvox.ChromeVoxJSON.parse(this.getCurrentNode().getAttribute("cvoxnodedesc")), currentDesc = [], i = 0;i < preDesc.length;++i) {
      var inDesc = preDesc[i];
      currentDesc.push(new cvox.NavDescription({context:inDesc.context, text:inDesc.text, userValue:inDesc.userValue, annotation:inDesc.annotation}));
    }
    return currentDesc;
  }
  var desc = this.pageSel_ ? this.pageSel_.getDescription(this.shifter_, this.prevSel_, this.curSel_) : this.shifter_.getDescription(this.prevSel_, this.curSel_), earcons = [];
  this.skipped_ && (earcons.push(cvox.AbstractEarcons.PARAGRAPH_BREAK), this.skipped_ = !1);
  this.recovered_ && (earcons.push(cvox.AbstractEarcons.FONT_CHANGE), this.recovered_ = !1);
  this.pageEnd_ && (earcons.push(cvox.AbstractEarcons.WRAP), this.pageEnd_ = !1);
  this.enteredShifter_ && (earcons.push(cvox.AbstractEarcons.OBJECT_ENTER), this.enteredShifter_ = !1);
  this.exitedShifter_ && (earcons.push(cvox.AbstractEarcons.OBJECT_EXIT), this.exitedShifter_ = !1);
  0 < earcons.length && 0 < desc.length && earcons.forEach(function(earcon) {
    desc[0].pushEarcon(earcon);
  });
  return desc;
};
cvox.NavigationManager.prototype.getBraille = function() {
  return this.shifter_.getBraille(this.prevSel_, this.curSel_);
};
cvox.NavigationManager.prototype.performAction = function(name) {
  switch(name) {
    case "enterShifter":
    ;
    case "enterShifterSilently":
      for (var i = this.shifterTypes_.length - 1, shifterType;shifterType = this.shifterTypes_[i];i--) {
        var shifter = shifterType.create(this.curSel_);
        if (shifter && shifter.getName() != this.shifter_.getName()) {
          this.shifterStack_.push(this.shifter_);
          this.shifter_ = shifter;
          this.sync();
          this.enteredShifter_ = "enterShifterSilently" != name;
          break;
        } else {
          if (shifter && this.shifter_.getName() == shifter.getName()) {
            break;
          }
        }
      }
      break;
    case "exitShifter":
      if (0 == this.shifterStack_.length) {
        return !1;
      }
      this.shifter_ = this.shifterStack_.pop();
      this.sync();
      this.exitedShifter_ = !0;
      break;
    case "exitShifterContent":
      if (0 == this.shifterStack_.length) {
        return !1;
      }
      this.updateSel(this.shifter_.performAction(name, this.curSel_));
      this.shifter_ = this.shifterStack_.pop() || this.shifter_;
      this.sync();
      this.exitedShifter_ = !0;
      break;
    default:
      return this.shifter_.hasAction(name) ? this.updateSel(this.shifter_.performAction(name, this.curSel_)) : !1;
  }
  return !0;
};
cvox.NavigationManager.prototype.getGranularityMsg = function() {
  return this.shifter_.getGranularityMsg();
};
cvox.NavigationManager.prototype.makeMoreGranular = function(opt_persist) {
  this.shifter_.makeMoreGranular();
  this.sync();
  this.persistGranularity_(opt_persist);
};
cvox.NavigationManager.prototype.makeLessGranular = function(opt_persist) {
  this.shifter_.makeLessGranular();
  this.sync();
  this.persistGranularity_(opt_persist);
};
cvox.NavigationManager.prototype.setGranularity = function(granularity, opt_force, opt_persist) {
  !opt_force && 0 < this.shifterStack_.length || (this.shifter_ = this.shifterStack_.shift() || this.shifter_, this.shifter_.setGranularity(granularity), this.persistGranularity_(opt_persist));
};
cvox.NavigationManager.prototype.getGranularity = function() {
  var shifter = this.shifterStack_[0] || this.shifter_;
  return shifter.getGranularity();
};
cvox.NavigationManager.prototype.ensureSubnavigating = function() {
  this.shifter_.isSubnavigating() || (this.shifter_.ensureSubnavigating(), this.sync());
};
cvox.NavigationManager.prototype.ensureNotSubnavigating = function() {
  this.shifter_.isSubnavigating() && (this.shifter_.ensureNotSubnavigating(), this.sync());
};
cvox.NavigationManager.prototype.speakDescriptionArray = function(descriptionArray, initialQueueMode, completionFunction, opt_personality) {
  opt_personality && descriptionArray.every(function(desc) {
    desc.personality || (desc.personality = opt_personality);
  });
  this.navSpeaker_.speakDescriptionArray(descriptionArray, initialQueueMode, completionFunction);
};
cvox.NavigationManager.prototype.updatePosition = function(node) {
  var msg = cvox.ChromeVox.position;
  msg[document.location.href] = cvox.DomUtil.elementToPoint(node);
  JSON.stringify(msg);
};
cvox.NavigationManager.prototype.finishNavCommand = function(opt_prefix, opt_setFocus, opt_queueMode, opt_callback) {
  if (this.pageEnd_ && !this.pageEndAnnounced_) {
    if (this.pageEndAnnounced_ = !0, cvox.ChromeVox.tts.stop(), cvox.ChromeVox.earcons.playEarcon(cvox.AbstractEarcons.WRAP), cvox.ChromeVox.verbosity === cvox.VERBOSITY_VERBOSE) {
      var msg = cvox.ChromeVox.msgs.getMsg("wrapped_to_top");
      this.isReversed() && (msg = cvox.ChromeVox.msgs.getMsg("wrapped_to_bottom"));
      cvox.ChromeVox.tts.speak(msg, cvox.AbstractTts.QUEUE_MODE_QUEUE, cvox.AbstractTts.PERSONALITY_ANNOTATION);
    }
  } else {
    if (this.enteredShifter_ || this.exitedShifter_) {
      opt_prefix = cvox.ChromeVox.msgs.getMsg("enter_content_say", [this.shifter_.getName()]);
    }
    var descriptionArray = cvox.ChromeVox.navigationManager.getDescription();
    (opt_setFocus = void 0 === opt_setFocus ? !0 : opt_setFocus) && this.setFocus();
    this.updateIndicator();
    var queueMode = opt_queueMode || cvox.AbstractTts.QUEUE_MODE_FLUSH;
    opt_prefix && (cvox.ChromeVox.tts.speak(opt_prefix, queueMode, cvox.AbstractTts.PERSONALITY_ANNOTATION), queueMode = cvox.AbstractTts.QUEUE_MODE_QUEUE);
    this.speakDescriptionArray(descriptionArray, queueMode, opt_callback || null);
    this.getBraille().write();
    this.updatePosition(this.getCurrentNode());
  }
};
cvox.NavigationManager.prototype.navigate = function(opt_ignoreIframes, opt_granularity) {
  this.pageEndAnnounced_ = !1;
  if (this.pageEnd_) {
    return this.pageEnd_ = !1, this.syncToBeginning(opt_ignoreIframes), !0;
  }
  if (!this.resolve()) {
    return !1;
  }
  this.ensureNotSubnavigating();
  void 0 !== opt_granularity && (opt_granularity !== this.getGranularity() || 0 < this.shifterStack_.length) && (this.setGranularity(opt_granularity, !0), this.sync());
  return this.next_(!opt_ignoreIframes);
};
cvox.NavigationManager.prototype.subnavigate = function() {
  this.pageEndAnnounced_ = !1;
  this.resolve() && (this.ensureSubnavigating(), this.next_(!0));
};
cvox.NavigationManager.prototype.skip = function() {
  if (!this.keepReading_) {
    return !1;
  }
  cvox.ChromeVox.host.hasTtsCallback() && (this.skipped_ = !0, this.setReversed(!1), this.startCallbackReading_(cvox.AbstractTts.QUEUE_MODE_FLUSH));
  return !0;
};
cvox.NavigationManager.prototype.startReading = function(queueMode) {
  this.keepReading_ = !0;
  cvox.ChromeVox.host.hasTtsCallback() ? this.startCallbackReading_(queueMode) : this.startNonCallbackReading_(queueMode);
  this.prevStickyState_ = cvox.ChromeVox.isStickyOn;
};
cvox.NavigationManager.prototype.stopReading = function(stopTtsImmediately) {
  this.keepReading_ = !1;
  this.navSpeaker_.stopReading = !0;
  stopTtsImmediately && cvox.ChromeVox.tts.stop();
  void 0 != this.prevStickyState_ && (this.prevStickyState_ = void 0);
};
cvox.NavigationManager.prototype.isReading = function() {
  return this.keepReading_;
};
cvox.NavigationManager.prototype.startCallbackReading_ = cvox.ChromeVoxEventSuspender.withSuspendedEvents(function(queueMode) {
  this.finishNavCommand("", !0, queueMode, goog.bind(function() {
    this.next_(!0) && this.keepReading_ && this.startCallbackReading_(cvox.AbstractTts.QUEUE_MODE_QUEUE);
  }, this));
});
cvox.NavigationManager.prototype.startNonCallbackReading_ = cvox.ChromeVoxEventSuspender.withSuspendedEvents(function(queueMode) {
  this.keepReading_ && (cvox.ChromeVox.tts.isSpeaking() || (this.finishNavCommand("", !0, queueMode, null), this.next_(!0) || (this.keepReading_ = !1)), window.setTimeout(goog.bind(this.startNonCallbackReading_, this), 1E3));
});
cvox.NavigationManager.prototype.getFullDescription = function() {
  return this.pageSel_ ? this.pageSel_.getFullDescription() : [cvox.DescriptionUtil.getDescriptionFromAncestors(cvox.DomUtil.getAncestors(this.curSel_.start.node), !0, cvox.ChromeVox.verbosity)];
};
cvox.NavigationManager.prototype.setFocus = function(opt_skipText) {
  this.pageSel_ || opt_skipText && this.curSel_.start.node.constructor == Text || cvox.Focuser.setFocus(this.curSel_.start.node);
};
cvox.NavigationManager.prototype.getCurrentNode = function() {
  return this.curSel_.absStart().node;
};
cvox.NavigationManager.prototype.addInterframeListener_ = function() {
  var self = this;
  cvox.Interframe.addListener(function(message) {
    if ("enterIframe" == message.command || "exitIframe" == message.command) {
      cvox.ChromeVox.serializer.readFrom(message), self.keepReading_ || cvox.ChromeVoxEventSuspender.withSuspendedEvents(function() {
        window.focus();
        if (message.findNext) {
          var predicateName = message.findNext, predicate = cvox.DomPredicates[predicateName], found = self.findNext(predicate, predicateName, !0);
          if (predicate && (!found || "IFRAME" == found.start.node.tagName)) {
            return;
          }
        } else {
          if ("exitIframe" == message.command) {
            var id = message.sourceId, iframeElement = self.iframeIdMap[id], reversed = message.reversed;
            iframeElement && self.updateSel(cvox.CursorSelection.fromNode(iframeElement));
            self.setReversed(reversed);
            self.sync();
            self.navigate();
          } else {
            if (self.syncToBeginning(), !cvox.DomUtil.hasContent(document.body)) {
              self.tryIframe_(null);
              return;
            }
          }
        }
        self.finishNavCommand("", !0);
      })();
    }
  });
};
cvox.NavigationManager.prototype.updateIndicator = function() {
  this.activeIndicator.syncToCursorSelection(this.curSel_);
};
cvox.NavigationManager.prototype.updateIndicatorIfChanged = function() {
  this.activeIndicator.updateIndicatorIfChanged();
};
cvox.NavigationManager.prototype.showOrHideIndicator = function(active) {
  active || this.activeIndicator.removeFromDom();
};
cvox.NavigationManager.prototype.collapseSelection = function() {
  this.curSel_.collapse();
};
cvox.NavigationManager.prototype.updateSelToArbitraryNode = function(node, opt_precise) {
  node ? (this.setGranularity(cvox.NavigationShifter.GRANULARITIES.OBJECT, !0), this.updateSel(cvox.CursorSelection.fromNode(node)), opt_precise || this.sync()) : this.syncToBeginning();
};
cvox.NavigationManager.prototype.updateSel = function(sel, opt_context) {
  sel && (this.prevSel_ = opt_context || this.curSel_, this.curSel_ = sel);
  var currentNode = this.getCurrentNode();
  this.navigationHistory_.update(currentNode);
  return !!sel;
};
cvox.NavigationManager.prototype.setReversed = function(r) {
  this.curSel_.setReversed(r);
};
cvox.NavigationManager.prototype.isReversed = function() {
  return this.curSel_.isReversed();
};
cvox.NavigationManager.prototype.tryBoundaries_ = function(sel, iframes) {
  iframes = !!iframes && !this.ignoreIframesNoMatterWhat_ || !1;
  this.pageEnd_ = !1;
  if (iframes && this.tryIframe_(sel && sel.start.node)) {
    return !0;
  }
  if (sel) {
    return this.updateSel(sel), !0;
  }
  if (0 < this.shifterStack_.length) {
    return !0;
  }
  this.syncToBeginning(!iframes);
  this.clearPageSel(!0);
  this.stopReading(!0);
  this.pageEnd_ = !0;
  return !1;
};
cvox.NavigationManager.prototype.tryIframe_ = function(node) {
  if (null == node && cvox.Interframe.isIframe()) {
    var message = {command:"exitIframe", reversed:this.isReversed(), granularity:this.getGranularity()};
    cvox.ChromeVox.serializer.storeOn(message);
    cvox.Interframe.sendMessageToParentWindow(message);
    return !0;
  }
  if (null == node || "IFRAME" != node.tagName || !node.src) {
    return !1;
  }
  var iframeElement = node, iframeId = void 0, id;
  for (id in this.iframeIdMap) {
    if (this.iframeIdMap[id] == iframeElement) {
      iframeId = id;
      break;
    }
  }
  void 0 == iframeId && (iframeId = this.nextIframeId, this.nextIframeId++, this.iframeIdMap[iframeId] = iframeElement, cvox.Interframe.sendIdToIFrame(iframeId, iframeElement));
  message = {command:"enterIframe", id:iframeId};
  cvox.ChromeVox.serializer.storeOn(message);
  cvox.Interframe.sendMessageToIFrame(message, iframeElement);
  return !0;
};
cvox.NavigationManager.prototype.syncToBeginning = function(opt_skipIframe) {
  var ret = this.shifter_.begin(this.curSel_, {reversed:this.curSel_.isReversed()});
  !opt_skipIframe && this.tryIframe_(ret && ret.start.node) || this.updateSel(ret);
};
cvox.NavigationManager.prototype.ignoreIframesNoMatterWhat = function() {
  this.ignoreIframesNoMatterWhat_ = !0;
};
cvox.NavigationManager.prototype.saveSel = function() {
  this.saveSel_ = this.curSel_;
};
cvox.NavigationManager.prototype.restoreSel = function() {
  this.curSel_ = this.saveSel_ || this.curSel_;
};
cvox.NavigationManager.prototype.persistGranularity_ = function(opt_persist) {
  (opt_persist = void 0 === opt_persist ? !1 : opt_persist) && this.getGranularity();
};
cvox.SearchWidget = function() {
  this.txtNode_ = this.containerNode_ = null;
  this.PROMPT_ = "Search:";
  this.hasMatch_ = this.caseSensitive_ = !1;
  cvox.Widget.call(this);
};
goog.inherits(cvox.SearchWidget, cvox.Widget);
goog.addSingletonGetter(cvox.SearchWidget);
cvox.SearchWidget.prototype.show = function() {
  cvox.SearchWidget.superClass_.show.call(this);
  this.active = !0;
  this.hasMatch_ = !1;
  cvox.ChromeVox.navigationManager.setGranularity(cvox.NavigationShifter.GRANULARITIES.OBJECT, !0, !1);
  cvox.ChromeVox.navigationManager.setReversed(!1);
  this.focusRecovery_ = cvox.ChromeVox.navigationManager.getFocusRecovery();
  cvox.ChromeVox.navigationManager.setFocusRecovery(!1);
  var containerNode = this.createContainerNode_();
  this.containerNode_ = containerNode;
  var overlayNode = this.createOverlayNode_();
  containerNode.appendChild(overlayNode);
  var promptNode = document.createElement("span");
  promptNode.innerHTML = this.PROMPT_;
  overlayNode.appendChild(promptNode);
  this.txtNode_ = this.createTextAreaNode_();
  overlayNode.appendChild(this.txtNode_);
  document.body.appendChild(containerNode);
  this.txtNode_.focus();
  window.setTimeout(function() {
    containerNode.style.opacity = "1.0";
  }, 0);
};
cvox.SearchWidget.prototype.hide = function(opt_noSync) {
  if (this.isActive()) {
    var containerNode = this.containerNode_;
    containerNode.style.opacity = "0.0";
    window.setTimeout(function() {
      document.body.removeChild(containerNode);
    }, 1E3);
    this.txtNode_ = null;
    cvox.SearchWidget.containerNode = null;
    cvox.ChromeVox.navigationManager.setFocusRecovery(this.focusRecovery_);
    this.active = !1;
  }
  cvox.$m("choice_widget_exited").andPause().andMessage(this.getNameMsg()).speakFlush();
  this.hasMatch_ && opt_noSync || cvox.ChromeVox.navigationManager.updateSelToArbitraryNode(this.initialNode);
  cvox.ChromeVoxEventSuspender.withSuspendedEvents(goog.bind(cvox.ChromeVox.navigationManager.syncAll, cvox.ChromeVox.navigationManager))(!0);
  cvox.ChromeVox.navigationManager.speakDescriptionArray(cvox.ChromeVox.navigationManager.getDescription(), cvox.AbstractTts.QUEUE_MODE_QUEUE, null, cvox.AbstractTts.PERSONALITY_ANNOUNCEMENT);
  var text = this.textFromCurrentDescription_();
  cvox.ChromeVox.braille.write(new cvox.NavBraille({text:text, startIndex:0, endIndex:0}));
  cvox.SearchWidget.superClass_.hide.call(this, !0);
};
cvox.SearchWidget.prototype.getNameMsg = function() {
  return ["search_widget_intro"];
};
cvox.SearchWidget.prototype.getHelpMsg = function() {
  return "search_widget_intro_help";
};
cvox.SearchWidget.prototype.onKeyDown = function(evt) {
  if (!this.isActive()) {
    return !1;
  }
  var searchStr = this.txtNode_.value;
  if (8 == evt.keyCode) {
    0 < searchStr.length ? (searchStr = searchStr.substring(0, searchStr.length - 1), this.txtNode_.value = searchStr, this.beginSearch_(searchStr)) : (cvox.ChromeVox.navigationManager.updateSelToArbitraryNode(this.initialNode), cvox.ChromeVox.navigationManager.syncAll());
  } else {
    if (40 == evt.keyCode) {
      this.next_(searchStr, !1);
    } else {
      if (38 == evt.keyCode) {
        this.next_(searchStr, !0);
      } else {
        if (13 == evt.keyCode) {
          this.hide(!0);
        } else {
          if (27 == evt.keyCode) {
            this.hide(!1);
          } else {
            if (evt.ctrlKey && 67 == evt.keyCode) {
              this.toggleCaseSensitivity_();
            } else {
              return cvox.SearchWidget.superClass_.onKeyDown.call(this, evt);
            }
          }
        }
      }
    }
  }
  evt.preventDefault();
  evt.stopPropagation();
  return !0;
};
cvox.SearchWidget.prototype.onKeyPress = function(evt) {
  if (!this.isActive()) {
    return !1;
  }
  this.txtNode_.value += String.fromCharCode(evt.charCode);
  var searchStr = this.txtNode_.value;
  this.beginSearch_(searchStr);
  evt.preventDefault();
  evt.stopPropagation();
  return !0;
};
cvox.SearchWidget.prototype.onNavigate = function() {
};
cvox.SearchWidget.prototype.getPredicate = function() {
  return null;
};
cvox.SearchWidget.prototype.nextResult = function(opt_reverse) {
  if (!this.isActive()) {
    return null;
  }
  var searchStr = this.txtNode_.value;
  return this.next_(searchStr, opt_reverse);
};
cvox.SearchWidget.prototype.createContainerNode_ = function() {
  var containerNode = document.createElement("div");
  containerNode.id = "cvox-search";
  containerNode.style.position = "fixed";
  containerNode.style.top = "50%";
  containerNode.style.left = "50%";
  containerNode.style["-webkit-transition"] = "all 0.3s ease-in";
  containerNode.style.opacity = "0.0";
  containerNode.style["z-index"] = "2147483647";
  containerNode.setAttribute("aria-hidden", "true");
  return containerNode;
};
cvox.SearchWidget.prototype.createOverlayNode_ = function() {
  var overlayNode = document.createElement("div");
  overlayNode.style.position = "relative";
  overlayNode.style.left = "-50%";
  overlayNode.style.top = "-40px";
  overlayNode.style["line-height"] = "1.2em";
  overlayNode.style["font-size"] = "20px";
  overlayNode.style.padding = "30px";
  overlayNode.style["min-width"] = "150px";
  overlayNode.style.color = "#fff";
  overlayNode.style["background-color"] = "rgba(0, 0, 0, 0.7)";
  overlayNode.style["border-radius"] = "10px";
  return overlayNode;
};
cvox.SearchWidget.prototype.createTextAreaNode_ = function() {
  var textNode = document.createElement("textarea");
  textNode.setAttribute("aria-hidden", "true");
  textNode.setAttribute("rows", "1");
  textNode.style.color = "#fff";
  textNode.style["background-color"] = "rgba(0, 0, 0, 0.7)";
  textNode.style["vertical-align"] = "middle";
  textNode.addEventListener("textInput", this.handleSearchChanged_, !1);
  return textNode;
};
cvox.SearchWidget.prototype.toggleCaseSensitivity_ = function() {
  this.caseSensitive_ ? (cvox.SearchWidget.caseSensitive_ = !1, cvox.ChromeVox.tts.speak("Ignoring case.", 0, null)) : (this.caseSensitive_ = !0, cvox.ChromeVox.tts.speak("Case sensitive.", 0, null));
};
cvox.SearchWidget.prototype.getNextResult_ = function(searchStr) {
  var r = cvox.ChromeVox.navigationManager.isReversed();
  this.caseSensitive_ || (searchStr = searchStr.toLowerCase());
  cvox.ChromeVox.navigationManager.setGranularity(cvox.NavigationShifter.GRANULARITIES.OBJECT, !0, !1);
  do {
    if (this.getPredicate()) {
      var retNode = this.getPredicate()(cvox.DomUtil.getAncestors(cvox.ChromeVox.navigationManager.getCurrentNode()));
      if (!retNode) {
        continue;
      }
    }
    for (var descriptions = cvox.ChromeVox.navigationManager.getDescription(), i = 0;i < descriptions.length;i++) {
      var targetStr = this.caseSensitive_ ? descriptions[i].text : descriptions[i].text.toLowerCase(), targetIndex = targetStr.indexOf(searchStr);
      -1 != targetIndex && targetStr.length > searchStr.length && (descriptions[i].text = cvox.DomUtil.collapseWhitespace(targetStr.substring(0, targetIndex)) + ", " + searchStr + ", " + targetStr.substring(targetIndex + searchStr.length), descriptions[i].text = cvox.DomUtil.collapseWhitespace(descriptions[i].text));
      if (-1 != targetIndex) {
        return descriptions;
      }
    }
    cvox.ChromeVox.navigationManager.setReversed(r);
  } while (cvox.ChromeVox.navigationManager.navigate(!0, cvox.NavigationShifter.GRANULARITIES.OBJECT));
};
cvox.SearchWidget.prototype.beginSearch_ = function(searchStr) {
  var result = this.getNextResult_(searchStr);
  this.outputSearchResult_(result, searchStr);
  this.onNavigate();
};
cvox.SearchWidget.prototype.next_ = function(searchStr, opt_reversed) {
  cvox.ChromeVox.navigationManager.setReversed(!!opt_reversed);
  var success = !1;
  this.getPredicate() ? (success = cvox.ChromeVox.navigationManager.findNext(this.getPredicate()), cvox.ChromeVox.navigationManager.setReversed(!!opt_reversed), success || (cvox.ChromeVox.navigationManager.syncToBeginning(), cvox.ChromeVox.earcons.playEarcon(cvox.AbstractEarcons.WRAP), success = !0)) : success = cvox.ChromeVox.navigationManager.navigate(!0);
  var result = success ? this.getNextResult_(searchStr) : null;
  this.outputSearchResult_(result, searchStr);
  this.onNavigate();
  return result;
};
cvox.SearchWidget.prototype.outputSearchResult_ = function(result, searchStr) {
  cvox.ChromeVox.tts.stop();
  result ? (this.hasMatch_ = !0, cvox.ChromeVoxEventSuspender.withSuspendedEvents(goog.bind(cvox.ChromeVox.navigationManager.syncAll, cvox.ChromeVox.navigationManager))(!0), cvox.ChromeVox.navigationManager.speakDescriptionArray(result, cvox.AbstractTts.QUEUE_MODE_FLUSH, null, cvox.AbstractTts.PERSONALITY_ANNOUNCEMENT), cvox.ChromeVox.tts.speak(cvox.ChromeVox.msgs.getMsg("search_help_item"), cvox.AbstractTts.QUEUE_MODE_QUEUE, cvox.AbstractTts.PERSONALITY_ANNOTATION), this.outputSearchResultToBraille_(searchStr)) : 
  (cvox.ChromeVox.earcons.playEarcon(cvox.AbstractEarcons.WRAP), this.hasMatch_ = !1);
};
cvox.SearchWidget.prototype.outputSearchResultToBraille_ = function(searchStr) {
  var text = this.textFromCurrentDescription_(), targetStr = this.caseSensitive_ ? text : text.toLowerCase();
  searchStr = this.caseSensitive_ ? searchStr : searchStr.toLowerCase();
  var targetIndex = targetStr.indexOf(searchStr);
  if (-1 == targetIndex) {
    console.log("Search string not in result when preparing for Braille.");
  } else {
    var oldLength = text.length, text = cvox.ChromeVox.msgs.getMsg("mark_as_search_result_brl", [text]), newLength = text.length, targetIndex = targetIndex + (newLength - oldLength);
    cvox.ChromeVox.braille.write(new cvox.NavBraille({text:text, startIndex:targetIndex + searchStr.length, endIndex:targetIndex + searchStr.length}));
  }
};
cvox.SearchWidget.prototype.textFromCurrentDescription_ = function() {
  for (var descriptions = cvox.ChromeVox.navigationManager.getDescription(), text = "", i = 0;i < descriptions.length;i++) {
    text += descriptions[i].text + " ";
  }
  return text;
};
cvox.SearchWidget.prototype.handleSearchChanged_ = function(evt) {
  var searchStr = evt.target.value + evt.data;
  cvox.SearchWidget.prototype.beginSearch_(searchStr);
};
cvox.OverlayWidget = function(snippet) {
  cvox.SearchWidget.call(this);
  this.snippet_ = snippet;
};
goog.inherits(cvox.OverlayWidget, cvox.SearchWidget);
cvox.OverlayWidget.prototype.show = function() {
  cvox.OverlayWidget.superClass_.show.call(this);
  var host = document.createElement("DIV");
  host.innerHTML = this.snippet_;
  var hitPoint = cvox.DomUtil.elementToPoint(cvox.ChromeVox.navigationManager.getCurrentNode());
  host.style.position = "absolute";
  host.style.left = hitPoint.x;
  host.style.top = hitPoint.y;
  document.body.appendChild(host);
  cvox.ChromeVox.navigationManager.updateSelToArbitraryNode(host);
  this.host_ = host;
};
cvox.OverlayWidget.prototype.hide = function() {
  this.host_.remove();
  cvox.OverlayWidget.superClass_.hide.call(this);
};
cvox.OverlayWidget.prototype.onKeyDown = function(evt) {
  cvox.OverlayWidget.superClass_.onKeyDown.call(this, evt);
  if (13 == evt.keyCode || 27 == evt.keyCode) {
    return !0;
  }
  var r = cvox.ChromeVox.navigationManager.isReversed();
  cvox.DomUtil.isDescendantOfNode(cvox.ChromeVox.navigationManager.getCurrentNode(), this.host_) || (r ? cvox.ChromeVox.navigationManager.syncToBeginning() : cvox.ChromeVox.navigationManager.updateSelToArbitraryNode(this.host_), this.onNavigate(), cvox.ChromeVox.navigationManager.speakDescriptionArray(cvox.ChromeVox.navigationManager.getDescription(), 0, null));
};
cvox.KeyboardHelpWidget = function() {
  cvox.OverlayWidget.call(this, "");
  this.container_ = document.createElement("div");
  var keymap = cvox.ChromeVoxKbHandler.handlerKeyMap;
  keymap.bindings().forEach(goog.bind(function(pair) {
    var command = pair.command, keySeq = pair.sequence, message = command;
    try {
      var id = cvox.CommandStore.messageForCommand(command);
      if (!id) {
        return;
      }
      message = cvox.ChromeVox.msgs.getMsg(id);
    } catch (e) {
    }
    var commandElement = document.createElement("p");
    commandElement.id = command;
    commandElement.setAttribute("role", "menuitem");
    commandElement.textContent = message + " - " + cvox.KeyUtil.keySequenceToString(keySeq, !0);
    this.container_.appendChild(commandElement);
  }, this));
};
goog.inherits(cvox.KeyboardHelpWidget, cvox.OverlayWidget);
goog.addSingletonGetter(cvox.KeyboardHelpWidget);
cvox.KeyboardHelpWidget.prototype.show = function() {
  cvox.KeyboardHelpWidget.superClass_.show.call(this);
  this.host_.appendChild(this.container_);
};
cvox.KeyboardHelpWidget.prototype.getNameMsg = function() {
  return ["keyboard_help_intro"];
};
cvox.KeyboardHelpWidget.prototype.onKeyDown = function(evt) {
  if (13 == evt.keyCode) {
    var currentCommand = cvox.ChromeVox.navigationManager.getCurrentNode().parentNode.id;
    this.hide();
    cvox.ChromeVoxEventSuspender.withSuspendedEvents(cvox.ChromeVoxUserCommands.commands[currentCommand])();
    evt.preventDefault();
    evt.stopPropagation();
    return !0;
  }
  return cvox.KeyboardHelpWidget.superClass_.onKeyDown.call(this, evt);
};
cvox.UserEventDetail = function(detailObj) {
  this.command = this.category = "";
  -1 != cvox.UserEventDetail.JUMP_COMMANDS.indexOf(detailObj.command) && (this.command = detailObj.command, this.category = cvox.UserEventDetail.Category.JUMP);
  this.customCommand = "";
  detailObj.customCommand && (this.customCommand = detailObj.customCommand, this.category = cvox.UserEventDetail.Category.CUSTOM);
  this.status = cvox.UserEventDetail.Status.PENDING;
  switch(detailObj.status) {
    case cvox.UserEventDetail.Status.SUCCESS:
      this.status = cvox.UserEventDetail.Status.SUCCESS;
      break;
    case cvox.UserEventDetail.Status.FAILURE:
      this.status = cvox.UserEventDetail.Status.FAILURE;
  }
  this.resultNode = null;
  detailObj.resultNode && cvox.DomUtil.isAttachedToDocument(detailObj.resultNode) && (this.resultNode = detailObj.resultNode);
};
cvox.UserEventDetail.Category = {JUMP:"ATJumpEvent", CUSTOM:"ATCustomEvent"};
cvox.UserEventDetail.Status = {PENDING:"PENDING", SUCCESS:"SUCCESS", FAILURE:"FAILURE"};
cvox.UserEventDetail.JUMP_COMMANDS = "nextCheckbox previousCheckbox nextRadio previousRadio nextSlider previousSlider nextGraphic previousGraphic nextButton previousButton nextComboBox previousComboBox nextEditText previousEditText nextHeading previousHeading nextHeading1 previousHeading1 nextHeading2 previousHeading2 nextHeading3 previousHeading3 nextHeading4 previousHeading4 nextHeading5 previousHeading5 nextHeading6 previousHeading6 nextLink previousLink nextMath previousMath nextTable previousTable nextList previousList nextListItem previousListItem nextFormField previousFormField nextLandmark previousLandmark nextSection previousSection nextControl previousControl".split(" ");
cvox.UserEventDetail.prototype.createEventObject = function() {
  var evt = document.createEvent("CustomEvent");
  evt.initCustomEvent(this.category, !0, !0, this);
  return evt;
};
var extractMenuList_ = function(node) {
  for (var curr = node;curr !== document;) {
    var menuListJSON = curr.getAttribute("contextMenuActions");
    if (menuListJSON) {
      return JSON.parse(menuListJSON);
    }
    curr = curr.parentNode;
  }
  return null;
}, getCurrentElement_ = function() {
  for (var currNode = cvox.ChromeVox.navigationManager.getCurrentNode();currNode.nodeType !== Node.ELEMENT_NODE;) {
    currNode = currNode.parentNode;
  }
  return currNode;
};
cvox.ContextMenuWidget = function() {
  cvox.OverlayWidget.call(this, "");
  this.container_ = document.createElement("div");
  this.triggerElement_ = getCurrentElement_();
  (this.menuList = extractMenuList_(this.triggerElement_)) ? this.menuList.forEach(goog.bind(function(menuItem) {
    if (menuItem.desc || menuItem.cmd) {
      var desc = menuItem.desc, cmd = menuItem.cmd, menuElem = document.createElement("p");
      menuElem.id = cmd;
      menuElem.textContent = desc;
      menuElem.setAttribute("role", "menuitem");
      this.container_.appendChild(menuElem);
    }
  }, this)) : console.log("No context menu found.");
};
goog.inherits(cvox.ContextMenuWidget, cvox.OverlayWidget);
cvox.ContextMenuWidget.prototype.show = function() {
  this.menuList && (cvox.ContextMenuWidget.superClass_.show.call(this), this.host_.appendChild(this.container_));
};
cvox.ContextMenuWidget.prototype.getNameMsg = function() {
  return ["context_menu_intro"];
};
cvox.ContextMenuWidget.prototype.onKeyDown = function(evt) {
  if (13 == evt.keyCode) {
    var currentNode = cvox.ChromeVox.navigationManager.getCurrentNode(), cmd = currentNode.parentNode.id, detail = new cvox.UserEventDetail({customCommand:cmd}), userEvt = detail.createEventObject();
    this.triggerElement_.dispatchEvent(userEvt);
    this.hide();
    evt.preventDefault();
    evt.stopPropagation();
    return !0;
  }
  return cvox.ContextMenuWidget.superClass_.onKeyDown.call(this, evt);
};
cvox.NodeSearchWidget = function(typeMsg, predicate) {
  this.typeMsg_ = typeMsg;
  this.predicate_ = predicate;
  cvox.SearchWidget.call(this);
};
goog.inherits(cvox.NodeSearchWidget, cvox.SearchWidget);
cvox.NodeSearchWidget.prototype.getNameMsg = function() {
  return ["choice_widget_name", [cvox.ChromeVox.msgs.getMsg(this.typeMsg_)]];
};
cvox.NodeSearchWidget.prototype.getHelpMsg = function() {
  return "choice_widget_help";
};
cvox.NodeSearchWidget.prototype.getPredicate = function() {
  return this.predicate_;
};
cvox.NodeSearchWidget.create = function(typeMsg, predicate) {
  return new cvox.NodeSearchWidget(typeMsg, predicate);
};
cvox.SelectWidget = function(node) {
  cvox.OverlayWidget.call(this, "");
  this.selectNode_ = node;
};
goog.inherits(cvox.SelectWidget, cvox.OverlayWidget);
cvox.SelectWidget.prototype.show = function() {
  cvox.SelectWidget.superClass_.show.call(this);
  var container = document.createElement("div");
  container.setAttribute("role", "menu");
  for (var i = 0, item = null;item = this.selectNode_.options[i];i++) {
    var newItem = document.createElement("p");
    newItem.innerHTML = item.innerHTML;
    newItem.id = i;
    newItem.setAttribute("role", "menuitem");
    container.appendChild(newItem);
  }
  this.host_.appendChild(container);
  var currentSelection = this.selectNode_.selectedIndex;
  "number" == typeof currentSelection && cvox.ChromeVox.syncToNode(container.children[currentSelection], !0);
};
cvox.SelectWidget.prototype.hide = function() {
  var evt = document.createEvent("Event");
  evt.initEvent("change", !1, !1);
  this.selectNode_.dispatchEvent(evt);
  cvox.SelectWidget.superClass_.hide.call(this, !0);
};
cvox.SelectWidget.prototype.onNavigate = function() {
  var self = this;
  cvox.ChromeVoxEventSuspender.withSuspendedEvents(function() {
    var selectedIndex = cvox.ChromeVox.navigationManager.getCurrentNode().parentNode.id;
    self.selectNode_.selectedIndex = selectedIndex;
  })();
};
cvox.SelectWidget.prototype.getNameMsg = function() {
  return ["aria_role_menu"];
};
cvox.FocusUtil = function() {
};
cvox.FocusUtil.INPUT_TYPE_ACCEPTS_SELECTION_TABLE = {hidden:!1, text:!0, search:!0, tel:!0, url:!0, email:!0, password:!0, datetime:!1, date:!1, month:!1, week:!1, time:!1, "datetime-local":!1, number:!1, range:!1, color:!1, checkbox:!1, radio:!1, file:!1, submit:!1, image:!1, reset:!1, button:!1};
cvox.FocusUtil.isFocusInTextInputField = function() {
  var activeElement = document.activeElement;
  if (!activeElement) {
    return !1;
  }
  if (activeElement.isContentEditable || "textbox" == activeElement.getAttribute("role")) {
    return !0;
  }
  if ("true" == activeElement.getAttribute("readOnly")) {
    return !1;
  }
  if ("TEXTAREA" === activeElement.tagName || "SELECT" === activeElement.tagName) {
    return !0;
  }
  if ("INPUT" === activeElement.tagName) {
    if (activeElement.hasAttribute("type")) {
      var activeType = activeElement.getAttribute("type").toLowerCase();
      return cvox.FocusUtil.INPUT_TYPE_ACCEPTS_SELECTION_TABLE[activeType];
    }
    return !0;
  }
  return !1;
};
cvox.SpokenListBuilder = function() {
  this.list_ = [];
};
cvox.SpokenListBuilder.prototype.flush = function(expectedText) {
  this.list_.push([expectedText, cvox.AbstractTts.QUEUE_MODE_FLUSH]);
  return this;
};
cvox.SpokenListBuilder.prototype.build = function() {
  return this.list_;
};
cvox.RunnerInterface = function() {
};
cvox.RunnerInterface.prototype.setFocus = function() {
};
cvox.AbstractTestCase = function() {
};
cvox.TestTts = function() {
  cvox.AbstractTts.call(this);
  this.utterances_ = [];
};
goog.inherits(cvox.TestTts, cvox.AbstractTts);
cvox.TestTts.prototype.sentinelText_ = "@@@STOP@@@";
cvox.TestTts.prototype.speak = function(text, queueMode, opt_properties) {
  this.utterances_.push({text:text, queueMode:queueMode});
  if (opt_properties && void 0 != opt_properties.endCallback) {
    var len = this.utterances_.length;
    this.utterances_[len - 1].text != this.sentinelText_ && opt_properties.endCallback();
  }
};
cvox.HostFactory.ttsConstructor = cvox.TestTts;
cvox.AutoRunner = function() {
  new cvox.TestTts;
};
cvox.AutoRunner.TestSummary = function(tagStr, testFunc, status, scope) {
  this.tag = tagStr;
  this.status = status;
  this.scope = scope;
};
cvox.AutoRunner.PASS = "pass";
cvox.AutoRunner.FAIL = "fail";
cvox.AutoRunner.prototype.setFocus = function(eltName) {
  document.getElementById(eltName).focus();
  return this;
};
cvox.ChromeVoxUserCommands = {};
cvox.ChromeVoxUserCommands.init_ = function() {
  if (!cvox.ChromeVoxUserCommands.commands) {
    cvox.ChromeVoxUserCommands.commands = {};
    for (var cmd in cvox.CommandStore.CMD_WHITELIST) {
      cvox.ChromeVoxUserCommands.commands[cmd] = cvox.ChromeVoxUserCommands.createCommand_(cmd);
    }
  }
};
cvox.ChromeVoxUserCommands.wasMouseClicked = !1;
cvox.ChromeVoxUserCommands.enableCommandDispatchingToPage = !0;
cvox.ChromeVoxUserCommands.handleTabAction_ = function() {
  cvox.ChromeVox.tts.stop();
  if (!cvox.ChromeVox.navigationManager.resolve(cvox.DomUtil.isFocusable)) {
    return cvox.ChromeVox.navigationManager.setFocus(), !1;
  }
  var isLinkControl = cvox.ChromeVoxUserCommands.isFocusedOnLinkControl_();
  if (isLinkControl) {
    return !0;
  }
  var anchorNode = null, focusNode = null, sel = window.getSelection();
  cvox.ChromeVoxUserCommands.wasMouseClicked ? cvox.ChromeVoxUserCommands.wasMouseClicked = !1 : sel = null;
  null == sel || null == sel.anchorNode || null == sel.focusNode ? (anchorNode = cvox.ChromeVox.navigationManager.getCurrentNode(), focusNode = cvox.ChromeVox.navigationManager.getCurrentNode()) : (anchorNode = sel.anchorNode, focusNode = sel.focusNode);
  if (null == anchorNode || null == focusNode) {
    return !0;
  }
  if (cvox.DomUtil.isFocusable(anchorNode)) {
    return anchorNode.focus(), !0;
  }
  if (cvox.DomUtil.isFocusable(focusNode)) {
    return focusNode.focus(), !0;
  }
  if (cvox.DomUtil.isFocusable(anchorNode.parentNode)) {
    return anchorNode.parentNode.focus(), !0;
  }
  if (cvox.DomUtil.isFocusable(focusNode.parentNode)) {
    return focusNode.parentNode.focus(), !0;
  }
  var bestGuess = anchorNode, dummySpan = cvox.ChromeVoxUserCommands.createTabDummySpan_();
  bestGuess.parentNode.insertBefore(dummySpan, bestGuess);
  dummySpan.focus();
  return !0;
};
cvox.ChromeVoxUserCommands.isFocusedOnLinkControl_ = function() {
  return "A" == document.activeElement.tagName || cvox.DomUtil.isControl(document.activeElement) ? !0 : !1;
};
cvox.ChromeVoxUserCommands.removeTabDummySpan = function() {
  var previousDummySpan = document.getElementById("ChromeVoxTabDummySpan");
  previousDummySpan && document.activeElement != previousDummySpan && previousDummySpan.parentNode.removeChild(previousDummySpan);
};
cvox.ChromeVoxUserCommands.createTabDummySpan_ = function() {
  var span = document.createElement("span");
  span.id = "ChromeVoxTabDummySpan";
  span.tabIndex = -1;
  return span;
};
cvox.ChromeVoxUserCommands.createCommand_ = function(cmd) {
  return goog.bind(function(opt_kwargs) {
    var cmdStruct = cvox.ChromeVoxUserCommands.lookupCommand_(cmd, opt_kwargs);
    return cvox.ChromeVoxUserCommands.dispatchCommand_(cmdStruct);
  }, cvox.ChromeVoxUserCommands);
};
cvox.ChromeVoxUserCommands.dispatchCommand_ = function(cmdStruct) {
  if (cvox.Widget.isActive() || !cvox.PlatformUtil.matchesPlatform(cmdStruct.platformFilter) || cmdStruct.skipInput && cvox.FocusUtil.isFocusInTextInputField()) {
    return !0;
  }
  if (cvox.ChromeVoxUserCommands.enableCommandDispatchingToPage && -1 != cvox.UserEventDetail.JUMP_COMMANDS.indexOf(cmdStruct.command)) {
    var detail = new cvox.UserEventDetail({command:cmdStruct.command}), evt = detail.createEventObject(), currentNode = cvox.ChromeVox.navigationManager.getCurrentNode();
    currentNode || (currentNode = document.body);
    currentNode.dispatchEvent(evt);
    return !1;
  }
  return cvox.ChromeVoxUserCommands.doCommand_(cmdStruct);
};
cvox.ChromeVoxUserCommands.doCommand_ = function(cmdStruct) {
  if (cvox.Widget.isActive() || !cvox.PlatformUtil.matchesPlatform(cmdStruct.platformFilter) || cmdStruct.skipInput && cvox.FocusUtil.isFocusInTextInputField() || cmdStruct.disallowOOBE && document.URL.match(/^chrome:\/\/oobe/i)) {
    return !0;
  }
  var cmd = cmdStruct.command;
  cmdStruct.allowEvents || cvox.ChromeVoxEventSuspender.enterSuspendEvents();
  cmdStruct.disallowContinuation && cvox.ChromeVox.navigationManager.stopReading(!0);
  cmdStruct.forward ? cvox.ChromeVox.navigationManager.setReversed(!1) : cmdStruct.backward && cvox.ChromeVox.navigationManager.setReversed(!0);
  cmdStruct.findNext && (cmd = "find", cmdStruct.announce = !0);
  var errorMsg = "", prefixMsg = "", ret = !1,  moveFocus = true;
  switch(cmd) {
    case "handleTab":
    ;
    case "handleTabPrev":
      ret = cvox.ChromeVoxUserCommands.handleTabAction_();
      break;
    case "forward":
    ;
    case "backward":
      ret = !cvox.ChromeVox.navigationManager.navigate();
      break;
    case "right":
    ;
    case "left":
      cvox.ChromeVox.navigationManager.subnavigate();
      break;
    case "find":
      if (!cmdStruct.findNext) {
        throw "Invalid find command.";
      }
      var NodeInfoStruct = cvox.CommandStore.NODE_INFO_MAP[cmdStruct.findNext], predicateName = NodeInfoStruct.predicate, predicate = cvox.DomPredicates[predicateName], error = "", wrap = "";
      cmdStruct.forward ? (wrap = cvox.ChromeVox.msgs.getMsg("wrapped_to_top"), error = cvox.ChromeVox.msgs.getMsg(NodeInfoStruct.forwardError)) : cmdStruct.backward && (wrap = cvox.ChromeVox.msgs.getMsg("wrapped_to_bottom"), error = cvox.ChromeVox.msgs.getMsg(NodeInfoStruct.backwardError));
      var found = null, status = cmdStruct.status || cvox.UserEventDetail.Status.PENDING, resultNode = cmdStruct.resultNode || null;
      switch(status) {
        case cvox.UserEventDetail.Status.SUCCESS:
          resultNode && cvox.ChromeVox.navigationManager.updateSelToArbitraryNode(resultNode, !0);
          break;
        case cvox.UserEventDetail.Status.FAILURE:
          prefixMsg = error;
          break;
        default:
          found = cvox.ChromeVox.navigationManager.findNext(predicate, predicateName), found || (cvox.ChromeVox.navigationManager.saveSel(), prefixMsg = wrap, cvox.ChromeVox.navigationManager.syncToBeginning(), cvox.ChromeVox.earcons.playEarcon(cvox.AbstractEarcons.WRAP), found = cvox.ChromeVox.navigationManager.findNext(predicate, predicateName, !0), found || (prefixMsg = error, cvox.ChromeVox.navigationManager.restoreSel()));
      }
      found && "IFRAME" == found.start.node.tagName && (cmdStruct.announce = !1);
      break;
    case "previousGranularity":
      cvox.ChromeVox.navigationManager.makeLessGranular(!0);
      prefixMsg = cvox.ChromeVox.navigationManager.getGranularityMsg();
      break;
    case "nextGranularity":
      cvox.ChromeVox.navigationManager.makeMoreGranular(!0);
      prefixMsg = cvox.ChromeVox.navigationManager.getGranularityMsg();
      break;
    case "previousCharacter":
      cvox.ChromeVox.navigationManager.navigate(!1, cvox.NavigationShifter.GRANULARITIES.CHARACTER);
      break;
    case "nextCharacter":
      cvox.ChromeVox.navigationManager.navigate(!1, cvox.NavigationShifter.GRANULARITIES.CHARACTER);
      break;
    case "previousWord":
      cvox.ChromeVox.navigationManager.navigate(!1, cvox.NavigationShifter.GRANULARITIES.WORD);
      break;
    case "nextWord":
      cvox.ChromeVox.navigationManager.navigate(!1, cvox.NavigationShifter.GRANULARITIES.WORD);
      break;
    case "previousSentence":
      cvox.ChromeVox.navigationManager.navigate(!1, cvox.NavigationShifter.GRANULARITIES.SENTENCE);
      break;
    case "nextSentence":
      cvox.ChromeVox.navigationManager.navigate(!1, cvox.NavigationShifter.GRANULARITIES.SENTENCE);
      break;
    case "previousLine":
      cvox.ChromeVox.navigationManager.navigate(!1, cvox.NavigationShifter.GRANULARITIES.LINE);
      break;
    case "nextLine":
      cvox.ChromeVox.navigationManager.navigate(!1, cvox.NavigationShifter.GRANULARITIES.LINE);
      break;
    case "previousObject":
      cvox.ChromeVox.navigationManager.navigate(!1, cvox.NavigationShifter.GRANULARITIES.OBJECT);
      break;
    case "nextObject":
      cvox.ChromeVox.navigationManager.navigate(!1, cvox.NavigationShifter.GRANULARITIES.OBJECT);
      break;
    case "previousGroup":
      cvox.ChromeVox.navigationManager.navigate(!1, cvox.NavigationShifter.GRANULARITIES.GROUP);
      break;
    case "nextGroup":
      cvox.ChromeVox.navigationManager.navigate(!1, cvox.NavigationShifter.GRANULARITIES.GROUP);
      break;
    case "previousRow":
    ;
    case "previousCol":
      cmd = "previousRow" == cmd ? "nextRow" : "nextCol";
    case "nextRow":
    ;
    case "nextCol":
      cvox.ChromeVox.navigationManager.performAction("enterShifterSilently");
      cvox.ChromeVox.navigationManager.performAction(cmd);
      break;
    case "moveToStartOfLine":
    ;
    case "moveToEndOfLine":
      cvox.ChromeVox.navigationManager.setGranularity(cvox.NavigationShifter.GRANULARITIES.LINE);
      cvox.ChromeVox.navigationManager.sync();
      cvox.ChromeVox.navigationManager.collapseSelection();
      break;
    case "readFromHere":
      cvox.ChromeVox.navigationManager.setGranularity(cvox.NavigationShifter.GRANULARITIES.OBJECT, !0, !0);
      cvox.ChromeVox.navigationManager.startReading(cvox.AbstractTts.QUEUE_MODE_FLUSH);
      break;
    case "cycleTypingEcho":
      break;
    case "jumpToTop":
    ;
    case cvox.BrailleKeyCommand.TOP:
      cvox.ChromeVox.navigationManager.syncToBeginning();
      break;
    case "jumpToBottom":
    ;
    case cvox.BrailleKeyCommand.BOTTOM:
      cvox.ChromeVox.navigationManager.syncToBeginning();
      break;
    case "stopSpeech":
      cvox.ChromeVox.navigationManager.stopReading(!0);
      break;
    case "toggleKeyboardHelp":
      cvox.KeyboardHelpWidget.getInstance().toggle();
      break;
    case "help":
      cvox.ChromeVox.tts.stop();
      break;
    case "contextMenu":
      var node = cvox.ChromeVox.navigationManager.getCurrentNode();
      if ("SELECT" != node.tagName || node.multiple) {
        var contextMenuWidget = new cvox.ContextMenuWidget;
        contextMenuWidget.toggle();
      } else {
        (new cvox.SelectWidget(node)).show();
      }
      break;
    case "showBookmarkManager":
      break;
    case "showOptionsPage":
      cvox.ChromeVox.tts.stop();
      break;
    case "showKbExplorerPage":
      cvox.ChromeVox.tts.stop();
      break;
    case "readLinkURL":
      var activeElement = document.activeElement, currentSelectionAnchor = window.getSelection().anchorNode, url = "";
      "A" == activeElement.tagName ? url = cvox.DomUtil.getLinkURL(activeElement) : currentSelectionAnchor && (url = cvox.DomUtil.getLinkURL(currentSelectionAnchor.parentNode));
      "" != url ? cvox.ChromeVox.tts.speak(url) : cvox.ChromeVox.tts.speak(cvox.ChromeVox.msgs.getMsg("no_url_found"));
      break;
    case "readCurrentTitle":
      cvox.ChromeVox.tts.speak(document.title);
      break;
    case "readCurrentURL":
      cvox.ChromeVox.tts.speak(document.URL);
      break;
    case "performDefaultAction":
      cvox.DomPredicates.linkPredicate([document.activeElement]) && cvox.DomUtil.isInternalLink(document.activeElement) && (cvox.DomUtil.syncInternalLink(document.activeElement), cvox.ChromeVox.navigationManager.sync(), cmdStruct.announce = !0); moveFocus = false;
      break;
    case "forceClickOnCurrentItem":
      var prefixMsg = cvox.ChromeVox.msgs.getMsg("element_clicked"), targetNode = cvox.ChromeVox.navigationManager.getCurrentNode();
      cvox.DomUtil.clickElem(targetNode, !1, !1); moveFocus = false;
      break;
    case "forceDoubleClickOnCurrentItem":
      prefixMsg = cvox.ChromeVox.msgs.getMsg("element_double_clicked");
      targetNode = cvox.ChromeVox.navigationManager.getCurrentNode();
      cvox.DomUtil.clickElem(targetNode, !1, !1, !0);
      break;
    case "toggleChromeVox":
      break;
    case "fullyDescribe":
      var descs = cvox.ChromeVox.navigationManager.getFullDescription();
      cvox.ChromeVox.navigationManager.speakDescriptionArray(descs, cvox.AbstractTts.QUEUE_MODE_FLUSH, null);
      break;
    case "speakTimeAndDate":
      var dateTime = new Date;
      cvox.ChromeVox.tts.speak(dateTime.toLocaleTimeString() + ", " + dateTime.toLocaleDateString());
      break;
    case "toggleSelection":
      var selState = cvox.ChromeVox.navigationManager.togglePageSel(), prefixMsg = cvox.ChromeVox.msgs.getMsg(selState ? "begin_selection" : "end_selection");
      break;
    case "startHistoryRecording":
      cvox.History.getInstance().startRecording();
      break;
    case "stopHistoryRecording":
      cvox.History.getInstance().stopRecording();
      break;
    case "enableConsoleTts":
      cvox.ConsoleTts.getInstance().setEnabled(!0);
      break;
    case "goToFirstCell":
    ;
    case "goToLastCell":
    ;
    case "goToRowFirstCell":
    ;
    case "goToRowLastCell":
    ;
    case "goToColFirstCell":
    ;
    case "goToColLastCell":
    ;
    case "announceHeaders":
    ;
    case "speakTableLocation":
    ;
    case "exitShifterContent":
      cvox.DomPredicates.tablePredicate(cvox.DomUtil.getAncestors(cvox.ChromeVox.navigationManager.getCurrentNode())) && cvox.ChromeVox.navigationManager.performAction(cmd) || (errorMsg = "not_inside_table");
      break;
    case "enterShifter":
    ;
    case "exitShifter":
      cvox.ChromeVox.navigationManager.performAction(cmd);
      break;
    case "decreaseTtsRate":
      cvox.ChromeVox.tts.increaseOrDecreaseProperty(cvox.AbstractTts.RATE, !1);
      break;
    case "increaseTtsRate":
      cvox.ChromeVox.tts.increaseOrDecreaseProperty(cvox.AbstractTts.RATE, !0);
      break;
    case "decreaseTtsPitch":
      cvox.ChromeVox.tts.increaseOrDecreaseProperty(cvox.AbstractTts.PITCH, !1);
      break;
    case "increaseTtsPitch":
      cvox.ChromeVox.tts.increaseOrDecreaseProperty(cvox.AbstractTts.PITCH, !0);
      break;
    case "decreaseTtsVolume":
      cvox.ChromeVox.tts.increaseOrDecreaseProperty(cvox.AbstractTts.VOLUME, !1);
      break;
    case "increaseTtsVolume":
      cvox.ChromeVox.tts.increaseOrDecreaseProperty(cvox.AbstractTts.VOLUME, !0);
      break;
    case "cyclePunctuationEcho":
      break;
    case "toggleStickyMode":
      break;
    case "toggleKeyPrefix":
      cvox.ChromeVox.keyPrefixOn = !cvox.ChromeVox.keyPrefixOn;
      break;
    case "passThroughMode":
      cvox.ChromeVox.passThroughMode = !0;
      cvox.ChromeVox.tts.speak(cvox.ChromeVox.msgs.getMsg("pass_through_key"));
      break;
    case "toggleSearchWidget":
      cvox.SearchWidget.getInstance().toggle();
      break;
    case "toggleEarcons":
      prefixMsg = cvox.ChromeVox.earcons.toggle() ? cvox.ChromeVox.msgs.getMsg("earcons_on") : cvox.ChromeVox.msgs.getMsg("earcons_off");
      break;
    case "showHeadingsList":
    ;
    case "showLinksList":
    ;
    case "showFormsList":
    ;
    case "showTablesList":
    ;
    case "showLandmarksList":
      if (!cmdStruct.nodeList) {
        break;
      }
      var nodeListStruct = cvox.CommandStore.NODE_INFO_MAP[cmdStruct.nodeList];
      cvox.NodeSearchWidget.create(nodeListStruct.typeMsg, cvox.DomPredicates[nodeListStruct.predicate]).show();
      break;
    case "openLongDesc":
      var currentNode = cvox.ChromeVox.navigationManager.getCurrentNode();
      cvox.DomUtil.hasLongDesc(currentNode) || cvox.ChromeVox.tts.speak(cvox.ChromeVox.msgs.getMsg("no_long_desc"), cvox.AbstractTts.QUEUE_MODE_FLUSH, cvox.AbstractTts.PERSONALITY_ANNOTATION);
      break;
    case "pauseAllMedia":
      for (var videos = document.getElementsByTagName("VIDEO"), i = 0, mediaElem;mediaElem = videos[i];i++) {
        mediaElem.pause();
      }
      for (var audios = document.getElementsByTagName("AUDIO"), i = 0;mediaElem = audios[i];i++) {
        mediaElem.pause();
      }
      break;
    case "toggleSemantics":
      cvox.TraverseMath.toggleSemantic() ? cvox.ChromeVox.tts.speak(cvox.ChromeVox.msgs.getMsg("semantics_on")) : cvox.ChromeVox.tts.speak(cvox.ChromeVox.msgs.getMsg("semantics_off"));
      break;
    case cvox.BrailleKeyCommand.ROUTING:
      var braille = cmdStruct.content;
      braille && cvox.BrailleUtil.click(braille, cmdStruct.event.displayPosition);
      break;
    case cvox.BrailleKeyCommand.PAN_LEFT:
    ;
    case cvox.BrailleKeyCommand.LINE_UP:
    ;
    case cvox.BrailleKeyCommand.PAN_RIGHT:
    ;
    case cvox.BrailleKeyCommand.LINE_DOWN:
      cvox.ChromeVox.navigationManager.navigate(!1, cvox.NavigationShifter.GRANULARITIES.LINE);
      break;
    case "debug":
      break;
    case "nop":
      break;
    default:
      throw "Command behavior not defined: " + cmd;;
  }
  "" != errorMsg ? cvox.ChromeVox.tts.speak(cvox.ChromeVox.msgs.getMsg(errorMsg), cvox.AbstractTts.QUEUE_MODE_FLUSH, cvox.AbstractTts.PERSONALITY_ANNOTATION) : cvox.ChromeVox.navigationManager.isReading() ? cmdStruct.disallowContinuation ? cvox.ChromeVox.navigationManager.stopReading(!0) : "readFromHere" != cmd && cvox.ChromeVox.navigationManager.skip() : cmdStruct.announce && cvox.ChromeVox.navigationManager.finishNavCommand(prefixMsg, moveFocus);
  cmdStruct.allowEvents || cvox.ChromeVoxEventSuspender.exitSuspendEvents();
  return !!cmdStruct.doDefault || ret;
};
cvox.ChromeVoxUserCommands.handleChromeVoxUserEvent = function(cvoxUserEvent) {
  var detail = new cvox.UserEventDetail(cvoxUserEvent.detail);
  detail.command && cvox.ChromeVoxUserCommands.doCommand_(cvox.ChromeVoxUserCommands.lookupCommand_(detail.command, detail));
};
cvox.ChromeVoxUserCommands.lookupCommand_ = function(cmd, opt_kwargs) {
  var cmdStruct = cvox.CommandStore.CMD_WHITELIST[cmd];
  if (!cmdStruct) {
    throw "Invalid command: " + cmd;
  }
  cmdStruct = goog.object.clone(cmdStruct);
  cmdStruct.command = cmd;
  opt_kwargs && goog.object.extend(cmdStruct, opt_kwargs);
  return cmdStruct;
};
cvox.ChromeVoxUserCommands.init_();
cvox.ChromeVoxKbHandler = {};
cvox.ChromeVoxKbHandler.loadKeyToFunctionsTable = function(keyToFunctionsTable) {
  window.JSON && (cvox.ChromeVoxKbHandler.handlerKeyMap = cvox.KeyMap.fromJSON(keyToFunctionsTable));
};
cvox.ChromeVoxKbHandler.sortKeyToFunctionsTable_ = function(keyToFunctionsTable) {
  function compareKeyStr(a, b) {
    return a[0].length < b[0].length ? -1 : b[0].length < a[0].length ? 1 : a[0].localeCompare(b[0]);
  }
  var sortingArray = [], keySeqStr;
  for (keySeqStr in keyToFunctionsTable) {
    sortingArray.push([keySeqStr, keyToFunctionsTable[keySeqStr]]);
  }
  sortingArray.sort(compareKeyStr);
  return sortingArray;
};
cvox.ChromeVoxKbHandler.basicKeyDownActionsListener = function(evt) {
  var keySequence = cvox.KeyUtil.keyEventToKeySequence(evt), functionName;
  functionName = void 0 != cvox.ChromeVoxKbHandler.handlerKeyMap ? cvox.ChromeVoxKbHandler.handlerKeyMap.commandForKey(keySequence) : null;
  if (!functionName) {
    return !cvox.KeyUtil.sequencing;
  }
  if (!cvox.ChromeVox.isActive && "toggleChromeVox" != functionName) {
    return !0;
  }
  var returnValue = !0, func = cvox.ChromeVoxUserCommands.commands[functionName];
  if (func) {
    var history = cvox.History.getInstance();
    history.enterUserCommand(functionName);
    returnValue = func();
    history.exitUserCommand(functionName);
  } else {
    keySequence.cvoxModifier && (returnValue = !1);
  }
  cvox.ChromeVox.entireDocumentIsHidden && (returnValue = !0);
  return returnValue;
};
cvox.LiveRegions = function() {
};
cvox.LiveRegions.pageLoadTime = null;
cvox.LiveRegions.INITIAL_SILENCE_MS = 2E3;
cvox.LiveRegions.VISIBILITY_TIMEOUT_MS = 50;
cvox.LiveRegions.lastAnnouncedMap = {};
cvox.LiveRegions.MAX_DISCARD_DUPS_MS = 2E3;
cvox.LiveRegions.lastAnnouncedTime = null;
cvox.LiveRegions.nodesAlreadyHandled = [];
cvox.LiveRegions.init = function(pageLoadTime, queueMode, disableSpeak) {
  void 0 == queueMode && (queueMode = cvox.AbstractTts.QUEUE_MODE_FLUSH);
  cvox.LiveRegions.pageLoadTime = pageLoadTime;
  if (disableSpeak || !document.hasFocus()) {
    return !1;
  }
  for (var anyRegionsAnnounced = !1, regions = cvox.AriaUtil.getLiveRegions(document.body), i$$0 = 0;i$$0 < regions.length;i$$0++) {
    cvox.LiveRegions.handleOneChangedNode(regions[i$$0], regions[i$$0], !1, !1, function(assertive, navDescriptions) {
      if (assertive)
        queueMode = cvox.AbstractTts.QUEUE_MODE_FLUSH;

      var descSpeaker = new cvox.NavigationSpeaker;
      descSpeaker.speakDescriptionArray(navDescriptions, queueMode, null);
      anyRegionsAnnounced = !0;
    });
  }
  cvox.Interframe.addListener(function(message) {
    if ("speakLiveRegion" == message.command) {
      for (var iframes = document.getElementsByTagName("iframe"), i = 0, iframe;iframe = iframes[i];i++) {
        if (iframe.src == message.src) {
          if (!cvox.DomUtil.isVisible(iframe)) {
            break;
          }
          for (var structs = JSON.parse(message.content), descriptions = [], j = 0, description;description = structs[j];j++) {
            descriptions.push(new cvox.NavDescription(description));
          }
          (new cvox.NavigationSpeaker).speakDescriptionArray(descriptions, message.queueMode, null);
        }
      }
    }
  });
  return anyRegionsAnnounced;
};
cvox.LiveRegions.processMutations = function(mutations, handler) {
  cvox.LiveRegions.nodesAlreadyHandled = [];
  mutations.forEach(function(mutation) {
    if (!mutation.target.hasAttribute || !mutation.target.hasAttribute("cvoxIgnore")) {
      if (mutation.addedNodes) {
        for (var i = 0;i < mutation.addedNodes.length;i++) {
          mutation.addedNodes[i].hasAttribute && mutation.addedNodes[i].hasAttribute("cvoxIgnore") || cvox.LiveRegions.handleOneChangedNode(mutation.addedNodes[i], mutation.target, !1, !0, handler);
        }
      }
      if (mutation.removedNodes) {
        for (i = 0;i < mutation.removedNodes.length;i++) {
          mutation.removedNodes[i].hasAttribute && mutation.removedNodes[i].hasAttribute("cvoxIgnore") || cvox.LiveRegions.handleOneChangedNode(mutation.removedNodes[i], mutation.target, !0, !1, handler);
        }
      }
      "characterData" == mutation.type && cvox.LiveRegions.handleOneChangedNode(mutation.target, mutation.target, !1, !1, handler);
      if ("class" == mutation.attributeName || "style" == mutation.attributeName || "hidden" == mutation.attributeName) {
        var attr = mutation.attributeName, target = mutation.target, newInvisible = !cvox.DomUtil.isVisible(target), testElement = document.createElement("div");
        testElement.setAttribute("cvoxIgnore", "1");
        testElement.setAttribute("class", target.getAttribute("class"));
        testElement.setAttribute("style", target.getAttribute("style"));
        testElement.setAttribute("hidden", target.getAttribute("hidden"));
        testElement.setAttribute(attr, mutation.oldValue);
        var oldInvisible = !0;
        target.parentElement ? (target.parentElement.appendChild(testElement), oldInvisible = !cvox.DomUtil.isVisible(testElement), target.parentElement.removeChild(testElement)) : oldInvisible = !cvox.DomUtil.isVisible(testElement);
        !0 === oldInvisible && !1 === newInvisible ? cvox.LiveRegions.handleOneChangedNode(mutation.target, mutation.target, !1, !0, handler) : !1 === oldInvisible && !0 === newInvisible && cvox.LiveRegions.handleOneChangedNode(mutation.target, mutation.target, !0, !1, handler);
      }
    }
  });
  cvox.LiveRegions.nodesAlreadyHandled.length = 0;
};
cvox.LiveRegions.handleOneChangedNode = function(node, parent, isRemoval, subtree, handler) {
  var liveRoot = isRemoval ? parent : node;
  liveRoot instanceof Element || (liveRoot = liveRoot.parentElement);
  for (;liveRoot && !cvox.AriaUtil.getAriaLive(liveRoot);) {
    liveRoot = liveRoot.parentElement;
  }
  if (liveRoot) {
    var deltaTime = new Date - cvox.LiveRegions.pageLoadTime;
    if (!("alert" != cvox.AriaUtil.getRoleAttribute(liveRoot) && deltaTime < cvox.LiveRegions.INITIAL_SILENCE_MS || 0 <= cvox.LiveRegions.nodesAlreadyHandled.indexOf(node) || (cvox.LiveRegions.nodesAlreadyHandled.push(node), cvox.AriaUtil.getAriaBusy(liveRoot)))) {
      if (isRemoval) {
        if (!cvox.AriaUtil.getAriaRelevant(liveRoot, "removals")) {
          return;
        }
      } else {
        if (!cvox.AriaUtil.getAriaRelevant(liveRoot, "additions")) {
          return;
        }
      }
      cvox.LiveRegions.announceChangeIfVisible(node, liveRoot, isRemoval, handler);
    }
  } else {
    if (subtree && node != document.body) {
      for (var subLiveRegions = cvox.AriaUtil.getLiveRegions(node), i = 0;i < subLiveRegions.length;i++) {
        cvox.LiveRegions.handleOneChangedNode(subLiveRegions[i], parent, isRemoval, !1, handler);
      }
    }
  }
};
cvox.LiveRegions.announceChangeIfVisible = function(node, liveRoot, isRemoval, handler) {
  cvox.DomUtil.isVisible(liveRoot) ? cvox.LiveRegions.announceChange(node, liveRoot, isRemoval, handler) : window.setTimeout(function() {
    cvox.DomUtil.isVisible(liveRoot) && cvox.LiveRegions.announceChange(node, liveRoot, isRemoval, handler);
  }, cvox.LiveRegions.VISIBILITY_TIMEOUT_MS);
};
cvox.LiveRegions.announceChange = function(node, liveRoot, isRemoval, handler) {
  if (node != liveRoot) {
    for (var atomicContainer = node.parentElement;atomicContainer;) {
      (cvox.AriaUtil.getAriaAtomic(atomicContainer) || cvox.AriaUtil.isLeafElement(atomicContainer) || cvox.AriaUtil.isControlWidget(atomicContainer)) && !cvox.AriaUtil.isCompositeControl(atomicContainer) && (node = atomicContainer);
      if (atomicContainer == liveRoot) {
        break;
      }
      atomicContainer = atomicContainer.parentElement;
    }
  }
  var navDescriptions = cvox.LiveRegions.getNavDescriptionsRecursive(node);
  if (0 != navDescriptions.length) {
    isRemoval && (navDescriptions = [new cvox.NavDescription({context:cvox.ChromeVox.msgs.getMsg("live_regions_removed"), text:""})].concat(navDescriptions));
    var deltaTime = new Date - cvox.LiveRegions.pageLoadTime;
    if ("alert" == cvox.AriaUtil.getRoleAttribute(liveRoot) && deltaTime < cvox.LiveRegions.INITIAL_SILENCE_MS) {
      for (var regionText = "", i = 0;i < navDescriptions.length;i++) {
        regionText += navDescriptions[i].text, regionText += navDescriptions[i].userValue;
      }
      if ("" == cvox.DomUtil.collapseWhitespace(regionText)) {
        return;
      }
    }
    var now = new Date, announced;
    for (announced in cvox.LiveRegions.lastAnnouncedMap) {
      now - cvox.LiveRegions.lastAnnouncedMap[announced] > cvox.LiveRegions.MAX_DISCARD_DUPS_MS && delete cvox.LiveRegions.lastAnnouncedMap[announced];
    }
    var key = navDescriptions.reduce(function(prev, navDescription) {
      return prev + "|" + navDescription.text;
    }, "");
    if (!cvox.LiveRegions.lastAnnouncedMap[key]) {
      cvox.LiveRegions.lastAnnouncedMap[key] = now;
      var assertive = "assertive" == cvox.AriaUtil.getAriaLive(liveRoot);
      cvox.Interframe.isIframe() && !document.hasFocus() ? cvox.Interframe.sendMessageToParentWindow({command:"speakLiveRegion", content:JSON.stringify(navDescriptions), queueMode:assertive ? 0 : 1, src:window.location.href}) : handler(assertive, navDescriptions);
    }
  }
};
cvox.LiveRegions.getNavDescriptionsRecursive = function(node) {
  if (cvox.AriaUtil.getAriaAtomic(node) || cvox.DomUtil.isLeafNode(node)) {
    var description = cvox.DescriptionUtil.getDescriptionFromAncestors([node], !0, cvox.ChromeVox.verbosity);
    return description.isEmpty() ? [] : [description];
  }
  return cvox.DescriptionUtil.getFullDescriptionsFromChildren(null, node);
};
cvox.LiveRegionsDeprecated = function() {
};
cvox.LiveRegionsDeprecated.trackedRegions = [];
cvox.LiveRegionsDeprecated.previousRegionValue = [];
cvox.LiveRegionsDeprecated.pageLoadTime = null;
cvox.LiveRegionsDeprecated.INITIAL_SILENCE_MS = 2E3;
cvox.LiveRegionsDeprecated.init = function(pageLoadTime, queueMode, disableSpeak) {
  void 0 == queueMode && (queueMode = cvox.AbstractTts.QUEUE_MODE_FLUSH);
  cvox.LiveRegionsDeprecated.pageLoadTime = pageLoadTime;
  for (var anyRegionsAnnounced = !1, regions = cvox.AriaUtil.getLiveRegions(document.body), i = 0;i < regions.length;i++) {
    cvox.LiveRegionsDeprecated.updateLiveRegion(regions[i], queueMode, disableSpeak) && (anyRegionsAnnounced = !0, queueMode = cvox.AbstractTts.QUEUE_MODE_QUEUE);
  }
  return anyRegionsAnnounced;
};
cvox.LiveRegionsDeprecated.updateLiveRegion = function(region, queueMode, disableSpeak) {
  if (cvox.AriaUtil.getAriaBusy(region) || !cvox.DomUtil.isVisible(region)) {
    return !1;
  }
  var regionIndex = cvox.LiveRegionsDeprecated.trackedRegions.indexOf(region), previousValue;
  0 <= regionIndex ? previousValue = cvox.LiveRegionsDeprecated.previousRegionValue[regionIndex] : (regionIndex = cvox.LiveRegionsDeprecated.trackedRegions.length, previousValue = [], cvox.LiveRegionsDeprecated.trackedRegions.push(region), cvox.LiveRegionsDeprecated.previousRegionValue.push([]));
  var currentValue = cvox.LiveRegionsDeprecated.buildCurrentLiveRegionValue(region), deltaTime = new Date - cvox.LiveRegionsDeprecated.pageLoadTime;
  if ("alert" != cvox.AriaUtil.getRoleAttribute(region) && deltaTime < cvox.LiveRegionsDeprecated.INITIAL_SILENCE_MS) {
    return cvox.LiveRegionsDeprecated.previousRegionValue[regionIndex] = currentValue, !1;
  }
  if ("alert" == cvox.AriaUtil.getRoleAttribute(region) && deltaTime < cvox.LiveRegionsDeprecated.INITIAL_SILENCE_MS) {
    for (var regionText = "", i = 0;i < currentValue.length;i++) {
      regionText += currentValue[i].text, regionText += currentValue[i].userValue;
    }
    if ("" == cvox.DomUtil.collapseWhitespace(regionText)) {
      return cvox.LiveRegionsDeprecated.previousRegionValue[regionIndex] = currentValue, !1;
    }
  }
  for (var previousValueMap = {}, i = 0;i < previousValue.length;i++) {
    previousValueMap[previousValue[i].toString()] = !0;
  }
  for (var currentValueMap = {}, i = 0;i < currentValue.length;i++) {
    currentValueMap[currentValue[i].toString()] = !0;
  }
  var additions = [];
  if (cvox.AriaUtil.getAriaRelevant(region, "additions")) {
    for (i = 0;i < currentValue.length;i++) {
      previousValueMap[currentValue[i].toString()] || additions.push(currentValue[i]);
    }
  }
  var removals = [];
  if (cvox.AriaUtil.getAriaRelevant(region, "removals")) {
    for (i = 0;i < previousValue.length;i++) {
      currentValueMap[previousValue[i].toString()] || removals.push(previousValue[i]);
    }
  }
  var messages = [], messages = 0 == additions.length && 0 < removals.length ? [new cvox.NavDescription({context:cvox.ChromeVox.msgs.getMsg("live_regions_removed"), text:""})].concat(removals) : additions;
  cvox.LiveRegionsDeprecated.previousRegionValue[regionIndex] = currentValue;
  if (disableSpeak || 0 == messages.length) {
    return !1;
  }
  var live = cvox.AriaUtil.getAriaLive(region);
  "polite" == live && (queueMode = cvox.AbstractTts.QUEUE_MODE_QUEUE);
  for (i = 0;i < messages.length;i++) {
    messages[i].speak(queueMode), queueMode = cvox.AbstractTts.QUEUE_MODE_QUEUE;
  }
  return !0;
};
cvox.LiveRegionsDeprecated.buildCurrentLiveRegionValue = function(node) {
  if (cvox.AriaUtil.getAriaAtomic(node) || cvox.DomUtil.isLeafNode(node)) {
    var description = cvox.DescriptionUtil.getDescriptionFromAncestors([node], !0, cvox.ChromeVox.verbosity);
    return description.isEmpty() ? [] : [description];
  }
  var result = [], description = cvox.DescriptionUtil.getDescriptionFromAncestors([node], !1, cvox.ChromeVox.verbosity);
  description.isEmpty() || result.push(description);
  for (var i = 0;i < node.childNodes.length;i++) {
    var child = node.childNodes[i];
    if (cvox.DomUtil.isVisible(child, {checkAncestors:!1}) && !cvox.AriaUtil.isHidden(child)) {
      var recursiveArray = cvox.LiveRegionsDeprecated.buildCurrentLiveRegionValue(child), result = result.concat(recursiveArray)
    }
  }
  return result;
};
cvox.ChromeVoxEventWatcherUtil = {};
cvox.ChromeVoxEventWatcher = function() {
};
cvox.ChromeVoxEventWatcher.MAX_WAIT_TIME_MS_ = 50;
cvox.ChromeVoxEventWatcher.WAIT_TIME_MS_ = 10;
cvox.ChromeVoxEventWatcher.SUBTREE_MODIFIED_BURST_DURATION_ = 1E3;
cvox.ChromeVoxEventWatcher.SUBTREE_MODIFIED_BURST_COUNT_LIMIT_ = 3;
cvox.ChromeVoxEventWatcher.MAX_LIVE_REGIONS_ = 5;
cvox.ChromeVoxEventWatcher.shouldEchoKeys = !0;
cvox.ChromeVoxEventWatcher.processing_ = !1;
cvox.ChromeVoxEventWatcher.init = function(doc) {
  cvox.ChromeVoxEventWatcher.lastFocusedNode = null;
  cvox.ChromeVoxEventWatcher.announcedMouseOverNode = null;
  cvox.ChromeVoxEventWatcher.pendingMouseOverNode = null;
  cvox.ChromeVoxEventWatcher.mouseOverTimeoutId = null;
  cvox.ChromeVoxEventWatcher.lastFocusedNodeValue = null;
  cvox.ChromeVoxEventWatcher.eventToEat = null;
  cvox.ChromeVoxEventWatcher.currentTextControl = null;
  cvox.ChromeVoxEventWatcher.currentTextHandler = null;
  cvox.ChromeVoxEventWatcher.listeners_ = [];
  cvox.ChromeVoxEventWatcher.mutationObserver_ = null;
  cvox.ChromeVoxEventWatcher.focusFollowsMouse = !1;
  cvox.ChromeVoxEventWatcher.mouseoverDelayMs = 500;
  cvox.ChromeVoxEventWatcher.events_ = [];
  cvox.ChromeVoxEventWatcher.lastEventTime = 0;
  cvox.ChromeVoxEventWatcher.firstUnprocessedEventTime = -1;
  cvox.ChromeVoxEventWatcher.queueProcessingScheduled_ = !1;
  cvox.ChromeVoxEventWatcher.readyCallbacks_ = [];
  cvox.ChromeVoxEventWatcher.secondPassThroughKeyUp_ = !1;
  cvox.ChromeVox.searchKeyHeld = !1;
  cvox.ChromeVoxEventWatcher.textMutationObserver_ = null;
  cvox.ChromeVoxEventWatcher.addEventListeners_(doc);
  cvox.ChromeVoxEventWatcher.lastSubtreeModifiedEventBurstTime_ = 0;
  cvox.ChromeVoxEventWatcher.subtreeModifiedEventsCount_ = 0;
};
cvox.ChromeVoxEventWatcher.storeOn = function(store) {
  store.searchKeyHeld = cvox.ChromeVox.searchKeyHeld;
};
cvox.ChromeVoxEventWatcher.readFrom = function(store) {
  cvox.ChromeVox.searchKeyHeld = store.searchKeyHeld;
};
cvox.ChromeVoxEventWatcher.addEvent = function(evt) {
  cvox.ChromeVox.isActive && !document.webkitHidden && (cvox.ChromeVoxEventWatcher.events_.push(evt), cvox.ChromeVoxEventWatcher.lastEventTime = (new Date).getTime(), -1 == cvox.ChromeVoxEventWatcher.firstUnprocessedEventTime && (cvox.ChromeVoxEventWatcher.firstUnprocessedEventTime = (new Date).getTime()), cvox.ChromeVoxEventWatcher.queueProcessingScheduled_ || (cvox.ChromeVoxEventWatcher.queueProcessingScheduled_ = !0, window.setTimeout(cvox.ChromeVoxEventWatcher.processQueue_, cvox.ChromeVoxEventWatcher.WAIT_TIME_MS_)));
};
cvox.ChromeVoxEventWatcher.addReadyCallback = function(cb) {
  cvox.ChromeVoxEventWatcher.readyCallbacks_.push(cb);
  cvox.ChromeVoxEventWatcher.maybeCallReadyCallbacks_();
};
cvox.ChromeVoxEventWatcher.hasPendingEvents_ = function() {
  return -1 != cvox.ChromeVoxEventWatcher.firstUnprocessedEventTime || cvox.ChromeVoxEventWatcher.queueProcessingScheduled_;
};
cvox.ChromeVoxEventWatcher.readyCallbackRunning_ = !1;
cvox.ChromeVoxEventWatcher.maybeCallReadyCallbacks_ = function() {
  cvox.ChromeVoxEventWatcher.readyCallbackRunning_ || (cvox.ChromeVoxEventWatcher.readyCallbackRunning_ = !0, window.setTimeout(function() {
    cvox.ChromeVoxEventWatcher.readyCallbackRunning_ = !1;
    !cvox.ChromeVoxEventWatcher.hasPendingEvents_() && !cvox.ChromeVoxEventWatcher.queueProcessingScheduled_ && 0 < cvox.ChromeVoxEventWatcher.readyCallbacks_.length && (cvox.ChromeVoxEventWatcher.readyCallbacks_.shift()(), cvox.ChromeVoxEventWatcher.maybeCallReadyCallbacks_());
  }, 5));
};
cvox.ChromeVoxEventWatcher.addEventListeners_ = function(doc) {
  cvox.ChromeVoxEventWatcher.addEventListener_(doc, "keydown", cvox.ChromeVoxEventWatcher.keyDownEventWatcher, !0);
  if (cvox.ChromeVox.isActive && !cvox.ChromeVox.entireDocumentIsHidden) {
    if (cvox.ChromeVoxEventWatcher.addEventListener_(doc, "keypress", cvox.ChromeVoxEventWatcher.keyPressEventWatcher, !0), cvox.ChromeVoxEventWatcher.addEventListener_(doc, "keyup", cvox.ChromeVoxEventWatcher.keyUpEventWatcher, !0), cvox.ChromeVoxEventWatcher.addEventListener_(doc, cvox.UserEventDetail.Category.JUMP, cvox.ChromeVoxUserCommands.handleChromeVoxUserEvent, !1), cvox.ChromeVoxEventWatcher.addEventListener_(doc, "focus", cvox.ChromeVoxEventWatcher.focusEventWatcher, !0), cvox.ChromeVoxEventWatcher.addEventListener_(doc, 
    "blur", cvox.ChromeVoxEventWatcher.blurEventWatcher, !0), cvox.ChromeVoxEventWatcher.addEventListener_(doc, "change", cvox.ChromeVoxEventWatcher.changeEventWatcher, !0), cvox.ChromeVoxEventWatcher.addEventListener_(doc, "copy", cvox.ChromeVoxEventWatcher.clipboardEventWatcher, !0), cvox.ChromeVoxEventWatcher.addEventListener_(doc, "cut", cvox.ChromeVoxEventWatcher.clipboardEventWatcher, !0), cvox.ChromeVoxEventWatcher.addEventListener_(doc, "paste", cvox.ChromeVoxEventWatcher.clipboardEventWatcher, 
    !0), cvox.ChromeVoxEventWatcher.addEventListener_(doc, "select", cvox.ChromeVoxEventWatcher.selectEventWatcher, !0), cvox.ChromeVoxEventWatcher.addEventListener_(doc, "webkitvisibilitychange", cvox.ChromeVoxEventWatcher.visibilityChangeWatcher, !0), cvox.ChromeVoxEventWatcher.events_ = [], cvox.ChromeVoxEventWatcher.queueProcessingScheduled_ = !1, cvox.ChromeVoxEventWatcher.addEventListener_(doc, "mouseover", cvox.ChromeVoxEventWatcher.mouseOverEventWatcher, !0), cvox.ChromeVoxEventWatcher.addEventListener_(doc, 
    "mouseout", cvox.ChromeVoxEventWatcher.mouseOutEventWatcher, !0), cvox.ChromeVoxEventWatcher.addEventListener_(doc, "click", cvox.ChromeVoxEventWatcher.mouseClickEventWatcher, !0), "undefined" != typeof WebKitMutationObserver) {
      cvox.ChromeVoxEventWatcher.mutationObserver_ = new WebKitMutationObserver(cvox.ChromeVoxEventWatcher.mutationHandler, {childList: true, attributes: true, characterData: true, subtree: true, attributeOldValue: true, characterDataOldValue: true, attributeFilter: true});
      var observerTarget = null;
      doc.documentElement ? observerTarget = doc.documentElement : doc.document && doc.document.documentElement && (observerTarget = doc.document.documentElement);
      observerTarget && cvox.ChromeVoxEventWatcher.mutationObserver_.observe(observerTarget, {childList:!0, attributes:!0, characterData:!0, subtree:!0, attributeOldValue:!0, characterDataOldValue:!0});
    } else {
      cvox.ChromeVoxEventWatcher.addEventListener_(doc, "DOMSubtreeModified", cvox.ChromeVoxEventWatcher.subtreeModifiedEventWatcher, !0);
    }
  }
};
cvox.ChromeVoxEventWatcher.cleanup = function(doc) {
  for (var i = 0;i < cvox.ChromeVoxEventWatcher.listeners_.length;i++) {
    var listener = cvox.ChromeVoxEventWatcher.listeners_[i];
    doc.removeEventListener(listener.type, listener.listener, listener.useCapture);
  }
  cvox.ChromeVoxEventWatcher.listeners_ = [];
  cvox.ChromeVoxEventWatcher.currentDateHandler && cvox.ChromeVoxEventWatcher.currentDateHandler.shutdown();
  cvox.ChromeVoxEventWatcher.currentTimeHandler && cvox.ChromeVoxEventWatcher.currentTimeHandler.shutdown();
  cvox.ChromeVoxEventWatcher.currentMediaHandler && cvox.ChromeVoxEventWatcher.currentMediaHandler.shutdown();
  cvox.ChromeVoxEventWatcher.mutationObserver_ && cvox.ChromeVoxEventWatcher.mutationObserver_.disconnect();
  cvox.ChromeVoxEventWatcher.mutationObserver_ = null;
};
cvox.ChromeVoxEventWatcher.addEventListener_ = function(doc, type, listener, useCapture) {
  cvox.ChromeVoxEventWatcher.listeners_.push({type:type, listener:listener, useCapture:useCapture});
  doc.addEventListener(type, listener, useCapture);
};
cvox.ChromeVoxEventWatcher.getLastFocusedNode = function() {
  return cvox.ChromeVoxEventWatcher.lastFocusedNode;
};
cvox.ChromeVoxEventWatcher.setLastFocusedNode_ = function(element) {
  cvox.ChromeVoxEventWatcher.lastFocusedNode = element;
  cvox.ChromeVoxEventWatcher.lastFocusedNodeValue = element ? cvox.DomUtil.getControlValueAndStateString(element) : null;
};
cvox.ChromeVoxEventWatcher.mutationHandler = function(mutations) {
  if (cvox.ChromeVoxEventSuspender.areEventsSuspended()) {
    return !0;
  }
  cvox.ChromeVox.navigationManager.updateIndicatorIfChanged();
  cvox.LiveRegions.processMutations(mutations, function(assertive, navDescriptions) {
    var evt = new window.Event("LiveRegion");
    evt.navDescriptions = navDescriptions;
    evt.assertive = assertive;
    cvox.ChromeVoxEventWatcher.addEvent(evt);
    return !0;
  });
};
cvox.ChromeVoxEventWatcher.mouseClickEventWatcher = function(evt) {
  if (evt.fromCvox) {
    return !0;
  }
  if (cvox.ChromeVox.host.mustRedispatchClickEvent()) {
    cvox.ChromeVoxUserCommands.wasMouseClicked = !0;
    evt.stopPropagation();
    evt.preventDefault();
    cvox.Focuser.setFocus(cvox.ChromeVox.navigationManager.getCurrentNode());
    cvox.ChromeVox.tts.speak(cvox.ChromeVox.msgs.getMsg("element_clicked"), cvox.AbstractTts.QUEUE_MODE_FLUSH, cvox.AbstractTts.PERSONALITY_ANNOTATION);
    var targetNode = cvox.ChromeVox.navigationManager.getCurrentNode();
    cvox.DomUtil.clickElem(targetNode, !1, !0);
    return !1;
  }
  cvox.ChromeVoxEventWatcher.addEvent(evt);
  return cvox.ChromeVoxUserCommands.wasMouseClicked = !0;
};
cvox.ChromeVoxEventWatcher.mouseOverEventWatcher = function(evt) {
  if (!cvox.ChromeVoxEventWatcher.focusFollowsMouse || cvox.DomUtil.isDescendantOfNode(cvox.ChromeVoxEventWatcher.announcedMouseOverNode, evt.target) || evt.target == cvox.ChromeVoxEventWatcher.pendingMouseOverNode) {
    return !0;
  }
  cvox.ChromeVoxEventWatcher.pendingMouseOverNode = evt.target;
  cvox.ChromeVoxEventWatcher.mouseOverTimeoutId && (window.clearTimeout(cvox.ChromeVoxEventWatcher.mouseOverTimeoutId), cvox.ChromeVoxEventWatcher.mouseOverTimeoutId = null);
  if (evt.target.tagName && "BODY" == evt.target.tagName) {
    return cvox.ChromeVoxEventWatcher.pendingMouseOverNode = null, cvox.ChromeVoxEventWatcher.announcedMouseOverNode = null, !0;
  }
  cvox.ChromeVoxEventWatcher.mouseOverTimeoutId = window.setTimeout(function() {
    cvox.ChromeVoxEventWatcher.mouseOverTimeoutId = null;
    if (evt.target == cvox.ChromeVoxEventWatcher.pendingMouseOverNode) {
      cvox.ChromeVox.navigationManager.stopReading(!0);
      var target = evt.target;
      cvox.Focuser.setFocus(target);
      cvox.ApiImplementation.syncToNode(target, !0, cvox.AbstractTts.QUEUE_MODE_FLUSH);
      cvox.ChromeVoxEventWatcher.announcedMouseOverNode = target;
    }
  }, cvox.ChromeVoxEventWatcher.mouseoverDelayMs);
  return !0;
};
cvox.ChromeVoxEventWatcher.mouseOutEventWatcher = function(evt) {
  evt.target == cvox.ChromeVoxEventWatcher.pendingMouseOverNode && (cvox.ChromeVoxEventWatcher.pendingMouseOverNode = null, cvox.ChromeVoxEventWatcher.mouseOverTimeoutId && (window.clearTimeout(cvox.ChromeVoxEventWatcher.mouseOverTimeoutId), cvox.ChromeVoxEventWatcher.mouseOverTimeoutId = null));
  return !0;
};
cvox.ChromeVoxEventWatcher.focusEventWatcher = function(evt) {
  cvox.ChromeVoxUserCommands.removeTabDummySpan();
  cvox.ChromeVoxEventSuspender.areEventsSuspended() ? evt.target && evt.target.nodeType == Node.ELEMENT_NODE && cvox.ChromeVoxEventWatcher.setLastFocusedNode_(evt.target) : cvox.ChromeVoxEventWatcher.addEvent(evt);
  return !0;
};
cvox.ChromeVoxEventWatcher.focusHandler = function(evt) {
  if (evt.target && evt.target.hasAttribute && "true" == evt.target.getAttribute("aria-hidden") && "true" != evt.target.getAttribute("chromevoxignoreariahidden")) {
    cvox.ChromeVoxEventWatcher.setLastFocusedNode_(null), cvox.ChromeVoxEventWatcher.setUpTextHandler();
  } else {
    if (evt.target && evt.target != window) {
      var target = evt.target, parentControl = cvox.DomUtil.getSurroundingControl(target);
      if (parentControl && parentControl == cvox.ChromeVoxEventWatcher.lastFocusedNode) {
        cvox.ChromeVoxEventWatcher.handleControlChanged(target);
      } else {
        parentControl ? cvox.ChromeVoxEventWatcher.setLastFocusedNode_(parentControl) : cvox.ChromeVoxEventWatcher.setLastFocusedNode_(target);
        var queueMode = cvox.ChromeVoxEventWatcher.queueMode_();
        if (cvox.ChromeVoxEventWatcher.getInitialVisibility() || cvox.ChromeVoxEventWatcher.handleDialogFocus(target)) {
          queueMode = cvox.AbstractTts.QUEUE_MODE_QUEUE;
        }
        cvox.ChromeVox.navigationManager.clearPageSel(!0) && (queueMode = cvox.AbstractTts.QUEUE_MODE_QUEUE);
        cvox.ApiImplementation.syncToNode(target, !document.webkitHidden, queueMode);
        if (evt.target.constructor == HTMLVideoElement || evt.target.constructor == HTMLAudioElement) {
          cvox.ChromeVoxEventWatcher.setUpMediaHandler_();
        } else {
          if (evt.target.hasAttribute) {
            var inputType = evt.target.getAttribute("type");
            switch(inputType) {
              case "time":
                cvox.ChromeVoxEventWatcher.setUpTimeHandler_();
                return;
              case "date":
              ;
              case "month":
              ;
              case "week":
                cvox.ChromeVoxEventWatcher.setUpDateHandler_();
                return;
            }
          }
          cvox.ChromeVoxEventWatcher.setUpTextHandler();
        }
      }
    } else {
      cvox.ChromeVoxEventWatcher.setLastFocusedNode_(null);
    }
  }
};
cvox.ChromeVoxEventWatcher.blurEventWatcher = function(evt) {
  window.setTimeout(function() {
    document.activeElement || (cvox.ChromeVoxEventWatcher.setLastFocusedNode_(null), cvox.ChromeVoxEventWatcher.addEvent(evt));
  }, 0);
  return !0;
};
cvox.ChromeVoxEventWatcher.keyDownEventWatcher = function(evt) {
  if (cvox.ChromeVox.passThroughMode) {
    return !0;
  }
  cvox.ChromeVox.isChromeOS && 91 == evt.keyCode && (cvox.ChromeVox.searchKeyHeld = !0);
  evt.searchKeyHeld = cvox.ChromeVox.searchKeyHeld && cvox.ChromeVox.isActive;
  evt.stickyMode = cvox.ChromeVox.isStickyOn && cvox.ChromeVox.isActive;
  evt.keyPrefix = cvox.ChromeVox.keyPrefixOn && cvox.ChromeVox.isActive;
  cvox.ChromeVox.keyPrefixOn = !1;
  cvox.ChromeVoxEventWatcher.eventToEat = null;
  if (!cvox.ChromeVoxKbHandler.basicKeyDownActionsListener(evt) || cvox.ChromeVoxEventWatcher.handleControlAction(evt)) {
    return evt.preventDefault(), evt.stopPropagation(), cvox.ChromeVoxEventWatcher.eventToEat = evt, !1;
  }
  cvox.ChromeVoxEventWatcher.addEvent(evt);
  return !0;
};
cvox.ChromeVoxEventWatcher.keyUpEventWatcher = function(evt) {
  91 == evt.keyCode && (cvox.ChromeVox.searchKeyHeld = !1);
  if (cvox.ChromeVox.passThroughMode) {
    return evt.ctrlKey || evt.altKey || evt.metaKey || evt.shiftKey || cvox.ChromeVox.searchKeyHeld || (this.secondPassThroughKeyUp_ ? (this.secondPassThroughKeyUp_ = !1, cvox.ChromeVox.passThroughMode = !1) : this.secondPassThroughKeyUp_ = !0), !0;
  }
  if (cvox.ChromeVoxEventWatcher.eventToEat && evt.keyCode == cvox.ChromeVoxEventWatcher.eventToEat.keyCode) {
    return evt.stopPropagation(), evt.preventDefault(), !1;
  }
  cvox.ChromeVoxEventWatcher.addEvent(evt);
  return !0;
};
cvox.ChromeVoxEventWatcher.keyPressEventWatcher = function(evt) {
  var url = document.location.href, speakChar = cvox.TypingEcho.shouldSpeakChar(cvox.ChromeVox.typingEcho);
  "undefined" !== typeof cvox.ChromeVox.keyEcho[url] && (speakChar = cvox.ChromeVox.keyEcho[url]);
  cvox.ChromeVoxEditableTextBase.eventTypingEcho && speakChar && cvox.DomPredicates.editTextPredicate([document.activeElement]) && "password" !== document.activeElement.type && cvox.ChromeVox.tts.speak(String.fromCharCode(evt.charCode), 0);
  cvox.ChromeVoxEventWatcher.addEvent(evt);
  return cvox.ChromeVoxEventWatcher.eventToEat && evt.keyCode == cvox.ChromeVoxEventWatcher.eventToEat.keyCode ? (evt.preventDefault(), evt.stopPropagation(), !1) : !0;
};
cvox.ChromeVoxEventWatcher.changeEventWatcher = function(evt) {
  cvox.ChromeVoxEventWatcher.addEvent(evt);
  return !0;
};
cvox.ChromeVoxEventWatcher.clipboardEventWatcher = function(evt) {
  cvox.ChromeVox.tts.speak(cvox.ChromeVox.msgs.getMsg(evt.type).toLowerCase());
  var text = "";
  switch(evt.type) {
    case "paste":
      text = evt.clipboardData.getData("text");
      break;
    case "copy":
    ;
    case "cut":
      text = window.getSelection().toString();
  }
  cvox.ChromeVox.tts.speak(text, cvox.AbstractTts.QUEUE_MODE_QUEUE);
  cvox.ChromeVox.navigationManager.clearPageSel();
  return !0;
};
cvox.ChromeVoxEventWatcher.changeHandler = function(evt) {
  cvox.ChromeVoxEventWatcher.setUpTextHandler() || document.activeElement == evt.target && cvox.ChromeVoxEventWatcher.handleControlChanged(document.activeElement);
};
cvox.ChromeVoxEventWatcher.selectEventWatcher = function(evt) {
  cvox.ChromeVoxEventWatcher.addEvent(evt);
  return !0;
};
cvox.ChromeVoxEventWatcher.subtreeModifiedEventWatcher = function(evt) {
  if (!evt || !evt.target) {
    return !0;
  }
  cvox.ChromeVoxEventWatcher.addEvent(evt);
  return !0;
};
cvox.ChromeVoxEventWatcher.visibilityChangeWatcher = function() {
  cvox.ChromeVoxEventWatcher.initialVisibility = !document.webkitHidden;
  document.webkitHidden && cvox.ChromeVox.navigationManager.stopReading(!0);
};
cvox.ChromeVoxEventWatcher.getInitialVisibility = function() {
  var ret = cvox.ChromeVoxEventWatcher.initialVisibility;
  cvox.ChromeVoxEventWatcher.initialVisibility = !1;
  return ret;
};
cvox.ChromeVoxEventWatcher.speakLiveRegion_ = function(assertive, messages) {
  var queueMode = cvox.ChromeVoxEventWatcher.queueMode_();
  if (assertive)
    queueMode = cvox.AbstractTts.QUEUE_MODE_FLUSH;
  var descSpeaker = new cvox.NavigationSpeaker;
  descSpeaker.speakDescriptionArray(messages, queueMode, null);
};
cvox.ChromeVoxEventWatcher.subtreeModifiedHandler = function(evt) {
  var currentTime = (new Date).getTime();
  if (cvox.ChromeVoxEventWatcher.lastSubtreeModifiedEventBurstTime_ + cvox.ChromeVoxEventWatcher.SUBTREE_MODIFIED_BURST_DURATION_ > currentTime) {
    if (cvox.ChromeVoxEventWatcher.subtreeModifiedEventsCount_++, cvox.ChromeVoxEventWatcher.subtreeModifiedEventsCount_ > cvox.ChromeVoxEventWatcher.SUBTREE_MODIFIED_BURST_COUNT_LIMIT_) {
      return;
    }
  } else {
    cvox.ChromeVoxEventWatcher.lastSubtreeModifiedEventBurstTime_ = currentTime, cvox.ChromeVoxEventWatcher.subtreeModifiedEventsCount_ = 1;
  }
  if (evt && evt.target) {
    for (var target = evt.target, regions = cvox.AriaUtil.getLiveRegions(target), i = 0;i < regions.length && i < cvox.ChromeVoxEventWatcher.MAX_LIVE_REGIONS_;i++) {
      cvox.LiveRegionsDeprecated.updateLiveRegion(regions[i], cvox.ChromeVoxEventWatcher.queueMode_(), !1);
    }
  }
};
cvox.ChromeVoxEventWatcher.setUpTextHandler = function() {
  var currentFocus = document.activeElement;
  currentFocus && currentFocus.hasAttribute && "true" == currentFocus.getAttribute("aria-hidden") && "true" != currentFocus.getAttribute("chromevoxignoreariahidden") && (currentFocus = null);
  if (currentFocus != cvox.ChromeVoxEventWatcher.currentTextControl) {
    cvox.ChromeVoxEventWatcher.currentTextControl && (cvox.ChromeVoxEventWatcher.currentTextControl.removeEventListener("input", cvox.ChromeVoxEventWatcher.changeEventWatcher, !1), cvox.ChromeVoxEventWatcher.currentTextControl.removeEventListener("click", cvox.ChromeVoxEventWatcher.changeEventWatcher, !1), cvox.ChromeVoxEventWatcher.textMutationObserver_ && (cvox.ChromeVoxEventWatcher.textMutationObserver_.disconnect(), cvox.ChromeVoxEventWatcher.textMutationObserver_ = null));
    cvox.ChromeVoxEventWatcher.currentTextControl = null;
    cvox.ChromeVoxEventWatcher.currentTextHandler && (cvox.ChromeVoxEventWatcher.currentTextHandler.teardown(), cvox.ChromeVoxEventWatcher.currentTextHandler = null);
    if (null == currentFocus) {
      return !1;
    }
    if (currentFocus.constructor == HTMLInputElement && cvox.DomUtil.isInputTypeText(currentFocus) && cvox.ChromeVoxEventWatcher.shouldEchoKeys) {
      cvox.ChromeVoxEventWatcher.currentTextControl = currentFocus, cvox.ChromeVoxEventWatcher.currentTextHandler = new cvox.ChromeVoxEditableHTMLInput(currentFocus, cvox.ChromeVox.tts);
    } else {
      if (currentFocus.constructor == HTMLTextAreaElement && cvox.ChromeVoxEventWatcher.shouldEchoKeys) {
        cvox.ChromeVoxEventWatcher.currentTextControl = currentFocus, cvox.ChromeVoxEventWatcher.currentTextHandler = new cvox.ChromeVoxEditableTextArea(currentFocus, cvox.ChromeVox.tts);
      } else {
        if (currentFocus.isContentEditable || "textbox" == currentFocus.getAttribute("role")) {
          cvox.ChromeVoxEventWatcher.currentTextControl = currentFocus, cvox.ChromeVoxEventWatcher.currentTextHandler = new cvox.ChromeVoxEditableContentEditable(currentFocus, cvox.ChromeVox.tts);
        }
      }
    }
    cvox.ChromeVoxEventWatcher.currentTextControl && (cvox.ChromeVoxEventWatcher.currentTextControl.addEventListener("input", cvox.ChromeVoxEventWatcher.changeEventWatcher, !1), cvox.ChromeVoxEventWatcher.currentTextControl.addEventListener("click", cvox.ChromeVoxEventWatcher.changeEventWatcher, !1), window.WebKitMutationObserver && (cvox.ChromeVoxEventWatcher.textMutationObserver_ = new WebKitMutationObserver(cvox.ChromeVoxEventWatcher.onTextMutation,  {childList: true, attributes: true, characterData: true, subtree: true, attributeOldValue: true, characterDataOldValue: true, attributeFilter: true}), cvox.ChromeVoxEventWatcher.textMutationObserver_.observe(cvox.ChromeVoxEventWatcher.currentTextControl, 
    {childList:!0, attributes:!0, subtree:!0, attributeOldValue:!1, characterDataOldValue:!1})), cvox.ChromeVoxEventSuspender.areEventsSuspended() || cvox.ChromeVox.navigationManager.updateSel(cvox.CursorSelection.fromNode(cvox.ChromeVoxEventWatcher.currentTextControl)));
    return null != cvox.ChromeVoxEventWatcher.currentTextHandler;
  }
};
cvox.ChromeVoxEventWatcher.handleTextChanged = function(isKeypress) {
  if (cvox.ChromeVoxEventWatcher.currentTextHandler) {
    var handler = cvox.ChromeVoxEventWatcher.currentTextHandler;
    handler.update(isKeypress);
    return !0;
  }
  return !1;
};
cvox.ChromeVoxEventWatcher.onTextMutation = function() {
  cvox.ChromeVoxEventWatcher.currentTextHandler && window.setTimeout(function() {
    cvox.ChromeVoxEventWatcher.handleTextChanged(!1);
  }, cvox.ChromeVoxEventWatcher.MAX_WAIT_TIME_MS_);
};
cvox.ChromeVoxEventWatcher.handleControlChanged = function(control) {
  var newValue = cvox.DomUtil.getControlValueAndStateString(control), parentControl = cvox.DomUtil.getSurroundingControl(control), announceChange = !1;
  if (control != cvox.ChromeVoxEventWatcher.lastFocusedNode && (null == parentControl || parentControl != cvox.ChromeVoxEventWatcher.lastFocusedNode)) {
    cvox.ChromeVoxEventWatcher.setLastFocusedNode_(control);
  } else {
    if (newValue == cvox.ChromeVoxEventWatcher.lastFocusedNodeValue) {
      return;
    }
  }
  cvox.ChromeVoxEventWatcher.lastFocusedNodeValue = newValue;
  if (cvox.DomPredicates.checkboxPredicate([control]) || cvox.DomPredicates.radioPredicate([control])) {
    announceChange = !0, control.checked ? cvox.ChromeVox.earcons.playEarcon(cvox.AbstractEarcons.CHECK_ON) : cvox.ChromeVox.earcons.playEarcon(cvox.AbstractEarcons.CHECK_OFF);
  }
  "SELECT" == control.tagName && (announceChange = !0);
  if ("INPUT" == control.tagName) {
    switch(control.type) {
      case "color":
      ;
      case "datetime":
      ;
      case "datetime-local":
      ;
      case "range":
        announceChange = !0;
    }
  }
  control.hasAttribute && control.hasAttribute("role") && (announceChange = !0);
  parentControl && parentControl != control && document.activeElement == control ? (cvox.ApiImplementation.syncToNode(control, !0, cvox.AbstractTts.QUEUE_MODE_FLUSH), announceChange = !1) : cvox.AriaUtil.getActiveDescendant(control) && (cvox.ChromeVox.navigationManager.updateSelToArbitraryNode(cvox.AriaUtil.getActiveDescendant(control), !0), announceChange = !0);
  announceChange && !cvox.ChromeVoxEventSuspender.areEventsSuspended() && (cvox.ChromeVox.tts.speak(newValue, cvox.ChromeVoxEventWatcher.queueMode_(), null), cvox.NavBraille.fromText(newValue).write());
};
cvox.ChromeVoxEventWatcher.handleControlAction = function(evt) {
  if (!cvox.ChromeVox.isActive) {
    return !1;
  }
  var control = evt.target;
  if ("SELECT" == control.tagName && 1 >= control.size && (13 == evt.keyCode || 32 == evt.keyCode)) {
    return evt.preventDefault(), evt.stopPropagation(), !0;
  }
  if ("INPUT" == control.tagName && "range" == control.type) {
    var value = parseFloat(control.value), step;
    if (control.step && 0 < control.step) {
      step = control.step;
    } else {
      if (control.min && control.max) {
        var range = control.max - control.min;
        step = 2 < range && 31 > range ? 1 : (control.max - control.min) / 10;
      } else {
        step = 1;
      }
    }
    if (37 == evt.keyCode || 38 == evt.keyCode) {
      value -= step;
    } else {
      if (39 == evt.keyCode || 40 == evt.keyCode) {
        value += step;
      }
    }
    control.max && value > control.max && (value = control.max);
    control.min && value < control.min && (value = control.min);
    control.value = value;
  }
  return !1;
};
cvox.ChromeVoxEventWatcher.handleDialogFocus = function(target) {
  for (var dialog = target, role = "";dialog && (!dialog.hasAttribute || (role = dialog.getAttribute("role"), "dialog" != role && "alertdialog" != role));) {
    dialog = dialog.parentElement;
  }
  if (dialog == cvox.ChromeVox.navigationManager.currentDialog) {
    return !1;
  }
  if (cvox.ChromeVox.navigationManager.currentDialog && !dialog) {
    if (!cvox.DomUtil.isDescendantOfNode(document.activeElement, cvox.ChromeVox.navigationManager.currentDialog)) {
      return cvox.ChromeVox.navigationManager.currentDialog = null, cvox.ChromeVox.tts.speak(cvox.ChromeVox.msgs.getMsg("exiting_dialog"), cvox.AbstractTts.QUEUE_MODE_FLUSH, cvox.AbstractTts.PERSONALITY_ANNOTATION), !0;
    }
  } else {
    if (dialog) {
      cvox.ChromeVox.navigationManager.currentDialog = dialog;
      cvox.ChromeVox.tts.speak(cvox.ChromeVox.msgs.getMsg("entering_dialog"), cvox.AbstractTts.QUEUE_MODE_FLUSH, cvox.AbstractTts.PERSONALITY_ANNOTATION);
      if ("alertdialog" == role) {
        var dialogDescArray = cvox.DescriptionUtil.getFullDescriptionsFromChildren(null, dialog), descSpeaker = new cvox.NavigationSpeaker;
        descSpeaker.speakDescriptionArray(dialogDescArray, cvox.AbstractTts.QUEUE_MODE_QUEUE, null);
      }
      return !0;
    }
  }
  return !1;
};
cvox.ChromeVoxEventWatcherUtil.shouldWaitToProcess = function(lastFocusTimestamp, firstTimestamp, currentTime) {
  var timeSinceFocusEvent = currentTime - lastFocusTimestamp, timeSinceFirstEvent = currentTime - firstTimestamp;
  return timeSinceFocusEvent < cvox.ChromeVoxEventWatcher.WAIT_TIME_MS_ && timeSinceFirstEvent < cvox.ChromeVoxEventWatcher.MAX_WAIT_TIME_MS_;
};
cvox.ChromeVoxEventWatcher.queueMode_ = function() {
  return cvox.ChromeVoxEventWatcher.processing_ ? cvox.AbstractTts.QUEUE_MODE_QUEUE : cvox.AbstractTts.QUEUE_MODE_FLUSH;
};
cvox.ChromeVoxEventWatcher.processQueue_ = function() {
  if (0 != cvox.ChromeVoxEventWatcher.events_.length) {
    var events = cvox.ChromeVoxEventWatcher.events_, lastFocusIndex = -1, lastFocusTimestamp = 0, evt, i;
    for (i = 0;evt = events[i];i++) {
      "focus" == evt.type && (lastFocusIndex = i, lastFocusTimestamp = evt.timeStamp);
    }
    cvox.ChromeVoxEventWatcher.events_ = [];
    for (i = 0;evt = events[i];i++) {
      var prevEvt = events[i - 1] || {};
      !(i >= lastFocusIndex || "LiveRegion" == evt.type || "DOMSubtreeModified" == evt.type) || "focus" == prevEvt.type && "change" == evt.type || cvox.ChromeVoxEventWatcher.events_.push(evt);
    }
    cvox.ChromeVoxEventWatcher.events_.sort(function(a, b) {
      return "LiveRegion" != b.type && "LiveRegion" == a.type || "DOMSubtreeModified" != b.type && "DOMSubtreeModified" == a.type ? 1 : -1;
    });
    var currentTime = (new Date).getTime();
    if (0 <= lastFocusIndex && cvox.ChromeVoxEventWatcherUtil.shouldWaitToProcess(lastFocusTimestamp, cvox.ChromeVoxEventWatcher.firstUnprocessedEventTime, currentTime)) {
      window.setTimeout(cvox.ChromeVoxEventWatcher.processQueue_, cvox.ChromeVoxEventWatcher.WAIT_TIME_MS_);
    } else {
      for (i = 0;evt = cvox.ChromeVoxEventWatcher.events_[i];i++) {
        cvox.ChromeVoxEventWatcher.handleEvent_(evt), cvox.ChromeVoxEventWatcher.processing_ = !0;
      }
      cvox.ChromeVoxEventWatcher.processing_ = !1;
      cvox.ChromeVoxEventWatcher.events_ = [];
      cvox.ChromeVoxEventWatcher.firstUnprocessedEventTime = -1;
      cvox.ChromeVoxEventWatcher.queueProcessingScheduled_ = !1;
      cvox.ChromeVoxEventWatcher.maybeCallReadyCallbacks_();
    }
  }
};
cvox.ChromeVoxEventWatcher.handleEvent_ = function(evt) {
  switch(evt.type) {
    case "keydown":
      cvox.ChromeVoxEventWatcher.setUpTextHandler();
      if (cvox.ChromeVoxEventWatcher.currentTextControl) {
        cvox.ChromeVoxEventWatcher.handleTextChanged(!0);
        var editableText = cvox.ChromeVoxEventWatcher.currentTextHandler;
        if (editableText && editableText.lastChangeDescribed) {
          break;
        }
      }
      cvox.ChromeVoxEventWatcher.handleControlChanged(document.activeElement);
      break;
    case "keyup":
      cvox.ChromeVoxEventWatcher.handleControlChanged(document.activeElement);
      break;
    case "keypress":
      cvox.ChromeVoxEventWatcher.setUpTextHandler();
      break;
    case "click":
      cvox.ApiImplementation.syncToNode(evt.target, !0);
      break;
    case "focus":
      cvox.ChromeVoxEventWatcher.focusHandler(evt);
      break;
    case "blur":
      cvox.ChromeVoxEventWatcher.setUpTextHandler();
      break;
    case "change":
      cvox.ChromeVoxEventWatcher.changeHandler(evt);
      break;
    case "select":
      cvox.ChromeVoxEventWatcher.setUpTextHandler();
      break;
    case "LiveRegion":
      cvox.ChromeVoxEventWatcher.speakLiveRegion_(evt.assertive, evt.navDescriptions);
      break;
    case "DOMSubtreeModified":
      cvox.ChromeVoxEventWatcher.subtreeModifiedHandler(evt);
  }
};
cvox.ChromeVoxEventWatcher.setUpTimeHandler_ = function() {
  var currentFocus = document.activeElement;
  currentFocus && currentFocus.hasAttribute && "true" == currentFocus.getAttribute("aria-hidden") && "true" != currentFocus.getAttribute("chromevoxignoreariahidden") && (currentFocus = null);
  cvox.ChromeVoxEventWatcher.currentTimeHandler = currentFocus.constructor == HTMLInputElement && currentFocus.type && "time" == currentFocus.type ? new cvox.ChromeVoxHTMLTimeWidget(currentFocus, cvox.ChromeVox.tts) : null;
  return null != cvox.ChromeVoxEventWatcher.currentTimeHandler;
};
cvox.ChromeVoxEventWatcher.setUpMediaHandler_ = function() {
  var currentFocus = document.activeElement;
  currentFocus && currentFocus.hasAttribute && "true" == currentFocus.getAttribute("aria-hidden") && "true" != currentFocus.getAttribute("chromevoxignoreariahidden") && (currentFocus = null);
  cvox.ChromeVoxEventWatcher.currentMediaHandler = currentFocus.constructor == HTMLVideoElement || currentFocus.constructor == HTMLAudioElement ? new cvox.ChromeVoxHTMLMediaWidget(currentFocus, cvox.ChromeVox.tts) : null;
  return null != cvox.ChromeVoxEventWatcher.currentMediaHandler;
};
cvox.ChromeVoxEventWatcher.setUpDateHandler_ = function() {
  var currentFocus = document.activeElement;
  currentFocus && currentFocus.hasAttribute && "true" == currentFocus.getAttribute("aria-hidden") && "true" != currentFocus.getAttribute("chromevoxignoreariahidden") && (currentFocus = null);
  cvox.ChromeVoxEventWatcher.currentDateHandler = currentFocus.constructor != HTMLInputElement || !currentFocus.type || "date" != currentFocus.type && "month" != currentFocus.type && "week" != currentFocus.type ? null : new cvox.ChromeVoxHTMLDateWidget(currentFocus, cvox.ChromeVox.tts);
  return null != cvox.ChromeVoxEventWatcher.currentDateHandler;
};
cvox.Serializer = function() {
};
cvox.Serializer.prototype.storeOn = function(store) {
  cvox.ChromeVox.storeOn(store);
  cvox.ChromeVoxEventWatcher.storeOn(store);
};
cvox.Serializer.prototype.readFrom = function(store) {
  cvox.ChromeVox.readFrom(store);
  cvox.ChromeVoxEventWatcher.readFrom(store);
};
cvox.InitGlobals = function() {
};
cvox.InitGlobals.initGlobals = function() {
  cvox.ChromeVox.host || (cvox.ChromeVox.host = cvox.HostFactory.getHost());
  cvox.ChromeVox.tts = (new cvox.CompositeTts).add(cvox.HostFactory.getTts()).add(cvox.History.getInstance()).add(cvox.ConsoleTts.getInstance());
  cvox.ChromeVox.braille || (cvox.ChromeVox.braille = cvox.HostFactory.getBraille());
  cvox.ChromeVox.mathJax = cvox.HostFactory.getMathJax();
  cvox.ChromeVox.earcons = cvox.HostFactory.getEarcons();
  cvox.ChromeVox.msgs = cvox.HostFactory.getMsgs();
  cvox.ChromeVox.isActive = !0;
  cvox.ChromeVox.navigationManager = new cvox.NavigationManager;
  cvox.ChromeVox.navigationManager.updateIndicator();
  cvox.ChromeVox.syncToNode = cvox.ApiImplementation.syncToNode;
  cvox.ChromeVox.speakNode = cvox.ApiImplementation.speakNode;
  cvox.ChromeVox.serializer = new cvox.Serializer;
  cvox.ChromeVox.host.init();
  cvox.ChromeVoxEventWatcher.init(window);
  cvox.ChromeVox.executeUserCommand = function(commandName) {
    cvox.ChromeVoxUserCommands.commands[commandName]();
  };
  cvox.ChromeVox.host.onPageLoad();
};
cvox.ChromeVoxInit = {};
cvox.ChromeVox.initTimeout_ = 100;
cvox.ChromeVox.recallInit_ = function(reason) {
  window.console.log(reason + " Will try again in " + cvox.ChromeVox.initTimeout_ + "ms");
  window.setTimeout(cvox.ChromeVox.initDocument, cvox.ChromeVox.initTimeout_);
  cvox.ChromeVox.initTimeout_ *= 2;
};
cvox.ChromeVox.initDocument = function() {
  document.body ? (cvox.ChromeVox.host = cvox.HostFactory.getHost(), cvox.ChromeVox.host.ttsLoaded() ? (window.console.log("Starting ChromeVox."), cvox.InitGlobals.initGlobals(), window.disableChromeVox = function() {
    cvox.ChromeVox.host.killChromeVox();
  }) : cvox.ChromeVox.recallInit_("ChromeVox not starting; waiting for TTS. " + document.location.href + ".")) : cvox.ChromeVox.recallInit_("ChromeVox not starting on unloaded page: " + document.location.href + ".");
};
cvox.ChromeVox.reinit = function() {
  cvox.ChromeVox.host.reinit();
  cvox.ChromeVox.initDocument();
};
cvox.AndroidBraille = function() {
};
goog.inherits(cvox.AndroidBraille, cvox.AbstractBraille);
cvox.AndroidBraille.prototype.write = function(params) {
  accessibility.braille && accessibility.braille(JSON.stringify(params.toJson()));
};
cvox.HostFactory.brailleConstructor = cvox.AndroidBraille;
cvox.AndroidEarcons = function() {
  cvox.AbstractEarcons.call(this);
  this.audioMap = {};
};
goog.inherits(cvox.AndroidEarcons, cvox.AbstractEarcons);
cvox.AndroidEarcons.BASE_URL = "https://ssl.gstatic.com/accessibility/javascript/android/earcons/";
cvox.AndroidEarcons.prototype.playEarcon = function(earcon) {
  if (this.earconsAvailable()) {
    cvox.AndroidEarcons.superClass_.playEarcon.call(this, earcon);
    this.currentAudio = this.audioMap[earcon];
    this.currentAudio || (this.currentAudio = new Audio(cvox.AndroidEarcons.BASE_URL + this.getEarconFilename(earcon)), this.audioMap[earcon] = this.currentAudio);
    try {
      this.currentAudio.currentTime = 0;
    } catch (e) {
    }
    this.currentAudio.paused && this.currentAudio.play();
  }
};
cvox.AndroidEarcons.prototype.earconsAvailable = function() {
  return -1 == navigator.userAgent.indexOf("Chrome") ? !1 : !0;
};
cvox.HostFactory.earconsConstructor = cvox.AndroidEarcons;
"undefined" != typeof goog && goog.provide && (cvox.Api = {}, cvox.Api.Math = {});
(function() {
  function connect_() {
    channel_ && (channel_.port1.close(), channel_.port2.close(), channel_ = null);
    channel_ = new MessageChannel;
    window.postMessage("cvox.PortSetup", [channel_.port2], "*");
    channel_.port1.onmessage = function(event) {
      "cvox.Disconnect" == event.data && (channel_ = null);
      try {
        var message = JSON.parse(event.data);
        message.id && callbackMap_[message.id] && (callbackMap_[message.id](message), delete callbackMap_[message.id]);
      } catch (e) {
      }
    };
  }
  function callAsync_(message, callback) {
    var id = nextCallbackId_;
    nextCallbackId_++;
    void 0 === message.args && (message.args = []);
    message.args = [id].concat(message.args);
    callbackMap_[id] = callback;
    channel_.port1.postMessage(JSON.stringify(message));
  }
  function callSpeakAsync_(message, properties) {
    var callback = null;
    properties && properties.endCallback && (callback = properties.endCallback);
    callAsync_(message, callback);
  }
  var channel_, isActive_ = !1, nextCallbackId_ = 1, callbackMap_ = {};
  window.cvox || (window.cvox = {});
  var cvox = window.cvox, implementation_ = null;
  "undefined" != typeof cvox.ApiImplementation && (implementation_ = cvox.ApiImplementation);
  cvox.Api = function() {
  };
  cvox.Api.internalEnable = function() {
    isActive_ = !0;
    implementation_ || connect_();
    var event = document.createEvent("UIEvents");
    event.initEvent("chromeVoxLoaded", !0, !1);
    document.dispatchEvent(event);
  };
  cvox.Api.internalDisable = function() {
    isActive_ = !1;
    channel_ = null;
    var event = document.createEvent("UIEvents");
    event.initEvent("chromeVoxUnloaded", !0, !1);
    document.dispatchEvent(event);
  };
  cvox.Api.isChromeVoxActive = function() {
    return implementation_ ? isActive_ : !!channel_;
  };
  cvox.Api.speak = function(textString, queueMode, properties) {
    if (cvox.Api.isChromeVoxActive()) {
      if (implementation_) {
        implementation_.speak(textString, queueMode, properties);
      } else {
        var message = {cmd:"speak", args:[textString, queueMode, properties]};
        callSpeakAsync_(message, properties);
      }
    }
  };
  cvox.Api.speakNode = function(targetNode, queueMode, properties) {
    if (cvox.Api.isChromeVoxActive()) {
      if (implementation_) {
        implementation_.speak(cvox.DomUtil.getName(targetNode), queueMode, properties);
      } else {
        var message = {cmd:"speakNodeRef", args:[cvox.ApiUtils.makeNodeReference(targetNode), queueMode, properties]};
        callSpeakAsync_(message, properties);
      }
    }
  };
  cvox.Api.stop = function() {
    if (cvox.Api.isChromeVoxActive()) {
      if (implementation_) {
        implementation_.stop();
      } else {
        var message = {cmd:"stop"};
        channel_.port1.postMessage(JSON.stringify(message));
      }
    }
  };
  cvox.Api.playEarcon = function(earcon) {
    if (cvox.Api.isChromeVoxActive()) {
      if (implementation_) {
        implementation_.playEarcon(earcon);
      } else {
        var message = {cmd:"playEarcon", args:[earcon]};
        channel_.port1.postMessage(JSON.stringify(message));
      }
    }
  };
  cvox.Api.syncToNode = function(targetNode, speakNode) {
    if (cvox.Api.isChromeVoxActive() && targetNode) {
      if (implementation_) {
        implementation_.syncToNode(targetNode, speakNode);
      } else {
        var message = {cmd:"syncToNodeRef", args:[cvox.ApiUtils.makeNodeReference(targetNode), speakNode]};
        channel_.port1.postMessage(JSON.stringify(message));
      }
    }
  };
  cvox.Api.getCurrentNode = function(callback) {
    cvox.Api.isChromeVoxActive() && callback && (implementation_ ? callback(cvox.ChromeVox.navigationManager.getCurrentNode()) : callAsync_({cmd:"getCurrentNode"}, function(response) {
      callback(cvox.ApiUtils.getNodeFromRef(response.currentNode));
    }));
  };
  cvox.Api.setSpeechForNode = function(targetNode, nodeDescriptions) {
    cvox.Api.isChromeVoxActive() && targetNode && nodeDescriptions && targetNode.setAttribute("cvoxnodedesc", JSON.stringify(nodeDescriptions));
  };
  cvox.Api.click = function(targetElement, shiftKey) {
    if (cvox.Api.isChromeVoxActive() && targetElement) {
      if (implementation_) {
        cvox.DomUtil.clickElem(targetElement, shiftKey, !0);
      } else {
        var message = {cmd:"clickNodeRef", args:[cvox.ApiUtils.makeNodeReference(targetElement), shiftKey]};
        channel_.port1.postMessage(JSON.stringify(message));
      }
    }
  };
  cvox.Api.getBuild = function(callback) {
    cvox.Api.isChromeVoxActive() && callback && (implementation_ ? callback(cvox.BuildInfo.build) : callAsync_({cmd:"getBuild"}, function(response) {
      callback(response.build);
    }));
  };
  cvox.Api.getVersion = function(callback) {
    cvox.Api.isChromeVoxActive() && callback && (implementation_ ? callback(cvox.ChromeVox.version + "") : callAsync_({cmd:"getVersion"}, function(response) {
      callback(response.version);
    }));
  };
  cvox.Api.getCvoxModifierKeys = function(callback) {
    cvox.Api.isChromeVoxActive() && callback && (implementation_ ? callback(cvox.KeyUtil.cvoxModKeyCodes()) : callAsync_({cmd:"getCvoxModKeys"}, function(response) {
      callback(response.keyCodes);
    }));
  };
  cvox.Api.isKeyShortcut = function(keyEvent, callback) {
    if (callback) {
      if (cvox.Api.isChromeVoxActive()) {
        var KEY_IGNORE_LIST = [37, 39];
        if (!KEY_IGNORE_LIST.indexOf(keyEvent.keyCode) || keyEvent.altKey || keyEvent.shiftKey || keyEvent.ctrlKey || keyEvent.metaKey) {
          if (implementation_) {
            var keySeq = cvox.KeyUtil.keyEventToKeySequence(keyEvent);
            callback(cvox.ChromeVoxKbHandler.handlerKeyMap.hasKey(keySeq));
          } else {
            var strippedKeyEvent = {}, BLACK_LIST_PROPS = ["target", "srcElement", "currentTarget", "view"], prop;
            for (prop in keyEvent) {
              -1 === BLACK_LIST_PROPS.indexOf(prop) && (strippedKeyEvent[prop] = keyEvent[prop]);
            }
            var message = {cmd:"isKeyShortcut", args:[strippedKeyEvent]};
            callAsync_(message, function(response) {
              callback(response.isHandled);
            });
          }
        } else {
          callback(!1);
        }
      } else {
        callback(!1);
      }
    }
  };
  cvox.Api.setKeyEcho = function(keyEcho) {
    if (cvox.Api.isChromeVoxActive()) {
      if (implementation_) {
        implementation_.setKeyEcho(keyEcho);
      } else {
        var message = {cmd:"setKeyEcho", args:[keyEcho]};
        channel_.port1.postMessage(JSON.stringify(message));
      }
    }
  };
  cvox.Api.Math = function() {
  };
  cvox.Api.Math.defineRule = function(name, dynamic, action, prec, constraints) {
    if (cvox.Api.isChromeVoxActive()) {
      var constraintList = Array.prototype.slice.call(arguments, 4), args = [name, dynamic, action, prec].concat(constraintList);
      if (implementation_) {
        implementation_.Math.defineRule.apply(implementation_.Math, args);
      } else {
        var msg = {cmd:"Math.defineRule", args:args};
        channel_.port1.postMessage(JSON.stringify(msg));
      }
    }
  };
  cvox.Api.internalEnable();
  cvox.NodeDescription = function(context, text, userValue, annotation) {
    this.context = context ? context : "";
    this.text = text ? text : "";
    this.userValue = userValue ? userValue : "";
    this.annotation = annotation ? annotation : "";
  };
})();
cvox.InitialSpeech = {};
window.INJECTED_AFTER_LOAD || (window.INJECTED_AFTER_LOAD = !1);
cvox.InitialSpeech.speak = function() {
  var disableSpeak = window.INJECTED_AFTER_LOAD;
  if (!cvox.ChromeVox.isActive || document.webkitHidden) {
    disableSpeak = !0;
  }
  if (window.top == window) {
    var title = document.title, titleElement = document.querySelector("head > title");
    titleElement && "true" == titleElement.getAttribute("aria-hidden") && (title = null);
    title && !disableSpeak && cvox.ChromeVox.tts.speak(title, cvox.AbstractTts.QUEUE_MODE_FLUSH);
  }
  cvox.LiveRegions.init(new Date, cvox.AbstractTts.QUEUE_MODE_QUEUE, disableSpeak);
  document.hasFocus() && document.activeElement == document.body && cvox.ChromeVox.navigationManager.syncToBeginning();
  if (cvox.ChromeVox.position[document.location.href]) {
    var pos = cvox.ChromeVox.position[document.location.href];
    cvox.ChromeVox.navigationManager.updateSelToArbitraryNode(document.elementFromPoint(pos.x, pos.y));
  }
  document.hasFocus() && (disableSpeak || cvox.ChromeVoxEventSuspender.withSuspendedEvents(function() {
    cvox.ChromeVox.navigationManager.finishNavCommand("", !0, cvox.AbstractTts.QUEUE_MODE_QUEUE);
  })());
};
cvox.AndroidKeyMap = function() {
};
cvox.AndroidKeyMap.getStringifiedKeyMap = function() {
  return cvox.ChromeVoxJSON.stringify({'{"cvoxModifier":false,"stickyMode":false,"prefixKey":false,"keys":{"ctrlKey":[true],"searchKeyHeld":[false],"altKey":[false],"altGraphKey":[false],"shiftKey":[false],"metaKey":[false],"keyCode":[17]}}':"stopSpeech", '{"cvoxModifier":false,"stickyMode":false,"prefixKey":false,"keys":{"ctrlKey":[false],"searchKeyHeld":[false],"altKey":[false],"altGraphKey":[false],"shiftKey":[false],"metaKey":[false],"keyCode":[9]}}':"handleTab", '{"cvoxModifier":false,"stickyMode":false,"prefixKey":false,"keys":{"ctrlKey":[false],"searchKeyHeld":[false],"altKey":[false],"altGraphKey":[false],"shiftKey":[true],"metaKey":[false],"keyCode":[9]}}':"handleTabPrev", 
  '{"cvoxModifier":false,"stickyMode":false,"prefixKey":false,"keys":{"ctrlKey":[false],"searchKeyHeld":[false],"altKey":[false],"altGraphKey":[false],"shiftKey":[false],"metaKey":[false],"keyCode":[38]}}':"backward", '{"cvoxModifier":false,"stickyMode":false,"prefixKey":false,"keys":{"ctrlKey":[false],"searchKeyHeld":[false],"altKey":[false],"altGraphKey":[false],"shiftKey":[false],"metaKey":[false],"keyCode":[40]}}':"forward", '{"cvoxModifier":false,"stickyMode":false,"prefixKey":false,"keys":{"ctrlKey":[false],"searchKeyHeld":[false],"altKey":[false],"altGraphKey":[false],"shiftKey":[false],"metaKey":[false],"keyCode":[37]}}':"previousGranularity", 
  '{"cvoxModifier":false,"stickyMode":false,"prefixKey":false,"keys":{"ctrlKey":[false],"searchKeyHeld":[false],"altKey":[false],"altGraphKey":[false],"shiftKey":[false],"metaKey":[false],"keyCode":[39]}}':"nextGranularity", '{"cvoxModifier":false,"stickyMode":false,"prefixKey":false,"keys":{"ctrlKey":[false],"searchKeyHeld":[false],"altKey":[false],"altGraphKey":[false],"shiftKey":[false],"metaKey":[false],"keyCode":[13]}}':"forceClickOnCurrentItem", '{"cvoxModifier":false,"stickyMode":false,"prefixKey":false,"keys":{"ctrlKey":[false],"searchKeyHeld":[false],"altKey":[true],"altGraphKey":[false],"shiftKey":[false],"metaKey":[false],"keyCode":[40]}}':"readFromHere", 
  '{"cvoxModifier":false,"stickyMode":false,"prefixKey":false,"keys":{"ctrlKey":[true],"searchKeyHeld":[false],"altKey":[true],"altGraphKey":[false],"shiftKey":[false],"metaKey":[false],"keyCode":[85]}}':"readLinkURL", '{"cvoxModifier":false,"stickyMode":false,"prefixKey":false,"keys":{"ctrlKey":[true],"searchKeyHeld":[false],"altKey":[true],"altGraphKey":[false],"shiftKey":[false],"metaKey":[false],"keyCode":[75]}}':"fullyDescribe", '{"cvoxModifier":false,"stickyMode":false,"prefixKey":false,"keys":{"ctrlKey":[true],"searchKeyHeld":[false],"altKey":[true],"altGraphKey":[false],"shiftKey":[false],"metaKey":[false],"keyCode":[189]}}':"decreaseTtsPitch", 
  '{"cvoxModifier":false,"stickyMode":false,"prefixKey":false,"keys":{"ctrlKey":[true],"searchKeyHeld":[false],"altKey":[true],"altGraphKey":[false],"shiftKey":[false],"metaKey":[false],"keyCode":[187]}}':"increaseTtsPitch", '{"cvoxModifier":false,"stickyMode":false,"prefixKey":false,"keys":{"ctrlKey":[true],"searchKeyHeld":[false],"altKey":[true],"altGraphKey":[false],"shiftKey":[false],"metaKey":[false],"keyCode":[219]}}':"decreaseTtsRate", '{"cvoxModifier":false,"stickyMode":false,"prefixKey":false,"keys":{"ctrlKey":[true],"searchKeyHeld":[false],"altKey":[true],"altGraphKey":[false],"shiftKey":[false],"metaKey":[false],"keyCode":[221]}}':"increaseTtsRate", 
  '{"cvoxModifier":false,"stickyMode":false,"prefixKey":false,"keys":{"ctrlKey":[true],"searchKeyHeld":[false],"altKey":[true],"altGraphKey":[false],"shiftKey":[false],"metaKey":[false],"keyCode":[81]}}':"cyclePunctuationLevel", '{"cvoxModifier":false,"stickyMode":false,"prefixKey":false,"keys":{"ctrlKey":[true],"searchKeyHeld":[false],"altKey":[true],"altGraphKey":[false],"shiftKey":[false],"metaKey":[false],"keyCode":[49]}}':"nextHeading1", '{"cvoxModifier":false,"stickyMode":false,"prefixKey":false,"keys":{"ctrlKey":[true],"searchKeyHeld":[false],"altKey":[true],"altGraphKey":[false],"shiftKey":[true],"metaKey":[false],"keyCode":[49]}}':"previousHeading1", 
  '{"cvoxModifier":false,"stickyMode":false,"prefixKey":false,"keys":{"ctrlKey":[true],"searchKeyHeld":[false],"altKey":[true],"altGraphKey":[false],"shiftKey":[false],"metaKey":[false],"keyCode":[50]}}':"nextHeading2", '{"cvoxModifier":false,"stickyMode":false,"prefixKey":false,"keys":{"ctrlKey":[true],"searchKeyHeld":[false],"altKey":[true],"altGraphKey":[false],"shiftKey":[true],"metaKey":[false],"keyCode":[50]}}':"previousHeading2", '{"cvoxModifier":false,"stickyMode":false,"prefixKey":false,"keys":{"ctrlKey":[true],"searchKeyHeld":[false],"altKey":[true],"altGraphKey":[false],"shiftKey":[false],"metaKey":[false],"keyCode":[51]}}':"nextHeading3", 
  '{"cvoxModifier":false,"stickyMode":false,"prefixKey":false,"keys":{"ctrlKey":[true],"searchKeyHeld":[false],"altKey":[true],"altGraphKey":[false],"shiftKey":[true],"metaKey":[false],"keyCode":[51]}}':"previousHeading3", '{"cvoxModifier":false,"stickyMode":false,"prefixKey":false,"keys":{"ctrlKey":[true],"searchKeyHeld":[false],"altKey":[true],"altGraphKey":[false],"shiftKey":[false],"metaKey":[false],"keyCode":[52]}}':"nextHeading4", '{"cvoxModifier":false,"stickyMode":false,"prefixKey":false,"keys":{"ctrlKey":[true],"searchKeyHeld":[false],"altKey":[true],"altGraphKey":[false],"shiftKey":[true],"metaKey":[false],"keyCode":[52]}}':"previousHeading4", 
  '{"cvoxModifier":false,"stickyMode":false,"prefixKey":false,"keys":{"ctrlKey":[true],"searchKeyHeld":[false],"altKey":[true],"altGraphKey":[false],"shiftKey":[false],"metaKey":[false],"keyCode":[53]}}':"nextHeading5", '{"cvoxModifier":false,"stickyMode":false,"prefixKey":false,"keys":{"ctrlKey":[true],"searchKeyHeld":[false],"altKey":[true],"altGraphKey":[false],"shiftKey":[true],"metaKey":[false],"keyCode":[53]}}':"previousHeading5", '{"cvoxModifier":false,"stickyMode":false,"prefixKey":false,"keys":{"ctrlKey":[true],"searchKeyHeld":[false],"altKey":[true],"altGraphKey":[false],"shiftKey":[false],"metaKey":[false],"keyCode":[54]}}':"nextHeading6", 
  '{"cvoxModifier":false,"stickyMode":false,"prefixKey":false,"keys":{"ctrlKey":[true],"searchKeyHeld":[false],"altKey":[true],"altGraphKey":[false],"shiftKey":[true],"metaKey":[false],"keyCode":[54]}}':"previousHeading6", '{"cvoxModifier":false,"stickyMode":false,"prefixKey":false,"keys":{"ctrlKey":[true],"searchKeyHeld":[false],"altKey":[true],"altGraphKey":[false],"shiftKey":[false],"metaKey":[false],"keyCode":[67]}}':"nextComboBox", '{"cvoxModifier":false,"stickyMode":false,"prefixKey":false,"keys":{"ctrlKey":[true],"searchKeyHeld":[false],"altKey":[true],"altGraphKey":[false],"shiftKey":[true],"metaKey":[false],"keyCode":[67]}}':"previousComboBox", 
  '{"cvoxModifier":false,"stickyMode":false,"prefixKey":false,"keys":{"ctrlKey":[true],"searchKeyHeld":[false],"altKey":[true],"altGraphKey":[false],"shiftKey":[false],"metaKey":[false],"keyCode":[69]}}':"nextEditText", '{"cvoxModifier":false,"stickyMode":false,"prefixKey":false,"keys":{"ctrlKey":[true],"searchKeyHeld":[false],"altKey":[true],"altGraphKey":[false],"shiftKey":[true],"metaKey":[false],"keyCode":[69]}}':"previousEditText", '{"cvoxModifier":false,"stickyMode":false,"prefixKey":false,"keys":{"ctrlKey":[true],"searchKeyHeld":[false],"altKey":[true],"altGraphKey":[false],"shiftKey":[false],"metaKey":[false],"keyCode":[70]}}':"nextFormField", 
  '{"cvoxModifier":false,"stickyMode":false,"prefixKey":false,"keys":{"ctrlKey":[true],"searchKeyHeld":[false],"altKey":[true],"altGraphKey":[false],"shiftKey":[true],"metaKey":[false],"keyCode":[70]}}':"previousFormField", '{"cvoxModifier":false,"stickyMode":false,"prefixKey":false,"keys":{"ctrlKey":[true],"searchKeyHeld":[false],"altKey":[true],"altGraphKey":[false],"shiftKey":[false],"metaKey":[false],"keyCode":[71]}}':"nextGraphic", '{"cvoxModifier":false,"stickyMode":false,"prefixKey":false,"keys":{"ctrlKey":[true],"searchKeyHeld":[false],"altKey":[true],"altGraphKey":[false],"shiftKey":[true],"metaKey":[false],"keyCode":[71]}}':"previousGraphic", 
  '{"cvoxModifier":false,"stickyMode":false,"prefixKey":false,"keys":{"ctrlKey":[true],"searchKeyHeld":[false],"altKey":[true],"altGraphKey":[false],"shiftKey":[false],"metaKey":[false],"keyCode":[72]}}':"nextHeading", '{"cvoxModifier":false,"stickyMode":false,"prefixKey":false,"keys":{"ctrlKey":[true],"searchKeyHeld":[false],"altKey":[true],"altGraphKey":[false],"shiftKey":[true],"metaKey":[false],"keyCode":[72]}}':"previousHeading", '{"cvoxModifier":false,"stickyMode":false,"prefixKey":false,"keys":{"ctrlKey":[true],"searchKeyHeld":[false],"altKey":[true],"altGraphKey":[false],"shiftKey":[false],"metaKey":[false],"keyCode":[73]}}':"nextListItem", 
  '{"cvoxModifier":false,"stickyMode":false,"prefixKey":false,"keys":{"ctrlKey":[true],"searchKeyHeld":[false],"altKey":[true],"altGraphKey":[false],"shiftKey":[true],"metaKey":[false],"keyCode":[73]}}':"previousListItem", '{"cvoxModifier":false,"stickyMode":false,"prefixKey":false,"keys":{"ctrlKey":[true],"searchKeyHeld":[false],"altKey":[true],"altGraphKey":[false],"shiftKey":[false],"metaKey":[false],"keyCode":[76]}}':"nextLink", '{"cvoxModifier":false,"stickyMode":false,"prefixKey":false,"keys":{"ctrlKey":[true],"searchKeyHeld":[false],"altKey":[true],"altGraphKey":[false],"shiftKey":[true],"metaKey":[false],"keyCode":[76]}}':"previousLink", 
  '{"cvoxModifier":false,"stickyMode":false,"prefixKey":false,"keys":{"ctrlKey":[true],"searchKeyHeld":[false],"altKey":[true],"altGraphKey":[false],"shiftKey":[false],"metaKey":[false],"keyCode":[79]}}':"nextList", '{"cvoxModifier":false,"stickyMode":false,"prefixKey":false,"keys":{"ctrlKey":[true],"searchKeyHeld":[false],"altKey":[true],"altGraphKey":[false],"shiftKey":[true],"metaKey":[false],"keyCode":[79]}}':"previousList", '{"cvoxModifier":false,"stickyMode":false,"prefixKey":false,"keys":{"ctrlKey":[true],"searchKeyHeld":[false],"altKey":[true],"altGraphKey":[false],"shiftKey":[false],"metaKey":[false],"keyCode":[82]}}':"nextRadio", 
  '{"cvoxModifier":false,"stickyMode":false,"prefixKey":false,"keys":{"ctrlKey":[true],"searchKeyHeld":[false],"altKey":[true],"altGraphKey":[false],"shiftKey":[true],"metaKey":[false],"keyCode":[82]}}':"previousRadio", '{"cvoxModifier":false,"stickyMode":false,"prefixKey":false,"keys":{"ctrlKey":[true],"searchKeyHeld":[false],"altKey":[true],"altGraphKey":[false],"shiftKey":[false],"metaKey":[false],"keyCode":[84]}}':"nextTable", '{"cvoxModifier":false,"stickyMode":false,"prefixKey":false,"keys":{"ctrlKey":[true],"searchKeyHeld":[false],"altKey":[true],"altGraphKey":[false],"shiftKey":[true],"metaKey":[false],"keyCode":[84]}}':"previousTable", 
  '{"cvoxModifier":false,"stickyMode":false,"prefixKey":false,"keys":{"ctrlKey":[true],"searchKeyHeld":[false],"altKey":[true],"altGraphKey":[false],"shiftKey":[false],"metaKey":[false],"keyCode":[66]}}':"nextButton", '{"cvoxModifier":false,"stickyMode":false,"prefixKey":false,"keys":{"ctrlKey":[true],"searchKeyHeld":[false],"altKey":[true],"altGraphKey":[false],"shiftKey":[true],"metaKey":[false],"keyCode":[66]}}':"previousButton", '{"cvoxModifier":false,"stickyMode":false,"prefixKey":false,"keys":{"ctrlKey":[true],"searchKeyHeld":[false],"altKey":[true],"altGraphKey":[false],"shiftKey":[false],"metaKey":[false],"keyCode":[88]}}':"nextCheckbox", 
  '{"cvoxModifier":false,"stickyMode":false,"prefixKey":false,"keys":{"ctrlKey":[true],"searchKeyHeld":[false],"altKey":[true],"altGraphKey":[false],"shiftKey":[true],"metaKey":[false],"keyCode":[88]}}':"previousCheckbox", '{"cvoxModifier":false,"stickyMode":false,"prefixKey":false,"keys":{"ctrlKey":[true],"searchKeyHeld":[false],"altKey":[true],"altGraphKey":[false],"shiftKey":[false],"metaKey":[false],"keyCode":[186]}}':"nextLandmark", '{"cvoxModifier":false,"stickyMode":false,"prefixKey":false,"keys":{"ctrlKey":[true],"searchKeyHeld":[false],"altKey":[true],"altGraphKey":[false],"shiftKey":[true],"metaKey":[false],"keyCode":[186]}}':"previousLandmark"});
};
cvox.MathSimpleStore = function() {
  cvox.MathStore.call(this);
};
goog.inherits(cvox.MathSimpleStore, cvox.MathStore);
cvox.MathSimpleStore.prototype.defineRulesFromMappings = function(name, str, mapping) {
  for (var domain in mapping) {
    for (var style in mapping[domain]) {
      var content = mapping[domain][style], cstr = 'self::text() = "' + str + '"';
      this.defineRule(name, domain + "." + style, '[t] "' + content + '"', "self::text()", cstr);
    }
  }
};
cvox.MathCompoundStore = function() {
  this.subStores_ = {};
};
goog.addSingletonGetter(cvox.MathCompoundStore);
cvox.MathCompoundStore.prototype.defineRules = function(name, str, mappings) {
  var store = new cvox.MathSimpleStore;
  store.defineRulesFromMappings(name, str, mappings);
  this.subStores_[str] = store;
};
cvox.MathCompoundStore.prototype.addSymbolRules = function(json) {
  var key = cvox.MathSimpleStore.parseUnicode_(json.key);
  this.defineRules(json.key, key, json.mappings);
};
cvox.MathCompoundStore.prototype.addFunctionRules = function(json) {
  for (var names = json.names, mappings = json.mappings, j = 0, name;name = names[j];j++) {
    this.defineRules(name, name, mappings);
  }
};
cvox.MathCompoundStore.prototype.lookupRule = function(node, dynamic) {
  var store = this.subStores_[node.textContent];
  if (store) {
    return store.lookupRule(node, dynamic);
  }
};
cvox.MathCompoundStore.prototype.lookupString = function(text, dynamic) {
  var textNode = document.createTextNode(text), rule = this.lookupRule(textNode, dynamic);
  return rule ? rule.action.components.map(function(comp) {
    return comp.content.slice(1, -1);
  }).join(" ") : "";
};
cvox.MathCompoundStore.prototype.getDynamicConstraintValues = function() {
  var newCstr = {}, store;
  for (store in this.subStores_) {
    var cstr = this.subStores_[store].getDynamicConstraintValues(), key;
    for (key in cstr) {
      var set = newCstr[key];
      newCstr[key] = set ? cvox.MathUtil.union(set, cstr[key]) : cstr[key];
    }
  }
  return newCstr;
};
cvox.MathSimpleStore.parseUnicode_ = function(number) {
  var keyValue = parseInt(number, 16);
  if (65536 > keyValue) {
    return String.fromCharCode(keyValue);
  }
  var keyValue = keyValue - 65536, hiSurrogate = (keyValue >> 10) + 55296, lowSurrogate = (keyValue & 1023) + 56320;
  return String.fromCharCode(hiSurrogate, lowSurrogate);
};
cvox.AndroidMathMap = function() {
  this.store_ = cvox.MathCompoundStore.getInstance();
  cvox.AndroidMathMap.FUNCTION_MAPPINGS_.forEach(goog.bind(this.store_.addFunctionRules, this.store_));
  cvox.AndroidMathMap.SYMBOL_MAPPINGS_.forEach(goog.bind(this.store_.addSymbolRules, this.store_));
  this.store_.getDynamicConstraintValues();
};
cvox.AndroidMathMap.prototype.evaluate = function(text, domain, style) {
  var result = "", dynamicCstr = cvox.MathStore.createDynamicConstraint(domain, style), result = this.store_.lookupString(text, dynamicCstr);
  return new cvox.NavDescription({text:result ? result : text});
};
cvox.AndroidMathMap.SYMBOL_MAPPINGS_ = [{category:"Po", mappings:{"default":{"default":"exclamation mark"}}, key:"0021"}, {category:"Po", mappings:{"default":{"default":"quotation mark"}}, key:"0022"}, {category:"Po", mappings:{"default":{"default":"number sign", alternative:"hash", "short":"number"}}, key:"0023"}, {category:"Sc", mappings:{"default":{"default":"dollar sign", "short":"dollar"}}, key:"0024"}, {category:"Po", mappings:{"default":{"default":"percent sign", "short":"percent"}}, key:"0025"}, 
{category:"Po", mappings:{"default":{"default":"ampersand"}}, key:"0026"}, {category:"Po", mappings:{"default":{"default":"apostrophe", alternative:"apostrophe quote"}}, key:"0027"}, {category:"Po", mappings:{"default":{"default":"asterisk"}}, key:"002A"}, {category:"Sm", mappings:{"default":{"default":"plus sign", "short":"plus"}}, key:"002B"}, {category:"Po", mappings:{"default":{"default":"comma"}}, key:"002C"}, {category:"Pd", mappings:{"default":{"default":"hyphen minus", "short":"minus"}}, 
key:"002D"}, {category:"Po", mappings:{"default":{"default":"full stop", alternative:"period"}}, key:"002E"}, {category:"Po", mappings:{"default":{"default":"solidus", alternative:"slash"}}, key:"002F"}, {category:"Po", mappings:{"default":{"default":"colon"}}, key:"003A"}, {category:"Po", mappings:{"default":{"default":"semicolon"}}, key:"003B"}, {category:"Sm", mappings:{"default":{"default":"less than sign", "short":"less than"}}, key:"003C"}, {category:"Sm", mappings:{"default":{"default":"equals sign", 
"short":"equals"}}, key:"003D"}, {category:"Sm", mappings:{"default":{"default":"greater than sign", "short":"greater than"}}, key:"003E"}, {category:"Po", mappings:{"default":{"default":"question mark"}}, key:"003F"}, {category:"Po", mappings:{"default":{"default":"commercial at", "short":"at"}}, key:"0040"}, {category:"Po", mappings:{"default":{"default":"reverse solidus", alternative:"backslash"}}, key:"005C"}, {category:"Sk", mappings:{"default":{"default":"circumflex accent", alternative:"spacing circumflex", 
"short":"hat"}}, key:"005E"}, {category:"Pc", mappings:{"default":{"default":"low line", alternative:"spacing underscore"}}, key:"005F"}, {category:"Sk", mappings:{"default":{"default":"grave accent", alternative:"spacing grave", "short":"grave"}}, key:"0060"}, {category:"Sm", mappings:{"default":{"default":"vertical line", alternative:"vertical bar"}}, key:"007C"}, {category:"Sm", mappings:{"default":{"default":"tilde"}}, key:"007E"}, {category:"Po", mappings:{"default":{"default":"inverted exclamation mark"}}, 
key:"00A1"}, {category:"Sc", mappings:{"default":{"default":"cent sign", "short":"cent"}}, key:"00A2"}, {category:"Sc", mappings:{"default":{"default":"pound sign", "short":"pound"}}, key:"00A3"}, {category:"Sc", mappings:{"default":{"default":"currency sign", "short":"currency"}}, key:"00A4"}, {category:"Sc", mappings:{"default":{"default":"yen sign", "short":"yen"}}, key:"00A5"}, {category:"So", mappings:{"default":{"default":"broken bar", alternative:"broken vertical bar"}}, key:"00A6"}, {category:"Po", 
mappings:{"default":{"default":"section sign", "short":"section"}}, key:"00A7"}, {category:"Sk", mappings:{"default":{"default":"diaeresis", alternative:"spacing diaeresis", "short":"double dot"}}, key:"00A8"}, {category:"So", mappings:{"default":{"default":"copyright sign", "short":"copyright"}}, key:"00A9"}, {category:"Lo", mappings:{"default":{"default":"feminine ordinal indicator"}}, key:"00AA"}, {category:"Pi", mappings:{"default":{"default":"left pointing double angle quotation mark", alternative:"left pointing guillemet"}}, 
key:"00AB"}, {category:"Sm", mappings:{"default":{"default":"not sign", "short":"not"}}, key:"00AC"}, {category:"So", mappings:{"default":{"default":"registered sign", alternative:"registered trade mark sign", "short":"registered"}}, key:"00AE"}, {category:"Sk", mappings:{"default":{"default":"macron", alternative:"spacing macron"}}, key:"00AF"}, {category:"So", mappings:{"default":{"default":"degree sign", "short":"degree"}}, key:"00B0"}, {category:"Sm", mappings:{"default":{"default":"plus minus sign", 
alternative:"plus or minus sign", "short":"plus minus"}}, key:"00B1"}, {category:"Sk", mappings:{"default":{"default":"acute accent", alternative:"spacing acute", "short":"acute"}}, key:"00B4"}, {category:"Ll", mappings:{"default":{"default":"micro sign", "short":"micro"}}, key:"00B5"}, {category:"Po", mappings:{"default":{"default":"pilcrow sign", alternative:"paragraph sign", "short":"pilcrow"}}, key:"00B6"}, {category:"Po", mappings:{"default":{"default":"middle dot"}}, key:"00B7"}, {category:"Sk", 
mappings:{"default":{"default":"cedilla", alternative:"spacing cedilla"}}, key:"00B8"}, {category:"Lo", mappings:{"default":{"default":"masculine ordinal indicator"}}, key:"00BA"}, {category:"Pf", mappings:{"default":{"default":"right pointing double angle quotation mark", alternative:"right pointing guillemet"}}, key:"00BB"}, {category:"Po", mappings:{"default":{"default":"inverted question mark"}}, key:"00BF"}, {category:"Sm", mappings:{"default":{"default":"multiplication sign", "short":"multiplication"}}, 
key:"00D7"}, {category:"Sm", mappings:{"default":{"default":"division sign", "short":"division"}}, key:"00F7"}, {category:"Sk", mappings:{"default":{"default":"breve", alternative:"spacing breve"}}, key:"02D8"}, {category:"Sk", mappings:{"default":{"default":"dot above", alternative:"spacing dot above"}}, key:"02D9"}, {category:"Sk", mappings:{"default":{"default":"ring above", alternative:"spacing ring above"}}, key:"02DA"}, {category:"Sk", mappings:{"default":{"default":"ogonek", alternative:"spacing ogonek"}}, 
key:"02DB"}, {category:"Sk", mappings:{"default":{"default":"small tilde", alternative:"spacing tilde"}}, key:"02DC"}, {category:"Sk", mappings:{"default":{"default":"double acute accent", alternative:"spacing double acute"}}, key:"02DD"}, {category:"Pd", mappings:{"default":{"default":"hyphen"}}, key:"2010"}, {category:"Pd", mappings:{"default":{"default":"non breaking hyphen"}}, key:"2011"}, {category:"Pd", mappings:{"default":{"default":"figure dash"}}, key:"2012"}, {category:"Pd", mappings:{"default":{"default":"en dash"}}, 
key:"2013"}, {category:"Pd", mappings:{"default":{"default":"em dash"}}, key:"2014"}, {category:"Pd", mappings:{"default":{"default":"horizontal bar", alternative:"quotation dash"}}, key:"2015"}, {category:"Po", mappings:{"default":{"default":"double vertical line", alternative:"double vertical bar"}}, key:"2016"}, {category:"Po", mappings:{"default":{"default":"double low line", alternative:"spacing double underscore"}}, key:"2017"}, {category:"Pi", mappings:{"default":{"default":"left single quotation mark", 
alternative:"single turned comma quotation mark"}}, key:"2018"}, {category:"Pf", mappings:{"default":{"default":"right single quotation mark", alternative:"single comma quotation mark"}}, key:"2019"}, {category:"Ps", mappings:{"default":{"default":"single low 9 quotation mark", alternative:"low single comma quotation mark"}}, key:"201A"}, {category:"Pi", mappings:{"default":{"default":"single high reversed 9 quotation mark", alternative:"single reversed comma quotation mark"}}, key:"201B"}, {category:"Pi", 
mappings:{"default":{"default":"left double quotation mark", alternative:"double turned comma quotation mark"}}, key:"201C"}, {category:"Pf", mappings:{"default":{"default":"right double quotation mark", alternative:"double comma quotation mark"}}, key:"201D"}, {category:"Ps", mappings:{"default":{"default":"double low 9 quotation mark", alternative:"low double comma quotation mark"}}, key:"201E"}, {category:"Pi", mappings:{"default":{"default":"double high reversed 9 quotation mark", alternative:"double reversed comma quotation mark"}}, 
key:"201F"}, {category:"Po", mappings:{"default":{"default":"dagger"}}, key:"2020"}, {category:"Po", mappings:{"default":{"default":"double dagger"}}, key:"2021"}, {category:"Po", mappings:{"default":{"default":"bullet"}}, key:"2022"}, {category:"Po", mappings:{"default":{"default":"triangular bullet"}}, key:"2023"}, {category:"Po", mappings:{"default":{"default":"one dot leader"}}, key:"2024"}, {category:"Po", mappings:{"default":{"default":"two dot leader"}}, key:"2025"}, {category:"Po", mappings:{"default":{"default":"horizontal ellipsis"}}, 
key:"2026"}, {category:"Po", mappings:{"default":{"default":"hyphenation point"}}, key:"2027"}, {category:"Po", mappings:{"default":{"default":"per mille sign", "short":"per mille"}}, key:"2030"}, {category:"Po", mappings:{"default":{"default":"per ten thousand sign", "short":"per ten thousand"}}, key:"2031"}, {category:"Po", mappings:{"default":{"default":"prime"}}, key:"2032"}, {category:"Po", mappings:{"default":{"default":"double prime"}}, key:"2033"}, {category:"Po", mappings:{"default":{"default":"triple prime"}}, 
key:"2034"}, {category:"Po", mappings:{"default":{"default":"reversed prime"}}, key:"2035"}, {category:"Po", mappings:{"default":{"default":"reversed double prime"}}, key:"2036"}, {category:"Po", mappings:{"default":{"default":"reversed triple prime"}}, key:"2037"}, {category:"Po", mappings:{"default":{"default":"caret"}}, key:"2038"}, {category:"Pi", mappings:{"default":{"default":"single left pointing angle quotation mark", alternative:"left pointing single guillemet"}}, key:"2039"}, {category:"Pf", 
mappings:{"default":{"default":"single right pointing angle quotation mark", alternative:"right pointing single guillemet"}}, key:"203A"}, {category:"Po", mappings:{"default":{"default":"reference mark"}}, key:"203B"}, {category:"Po", mappings:{"default":{"default":"double exclamation mark"}}, key:"203C"}, {category:"Po", mappings:{"default":{"default":"interrobang"}}, key:"203D"}, {category:"Po", mappings:{"default":{"default":"overline", alternative:"spacing overscore"}}, key:"203E"}, {category:"Pc", 
mappings:{"default":{"default":"undertie"}}, key:"203F"}, {category:"Pc", mappings:{"default":{"default":"character tie"}}, key:"2040"}, {category:"Po", mappings:{"default":{"default":"caret insertion point"}}, key:"2041"}, {category:"Po", mappings:{"default":{"default":"asterism"}}, key:"2042"}, {category:"Po", mappings:{"default":{"default":"hyphen bullet"}}, key:"2043"}, {category:"Sm", mappings:{"default":{"default":"fraction slash"}}, key:"2044"}, {category:"Po", mappings:{"default":{"default":"double question mark"}}, 
key:"2047"}, {category:"Po", mappings:{"default":{"default":"question exclamation mark"}}, key:"2048"}, {category:"Po", mappings:{"default":{"default":"exclamation question mark"}}, key:"2049"}, {category:"Po", mappings:{"default":{"default":"reversed pilcrow sign", "short":"reversed pilcrow"}}, key:"204B"}, {category:"Po", mappings:{"default":{"default":"black leftwards bullet"}}, key:"204C"}, {category:"Po", mappings:{"default":{"default":"black rightwards bullet"}}, key:"204D"}, {category:"Po", 
mappings:{"default":{"default":"low asterisk"}}, key:"204E"}, {category:"Po", mappings:{"default":{"default":"reversed semicolon"}}, key:"204F"}, {category:"Po", mappings:{"default":{"default":"close up"}}, key:"2050"}, {category:"Po", mappings:{"default":{"default":"two asterisks aligned vertically"}}, key:"2051"}, {category:"Sm", mappings:{"default":{"default":"commercial minus sign", "short":"commercial minus"}}, key:"2052"}, {category:"Po", mappings:{"default":{"default":"swung dash"}}, key:"2053"}, 
{category:"Pc", mappings:{"default":{"default":"inverted undertie"}}, key:"2054"}, {category:"Po", mappings:{"default":{"default":"flower punctuation mark"}}, key:"2055"}, {category:"Po", mappings:{"default":{"default":"three dot punctuation"}}, key:"2056"}, {category:"Po", mappings:{"default":{"default":"quadruple prime"}}, key:"2057"}, {category:"Po", mappings:{"default":{"default":"four dot punctuation"}}, key:"2058"}, {category:"Po", mappings:{"default":{"default":"five dot punctuation"}}, key:"2059"}, 
{category:"Po", mappings:{"default":{"default":"two dot punctuation"}}, key:"205A"}, {category:"Po", mappings:{"default":{"default":"four dot mark"}}, key:"205B"}, {category:"Po", mappings:{"default":{"default":"dotted cross"}}, key:"205C"}, {category:"Po", mappings:{"default":{"default":"tricolon"}}, key:"205D"}, {category:"Po", mappings:{"default":{"default":"vertical four dots"}}, key:"205E"}, {category:"Sm", mappings:{"default":{"default":"superscript plus sign", "short":"superscript plus"}}, 
key:"207A"}, {category:"Sm", mappings:{"default":{"default":"superscript minus", alternative:"superscript hyphen minus"}}, key:"207B"}, {category:"Sm", mappings:{"default":{"default":"superscript equals sign", "short":"superscript equals"}}, key:"207C"}, {category:"Ps", mappings:{"default":{"default":"superscript left parenthesis", alternative:"superscript opening parenthesis"}}, key:"207D"}, {category:"Pe", mappings:{"default":{"default":"superscript right parenthesis", alternative:"superscript closing parenthesis"}}, 
key:"207E"}, {category:"Sm", mappings:{"default":{"default":"subscript plus sign", "short":"subscript plus"}}, key:"208A"}, {category:"Sm", mappings:{"default":{"default":"subscript minus", alternative:"subscript hyphen minus"}}, key:"208B"}, {category:"Sm", mappings:{"default":{"default":"subscript equals sign", "short":"subscript equals"}}, key:"208C"}, {category:"Ps", mappings:{"default":{"default":"subscript left parenthesis", alternative:"subscript opening parenthesis"}}, key:"208D"}, {category:"Pe", 
mappings:{"default":{"default":"subscript right parenthesis", alternative:"subscript closing parenthesis"}}, key:"208E"}, {category:"So", mappings:{"default":{"default":"property line"}}, key:"214A"}, {category:"Sm", mappings:{"default":{"default":"turned ampersand"}}, key:"214B"}, {category:"So", mappings:{"default":{"default":"per sign", "short":"per"}}, key:"214C"}, {category:"So", mappings:{"default":{"default":"aktieselskab"}}, key:"214D"}, {category:"Ll", mappings:{"default":{"default":"turned small f"}}, 
key:"214E"}, {category:"Sm", mappings:{"default":{"default":"for all"}}, key:"2200"}, {category:"Sm", mappings:{"default":{"default":"complement"}}, key:"2201"}, {category:"Sm", mappings:{"default":{"default":"partial differential"}}, key:"2202"}, {category:"Sm", mappings:{"default":{"default":"there exists"}}, key:"2203"}, {category:"Sm", mappings:{"default":{"default":"there does not exist"}}, key:"2204"}, {category:"Sm", mappings:{"default":{"default":"empty set"}}, key:"2205"}, {category:"Sm", 
mappings:{"default":{"default":"increment"}}, key:"2206"}, {category:"Sm", mappings:{"default":{"default":"nabla"}}, key:"2207"}, {category:"Sm", mappings:{"default":{"default":"element of"}}, key:"2208"}, {category:"Sm", mappings:{"default":{"default":"not an element of"}}, key:"2209"}, {category:"Sm", mappings:{"default":{"default":"small element of"}}, key:"220A"}, {category:"Sm", mappings:{"default":{"default":"contains as member"}}, key:"220B"}, {category:"Sm", mappings:{"default":{"default":"does not contain as member"}}, 
key:"220C"}, {category:"Sm", mappings:{"default":{"default":"small contains as member"}}, key:"220D"}, {category:"Sm", mappings:{"default":{"default":"end of proof"}}, key:"220E"}, {category:"Sm", mappings:{"default":{"default":"n ary product"}}, key:"220F"}, {category:"Sm", mappings:{"default":{"default":"n ary coproduct"}}, key:"2210"}, {category:"Sm", mappings:{"default":{"default":"n ary summation"}}, key:"2211"}, {category:"Sm", mappings:{"default":{"default":"minus sign", "short":"minus"}}, 
key:"2212"}, {category:"Sm", mappings:{"default":{"default":"minus or plus sign", "short":"minus or plus"}}, key:"2213"}, {category:"Sm", mappings:{"default":{"default":"dot plus"}}, key:"2214"}, {category:"Sm", mappings:{"default":{"default":"division slash"}}, key:"2215"}, {category:"Sm", mappings:{"default":{"default":"set minus"}}, key:"2216"}, {category:"Sm", mappings:{"default":{"default":"asterisk operator"}}, key:"2217"}, {category:"Sm", mappings:{"default":{"default":"ring operator"}}, key:"2218"}, 
{category:"Sm", mappings:{"default":{"default":"bullet operator"}}, key:"2219"}, {category:"Sm", mappings:{"default":{"default":"square root"}}, key:"221A"}, {category:"Sm", mappings:{"default":{"default":"cube root"}}, key:"221B"}, {category:"Sm", mappings:{"default":{"default":"fourth root"}}, key:"221C"}, {category:"Sm", mappings:{"default":{"default":"proportional to"}}, key:"221D"}, {category:"Sm", mappings:{"default":{"default":"infinity"}}, key:"221E"}, {category:"Sm", mappings:{"default":{"default":"right angle"}}, 
key:"221F"}, {category:"Sm", mappings:{"default":{"default":"angle"}}, key:"2220"}, {category:"Sm", mappings:{"default":{"default":"measured angle"}}, key:"2221"}, {category:"Sm", mappings:{"default":{"default":"spherical angle"}}, key:"2222"}, {category:"Sm", mappings:{"default":{"default":"divides", "short":"bar"}}, key:"2223"}, {category:"Sm", mappings:{"default":{"default":"does not divide"}}, key:"2224"}, {category:"Sm", mappings:{"default":{"default":"parallel to"}}, key:"2225"}, {category:"Sm", 
mappings:{"default":{"default":"not parallel to"}}, key:"2226"}, {category:"Sm", mappings:{"default":{"default":"logical and"}}, key:"2227"}, {category:"Sm", mappings:{"default":{"default":"logical or"}}, key:"2228"}, {category:"Sm", mappings:{"default":{"default":"intersection"}}, key:"2229"}, {category:"Sm", mappings:{"default":{"default":"union"}}, key:"222A"}, {category:"Sm", mappings:{"default":{"default":"integral"}}, key:"222B"}, {category:"Sm", mappings:{"default":{"default":"double integral"}}, 
key:"222C"}, {category:"Sm", mappings:{"default":{"default":"triple integral"}}, key:"222D"}, {category:"Sm", mappings:{"default":{"default":"contour integral"}}, key:"222E"}, {category:"Sm", mappings:{"default":{"default":"surface integral"}}, key:"222F"}, {category:"Sm", mappings:{"default":{"default":"volume integral"}}, key:"2230"}, {category:"Sm", mappings:{"default":{"default":"clockwise integral"}}, key:"2231"}, {category:"Sm", mappings:{"default":{"default":"clockwise contour integral"}}, 
key:"2232"}, {category:"Sm", mappings:{"default":{"default":"anticlockwise contour integral"}}, key:"2233"}, {category:"Sm", mappings:{"default":{"default":"therefore"}}, key:"2234"}, {category:"Sm", mappings:{"default":{"default":"because"}}, key:"2235"}, {category:"Sm", mappings:{"default":{"default":"ratio"}}, key:"2236"}, {category:"Sm", mappings:{"default":{"default":"proportion"}}, key:"2237"}, {category:"Sm", mappings:{"default":{"default":"dot minus"}}, key:"2238"}, {category:"Sm", mappings:{"default":{"default":"excess"}}, 
key:"2239"}, {category:"Sm", mappings:{"default":{"default":"geometric proportion"}}, key:"223A"}, {category:"Sm", mappings:{"default":{"default":"homothetic"}}, key:"223B"}, {category:"Sm", mappings:{"default":{"default":"tilde operator"}}, key:"223C"}, {category:"Sm", mappings:{"default":{"default":"reversed tilde"}}, key:"223D"}, {category:"Sm", mappings:{"default":{"default":"inverted lazy s"}}, key:"223E"}, {category:"Sm", mappings:{"default":{"default":"sine wave"}}, key:"223F"}, {category:"Sm", 
mappings:{"default":{"default":"wreath product"}}, key:"2240"}, {category:"Sm", mappings:{"default":{"default":"not tilde"}}, key:"2241"}, {category:"Sm", mappings:{"default":{"default":"minus tilde"}}, key:"2242"}, {category:"Sm", mappings:{"default":{"default":"asymptotically equal to"}}, key:"2243"}, {category:"Sm", mappings:{"default":{"default":"not asymptotically equal to"}}, key:"2244"}, {category:"Sm", mappings:{"default":{"default":"approximately equal to"}}, key:"2245"}, {category:"Sm", 
mappings:{"default":{"default":"approximately but not actually equal to"}}, key:"2246"}, {category:"Sm", mappings:{"default":{"default":"neither approximately nor actually equal to"}}, key:"2247"}, {category:"Sm", mappings:{"default":{"default":"almost equal to"}}, key:"2248"}, {category:"Sm", mappings:{"default":{"default":"not almost equal to"}}, key:"2249"}, {category:"Sm", mappings:{"default":{"default":"almost equal or equal to"}}, key:"224A"}, {category:"Sm", mappings:{"default":{"default":"triple tilde"}}, 
key:"224B"}, {category:"Sm", mappings:{"default":{"default":"all equal to"}}, key:"224C"}, {category:"Sm", mappings:{"default":{"default":"equivalent to"}}, key:"224D"}, {category:"Sm", mappings:{"default":{"default":"geometrically equivalent to"}}, key:"224E"}, {category:"Sm", mappings:{"default":{"default":"difference between"}}, key:"224F"}, {category:"Sm", mappings:{"default":{"default":"approaches the limit"}}, key:"2250"}, {category:"Sm", mappings:{"default":{"default":"geometrically equal to"}}, 
key:"2251"}, {category:"Sm", mappings:{"default":{"default":"approximately equal to or the image of"}}, key:"2252"}, {category:"Sm", mappings:{"default":{"default":"image of or approximately equal to"}}, key:"2253"}, {category:"Sm", mappings:{"default":{"default":"colon equals", alternative:"colon equal"}}, key:"2254"}, {category:"Sm", mappings:{"default":{"default":"equals colon", alternative:"equal colon"}}, key:"2255"}, {category:"Sm", mappings:{"default":{"default":"ring in equal to"}}, key:"2256"}, 
{category:"Sm", mappings:{"default":{"default":"ring equal to"}}, key:"2257"}, {category:"Sm", mappings:{"default":{"default":"corresponds to"}}, key:"2258"}, {category:"Sm", mappings:{"default":{"default":"estimates"}}, key:"2259"}, {category:"Sm", mappings:{"default":{"default":"equiangular to"}}, key:"225A"}, {category:"Sm", mappings:{"default":{"default":"star equals"}}, key:"225B"}, {category:"Sm", mappings:{"default":{"default":"delta equal to"}}, key:"225C"}, {category:"Sm", mappings:{"default":{"default":"equal to by definition"}}, 
key:"225D"}, {category:"Sm", mappings:{"default":{"default":"measured by"}}, key:"225E"}, {category:"Sm", mappings:{"default":{"default":"questioned equal to"}}, key:"225F"}, {category:"Sm", mappings:{"default":{"default":"not equal to"}}, key:"2260"}, {category:"Sm", mappings:{"default":{"default":"identical to"}}, key:"2261"}, {category:"Sm", mappings:{"default":{"default":"not identical to"}}, key:"2262"}, {category:"Sm", mappings:{"default":{"default":"strictly equivalent to"}}, key:"2263"}, 
{category:"Sm", mappings:{"default":{"default":"less than or equal to", alternative:"less than or equal to"}}, key:"2264"}, {category:"Sm", mappings:{"default":{"default":"greater than or equal to", alternative:"greater than or equal to"}}, key:"2265"}, {category:"Sm", mappings:{"default":{"default":"less than over equal to", alternative:"less than over equal to"}}, key:"2266"}, {category:"Sm", mappings:{"default":{"default":"greater than over equal to", alternative:"greater than over equal to"}}, 
key:"2267"}, {category:"Sm", mappings:{"default":{"default":"less than but not equal to", alternative:"less than but not equal to"}}, key:"2268"}, {category:"Sm", mappings:{"default":{"default":"greater than but not equal to", alternative:"greater than but not equal to"}}, key:"2269"}, {category:"Sm", mappings:{"default":{"default":"much less than", alternative:"much less than"}}, key:"226A"}, {category:"Sm", mappings:{"default":{"default":"much greater than", alternative:"much greater than"}}, key:"226B"}, 
{category:"Sm", mappings:{"default":{"default":"between"}}, key:"226C"}, {category:"Sm", mappings:{"default":{"default":"not equivalent to"}}, key:"226D"}, {category:"Sm", mappings:{"default":{"default":"not less than", alternative:"not less than"}}, key:"226E"}, {category:"Sm", mappings:{"default":{"default":"not greater than", alternative:"not greater than"}}, key:"226F"}, {category:"Sm", mappings:{"default":{"default":"neither less than nor equal to", alternative:"neither less than nor equal to"}}, 
key:"2270"}, {category:"Sm", mappings:{"default":{"default":"neither greater than nor equal to", alternative:"neither greater than nor equal to"}}, key:"2271"}, {category:"Sm", mappings:{"default":{"default":"less than or equivalent to", alternative:"less than or equivalent to"}}, key:"2272"}, {category:"Sm", mappings:{"default":{"default":"greater than or equivalent to", alternative:"greater than or equivalent to"}}, key:"2273"}, {category:"Sm", mappings:{"default":{"default":"neither less than nor equivalent to", 
alternative:"neither less than nor equivalent to"}}, key:"2274"}, {category:"Sm", mappings:{"default":{"default":"neither greater than nor equivalent to", alternative:"neither greater than nor equivalent to"}}, key:"2275"}, {category:"Sm", mappings:{"default":{"default":"less than or greater than", alternative:"less than or greater than"}}, key:"2276"}, {category:"Sm", mappings:{"default":{"default":"greater than or less than", alternative:"greater than or less than"}}, key:"2277"}, {category:"Sm", 
mappings:{"default":{"default":"neither less than nor greater than", alternative:"neither less than nor greater than"}}, key:"2278"}, {category:"Sm", mappings:{"default":{"default":"neither greater than nor less than", alternative:"neither greater than nor less than"}}, key:"2279"}, {category:"Sm", mappings:{"default":{"default":"precedes"}}, key:"227A"}, {category:"Sm", mappings:{"default":{"default":"succeeds"}}, key:"227B"}, {category:"Sm", mappings:{"default":{"default":"precedes or equal to"}}, 
key:"227C"}, {category:"Sm", mappings:{"default":{"default":"succeeds or equal to"}}, key:"227D"}, {category:"Sm", mappings:{"default":{"default":"precedes or equivalent to"}}, key:"227E"}, {category:"Sm", mappings:{"default":{"default":"succeeds or equivalent to"}}, key:"227F"}, {category:"Sm", mappings:{"default":{"default":"does not precede"}}, key:"2280"}, {category:"Sm", mappings:{"default":{"default":"does not succeed"}}, key:"2281"}, {category:"Sm", mappings:{"default":{"default":"subset of"}}, 
key:"2282"}, {category:"Sm", mappings:{"default":{"default":"superset of"}}, key:"2283"}, {category:"Sm", mappings:{"default":{"default":"not a subset of"}}, key:"2284"}, {category:"Sm", mappings:{"default":{"default":"not a superset of"}}, key:"2285"}, {category:"Sm", mappings:{"default":{"default":"subset of or equal to"}}, key:"2286"}, {category:"Sm", mappings:{"default":{"default":"superset of or equal to"}}, key:"2287"}, {category:"Sm", mappings:{"default":{"default":"neither a subset of nor equal to"}}, 
key:"2288"}, {category:"Sm", mappings:{"default":{"default":"neither a superset of nor equal to"}}, key:"2289"}, {category:"Sm", mappings:{"default":{"default":"subset of with not equal to", alternative:"subset of or not equal to", "short":"subset of or not equal to"}}, key:"228A"}, {category:"Sm", mappings:{"default":{"default":"superset of with not equal to", alternative:"superset of or not equal to", "short":"superset of or not equal to"}}, key:"228B"}, {category:"Sm", mappings:{"default":{"default":"multiset"}}, 
key:"228C"}, {category:"Sm", mappings:{"default":{"default":"multiset multiplication"}}, key:"228D"}, {category:"Sm", mappings:{"default":{"default":"multiset union"}}, key:"228E"}, {category:"Sm", mappings:{"default":{"default":"square image of"}}, key:"228F"}, {category:"Sm", mappings:{"default":{"default":"square original of"}}, key:"2290"}, {category:"Sm", mappings:{"default":{"default":"square image of or equal to"}}, key:"2291"}, {category:"Sm", mappings:{"default":{"default":"square original of or equal to"}}, 
key:"2292"}, {category:"Sm", mappings:{"default":{"default":"square cap"}}, key:"2293"}, {category:"Sm", mappings:{"default":{"default":"square cup"}}, key:"2294"}, {category:"Sm", mappings:{"default":{"default":"circled plus"}}, key:"2295"}, {category:"Sm", mappings:{"default":{"default":"circled minus"}}, key:"2296"}, {category:"Sm", mappings:{"default":{"default":"circled times"}}, key:"2297"}, {category:"Sm", mappings:{"default":{"default":"circled division slash"}}, key:"2298"}, {category:"Sm", 
mappings:{"default":{"default":"circled dot operator"}}, key:"2299"}, {category:"Sm", mappings:{"default":{"default":"circled ring operator"}}, key:"229A"}, {category:"Sm", mappings:{"default":{"default":"circled asterisk operator"}}, key:"229B"}, {category:"Sm", mappings:{"default":{"default":"circled equals"}}, key:"229C"}, {category:"Sm", mappings:{"default":{"default":"circled dash"}}, key:"229D"}, {category:"Sm", mappings:{"default":{"default":"squared plus"}}, key:"229E"}, {category:"Sm", mappings:{"default":{"default":"squared minus"}}, 
key:"229F"}, {category:"Sm", mappings:{"default":{"default":"squared times"}}, key:"22A0"}, {category:"Sm", mappings:{"default":{"default":"squared dot operator"}}, key:"22A1"}, {category:"Sm", mappings:{"default":{"default":"right tack"}}, key:"22A2"}, {category:"Sm", mappings:{"default":{"default":"left tack"}}, key:"22A3"}, {category:"Sm", mappings:{"default":{"default":"down tack"}}, key:"22A4"}, {category:"Sm", mappings:{"default":{"default":"up tack"}}, key:"22A5"}, {category:"Sm", mappings:{"default":{"default":"assertion"}}, 
key:"22A6"}, {category:"Sm", mappings:{"default":{"default":"models"}}, key:"22A7"}, {category:"Sm", mappings:{"default":{"default":"true"}}, key:"22A8"}, {category:"Sm", mappings:{"default":{"default":"forces"}}, key:"22A9"}, {category:"Sm", mappings:{"default":{"default":"triple vertical bar right turnstile"}}, key:"22AA"}, {category:"Sm", mappings:{"default":{"default":"double vertical bar double right turnstile"}}, key:"22AB"}, {category:"Sm", mappings:{"default":{"default":"does not prove"}}, 
key:"22AC"}, {category:"Sm", mappings:{"default":{"default":"not true"}}, key:"22AD"}, {category:"Sm", mappings:{"default":{"default":"does not force"}}, key:"22AE"}, {category:"Sm", mappings:{"default":{"default":"negated double vertical bar double right turnstile"}}, key:"22AF"}, {category:"Sm", mappings:{"default":{"default":"precedes under relation"}}, key:"22B0"}, {category:"Sm", mappings:{"default":{"default":"succeeds under relation"}}, key:"22B1"}, {category:"Sm", mappings:{"default":{"default":"normal subgroup of"}}, 
key:"22B2"}, {category:"Sm", mappings:{"default":{"default":"contains as normal subgroup"}}, key:"22B3"}, {category:"Sm", mappings:{"default":{"default":"normal subgroup of or equal to"}}, key:"22B4"}, {category:"Sm", mappings:{"default":{"default":"contains as normal subgroup or equal to"}}, key:"22B5"}, {category:"Sm", mappings:{"default":{"default":"original of"}}, key:"22B6"}, {category:"Sm", mappings:{"default":{"default":"image of"}}, key:"22B7"}, {category:"Sm", mappings:{"default":{"default":"multimap"}}, 
key:"22B8"}, {category:"Sm", mappings:{"default":{"default":"hermitian conjugate matrix"}}, key:"22B9"}, {category:"Sm", mappings:{"default":{"default":"intercalate"}}, key:"22BA"}, {category:"Sm", mappings:{"default":{"default":"xor"}}, key:"22BB"}, {category:"Sm", mappings:{"default":{"default":"nand"}}, key:"22BC"}, {category:"Sm", mappings:{"default":{"default":"nor"}}, key:"22BD"}, {category:"Sm", mappings:{"default":{"default":"right triangle"}}, key:"22BF"}, {category:"Sm", mappings:{"default":{"default":"n ary logical and"}}, 
key:"22C0"}, {category:"Sm", mappings:{"default":{"default":"n ary logical or"}}, key:"22C1"}, {category:"Sm", mappings:{"default":{"default":"n ary intersection"}}, key:"22C2"}, {category:"Sm", mappings:{"default":{"default":"n ary union"}}, key:"22C3"}, {category:"Sm", mappings:{"default":{"default":"diamond operator"}}, key:"22C4"}, {category:"Sm", mappings:{"default":{"default":"dot operator"}}, key:"22C5"}, {category:"Sm", mappings:{"default":{"default":"star operator"}}, key:"22C6"}, {category:"Sm", 
mappings:{"default":{"default":"division times"}}, key:"22C7"}, {category:"Sm", mappings:{"default":{"default":"bowtie"}}, key:"22C8"}, {category:"Sm", mappings:{"default":{"default":"left normal factor semidirect product"}}, key:"22C9"}, {category:"Sm", mappings:{"default":{"default":"right normal factor semidirect product"}}, key:"22CA"}, {category:"Sm", mappings:{"default":{"default":"left semidirect product"}}, key:"22CB"}, {category:"Sm", mappings:{"default":{"default":"right semidirect product"}}, 
key:"22CC"}, {category:"Sm", mappings:{"default":{"default":"reversed tilde equals"}}, key:"22CD"}, {category:"Sm", mappings:{"default":{"default":"curly logical or"}}, key:"22CE"}, {category:"Sm", mappings:{"default":{"default":"curly logical and"}}, key:"22CF"}, {category:"Sm", mappings:{"default":{"default":"double subset"}}, key:"22D0"}, {category:"Sm", mappings:{"default":{"default":"double superset"}}, key:"22D1"}, {category:"Sm", mappings:{"default":{"default":"double intersection"}}, key:"22D2"}, 
{category:"Sm", mappings:{"default":{"default":"double union"}}, key:"22D3"}, {category:"Sm", mappings:{"default":{"default":"pitchfork"}}, key:"22D4"}, {category:"Sm", mappings:{"default":{"default":"equal and parallel to"}}, key:"22D5"}, {category:"Sm", mappings:{"default":{"default":"less than with dot", alternative:"less than with dot", "short":"less than dot"}}, key:"22D6"}, {category:"Sm", mappings:{"default":{"default":"greater than with dot", alternative:"greater than with dot", "short":"greater than dot"}}, 
key:"22D7"}, {category:"Sm", mappings:{"default":{"default":"very much less than", alternative:"very much less than"}}, key:"22D8"}, {category:"Sm", mappings:{"default":{"default":"very much greater than", alternative:"very much greater than"}}, key:"22D9"}, {category:"Sm", mappings:{"default":{"default":"less than equal to or greater than", alternative:"less than equal to or greater than"}}, key:"22DA"}, {category:"Sm", mappings:{"default":{"default":"greater than equal to or less than", alternative:"greater than equal to or less than"}}, 
key:"22DB"}, {category:"Sm", mappings:{"default":{"default":"equal to or less than", alternative:"equal to or less than"}}, key:"22DC"}, {category:"Sm", mappings:{"default":{"default":"equal to or greater than", alternative:"equal to or greater than"}}, key:"22DD"}, {category:"Sm", mappings:{"default":{"default":"equal to or precedes"}}, key:"22DE"}, {category:"Sm", mappings:{"default":{"default":"equal to or succeeds"}}, key:"22DF"}, {category:"Sm", mappings:{"default":{"default":"does not precede or equal"}}, 
key:"22E0"}, {category:"Sm", mappings:{"default":{"default":"does not succeed or equal"}}, key:"22E1"}, {category:"Sm", mappings:{"default":{"default":"not square image of or equal to"}}, key:"22E2"}, {category:"Sm", mappings:{"default":{"default":"not square original of or equal to"}}, key:"22E3"}, {category:"Sm", mappings:{"default":{"default":"square image of or not equal to"}}, key:"22E4"}, {category:"Sm", mappings:{"default":{"default":"square original of or not equal to"}}, key:"22E5"}, {category:"Sm", 
mappings:{"default":{"default":"less than but not equivalent to", alternative:"less than but not equivalent to"}}, key:"22E6"}, {category:"Sm", mappings:{"default":{"default":"greater than but not equivalent to", alternative:"greater than but not equivalent to"}}, key:"22E7"}, {category:"Sm", mappings:{"default":{"default":"precedes but not equivalent to"}}, key:"22E8"}, {category:"Sm", mappings:{"default":{"default":"succeeds but not equivalent to"}}, key:"22E9"}, {category:"Sm", mappings:{"default":{"default":"not normal subgroup of"}}, 
key:"22EA"}, {category:"Sm", mappings:{"default":{"default":"does not contain as normal subgroup"}}, key:"22EB"}, {category:"Sm", mappings:{"default":{"default":"not normal subgroup of or equal to"}}, key:"22EC"}, {category:"Sm", mappings:{"default":{"default":"does not contain as normal subgroup or equal"}}, key:"22ED"}, {category:"Sm", mappings:{"default":{"default":"vertical ellipsis", "short":"dot dot dot"}}, key:"22EE"}, {category:"Sm", mappings:{"default":{"default":"midline horizontal ellipsis", 
"short":"dot dot dot"}}, key:"22EF"}, {category:"Sm", mappings:{"default":{"default":"up right diagonal ellipsis", "short":"diagonal dot dot dot"}}, key:"22F0"}, {category:"Sm", mappings:{"default":{"default":"down right diagonal ellipsis", "short":"diagonal dot dot dot"}}, key:"22F1"}, {category:"Sm", mappings:{"default":{"default":"element of with long horizontal stroke"}}, key:"22F2"}, {category:"Sm", mappings:{"default":{"default":"element of with vertical bar at end of horizontal stroke"}}, 
key:"22F3"}, {category:"Sm", mappings:{"default":{"default":"small element of with vertical bar at end of horizontal stroke"}}, key:"22F4"}, {category:"Sm", mappings:{"default":{"default":"element of with dot above"}}, key:"22F5"}, {category:"Sm", mappings:{"default":{"default":"element of with overbar"}}, key:"22F6"}, {category:"Sm", mappings:{"default":{"default":"small element of with overbar"}}, key:"22F7"}, {category:"Sm", mappings:{"default":{"default":"element of with underbar"}}, key:"22F8"}, 
{category:"Sm", mappings:{"default":{"default":"element of with two horizontal strokes"}}, key:"22F9"}, {category:"Sm", mappings:{"default":{"default":"contains with long horizontal stroke"}}, key:"22FA"}, {category:"Sm", mappings:{"default":{"default":"contains with vertical bar at end of horizontal stroke"}}, key:"22FB"}, {category:"Sm", mappings:{"default":{"default":"small contains with vertical bar at end of horizontal stroke"}}, key:"22FC"}, {category:"Sm", mappings:{"default":{"default":"contains with overbar"}}, 
key:"22FD"}, {category:"Sm", mappings:{"default":{"default":"small contains with overbar"}}, key:"22FE"}, {category:"Sm", mappings:{"default":{"default":"z notation bag membership"}}, key:"22FF"}, {category:"So", mappings:{"default":{"default":"diameter sign", "short":"diameter"}}, key:"2300"}, {category:"So", mappings:{"default":{"default":"house"}}, key:"2302"}, {category:"So", mappings:{"default":{"default":"projective"}}, key:"2305"}, {category:"So", mappings:{"default":{"default":"perspective"}}, 
key:"2306"}, {category:"So", mappings:{"default":{"default":"wavy line"}}, key:"2307"}, {category:"So", mappings:{"default":{"default":"reversed not sign", "short":"reversed not"}}, key:"2310"}, {category:"So", mappings:{"default":{"default":"square lozenge"}}, key:"2311"}, {category:"So", mappings:{"default":{"default":"arc"}}, key:"2312"}, {category:"So", mappings:{"default":{"default":"segment"}}, key:"2313"}, {category:"So", mappings:{"default":{"default":"sector"}}, key:"2314"}, {category:"So", 
mappings:{"default":{"default":"heavy plus sign", alternative:"heavy plus", "short":"bold plus"}}, key:"2795"}, {category:"So", mappings:{"default":{"default":"heavy minus sign", alternative:"heavy minus", "short":"bold minus"}}, key:"2796"}, {category:"So", mappings:{"default":{"default":"heavy division sign", alternative:"heavy division", "short":"bold division"}}, key:"2797"}, {category:"So", mappings:{"default":{"default":"curly loop"}}, key:"27B0"}, {category:"So", mappings:{"default":{"default":"double curly loop"}}, 
key:"27BF"}, {category:"Sm", mappings:{"default":{"default":"white triangle containing small white triangle"}}, key:"27C1"}, {category:"Sm", mappings:{"default":{"default":"perpendicular"}}, key:"27C2"}, {category:"Sm", mappings:{"default":{"default":"open subset"}}, key:"27C3"}, {category:"Sm", mappings:{"default":{"default":"open superset"}}, key:"27C4"}, {category:"Sm", mappings:{"default":{"default":"or with dot inside"}}, key:"27C7"}, {category:"Sm", mappings:{"default":{"default":"reverse solidus preceding subset"}}, 
key:"27C8"}, {category:"Sm", mappings:{"default":{"default":"superset preceding solidus"}}, key:"27C9"}, {category:"Sm", mappings:{"default":{"default":"vertical bar with horizontal stroke"}}, key:"27CA"}, {category:"Sm", mappings:{"default":{"default":"mathematical rising diagonal"}}, key:"27CB"}, {category:"Sm", mappings:{"default":{"default":"long division"}}, key:"27CC"}, {category:"Sm", mappings:{"default":{"default":"mathematical falling diagonal"}}, key:"27CD"}, {category:"Sm", mappings:{"default":{"default":"squared logical and"}}, 
key:"27CE"}, {category:"Sm", mappings:{"default":{"default":"squared logical or"}}, key:"27CF"}, {category:"Sm", mappings:{"default":{"default":"white diamond with centered dot"}}, key:"27D0"}, {category:"Sm", mappings:{"default":{"default":"and with dot"}}, key:"27D1"}, {category:"Sm", mappings:{"default":{"default":"element of opening upwards"}}, key:"27D2"}, {category:"Sm", mappings:{"default":{"default":"lower right corner with dot"}}, key:"27D3"}, {category:"Sm", mappings:{"default":{"default":"upper left corner with dot"}}, 
key:"27D4"}, {category:"Sm", mappings:{"default":{"default":"left outer join"}}, key:"27D5"}, {category:"Sm", mappings:{"default":{"default":"right outer join"}}, key:"27D6"}, {category:"Sm", mappings:{"default":{"default":"full outer join"}}, key:"27D7"}, {category:"Sm", mappings:{"default":{"default":"large up tack"}}, key:"27D8"}, {category:"Sm", mappings:{"default":{"default":"large down tack"}}, key:"27D9"}, {category:"Sm", mappings:{"default":{"default":"left and right double turnstile"}}, 
key:"27DA"}, {category:"Sm", mappings:{"default":{"default":"left and right tack"}}, key:"27DB"}, {category:"Sm", mappings:{"default":{"default":"left multimap"}}, key:"27DC"}, {category:"Sm", mappings:{"default":{"default":"long right tack"}}, key:"27DD"}, {category:"Sm", mappings:{"default":{"default":"long left tack"}}, key:"27DE"}, {category:"Sm", mappings:{"default":{"default":"up tack with circle above"}}, key:"27DF"}, {category:"Sm", mappings:{"default":{"default":"lozenge divided by horizontal rule"}}, 
key:"27E0"}, {category:"Sm", mappings:{"default":{"default":"white concave sided diamond"}}, key:"27E1"}, {category:"Sm", mappings:{"default":{"default":"white concave sided diamond with leftwards tick"}}, key:"27E2"}, {category:"Sm", mappings:{"default":{"default":"white concave sided diamond with rightwards tick"}}, key:"27E3"}, {category:"Sm", mappings:{"default":{"default":"white square with leftwards tick"}}, key:"27E4"}, {category:"Sm", mappings:{"default":{"default":"white square with rightwards tick"}}, 
key:"27E5"}, {category:"Sm", mappings:{"default":{"default":"rising diagonal crossing falling diagonal"}}, key:"292B"}, {category:"Sm", mappings:{"default":{"default":"falling diagonal crossing rising diagonal"}}, key:"292C"}, {category:"Sm", mappings:{"default":{"default":"triple vertical bar delimiter"}}, key:"2980"}, {category:"Sm", mappings:{"default":{"default":"z notation spot"}}, key:"2981"}, {category:"Sm", mappings:{"default":{"default":"z notation type colon"}}, key:"2982"}, {category:"Sm", 
mappings:{"default":{"default":"dotted fence"}}, key:"2999"}, {category:"Sm", mappings:{"default":{"default":"vertical zigzag line"}}, key:"299A"}, {category:"Sm", mappings:{"default":{"default":"reversed empty set"}}, key:"29B0"}, {category:"Sm", mappings:{"default":{"default":"empty set with overbar"}}, key:"29B1"}, {category:"Sm", mappings:{"default":{"default":"empty set with small circle above"}}, key:"29B2"}, {category:"Sm", mappings:{"default":{"default":"circle with horizontal bar"}}, key:"29B5"}, 
{category:"Sm", mappings:{"default":{"default":"circled vertical bar"}}, key:"29B6"}, {category:"Sm", mappings:{"default":{"default":"circled parallel"}}, key:"29B7"}, {category:"Sm", mappings:{"default":{"default":"circled reverse solidus"}}, key:"29B8"}, {category:"Sm", mappings:{"default":{"default":"circled perpendicular"}}, key:"29B9"}, {category:"Sm", mappings:{"default":{"default":"circle divided by horizontal bar and top half divided by vertical bar"}}, key:"29BA"}, {category:"Sm", mappings:{"default":{"default":"circle with superimposed x"}}, 
key:"29BB"}, {category:"Sm", mappings:{"default":{"default":"circled anticlockwise rotated division sign", "short":"circled anticlockwise rotated division"}}, key:"29BC"}, {category:"Sm", mappings:{"default":{"default":"circled white bullet"}}, key:"29BE"}, {category:"Sm", mappings:{"default":{"default":"circled bullet"}}, key:"29BF"}, {category:"Sm", mappings:{"default":{"default":"circled less than"}}, key:"29C0"}, {category:"Sm", mappings:{"default":{"default":"circled greater than"}}, key:"29C1"}, 
{category:"Sm", mappings:{"default":{"default":"circle with small circle to the right"}}, key:"29C2"}, {category:"Sm", mappings:{"default":{"default":"circle with two horizontal strokes to the right"}}, key:"29C3"}, {category:"Sm", mappings:{"default":{"default":"squared rising diagonal slash"}}, key:"29C4"}, {category:"Sm", mappings:{"default":{"default":"squared falling diagonal slash"}}, key:"29C5"}, {category:"Sm", mappings:{"default":{"default":"squared asterisk"}}, key:"29C6"}, {category:"Sm", 
mappings:{"default":{"default":"squared small circle"}}, key:"29C7"}, {category:"Sm", mappings:{"default":{"default":"squared square"}}, key:"29C8"}, {category:"Sm", mappings:{"default":{"default":"two joined squares"}}, key:"29C9"}, {category:"Sm", mappings:{"default":{"default":"triangle with dot above"}}, key:"29CA"}, {category:"Sm", mappings:{"default":{"default":"triangle with underbar"}}, key:"29CB"}, {category:"Sm", mappings:{"default":{"default":"s in triangle"}}, key:"29CC"}, {category:"Sm", 
mappings:{"default":{"default":"triangle with serifs at bottom"}}, key:"29CD"}, {category:"Sm", mappings:{"default":{"default":"right triangle above left triangle"}}, key:"29CE"}, {category:"Sm", mappings:{"default":{"default":"left triangle beside vertical bar"}}, key:"29CF"}, {category:"Sm", mappings:{"default":{"default":"vertical bar beside right triangle"}}, key:"29D0"}, {category:"Sm", mappings:{"default":{"default":"bowtie with left half black"}}, key:"29D1"}, {category:"Sm", mappings:{"default":{"default":"bowtie with right half black"}}, 
key:"29D2"}, {category:"Sm", mappings:{"default":{"default":"black bowtie"}}, key:"29D3"}, {category:"Sm", mappings:{"default":{"default":"times with left half black"}}, key:"29D4"}, {category:"Sm", mappings:{"default":{"default":"times with right half black"}}, key:"29D5"}, {category:"Sm", mappings:{"default":{"default":"white hourglass"}}, key:"29D6"}, {category:"Sm", mappings:{"default":{"default":"black hourglass"}}, key:"29D7"}, {category:"Sm", mappings:{"default":{"default":"incomplete infinity"}}, 
key:"29DC"}, {category:"Sm", mappings:{"default":{"default":"tie over infinity"}}, key:"29DD"}, {category:"Sm", mappings:{"default":{"default":"infinity negated with vertical bar"}}, key:"29DE"}, {category:"Sm", mappings:{"default":{"default":"double ended multimap"}}, key:"29DF"}, {category:"Sm", mappings:{"default":{"default":"square with contoured outline"}}, key:"29E0"}, {category:"Sm", mappings:{"default":{"default":"increases as"}}, key:"29E1"}, {category:"Sm", mappings:{"default":{"default":"shuffle product"}}, 
key:"29E2"}, {category:"Sm", mappings:{"default":{"default":"equals sign and slanted parallel"}}, key:"29E3"}, {category:"Sm", mappings:{"default":{"default":"equals sign and slanted parallel with tilde above"}}, key:"29E4"}, {category:"Sm", mappings:{"default":{"default":"identical to and slanted parallel"}}, key:"29E5"}, {category:"Sm", mappings:{"default":{"default":"gleich stark"}}, key:"29E6"}, {category:"Sm", mappings:{"default":{"default":"thermodynamic"}}, key:"29E7"}, {category:"Sm", mappings:{"default":{"default":"down pointing triangle with left half black"}}, 
key:"29E8"}, {category:"Sm", mappings:{"default":{"default":"down pointing triangle with right half black"}}, key:"29E9"}, {category:"Sm", mappings:{"default":{"default":"black lozenge"}}, key:"29EB"}, {category:"Sm", mappings:{"default":{"default":"error barred white square"}}, key:"29EE"}, {category:"Sm", mappings:{"default":{"default":"error barred black square"}}, key:"29EF"}, {category:"Sm", mappings:{"default":{"default":"error barred white diamond"}}, key:"29F0"}, {category:"Sm", mappings:{"default":{"default":"error barred black diamond"}}, 
key:"29F1"}, {category:"Sm", mappings:{"default":{"default":"error barred white circle"}}, key:"29F2"}, {category:"Sm", mappings:{"default":{"default":"error barred black circle"}}, key:"29F3"}, {category:"Sm", mappings:{"default":{"default":"rule delayed"}}, key:"29F4"}, {category:"Sm", mappings:{"default":{"default":"reverse solidus operator"}}, key:"29F5"}, {category:"Sm", mappings:{"default":{"default":"solidus with overbar"}}, key:"29F6"}, {category:"Sm", mappings:{"default":{"default":"reverse solidus with horizontal stroke"}}, 
key:"29F7"}, {category:"Sm", mappings:{"default":{"default":"big solidus"}}, key:"29F8"}, {category:"Sm", mappings:{"default":{"default":"big reverse solidus"}}, key:"29F9"}, {category:"Sm", mappings:{"default":{"default":"double plus"}}, key:"29FA"}, {category:"Sm", mappings:{"default":{"default":"triple plus"}}, key:"29FB"}, {category:"Sm", mappings:{"default":{"default":"tiny"}}, key:"29FE"}, {category:"Sm", mappings:{"default":{"default":"miny"}}, key:"29FF"}, {category:"Sm", mappings:{"default":{"default":"n ary circled dot operator"}}, 
key:"2A00"}, {category:"Sm", mappings:{"default":{"default":"n ary circled plus operator"}}, key:"2A01"}, {category:"Sm", mappings:{"default":{"default":"n ary circled times operator"}}, key:"2A02"}, {category:"Sm", mappings:{"default":{"default":"n ary union operator with dot"}}, key:"2A03"}, {category:"Sm", mappings:{"default":{"default":"n ary union operator with plus"}}, key:"2A04"}, {category:"Sm", mappings:{"default":{"default":"n ary square intersection operator"}}, key:"2A05"}, {category:"Sm", 
mappings:{"default":{"default":"n ary square union operator"}}, key:"2A06"}, {category:"Sm", mappings:{"default":{"default":"two logical and operator"}}, key:"2A07"}, {category:"Sm", mappings:{"default":{"default":"two logical or operator"}}, key:"2A08"}, {category:"Sm", mappings:{"default":{"default":"n ary times operator"}}, key:"2A09"}, {category:"Sm", mappings:{"default":{"default":"modulo two sum"}}, key:"2A0A"}, {category:"Sm", mappings:{"default":{"default":"summation with integral"}}, key:"2A0B"}, 
{category:"Sm", mappings:{"default":{"default":"quadruple integral operator"}}, key:"2A0C"}, {category:"Sm", mappings:{"default":{"default":"finite part integral"}}, key:"2A0D"}, {category:"Sm", mappings:{"default":{"default":"integral with double stroke"}}, key:"2A0E"}, {category:"Sm", mappings:{"default":{"default":"integral average with slash"}}, key:"2A0F"}, {category:"Sm", mappings:{"default":{"default":"circulation function"}}, key:"2A10"}, {category:"Sm", mappings:{"default":{"default":"anticlockwise integration"}}, 
key:"2A11"}, {category:"Sm", mappings:{"default":{"default":"line integration with rectangular path around pole"}}, key:"2A12"}, {category:"Sm", mappings:{"default":{"default":"line integration with semicircular path around pole"}}, key:"2A13"}, {category:"Sm", mappings:{"default":{"default":"line integration not including the pole"}}, key:"2A14"}, {category:"Sm", mappings:{"default":{"default":"integral around a point operator"}}, key:"2A15"}, {category:"Sm", mappings:{"default":{"default":"quaternion integral operator"}}, 
key:"2A16"}, {category:"Sm", mappings:{"default":{"default":"integral with times sign", "short":"integral with times"}}, key:"2A18"}, {category:"Sm", mappings:{"default":{"default":"integral with intersection"}}, key:"2A19"}, {category:"Sm", mappings:{"default":{"default":"integral with union"}}, key:"2A1A"}, {category:"Sm", mappings:{"default":{"default":"integral with overbar"}}, key:"2A1B"}, {category:"Sm", mappings:{"default":{"default":"integral with underbar"}}, key:"2A1C"}, {category:"Sm", 
mappings:{"default":{"default":"join"}}, key:"2A1D"}, {category:"Sm", mappings:{"default":{"default":"large left triangle operator"}}, key:"2A1E"}, {category:"Sm", mappings:{"default":{"default":"z notation schema composition"}}, key:"2A1F"}, {category:"Sm", mappings:{"default":{"default":"z notation schema piping"}}, key:"2A20"}, {category:"Sm", mappings:{"default":{"default":"z notation schema projection"}}, key:"2A21"}, {category:"Sm", mappings:{"default":{"default":"plus sign with small circle above", 
"short":"plus with circle above"}}, key:"2A22"}, {category:"Sm", mappings:{"default":{"default":"plus sign with circumflex accent above", "short":"plus hat"}}, key:"2A23"}, {category:"Sm", mappings:{"default":{"default":"plus sign with tilde above", "short":"plus tilde"}}, key:"2A24"}, {category:"Sm", mappings:{"default":{"default":"plus sign with dot below", "short":"plus underdot"}}, key:"2A25"}, {category:"Sm", mappings:{"default":{"default":"plus sign with tilde below"}}, key:"2A26"}, {category:"Sm", 
mappings:{"default":{"default":"plus sign with subscript two"}}, key:"2A27"}, {category:"Sm", mappings:{"default":{"default":"plus sign with black triangle"}}, key:"2A28"}, {category:"Sm", mappings:{"default":{"default":"minus sign with comma above"}}, key:"2A29"}, {category:"Sm", mappings:{"default":{"default":"minus sign with dot below"}}, key:"2A2A"}, {category:"Sm", mappings:{"default":{"default":"minus sign with falling dots"}}, key:"2A2B"}, {category:"Sm", mappings:{"default":{"default":"minus sign with rising dots"}}, 
key:"2A2C"}, {category:"Sm", mappings:{"default":{"default":"plus sign in left half circle"}}, key:"2A2D"}, {category:"Sm", mappings:{"default":{"default":"plus sign in right half circle"}}, key:"2A2E"}, {category:"Sm", mappings:{"default":{"default":"vector or cross product"}}, key:"2A2F"}, {category:"Sm", mappings:{"default":{"default":"multiplication sign with dot above"}}, key:"2A30"}, {category:"Sm", mappings:{"default":{"default":"multiplication sign with underbar"}}, key:"2A31"}, {category:"Sm", 
mappings:{"default":{"default":"semidirect product with bottom closed"}}, key:"2A32"}, {category:"Sm", mappings:{"default":{"default":"smash product"}}, key:"2A33"}, {category:"Sm", mappings:{"default":{"default":"multiplication sign in left half circle"}}, key:"2A34"}, {category:"Sm", mappings:{"default":{"default":"multiplication sign in right half circle"}}, key:"2A35"}, {category:"Sm", mappings:{"default":{"default":"circled multiplication sign with circumflex accent"}}, key:"2A36"}, {category:"Sm", 
mappings:{"default":{"default":"multiplication sign in double circle"}}, key:"2A37"}, {category:"Sm", mappings:{"default":{"default":"circled division sign", "short":"circled division"}}, key:"2A38"}, {category:"Sm", mappings:{"default":{"default":"plus sign in triangle"}}, key:"2A39"}, {category:"Sm", mappings:{"default":{"default":"minus sign in triangle"}}, key:"2A3A"}, {category:"Sm", mappings:{"default":{"default":"multiplication sign in triangle"}}, key:"2A3B"}, {category:"Sm", mappings:{"default":{"default":"interior product"}}, 
key:"2A3C"}, {category:"Sm", mappings:{"default":{"default":"righthand interior product"}}, key:"2A3D"}, {category:"Sm", mappings:{"default":{"default":"z notation relational composition"}}, key:"2A3E"}, {category:"Sm", mappings:{"default":{"default":"amalgamation or coproduct"}}, key:"2A3F"}, {category:"Sm", mappings:{"default":{"default":"intersection with dot"}}, key:"2A40"}, {category:"Sm", mappings:{"default":{"default":"union with minus sign", "short":"union with minus"}}, key:"2A41"}, {category:"Sm", 
mappings:{"default":{"default":"union with overbar"}}, key:"2A42"}, {category:"Sm", mappings:{"default":{"default":"intersection with overbar"}}, key:"2A43"}, {category:"Sm", mappings:{"default":{"default":"intersection with logical and"}}, key:"2A44"}, {category:"Sm", mappings:{"default":{"default":"union with logical or"}}, key:"2A45"}, {category:"Sm", mappings:{"default":{"default":"union above intersection"}}, key:"2A46"}, {category:"Sm", mappings:{"default":{"default":"intersection above union"}}, 
key:"2A47"}, {category:"Sm", mappings:{"default":{"default":"union above bar above intersection"}}, key:"2A48"}, {category:"Sm", mappings:{"default":{"default":"intersection above bar above union"}}, key:"2A49"}, {category:"Sm", mappings:{"default":{"default":"union beside and joined with union"}}, key:"2A4A"}, {category:"Sm", mappings:{"default":{"default":"intersection beside and joined with intersection"}}, key:"2A4B"}, {category:"Sm", mappings:{"default":{"default":"closed union with serifs"}}, 
key:"2A4C"}, {category:"Sm", mappings:{"default":{"default":"closed intersection with serifs"}}, key:"2A4D"}, {category:"Sm", mappings:{"default":{"default":"double square intersection"}}, key:"2A4E"}, {category:"Sm", mappings:{"default":{"default":"double square union"}}, key:"2A4F"}, {category:"Sm", mappings:{"default":{"default":"closed union with serifs and smash product"}}, key:"2A50"}, {category:"Sm", mappings:{"default":{"default":"logical and with dot above"}}, key:"2A51"}, {category:"Sm", 
mappings:{"default":{"default":"logical or with dot above"}}, key:"2A52"}, {category:"Sm", mappings:{"default":{"default":"double logical and"}}, key:"2A53"}, {category:"Sm", mappings:{"default":{"default":"double logical or"}}, key:"2A54"}, {category:"Sm", mappings:{"default":{"default":"two intersecting logical and"}}, key:"2A55"}, {category:"Sm", mappings:{"default":{"default":"two intersecting logical or"}}, key:"2A56"}, {category:"Sm", mappings:{"default":{"default":"sloping large or"}}, key:"2A57"}, 
{category:"Sm", mappings:{"default":{"default":"sloping large and"}}, key:"2A58"}, {category:"Sm", mappings:{"default":{"default":"logical or overlapping logical and"}}, key:"2A59"}, {category:"Sm", mappings:{"default":{"default":"logical and with middle stem"}}, key:"2A5A"}, {category:"Sm", mappings:{"default":{"default":"logical or with middle stem"}}, key:"2A5B"}, {category:"Sm", mappings:{"default":{"default":"logical and with horizontal dash"}}, key:"2A5C"}, {category:"Sm", mappings:{"default":{"default":"logical or with horizontal dash"}}, 
key:"2A5D"}, {category:"Sm", mappings:{"default":{"default":"logical and with double overbar"}}, key:"2A5E"}, {category:"Sm", mappings:{"default":{"default":"logical and with underbar"}}, key:"2A5F"}, {category:"Sm", mappings:{"default":{"default":"logical and with double underbar"}}, key:"2A60"}, {category:"Sm", mappings:{"default":{"default":"small vee with underbar"}}, key:"2A61"}, {category:"Sm", mappings:{"default":{"default":"logical or with double overbar"}}, key:"2A62"}, {category:"Sm", mappings:{"default":{"default":"logical or with double underbar"}}, 
key:"2A63"}, {category:"Sm", mappings:{"default":{"default":"z notation domain antirestriction"}}, key:"2A64"}, {category:"Sm", mappings:{"default":{"default":"z notation range antirestriction"}}, key:"2A65"}, {category:"Sm", mappings:{"default":{"default":"equals sign with dot below"}}, key:"2A66"}, {category:"Sm", mappings:{"default":{"default":"identical with dot above"}}, key:"2A67"}, {category:"Sm", mappings:{"default":{"default":"triple horizontal bar with double vertical stroke"}}, key:"2A68"}, 
{category:"Sm", mappings:{"default":{"default":"triple horizontal bar with triple vertical stroke"}}, key:"2A69"}, {category:"Sm", mappings:{"default":{"default":"tilde operator with dot above"}}, key:"2A6A"}, {category:"Sm", mappings:{"default":{"default":"tilde operator with rising dots"}}, key:"2A6B"}, {category:"Sm", mappings:{"default":{"default":"similar minus similar"}}, key:"2A6C"}, {category:"Sm", mappings:{"default":{"default":"congruent with dot above"}}, key:"2A6D"}, {category:"Sm", mappings:{"default":{"default":"equals with asterisk"}}, 
key:"2A6E"}, {category:"Sm", mappings:{"default":{"default":"almost equal to with circumflex accent", "short":"almost equal hat"}}, key:"2A6F"}, {category:"Sm", mappings:{"default":{"default":"approximately equal or equal to"}}, key:"2A70"}, {category:"Sm", mappings:{"default":{"default":"equals sign above plus sign", "short":"equals above plus"}}, key:"2A71"}, {category:"Sm", mappings:{"default":{"default":"plus sign above equals sign", "short":"plus above equals"}}, key:"2A72"}, {category:"Sm", 
mappings:{"default":{"default":"equals sign above tilde operator", "short":"equals above tilde operator"}}, key:"2A73"}, {category:"Sm", mappings:{"default":{"default":"double colon equal"}}, key:"2A74"}, {category:"Sm", mappings:{"default":{"default":"two consecutive equals signs", "short":"two consecutive equals"}}, key:"2A75"}, {category:"Sm", mappings:{"default":{"default":"three consecutive equals signs", "short":"three consecutive equals"}}, key:"2A76"}, {category:"Sm", mappings:{"default":{"default":"equals sign with two dots above and two dots below"}}, 
key:"2A77"}, {category:"Sm", mappings:{"default":{"default":"equivalent with four dots above"}}, key:"2A78"}, {category:"Sm", mappings:{"default":{"default":"less than with circle inside"}}, key:"2A79"}, {category:"Sm", mappings:{"default":{"default":"greater than with circle inside"}}, key:"2A7A"}, {category:"Sm", mappings:{"default":{"default":"less than with question mark above"}}, key:"2A7B"}, {category:"Sm", mappings:{"default":{"default":"greater than with question mark above"}}, key:"2A7C"}, 
{category:"Sm", mappings:{"default":{"default":"less than or slanted equal to"}}, key:"2A7D"}, {category:"Sm", mappings:{"default":{"default":"greater than or slanted equal to"}}, key:"2A7E"}, {category:"Sm", mappings:{"default":{"default":"less than or slanted equal to with dot inside"}}, key:"2A7F"}, {category:"Sm", mappings:{"default":{"default":"greater than or slanted equal to with dot inside"}}, key:"2A80"}, {category:"Sm", mappings:{"default":{"default":"less than or slanted equal to with dot above"}}, 
key:"2A81"}, {category:"Sm", mappings:{"default":{"default":"greater than or slanted equal to with dot above"}}, key:"2A82"}, {category:"Sm", mappings:{"default":{"default":"less than or slanted equal to with dot above right"}}, key:"2A83"}, {category:"Sm", mappings:{"default":{"default":"greater than or slanted equal to with dot above left"}}, key:"2A84"}, {category:"Sm", mappings:{"default":{"default":"less than or approximate"}}, key:"2A85"}, {category:"Sm", mappings:{"default":{"default":"greater than or approximate"}}, 
key:"2A86"}, {category:"Sm", mappings:{"default":{"default":"less than and single line not equal to"}}, key:"2A87"}, {category:"Sm", mappings:{"default":{"default":"greater than and single line not equal to"}}, key:"2A88"}, {category:"Sm", mappings:{"default":{"default":"less than and not approximate"}}, key:"2A89"}, {category:"Sm", mappings:{"default":{"default":"greater than and not approximate"}}, key:"2A8A"}, {category:"Sm", mappings:{"default":{"default":"less than above double line equal above greater than"}}, 
key:"2A8B"}, {category:"Sm", mappings:{"default":{"default":"greater than above double line equal above less than"}}, key:"2A8C"}, {category:"Sm", mappings:{"default":{"default":"less than above similar or equal"}}, key:"2A8D"}, {category:"Sm", mappings:{"default":{"default":"greater than above similar or equal"}}, key:"2A8E"}, {category:"Sm", mappings:{"default":{"default":"less than above similar above greater than"}}, key:"2A8F"}, {category:"Sm", mappings:{"default":{"default":"greater than above similar above less than"}}, 
key:"2A90"}, {category:"Sm", mappings:{"default":{"default":"less than above greater than above double line equal"}}, key:"2A91"}, {category:"Sm", mappings:{"default":{"default":"greater than above less than above double line equal"}}, key:"2A92"}, {category:"Sm", mappings:{"default":{"default":"less than above slanted equal above greater than above slanted equal"}}, key:"2A93"}, {category:"Sm", mappings:{"default":{"default":"greater than above slanted equal above less than above slanted equal"}}, 
key:"2A94"}, {category:"Sm", mappings:{"default":{"default":"slanted equal to or less than"}}, key:"2A95"}, {category:"Sm", mappings:{"default":{"default":"slanted equal to or greater than"}}, key:"2A96"}, {category:"Sm", mappings:{"default":{"default":"slanted equal to or less than with dot inside"}}, key:"2A97"}, {category:"Sm", mappings:{"default":{"default":"slanted equal to or greater than with dot inside"}}, key:"2A98"}, {category:"Sm", mappings:{"default":{"default":"double line equal to or less than"}}, 
key:"2A99"}, {category:"Sm", mappings:{"default":{"default":"double line equal to or greater than"}}, key:"2A9A"}, {category:"Sm", mappings:{"default":{"default":"double line slanted equal to or less than"}}, key:"2A9B"}, {category:"Sm", mappings:{"default":{"default":"double line slanted equal to or greater than"}}, key:"2A9C"}, {category:"Sm", mappings:{"default":{"default":"similar or less than"}}, key:"2A9D"}, {category:"Sm", mappings:{"default":{"default":"similar or greater than"}}, key:"2A9E"}, 
{category:"Sm", mappings:{"default":{"default":"similar above less than above equals sign"}}, key:"2A9F"}, {category:"Sm", mappings:{"default":{"default":"similar above greater than above equals sign"}}, key:"2AA0"}, {category:"Sm", mappings:{"default":{"default":"double nested less than"}}, key:"2AA1"}, {category:"Sm", mappings:{"default":{"default":"double nested greater than"}}, key:"2AA2"}, {category:"Sm", mappings:{"default":{"default":"double nested less than with underbar"}}, key:"2AA3"}, 
{category:"Sm", mappings:{"default":{"default":"greater than overlapping less than"}}, key:"2AA4"}, {category:"Sm", mappings:{"default":{"default":"greater than beside less than"}}, key:"2AA5"}, {category:"Sm", mappings:{"default":{"default":"less than closed by curve"}}, key:"2AA6"}, {category:"Sm", mappings:{"default":{"default":"greater than closed by curve"}}, key:"2AA7"}, {category:"Sm", mappings:{"default":{"default":"less than closed by curve above slanted equal"}}, key:"2AA8"}, {category:"Sm", 
mappings:{"default":{"default":"greater than closed by curve above slanted equal"}}, key:"2AA9"}, {category:"Sm", mappings:{"default":{"default":"smaller than"}}, key:"2AAA"}, {category:"Sm", mappings:{"default":{"default":"larger than"}}, key:"2AAB"}, {category:"Sm", mappings:{"default":{"default":"smaller than or equal to"}}, key:"2AAC"}, {category:"Sm", mappings:{"default":{"default":"larger than or equal to"}}, key:"2AAD"}, {category:"Sm", mappings:{"default":{"default":"equals sign with bumpy above"}}, 
key:"2AAE"}, {category:"Sm", mappings:{"default":{"default":"precedes above single line equals sign"}}, key:"2AAF"}, {category:"Sm", mappings:{"default":{"default":"succeeds above single line equals sign"}}, key:"2AB0"}, {category:"Sm", mappings:{"default":{"default":"precedes above single line not equal to"}}, key:"2AB1"}, {category:"Sm", mappings:{"default":{"default":"succeeds above single line not equal to"}}, key:"2AB2"}, {category:"Sm", mappings:{"default":{"default":"precedes above equals sign"}}, 
key:"2AB3"}, {category:"Sm", mappings:{"default":{"default":"succeeds above equals sign"}}, key:"2AB4"}, {category:"Sm", mappings:{"default":{"default":"precedes above not equal to"}}, key:"2AB5"}, {category:"Sm", mappings:{"default":{"default":"succeeds above not equal to"}}, key:"2AB6"}, {category:"Sm", mappings:{"default":{"default":"precedes above almost equal to"}}, key:"2AB7"}, {category:"Sm", mappings:{"default":{"default":"succeeds above almost equal to"}}, key:"2AB8"}, {category:"Sm", mappings:{"default":{"default":"precedes above not almost equal to"}}, 
key:"2AB9"}, {category:"Sm", mappings:{"default":{"default":"succeeds above not almost equal to"}}, key:"2ABA"}, {category:"Sm", mappings:{"default":{"default":"double precedes"}}, key:"2ABB"}, {category:"Sm", mappings:{"default":{"default":"double succeeds"}}, key:"2ABC"}, {category:"Sm", mappings:{"default":{"default":"subset with dot"}}, key:"2ABD"}, {category:"Sm", mappings:{"default":{"default":"superset with dot"}}, key:"2ABE"}, {category:"Sm", mappings:{"default":{"default":"subset with plus sign below"}}, 
key:"2ABF"}, {category:"Sm", mappings:{"default":{"default":"superset with plus sign below"}}, key:"2AC0"}, {category:"Sm", mappings:{"default":{"default":"subset with multiplication sign below"}}, key:"2AC1"}, {category:"Sm", mappings:{"default":{"default":"superset with multiplication sign below"}}, key:"2AC2"}, {category:"Sm", mappings:{"default":{"default":"subset of or equal to with dot above"}}, key:"2AC3"}, {category:"Sm", mappings:{"default":{"default":"superset of or equal to with dot above"}}, 
key:"2AC4"}, {category:"Sm", mappings:{"default":{"default":"subset of above equals sign"}}, key:"2AC5"}, {category:"Sm", mappings:{"default":{"default":"superset of above equals sign"}}, key:"2AC6"}, {category:"Sm", mappings:{"default":{"default":"subset of above tilde operator"}}, key:"2AC7"}, {category:"Sm", mappings:{"default":{"default":"superset of above tilde operator"}}, key:"2AC8"}, {category:"Sm", mappings:{"default":{"default":"subset of above almost equal to"}}, key:"2AC9"}, {category:"Sm", 
mappings:{"default":{"default":"superset of above almost equal to"}}, key:"2ACA"}, {category:"Sm", mappings:{"default":{"default":"subset of above not equal to"}}, key:"2ACB"}, {category:"Sm", mappings:{"default":{"default":"superset of above not equal to"}}, key:"2ACC"}, {category:"Sm", mappings:{"default":{"default":"square left open box operator"}}, key:"2ACD"}, {category:"Sm", mappings:{"default":{"default":"square right open box operator"}}, key:"2ACE"}, {category:"Sm", mappings:{"default":{"default":"closed subset"}}, 
key:"2ACF"}, {category:"Sm", mappings:{"default":{"default":"closed superset"}}, key:"2AD0"}, {category:"Sm", mappings:{"default":{"default":"closed subset or equal to"}}, key:"2AD1"}, {category:"Sm", mappings:{"default":{"default":"closed superset or equal to"}}, key:"2AD2"}, {category:"Sm", mappings:{"default":{"default":"subset above superset"}}, key:"2AD3"}, {category:"Sm", mappings:{"default":{"default":"superset above subset"}}, key:"2AD4"}, {category:"Sm", mappings:{"default":{"default":"subset above subset"}}, 
key:"2AD5"}, {category:"Sm", mappings:{"default":{"default":"superset above superset"}}, key:"2AD6"}, {category:"Sm", mappings:{"default":{"default":"superset beside subset"}}, key:"2AD7"}, {category:"Sm", mappings:{"default":{"default":"superset beside and joined by dash with subset"}}, key:"2AD8"}, {category:"Sm", mappings:{"default":{"default":"element of opening downwards"}}, key:"2AD9"}, {category:"Sm", mappings:{"default":{"default":"pitchfork with tee top"}}, key:"2ADA"}, {category:"Sm", mappings:{"default":{"default":"transversal intersection"}}, 
key:"2ADB"}, {category:"Sm", mappings:{"default":{"default":"forking"}}, key:"2ADC"}, {category:"Sm", mappings:{"default":{"default":"nonforking"}}, key:"2ADD"}, {category:"Sm", mappings:{"default":{"default":"short left tack"}}, key:"2ADE"}, {category:"Sm", mappings:{"default":{"default":"short down tack"}}, key:"2ADF"}, {category:"Sm", mappings:{"default":{"default":"short up tack"}}, key:"2AE0"}, {category:"Sm", mappings:{"default":{"default":"perpendicular with s"}}, key:"2AE1"}, {category:"Sm", 
mappings:{"default":{"default":"vertical bar triple right turnstile"}}, key:"2AE2"}, {category:"Sm", mappings:{"default":{"default":"double vertical bar left turnstile"}}, key:"2AE3"}, {category:"Sm", mappings:{"default":{"default":"vertical bar double left turnstile"}}, key:"2AE4"}, {category:"Sm", mappings:{"default":{"default":"double vertical bar double left turnstile"}}, key:"2AE5"}, {category:"Sm", mappings:{"default":{"default":"long dash from left member of double vertical"}}, key:"2AE6"}, 
{category:"Sm", mappings:{"default":{"default":"short down tack with overbar"}}, key:"2AE7"}, {category:"Sm", mappings:{"default":{"default":"short up tack with underbar"}}, key:"2AE8"}, {category:"Sm", mappings:{"default":{"default":"short up tack above short down tack"}}, key:"2AE9"}, {category:"Sm", mappings:{"default":{"default":"double down tack"}}, key:"2AEA"}, {category:"Sm", mappings:{"default":{"default":"double up tack"}}, key:"2AEB"}, {category:"Sm", mappings:{"default":{"default":"double stroke not sign"}}, 
key:"2AEC"}, {category:"Sm", mappings:{"default":{"default":"reversed double stroke not sign"}}, key:"2AED"}, {category:"Sm", mappings:{"default":{"default":"does not divide with reversed negation slash"}}, key:"2AEE"}, {category:"Sm", mappings:{"default":{"default":"vertical line with circle above"}}, key:"2AEF"}, {category:"Sm", mappings:{"default":{"default":"vertical line with circle below"}}, key:"2AF0"}, {category:"Sm", mappings:{"default":{"default":"down tack with circle below"}}, key:"2AF1"}, 
{category:"Sm", mappings:{"default":{"default":"parallel with horizontal stroke"}}, key:"2AF2"}, {category:"Sm", mappings:{"default":{"default":"parallel with tilde operator"}}, key:"2AF3"}, {category:"Sm", mappings:{"default":{"default":"triple vertical bar binary relation"}}, key:"2AF4"}, {category:"Sm", mappings:{"default":{"default":"triple vertical bar with horizontal stroke"}}, key:"2AF5"}, {category:"Sm", mappings:{"default":{"default":"triple colon operator"}}, key:"2AF6"}, {category:"Sm", 
mappings:{"default":{"default":"triple nested less than"}}, key:"2AF7"}, {category:"Sm", mappings:{"default":{"default":"triple nested greater than"}}, key:"2AF8"}, {category:"Sm", mappings:{"default":{"default":"double line slanted less than or equal to"}}, key:"2AF9"}, {category:"Sm", mappings:{"default":{"default":"double line slanted greater than or equal to"}}, key:"2AFA"}, {category:"Sm", mappings:{"default":{"default":"triple solidus binary relation"}}, key:"2AFB"}, {category:"Sm", mappings:{"default":{"default":"large triple vertical bar operator"}}, 
key:"2AFC"}, {category:"Sm", mappings:{"default":{"default":"double solidus operator"}}, key:"2AFD"}, {category:"Sm", mappings:{"default":{"default":"white vertical bar"}}, key:"2AFE"}, {category:"Sm", mappings:{"default":{"default":"n ary white vertical bar"}}, key:"2AFF"}, {category:"Pd", mappings:{"default":{"default":"wave dash"}}, key:"301C"}, {category:"Po", mappings:{"default":{"default":"presentation form for vertical comma"}}, key:"FE10"}, {category:"Po", mappings:{"default":{"default":"presentation form for vertical colon"}}, 
key:"FE13"}, {category:"Po", mappings:{"default":{"default":"presentation form for vertical semicolon"}}, key:"FE14"}, {category:"Po", mappings:{"default":{"default":"presentation form for vertical exclamation mark"}}, key:"FE15"}, {category:"Po", mappings:{"default":{"default":"presentation form for vertical question mark"}}, key:"FE16"}, {category:"Po", mappings:{"default":{"default":"presentation form for vertical horizontal ellipsis"}}, key:"FE19"}, {category:"Po", mappings:{"default":{"default":"presentation form for vertical two dot leader", 
alternative:"glyph for vertical two dot leader"}}, key:"FE30"}, {category:"Pd", mappings:{"default":{"default":"presentation form for vertical em dash", alternative:"glyph for vertical em dash"}}, key:"FE31"}, {category:"Pd", mappings:{"default":{"default":"presentation form for vertical en dash", alternative:"glyph for vertical en dash"}}, key:"FE32"}, {category:"Pc", mappings:{"default":{"default":"presentation form for vertical low line", alternative:"glyph for vertical spacing underscore"}}, 
key:"FE33"}, {category:"Pc", mappings:{"default":{"default":"presentation form for vertical wavy low line", alternative:"glyph for vertical spacing wavy underscore"}}, key:"FE34"}, {category:"Po", mappings:{"default":{"default":"sesame dot"}}, key:"FE45"}, {category:"Po", mappings:{"default":{"default":"white sesame dot"}}, key:"FE46"}, {category:"Po", mappings:{"default":{"default":"dashed overline", alternative:"spacing dashed overscore"}}, key:"FE49"}, {category:"Po", mappings:{"default":{"default":"centerline overline", 
alternative:"spacing centerline overscore"}}, key:"FE4A"}, {category:"Po", mappings:{"default":{"default":"wavy overline", alternative:"spacing wavy overscore"}}, key:"FE4B"}, {category:"Po", mappings:{"default":{"default":"double wavy overline", alternative:"spacing double wavy overscore"}}, key:"FE4C"}, {category:"Pc", mappings:{"default":{"default":"dashed low line", alternative:"spacing dashed underscore"}}, key:"FE4D"}, {category:"Pc", mappings:{"default":{"default":"centerline low line", alternative:"spacing centerline underscore"}}, 
key:"FE4E"}, {category:"Pc", mappings:{"default":{"default":"wavy low line", alternative:"spacing wavy underscore"}}, key:"FE4F"}, {category:"Po", mappings:{"default":{"default":"small comma"}}, key:"FE50"}, {category:"Po", mappings:{"default":{"default":"small full stop", alternative:"small period"}}, key:"FE52"}, {category:"Po", mappings:{"default":{"default":"small semicolon"}}, key:"FE54"}, {category:"Po", mappings:{"default":{"default":"small colon"}}, key:"FE55"}, {category:"Po", mappings:{"default":{"default":"small question mark"}}, 
key:"FE56"}, {category:"Po", mappings:{"default":{"default":"small exclamation mark"}}, key:"FE57"}, {category:"Pd", mappings:{"default":{"default":"small em dash"}}, key:"FE58"}, {category:"Po", mappings:{"default":{"default":"small number sign"}}, key:"FE5F"}, {category:"Po", mappings:{"default":{"default":"small ampersand"}}, key:"FE60"}, {category:"Po", mappings:{"default":{"default":"small asterisk"}}, key:"FE61"}, {category:"Sm", mappings:{"default":{"default":"small plus sign"}}, key:"FE62"}, 
{category:"Pd", mappings:{"default":{"default":"small hyphen minus"}}, key:"FE63"}, {category:"Sm", mappings:{"default":{"default":"small less than sign"}}, key:"FE64"}, {category:"Sm", mappings:{"default":{"default":"small greater than sign"}}, key:"FE65"}, {category:"Sm", mappings:{"default":{"default":"small equals sign"}}, key:"FE66"}, {category:"Po", mappings:{"default":{"default":"small reverse solidus", alternative:"small backslash"}}, key:"FE68"}, {category:"Sc", mappings:{"default":{"default":"small dollar sign"}}, 
key:"FE69"}, {category:"Po", mappings:{"default":{"default":"small percent sign"}}, key:"FE6A"}, {category:"Po", mappings:{"default":{"default":"small commercial at"}}, key:"FE6B"}, {category:"Po", mappings:{"default":{"default":"fullwidth exclamation mark"}}, key:"FF01"}, {category:"Po", mappings:{"default":{"default":"fullwidth quotation mark"}}, key:"FF02"}, {category:"Po", mappings:{"default":{"default":"fullwidth number sign"}}, key:"FF03"}, {category:"Sc", mappings:{"default":{"default":"fullwidth dollar sign"}}, 
key:"FF04"}, {category:"Po", mappings:{"default":{"default":"fullwidth percent sign"}}, key:"FF05"}, {category:"Po", mappings:{"default":{"default":"fullwidth ampersand"}}, key:"FF06"}, {category:"Po", mappings:{"default":{"default":"fullwidth apostrophe"}}, key:"FF07"}, {category:"Po", mappings:{"default":{"default":"fullwidth asterisk"}}, key:"FF0A"}, {category:"Sm", mappings:{"default":{"default":"fullwidth plus sign"}}, key:"FF0B"}, {category:"Po", mappings:{"default":{"default":"fullwidth comma"}}, 
key:"FF0C"}, {category:"Pd", mappings:{"default":{"default":"fullwidth hyphen minus"}}, key:"FF0D"}, {category:"Po", mappings:{"default":{"default":"fullwidth full stop", alternative:"fullwidth period"}}, key:"FF0E"}, {category:"Po", mappings:{"default":{"default":"fullwidth solidus", alternative:"fullwidth slash"}}, key:"FF0F"}, {category:"Po", mappings:{"default":{"default":"fullwidth colon"}}, key:"FF1A"}, {category:"Po", mappings:{"default":{"default":"fullwidth semicolon"}}, key:"FF1B"}, {category:"Sm", 
mappings:{"default":{"default":"fullwidth less than sign"}}, key:"FF1C"}, {category:"Sm", mappings:{"default":{"default":"fullwidth equals sign"}}, key:"FF1D"}, {category:"Sm", mappings:{"default":{"default":"fullwidth greater than sign"}}, key:"FF1E"}, {category:"Po", mappings:{"default":{"default":"fullwidth question mark"}}, key:"FF1F"}, {category:"Po", mappings:{"default":{"default":"fullwidth commercial at"}}, key:"FF20"}, {category:"Po", mappings:{"default":{"default":"fullwidth reverse solidus", 
alternative:"fullwidth backslash"}}, key:"FF3C"}, {category:"Sk", mappings:{"default":{"default":"fullwidth circumflex accent", alternative:"fullwidth spacing circumflex"}}, key:"FF3E"}, {category:"Pc", mappings:{"default":{"default":"fullwidth low line", alternative:"fullwidth spacing underscore"}}, key:"FF3F"}, {category:"Sk", mappings:{"default":{"default":"fullwidth grave accent", alternative:"fullwidth spacing grave"}}, key:"FF40"}, {category:"Sm", mappings:{"default":{"default":"fullwidth vertical line", 
alternative:"fullwidth vertical bar"}}, key:"FF5C"}, {category:"Sm", mappings:{"default":{"default":"fullwidth tilde", alternative:"fullwidth spacing tilde"}}, key:"FF5E"}, {category:"Sc", mappings:{"default":{"default":"fullwidth cent sign"}}, key:"FFE0"}, {category:"Sc", mappings:{"default":{"default":"fullwidth pound sign"}}, key:"FFE1"}, {category:"Sm", mappings:{"default":{"default":"fullwidth not sign"}}, key:"FFE2"}, {category:"Sk", mappings:{"default":{"default":"fullwidth macron", alternative:"fullwidth spacing macron"}}, 
key:"FFE3"}, {category:"So", mappings:{"default":{"default":"fullwidth broken bar", alternative:"fullwidth broken vertical bar"}}, key:"FFE4"}, {category:"Sc", mappings:{"default":{"default":"fullwidth yen sign"}}, key:"FFE5"}, {category:"Sc", mappings:{"default":{"default":"fullwidth won sign"}}, key:"FFE6"}, {category:"So", mappings:{"default":{"default":"halfwidth forms light vertical"}}, key:"FFE8"}, {category:"So", mappings:{"default":{"default":"halfwidth black square"}}, key:"FFED"}, {category:"So", 
mappings:{"default":{"default":"halfwidth white circle"}}, key:"FFEE"}, {category:"Ll", names:[], key:"03B1", mappings:{"default":{"default":"greek small letter alpha", "short":"alpha"}}}, {category:"Ll", names:[], key:"03B2", mappings:{"default":{"default":"greek small letter beta", "short":"beta"}}}, {category:"Ll", names:[], key:"03B3", mappings:{"default":{"default":"greek small letter gamma", "short":"gamma"}}}, {category:"Ll", names:[], key:"03B4", mappings:{"default":{"default":"greek small letter delta", 
"short":"delta"}}}, {category:"Ll", names:[], key:"03B5", mappings:{"default":{"default":"greek small letter epsilon", "short":"epsilon"}}}, {category:"Ll", names:[], key:"03B6", mappings:{"default":{"default":"greek small letter zeta", "short":"zeta"}}}, {category:"Ll", names:[], key:"03B7", mappings:{"default":{"default":"greek small letter eta", "short":"eta"}}}, {category:"Ll", names:[], key:"03B8", mappings:{"default":{"default":"greek small letter theta", "short":"theta"}}}, {category:"Ll", 
names:[], key:"03B9", mappings:{"default":{"default":"greek small letter iota", "short":"iota"}}}, {category:"Ll", names:[], key:"03BA", mappings:{"default":{"default":"greek small letter kappa", "short":"kappa"}}}, {category:"Ll", names:[], key:"03BB", mappings:{"default":{"default":"greek small letter lamda", alternative:"greek small letter lambda", "short":"lamda"}}}, {category:"Ll", names:[], key:"03BC", mappings:{"default":{"default":"greek small letter mu", "short":"mu"}}}, {category:"Ll", 
names:[], key:"03BD", mappings:{"default":{"default":"greek small letter nu", "short":"nu"}}}, {category:"Ll", names:[], key:"03BE", mappings:{"default":{"default":"greek small letter xi", "short":"xi"}}}, {category:"Ll", names:[], key:"03BF", mappings:{"default":{"default":"greek small letter omicron", "short":"omicron"}}}, {category:"Ll", names:[], key:"03C0", mappings:{"default":{"default":"greek small letter pi", "short":"pi"}}}, {category:"Ll", names:[], key:"03C1", mappings:{"default":{"default":"greek small letter rho", 
"short":"rho"}}}, {category:"Ll", names:[], key:"03C2", mappings:{"default":{"default":"greek small letter final sigma", "short":"final sigma"}}}, {category:"Ll", names:[], key:"03C3", mappings:{"default":{"default":"greek small letter sigma", "short":"sigma"}}}, {category:"Ll", names:[], key:"03C4", mappings:{"default":{"default":"greek small letter tau", "short":"tau"}}}, {category:"Ll", names:[], key:"03C5", mappings:{"default":{"default":"greek small letter upsilon", "short":"upsilon"}}}, {category:"Ll", 
names:[], key:"03C6", mappings:{"default":{"default":"greek small letter phi", "short":"phi"}}}, {category:"Ll", names:[], key:"03C7", mappings:{"default":{"default":"greek small letter chi", "short":"chi"}}}, {category:"Ll", names:[], key:"03C8", mappings:{"default":{"default":"greek small letter psi", "short":"psi"}}}, {category:"Ll", names:[], key:"03C9", mappings:{"default":{"default":"greek small letter omega", "short":"omega"}}}, {category:"Ll", mappings:{"default":{"default":"greek beta symbol", 
alternative:"greek small letter curled beta", "short":"beta"}}, key:"03D0"}, {category:"Ll", mappings:{"default":{"default":"greek theta symbol", alternative:"greek small letter script theta", "short":"theta"}}, key:"03D1"}, {category:"Ll", mappings:{"default":{"default":"greek phi symbol", alternative:"greek small letter script phi", "short":"phi"}}, key:"03D5"}, {category:"Ll", mappings:{"default":{"default":"greek pi symbol", alternative:"greek small letter omega pi", "short":"pi"}}, key:"03D6"}, 
{category:"Ll", mappings:{"default":{"default":"greek kai symbol", "short":"kai"}}, key:"03D7"}, {category:"Ll", mappings:{"default":{"default":"greek kappa symbol", alternative:"greek small letter script kappa", "short":"kappa"}}, key:"03F0"}, {category:"Ll", mappings:{"default":{"default":"greek rho symbol", alternative:"greek small letter tailed rho", "short":"rho"}}, key:"03F1"}, {category:"Ll", mappings:{"default":{"default":"greek lunate epsilon symbol", "short":"epsilon"}}, key:"03F5"}, {category:"Sm", 
mappings:{"default":{"default":"greek reversed lunate epsilon symbol", "short":"reversed epsilon"}}, key:"03F6"}, {category:"Lu", names:[], key:"0391", mappings:{"default":{"default":"greek capital letter alpha", "short":"cap alpha"}}}, {category:"Lu", names:[], key:"0392", mappings:{"default":{"default":"greek capital letter beta", "short":"cap beta"}}}, {category:"Lu", names:[], key:"0393", mappings:{"default":{"default":"greek capital letter gamma", "short":"cap gamma"}}}, {category:"Lu", names:[], 
key:"0394", mappings:{"default":{"default":"greek capital letter delta", "short":"cap delta"}}}, {category:"Lu", names:[], key:"0395", mappings:{"default":{"default":"greek capital letter epsilon", "short":"cap epsilon"}}}, {category:"Lu", names:[], key:"0396", mappings:{"default":{"default":"greek capital letter zeta", "short":"cap zeta"}}}, {category:"Lu", names:[], key:"0397", mappings:{"default":{"default":"greek capital letter eta", "short":"cap eta"}}}, {category:"Lu", names:[], key:"0398", 
mappings:{"default":{"default":"greek capital letter theta", "short":"cap theta"}}}, {category:"Lu", names:[], key:"0399", mappings:{"default":{"default":"greek capital letter iota", "short":"cap iota"}}}, {category:"Lu", names:[], key:"039A", mappings:{"default":{"default":"greek capital letter kappa", "short":"cap kappa"}}}, {category:"Lu", names:[], key:"039B", mappings:{"default":{"default":"greek capital letter lamda", alternative:"greek capital letter lambda", "short":"cap lamda"}}}, {category:"Lu", 
names:[], key:"039C", mappings:{"default":{"default":"greek capital letter mu", "short":"cap mu"}}}, {category:"Lu", names:[], key:"039D", mappings:{"default":{"default":"greek capital letter nu", "short":"cap nu"}}}, {category:"Lu", names:[], key:"039E", mappings:{"default":{"default":"greek capital letter xi", "short":"cap xi"}}}, {category:"Lu", names:[], key:"039F", mappings:{"default":{"default":"greek capital letter omicron", "short":"cap omicron"}}}, {category:"Lu", names:[], key:"03A0", mappings:{"default":{"default":"greek capital letter pi", 
"short":"cap pi"}}}, {category:"Lu", names:[], key:"03A1", mappings:{"default":{"default":"greek capital letter rho", "short":"cap rho"}}}, {category:"Lu", names:[], key:"03A3", mappings:{"default":{"default":"greek capital letter sigma", "short":"cap sigma"}}}, {category:"Lu", names:[], key:"03A4", mappings:{"default":{"default":"greek capital letter tau", "short":"cap tau"}}}, {category:"Lu", names:[], key:"03A5", mappings:{"default":{"default":"greek capital letter upsilon", "short":"cap upsilon"}}}, 
{category:"Lu", names:[], key:"03A6", mappings:{"default":{"default":"greek capital letter phi", "short":"cap phi"}}}, {category:"Lu", names:[], key:"03A7", mappings:{"default":{"default":"greek capital letter chi", "short":"cap chi"}}}, {category:"Lu", names:[], key:"03A8", mappings:{"default":{"default":"greek capital letter psi", "short":"cap psi"}}}, {category:"Lu", names:[], key:"03A9", mappings:{"default":{"default":"greek capital letter omega", "short":"cap omega"}}}, {category:"Lu", mappings:{"default":{"default":"greek capital theta symbol", 
"short":"cap theta"}}, key:"03F4"}, {category:"Ps", mappings:{"default":{"default":"left parenthesis", alternative:"opening parenthesis"}}, key:"0028"}, {category:"Pe", mappings:{"default":{"default":"right parenthesis", alternative:"closing parenthesis"}}, key:"0029"}, {category:"Ps", mappings:{"default":{"default":"left square bracket", alternative:"opening square bracket"}}, key:"005B"}, {category:"Pe", mappings:{"default":{"default":"right square bracket", alternative:"closing square bracket"}}, 
key:"005D"}, {category:"Ps", mappings:{"default":{"default":"left curly bracket", alternative:"opening curly bracket"}}, key:"007B"}, {category:"Pe", mappings:{"default":{"default":"right curly bracket", alternative:"closing curly bracket"}}, key:"007D"}, {category:"Ps", mappings:{"default":{"default":"left square bracket with quill"}}, key:"2045"}, {category:"Pe", mappings:{"default":{"default":"right square bracket with quill"}}, key:"2046"}, {category:"Sm", mappings:{"default":{"default":"left ceiling"}}, 
key:"2308"}, {category:"Sm", mappings:{"default":{"default":"right ceiling"}}, key:"2309"}, {category:"Sm", mappings:{"default":{"default":"left floor"}}, key:"230A"}, {category:"Sm", mappings:{"default":{"default":"right floor"}}, key:"230B"}, {category:"So", mappings:{"default":{"default":"bottom right crop"}}, key:"230C"}, {category:"So", mappings:{"default":{"default":"bottom left crop"}}, key:"230D"}, {category:"So", mappings:{"default":{"default":"top right crop"}}, key:"230E"}, {category:"So", 
mappings:{"default":{"default":"top left crop"}}, key:"230F"}, {category:"So", mappings:{"default":{"default":"top left corner"}}, key:"231C"}, {category:"So", mappings:{"default":{"default":"top right corner"}}, key:"231D"}, {category:"So", mappings:{"default":{"default":"bottom left corner"}}, key:"231E"}, {category:"So", mappings:{"default":{"default":"bottom right corner"}}, key:"231F"}, {category:"Sm", mappings:{"default":{"default":"top half integral"}}, key:"2320"}, {category:"Sm", mappings:{"default":{"default":"bottom half integral"}}, 
key:"2321"}, {category:"Ps", mappings:{"default":{"default":"left pointing angle bracket", alternative:"bra"}}, key:"2329"}, {category:"Pe", mappings:{"default":{"default":"right pointing angle bracket", alternative:"ket"}}, key:"232A"}, {category:"Sm", mappings:{"default":{"default":"left parenthesis upper hook"}}, key:"239B"}, {category:"Sm", mappings:{"default":{"default":"left parenthesis extension"}}, key:"239C"}, {category:"Sm", mappings:{"default":{"default":"left parenthesis lower hook"}}, 
key:"239D"}, {category:"Sm", mappings:{"default":{"default":"right parenthesis upper hook"}}, key:"239E"}, {category:"Sm", mappings:{"default":{"default":"right parenthesis extension"}}, key:"239F"}, {category:"Sm", mappings:{"default":{"default":"right parenthesis lower hook"}}, key:"23A0"}, {category:"Sm", mappings:{"default":{"default":"left square bracket upper corner"}}, key:"23A1"}, {category:"Sm", mappings:{"default":{"default":"left square bracket extension"}}, key:"23A2"}, {category:"Sm", 
mappings:{"default":{"default":"left square bracket lower corner"}}, key:"23A3"}, {category:"Sm", mappings:{"default":{"default":"right square bracket upper corner"}}, key:"23A4"}, {category:"Sm", mappings:{"default":{"default":"right square bracket extension"}}, key:"23A5"}, {category:"Sm", mappings:{"default":{"default":"right square bracket lower corner"}}, key:"23A6"}, {category:"Sm", mappings:{"default":{"default":"left curly bracket upper hook"}}, key:"23A7"}, {category:"Sm", mappings:{"default":{"default":"left curly bracket middle piece"}}, 
key:"23A8"}, {category:"Sm", mappings:{"default":{"default":"left curly bracket lower hook"}}, key:"23A9"}, {category:"Sm", mappings:{"default":{"default":"curly bracket extension"}}, key:"23AA"}, {category:"Sm", mappings:{"default":{"default":"right curly bracket upper hook"}}, key:"23AB"}, {category:"Sm", mappings:{"default":{"default":"right curly bracket middle piece"}}, key:"23AC"}, {category:"Sm", mappings:{"default":{"default":"right curly bracket lower hook"}}, key:"23AD"}, {category:"Sm", 
mappings:{"default":{"default":"integral extension"}}, key:"23AE"}, {category:"Sm", mappings:{"default":{"default":"horizontal line extension"}}, key:"23AF"}, {category:"Sm", mappings:{"default":{"default":"upper left or lower right curly bracket section"}}, key:"23B0"}, {category:"Sm", mappings:{"default":{"default":"upper right or lower left curly bracket section"}}, key:"23B1"}, {category:"Sm", mappings:{"default":{"default":"summation top"}}, key:"23B2"}, {category:"Sm", mappings:{"default":{"default":"summation bottom"}}, 
key:"23B3"}, {category:"So", mappings:{"default":{"default":"top square bracket"}}, key:"23B4"}, {category:"So", mappings:{"default":{"default":"bottom square bracket"}}, key:"23B5"}, {category:"So", mappings:{"default":{"default":"bottom square bracket over top square bracket"}}, key:"23B6"}, {category:"So", mappings:{"default":{"default":"radical symbol bottom"}}, key:"23B7"}, {category:"So", mappings:{"default":{"default":"left vertical box line"}}, key:"23B8"}, {category:"So", mappings:{"default":{"default":"right vertical box line"}}, 
key:"23B9"}, {category:"Sm", mappings:{"default":{"default":"top parenthesis"}}, key:"23DC"}, {category:"Sm", mappings:{"default":{"default":"bottom parenthesis"}}, key:"23DD"}, {category:"Sm", mappings:{"default":{"default":"top curly bracket"}}, key:"23DE"}, {category:"Sm", mappings:{"default":{"default":"bottom curly bracket"}}, key:"23DF"}, {category:"Sm", mappings:{"default":{"default":"top tortoise shell bracket"}}, key:"23E0"}, {category:"Sm", mappings:{"default":{"default":"bottom tortoise shell bracket"}}, 
key:"23E1"}, {category:"Ps", mappings:{"default":{"default":"medium left parenthesis ornament"}}, key:"2768"}, {category:"Pe", mappings:{"default":{"default":"medium right parenthesis ornament"}}, key:"2769"}, {category:"Ps", mappings:{"default":{"default":"medium flattened left parenthesis ornament"}}, key:"276A"}, {category:"Pe", mappings:{"default":{"default":"medium flattened right parenthesis ornament"}}, key:"276B"}, {category:"Ps", mappings:{"default":{"default":"medium left pointing angle bracket ornament"}}, 
key:"276C"}, {category:"Pe", mappings:{"default":{"default":"medium right pointing angle bracket ornament"}}, key:"276D"}, {category:"Ps", mappings:{"default":{"default":"heavy left pointing angle quotation mark ornament"}}, key:"276E"}, {category:"Pe", mappings:{"default":{"default":"heavy right pointing angle quotation mark ornament"}}, key:"276F"}, {category:"Ps", mappings:{"default":{"default":"heavy left pointing angle bracket ornament"}}, key:"2770"}, {category:"Pe", mappings:{"default":{"default":"heavy right pointing angle bracket ornament"}}, 
key:"2771"}, {category:"Ps", mappings:{"default":{"default":"light left tortoise shell bracket ornament"}}, key:"2772"}, {category:"Pe", mappings:{"default":{"default":"light right tortoise shell bracket ornament"}}, key:"2773"}, {category:"Ps", mappings:{"default":{"default":"medium left curly bracket ornament"}}, key:"2774"}, {category:"Pe", mappings:{"default":{"default":"medium right curly bracket ornament"}}, key:"2775"}, {category:"Ps", mappings:{"default":{"default":"left s shaped bag delimiter"}}, 
key:"27C5"}, {category:"Pe", mappings:{"default":{"default":"right s shaped bag delimiter"}}, key:"27C6"}, {category:"Ps", mappings:{"default":{"default":"mathematical left white square bracket"}}, key:"27E6"}, {category:"Pe", mappings:{"default":{"default":"mathematical right white square bracket"}}, key:"27E7"}, {category:"Ps", mappings:{"default":{"default":"mathematical left angle bracket"}}, key:"27E8"}, {category:"Pe", mappings:{"default":{"default":"mathematical right angle bracket"}}, key:"27E9"}, 
{category:"Ps", mappings:{"default":{"default":"mathematical left double angle bracket"}}, key:"27EA"}, {category:"Pe", mappings:{"default":{"default":"mathematical right double angle bracket"}}, key:"27EB"}, {category:"Ps", mappings:{"default":{"default":"mathematical left white tortoise shell bracket"}}, key:"27EC"}, {category:"Pe", mappings:{"default":{"default":"mathematical right white tortoise shell bracket"}}, key:"27ED"}, {category:"Ps", mappings:{"default":{"default":"mathematical left flattened parenthesis"}}, 
key:"27EE"}, {category:"Pe", mappings:{"default":{"default":"mathematical right flattened parenthesis"}}, key:"27EF"}, {category:"Ps", mappings:{"default":{"default":"left white curly bracket"}}, key:"2983"}, {category:"Pe", mappings:{"default":{"default":"right white curly bracket"}}, key:"2984"}, {category:"Ps", mappings:{"default":{"default":"left white parenthesis"}}, key:"2985"}, {category:"Pe", mappings:{"default":{"default":"right white parenthesis"}}, key:"2986"}, {category:"Ps", mappings:{"default":{"default":"z notation left image bracket"}}, 
key:"2987"}, {category:"Pe", mappings:{"default":{"default":"z notation right image bracket"}}, key:"2988"}, {category:"Ps", mappings:{"default":{"default":"z notation left binding bracket"}}, key:"2989"}, {category:"Pe", mappings:{"default":{"default":"z notation right binding bracket"}}, key:"298A"}, {category:"Ps", mappings:{"default":{"default":"left square bracket with underbar"}}, key:"298B"}, {category:"Pe", mappings:{"default":{"default":"right square bracket with underbar"}}, key:"298C"}, 
{category:"Ps", mappings:{"default":{"default":"left square bracket with tick in top corner"}}, key:"298D"}, {category:"Pe", mappings:{"default":{"default":"right square bracket with tick in bottom corner"}}, key:"298E"}, {category:"Ps", mappings:{"default":{"default":"left square bracket with tick in bottom corner"}}, key:"298F"}, {category:"Pe", mappings:{"default":{"default":"right square bracket with tick in top corner"}}, key:"2990"}, {category:"Ps", mappings:{"default":{"default":"left angle bracket with dot"}}, 
key:"2991"}, {category:"Pe", mappings:{"default":{"default":"right angle bracket with dot"}}, key:"2992"}, {category:"Ps", mappings:{"default":{"default":"left arc less than bracket"}}, key:"2993"}, {category:"Pe", mappings:{"default":{"default":"right arc greater than bracket"}}, key:"2994"}, {category:"Ps", mappings:{"default":{"default":"double left arc greater than bracket"}}, key:"2995"}, {category:"Pe", mappings:{"default":{"default":"double right arc less than bracket"}}, key:"2996"}, {category:"Ps", 
mappings:{"default":{"default":"left black tortoise shell bracket"}}, key:"2997"}, {category:"Pe", mappings:{"default":{"default":"right black tortoise shell bracket"}}, key:"2998"}, {category:"Ps", mappings:{"default":{"default":"left wiggly fence"}}, key:"29D8"}, {category:"Pe", mappings:{"default":{"default":"right wiggly fence"}}, key:"29D9"}, {category:"Ps", mappings:{"default":{"default":"left double wiggly fence"}}, key:"29DA"}, {category:"Pe", mappings:{"default":{"default":"right double wiggly fence"}}, 
key:"29DB"}, {category:"Ps", mappings:{"default":{"default":"left pointing curved angle bracket"}}, key:"29FC"}, {category:"Pe", mappings:{"default":{"default":"right pointing curved angle bracket"}}, key:"29FD"}, {category:"Ps", mappings:{"default":{"default":"top left half bracket"}}, key:"2E22"}, {category:"Pe", mappings:{"default":{"default":"top right half bracket"}}, key:"2E23"}, {category:"Ps", mappings:{"default":{"default":"bottom left half bracket"}}, key:"2E24"}, {category:"Pe", mappings:{"default":{"default":"bottom right half bracket"}}, 
key:"2E25"}, {category:"Ps", mappings:{"default":{"default":"left sideways u bracket"}}, key:"2E26"}, {category:"Pe", mappings:{"default":{"default":"right sideways u bracket"}}, key:"2E27"}, {category:"Ps", mappings:{"default":{"default":"left double parenthesis"}}, key:"2E28"}, {category:"Pe", mappings:{"default":{"default":"right double parenthesis"}}, key:"2E29"}, {category:"Ps", mappings:{"default":{"default":"left angle bracket", alternative:"opening angle bracket"}}, key:"3008"}, {category:"Pe", 
mappings:{"default":{"default":"right angle bracket", alternative:"closing angle bracket"}}, key:"3009"}, {category:"Ps", mappings:{"default":{"default":"left double angle bracket", alternative:"opening double angle bracket"}}, key:"300A"}, {category:"Pe", mappings:{"default":{"default":"right double angle bracket", alternative:"closing double angle bracket"}}, key:"300B"}, {category:"Ps", mappings:{"default":{"default":"left corner bracket", alternative:"opening corner bracket"}}, key:"300C"}, {category:"Pe", 
mappings:{"default":{"default":"right corner bracket", alternative:"closing corner bracket"}}, key:"300D"}, {category:"Ps", mappings:{"default":{"default":"left white corner bracket", alternative:"opening white corner bracket"}}, key:"300E"}, {category:"Pe", mappings:{"default":{"default":"right white corner bracket", alternative:"closing white corner bracket"}}, key:"300F"}, {category:"Ps", mappings:{"default":{"default":"left black lenticular bracket", alternative:"opening black lenticular bracket"}}, 
key:"3010"}, {category:"Pe", mappings:{"default":{"default":"right black lenticular bracket", alternative:"closing black lenticular bracket"}}, key:"3011"}, {category:"Ps", mappings:{"default":{"default":"left tortoise shell bracket", alternative:"opening tortoise shell bracket"}}, key:"3014"}, {category:"Pe", mappings:{"default":{"default":"right tortoise shell bracket", alternative:"closing tortoise shell bracket"}}, key:"3015"}, {category:"Ps", mappings:{"default":{"default":"left white lenticular bracket", 
alternative:"opening white lenticular bracket"}}, key:"3016"}, {category:"Pe", mappings:{"default":{"default":"right white lenticular bracket", alternative:"closing white lenticular bracket"}}, key:"3017"}, {category:"Ps", mappings:{"default":{"default":"left white tortoise shell bracket", alternative:"opening white tortoise shell bracket"}}, key:"3018"}, {category:"Pe", mappings:{"default":{"default":"right white tortoise shell bracket", alternative:"closing white tortoise shell bracket"}}, key:"3019"}, 
{category:"Ps", mappings:{"default":{"default":"left white square bracket", alternative:"opening white square bracket"}}, key:"301A"}, {category:"Pe", mappings:{"default":{"default":"right white square bracket", alternative:"closing white square bracket"}}, key:"301B"}, {category:"Ps", mappings:{"default":{"default":"reversed double prime quotation mark"}}, key:"301D"}, {category:"Pe", mappings:{"default":{"default":"double prime quotation mark"}}, key:"301E"}, {category:"Pe", mappings:{"default":{"default":"low double prime quotation mark"}}, 
key:"301F"}, {category:"Ps", mappings:{"default":{"default":"ornate left parenthesis"}}, key:"FD3E"}, {category:"Pe", mappings:{"default":{"default":"ornate right parenthesis"}}, key:"FD3F"}, {category:"Ps", mappings:{"default":{"default":"presentation form for vertical left white lenticular bracket"}}, key:"FE17"}, {category:"Pe", mappings:{"default":{"default":"presentation form for vertical right white lenticular bracket"}}, key:"FE18"}, {category:"Ps", mappings:{"default":{"default":"presentation form for vertical left parenthesis", 
alternative:"glyph for vertical opening parenthesis"}}, key:"FE35"}, {category:"Pe", mappings:{"default":{"default":"presentation form for vertical right parenthesis", alternative:"glyph for vertical closing parenthesis"}}, key:"FE36"}, {category:"Ps", mappings:{"default":{"default":"presentation form for vertical left curly bracket", alternative:"glyph for vertical opening curly bracket"}}, key:"FE37"}, {category:"Pe", mappings:{"default":{"default":"presentation form for vertical right curly bracket", 
alternative:"glyph for vertical closing curly bracket"}}, key:"FE38"}, {category:"Ps", mappings:{"default":{"default":"presentation form for vertical left tortoise shell bracket", alternative:"glyph for vertical opening tortoise shell bracket"}}, key:"FE39"}, {category:"Pe", mappings:{"default":{"default":"presentation form for vertical right tortoise shell bracket", alternative:"glyph for vertical closing tortoise shell bracket"}}, key:"FE3A"}, {category:"Ps", mappings:{"default":{"default":"presentation form for vertical left black lenticular bracket", 
alternative:"glyph for vertical opening black lenticular bracket"}}, key:"FE3B"}, {category:"Pe", mappings:{"default":{"default":"presentation form for vertical right black lenticular bracket", alternative:"glyph for vertical closing black lenticular bracket"}}, key:"FE3C"}, {category:"Ps", mappings:{"default":{"default":"presentation form for vertical left double angle bracket", alternative:"glyph for vertical opening double angle bracket"}}, key:"FE3D"}, {category:"Pe", mappings:{"default":{"default":"presentation form for vertical right double angle bracket", 
alternative:"glyph for vertical closing double angle bracket"}}, key:"FE3E"}, {category:"Ps", mappings:{"default":{"default":"presentation form for vertical left angle bracket", alternative:"glyph for vertical opening angle bracket"}}, key:"FE3F"}, {category:"Pe", mappings:{"default":{"default":"presentation form for vertical right angle bracket", alternative:"glyph for vertical closing angle bracket"}}, key:"FE40"}, {category:"Ps", mappings:{"default":{"default":"presentation form for vertical left corner bracket", 
alternative:"glyph for vertical opening corner bracket"}}, key:"FE41"}, {category:"Pe", mappings:{"default":{"default":"presentation form for vertical right corner bracket", alternative:"glyph for vertical closing corner bracket"}}, key:"FE42"}, {category:"Ps", mappings:{"default":{"default":"presentation form for vertical left white corner bracket", alternative:"glyph for vertical opening white corner bracket"}}, key:"FE43"}, {category:"Pe", mappings:{"default":{"default":"presentation form for vertical right white corner bracket", 
alternative:"glyph for vertical closing white corner bracket"}}, key:"FE44"}, {category:"Ps", mappings:{"default":{"default":"presentation form for vertical left square bracket"}}, key:"FE47"}, {category:"Pe", mappings:{"default":{"default":"presentation form for vertical right square bracket"}}, key:"FE48"}, {category:"Ps", mappings:{"default":{"default":"small left parenthesis", alternative:"small opening parenthesis"}}, key:"FE59"}, {category:"Pe", mappings:{"default":{"default":"small right parenthesis", 
alternative:"small closing parenthesis"}}, key:"FE5A"}, {category:"Ps", mappings:{"default":{"default":"small left curly bracket", alternative:"small opening curly bracket"}}, key:"FE5B"}, {category:"Pe", mappings:{"default":{"default":"small right curly bracket", alternative:"small closing curly bracket"}}, key:"FE5C"}, {category:"Ps", mappings:{"default":{"default":"small left tortoise shell bracket", alternative:"small opening tortoise shell bracket"}}, key:"FE5D"}, {category:"Pe", mappings:{"default":{"default":"small right tortoise shell bracket", 
alternative:"small closing tortoise shell bracket"}}, key:"FE5E"}, {category:"Ps", mappings:{"default":{"default":"fullwidth left parenthesis", alternative:"fullwidth opening parenthesis"}}, key:"FF08"}, {category:"Pe", mappings:{"default":{"default":"fullwidth right parenthesis", alternative:"fullwidth closing parenthesis"}}, key:"FF09"}, {category:"Ps", mappings:{"default":{"default":"fullwidth left square bracket", alternative:"fullwidth opening square bracket"}}, key:"FF3B"}, {category:"Pe", 
mappings:{"default":{"default":"fullwidth right square bracket", alternative:"fullwidth closing square bracket"}}, key:"FF3D"}, {category:"Ps", mappings:{"default":{"default":"fullwidth left curly bracket", alternative:"fullwidth opening curly bracket"}}, key:"FF5B"}, {category:"Pe", mappings:{"default":{"default":"fullwidth right curly bracket", alternative:"fullwidth closing curly bracket"}}, key:"FF5D"}, {category:"Ps", mappings:{"default":{"default":"fullwidth left white parenthesis"}}, key:"FF5F"}, 
{category:"Pe", mappings:{"default":{"default":"fullwidth right white parenthesis"}}, key:"FF60"}, {category:"Ps", mappings:{"default":{"default":"halfwidth left corner bracket", alternative:"halfwidth opening corner bracket"}}, key:"FF62"}, {category:"Pe", mappings:{"default":{"default":"halfwidth right corner bracket", alternative:"halfwidth closing corner bracket"}}, key:"FF63"}];
cvox.AndroidMathMap.FUNCTION_MAPPINGS_ = [{category:"Elementary", mappings:{"default":{"default":"logarithm", alternative:"logarithm function", "short":"log"}}, key:"log", names:["log"]}, {category:"Elementary", mappings:{"default":{"default":"natural logarithm", alternative:"natural logarithm function", "short":"natural log"}}, key:"ln", names:["ln"]}, {category:"Elementary", mappings:{"default":{"default":"logarithm base 10", "short":"log base 10"}}, key:"lg", names:["lg"]}, {category:"Elementary", 
mappings:{"default":{"default":"exponential", alternative:"exponential function", "short":"exp"}}, key:"exp", names:["exp", "expt"]}, {category:"Elementary", mappings:{"default":{"default":"greatest common divisor", "short":"gcd"}}, key:"gcd", names:["gcd"]}, {category:"Elementary", mappings:{"default":{"default":"least common multiple", "short":"lcm"}}, key:"gcd", names:["gcd"]}, {category:"Complex", mappings:{"default":{"default":"argument", "short":"arg"}}, key:"arg", names:["arg"]}, {category:"Complex", 
mappings:{"default":{"default":"imaginary part", "short":"imaginary"}}, key:"im", names:["im"]}, {category:"Complex", mappings:{"default":{"default":"real part", "short":"real"}}, key:"re", names:["re"]}, {category:"Limits", mappings:{"default":{"default":"infimum", "short":"inf"}}, key:"inf", names:["inf"]}, {category:"Limits", mappings:{"default":{"default":"limit", "short":"lim"}}, key:"lim", names:["lim"]}, {category:"Limits", mappings:{"default":{"default":"infimum default", alternative:"inferior limit", 
"short":"liminf"}}, key:"liminf", names:["lim inf"]}, {category:"Limits", mappings:{"default":{"default":"supremum limit", alternative:"superior limit", "short":"limsup"}}, key:"limsup", names:["lim sup"]}, {category:"Limits", mappings:{"default":{"default":"maximum", "short":"max"}}, key:"max", names:["max"]}, {category:"Limits", mappings:{"default":{"default":"minimum", "short":"min"}}, key:"min", names:["min"]}, {category:"Limits", mappings:{"default":{"default":"supremum", "short":"sup"}}, key:"sup", 
names:["sup"]}, {category:"Limits", mappings:{"default":{"default":"injective limit", alternative:"direct limit", "short":"colimit"}}, key:"injlim", names:["injlim", "inj lim"]}, {category:"Limits", mappings:{"default":{"default":"projective limit", alternative:"inverse limit", "short":"limit"}}, key:"projlim", names:["projlim", "proj lim"]}, {category:"Elementary", mappings:{"default":{"default":"modulo", "short":"mod"}}, key:"mod", names:["mod"]}, {category:"Probability", mappings:{"default":{"default":"probability"}}, 
key:"Pr", names:["Pr"]}, {category:"Trigonometric", mappings:{"default":{"default":"cosine function", "short":"cosine"}}, key:"cos", names:["cos", "cosine"]}, {category:"Trigonometric", mappings:{"default":{"default":"cotangent function", "short":"cotangent"}}, key:"cot", names:["cot"]}, {category:"Trigonometric", mappings:{"default":{"default":"cosecant function", "short":"cosecant"}}, key:"csc", names:["csc"]}, {category:"Trigonometric", mappings:{"default":{"default":"secant function", "short":"secant"}}, 
key:"sec", names:["sec"]}, {category:"Trigonometric", mappings:{"default":{"default":"sine function", alternative:"sine function", "short":"sine"}}, key:"sin", names:["sin", "sine"]}, {category:"Trigonometric", mappings:{"default":{"default":"tangent function", "short":"tangent"}}, key:"tan", names:["tan"]}, {category:"Cyclometric", mappings:{"default":{"default":"inverse cosine function", alternative:"arc cosine function", "short":"arc cosine"}}, key:"arccos", names:["arccos"]}, {category:"Cyclometric", 
mappings:{"default":{"default":"inverse cotangent function", alternative:"arc cotangent function", "short":"arc cotangent"}}, key:"arccot", names:["arccot"]}, {category:"Cyclometric", mappings:{"default":{"default":"inverse cosecant function", alternative:"arc cosecant function", "short":"arc cosecant"}}, key:"arccsc", names:["arccsc"]}, {category:"Cyclometric", mappings:{"default":{"default":"inverse secant function", alternative:"arc secant function", "short":"arc secant"}}, key:"arcsec", names:["arcsec"]}, 
{category:"Cyclometric", mappings:{"default":{"default":"inverse sine function", alternative:"arc sine function", "short":"arc sine"}}, key:"arcsin", names:["arcsin"]}, {category:"Cyclometric", mappings:{"default":{"default":"inverse tangent function", alternative:"arc tangent function", "short":"arc tangent"}}, key:"arctan", names:["arctan"]}, {category:"Hyperbolic", mappings:{"default":{"default":"hyperbolic cosine function", "short":"hyperbolic cosine"}}, key:"cosh", names:["cosh"]}, {category:"Hyperbolic", 
mappings:{"default":{"default":"hyperbolic cotangent function", "short":"hyperbolic cotangent"}}, key:"coth", names:["coth"]}, {category:"Hyperbolic", mappings:{"default":{"default":"hyperbolic cosecant function", "short":"hyperbolic cosecant"}}, key:"csch", names:["csch"]}, {category:"Hyperbolic", mappings:{"default":{"default":"hyperbolic secant function", "short":"hyperbolic secant"}}, key:"sech", names:["sech"]}, {category:"Hyperbolic", mappings:{"default":{"default":"hyperbolic sine function", 
"short":"hyperbolic sine"}}, key:"sinh", names:["sinh"]}, {category:"Hyperbolic", mappings:{"default":{"default":"hyperbolic tangent function", "short":"hyperbolic tangent"}}, key:"tanh", names:["tanh"]}, {category:"Area", mappings:{"default":{"default":"inverse hyperbolic cosine function", alternative:"area hyperbolic cosine function", "short":"area hyperbolic cosine"}}, key:"arcosh", names:["arcosh", "arccosh"]}, {category:"Area", mappings:{"default":{"default":"inverse hyperbolic cotangent function", 
alternative:"area hyperbolic cotangent function", "short":"area hyperbolic cotangent"}}, key:"arcoth", names:["arcoth", "arccoth"]}, {category:"Area", mappings:{"default":{"default":"inverse hyperbolic cosecant function", alternative:"area hyperbolic cosecant function", "short":"area hyperbolic cosecant"}}, key:"arcsch", names:["arcsch", "arccsch"]}, {category:"Area", mappings:{"default":{"default":"inverse hyperbolic secant function", alternative:"area hyperbolic secant function", "short":"area hyperbolic secant"}}, 
key:"arsech", names:["arsech", "arcsech"]}, {category:"Area", mappings:{"default":{"default":"inverse hyperbolic sine function", alternative:"area hyperbolic sine function", "short":"area hyperbolic sine"}}, key:"arsinh", names:["arsinh", "arcsinh"]}, {category:"Area", mappings:{"default":{"default":"inverse hyperbolic tangent function", alternative:"area hyperbolic tangent function", "short":"area hyperbolic tangent"}}, key:"artanh", names:["artanh", "arctanh"]}, {category:"Algebra", mappings:{"default":{"default":"degree"}}, 
key:"deg", names:["deg"]}, {category:"Algebra", mappings:{"default":{"default":"determinant", "short":"det"}}, key:"det", names:["det"]}, {category:"Algebra", mappings:{"default":{"default":"dimension"}}, key:"dim", names:["dim"]}, {category:"Algebra", mappings:{"default":{"default":"homomorphism", "short":"hom"}}, key:"hom", names:["hom", "Hom"]}, {category:"Algebra", mappings:{"default":{"default":"kernel"}}, key:"ker", names:["ker"]}, {category:"Algebra", mappings:{"default":{"default":"trace"}}, 
key:"Tr", names:["Tr", "tr"]}];
cvox.AndroidVox = function() {
  cvox.ChromeVox.navigationManager.ignoreIframesNoMatterWhat();
};
goog.exportSymbol("cvox.AndroidVox", cvox.AndroidVox);
cvox.AndroidVox.performAction = function(actionJson) {
  var jsonObj = JSON.parse(actionJson), action = jsonObj.action, granularity = jsonObj.granularity, htmlElementName = jsonObj.element, inSearchMode = cvox.SearchWidget.getInstance().isActive();
  16 == granularity && 512 == action && (cvox.ChromeVox.navigationManager.setReversed(!1), cvox.ChromeVox.navigationManager.syncToBeginning(), cvox.ChromeVox.navigationManager.updateIndicator());
  if (16 == granularity) {
    return cvox.ChromeVoxUserCommands.commands.readFromHere(), !0;
  }
  cvox.ChromeVoxUserCommands.commands.stopSpeech();
  if (256 == action || 512 == action) {
    inSearchMode || cvox.ChromeVoxEventWatcher.setUpTextHandler();
  }
  var currentTextHandler = cvox.ChromeVoxEventWatcher.currentTextHandler;
  currentTextHandler || document.activeElement == document.body;
  if (currentTextHandler && 1 == granularity) {
    if (256 == action) {
      return currentTextHandler.moveCursorToNextCharacter();
    }
    if (512 == action) {
      return currentTextHandler.moveCursorToPreviousCharacter();
    }
  } else {
    if (currentTextHandler && 2 == granularity) {
      if (256 == action) {
        return currentTextHandler.moveCursorToNextWord();
      }
      if (512 == action) {
        return currentTextHandler.moveCursorToPreviousWord();
      }
    } else {
      if (currentTextHandler && 8 == granularity) {
        if (256 == action) {
          return currentTextHandler.moveCursorToNextParagraph();
        }
        if (512 == action) {
          return currentTextHandler.moveCursorToPreviousParagraph();
        }
      } else {
        if (currentTextHandler && 4 == granularity) {
          var handled = !1;
          256 == action ? handled = currentTextHandler.moveCursorToNextLine() : 512 == action && (handled = currentTextHandler.moveCursorToPreviousLine());
          if (handled) {
            return !0;
          }
        }
      }
    }
  }
  switch(granularity) {
    case -1:
      return cvox.ChromeVox.navigationManager.finishNavCommand(""), !0;
    case -2:
      return cvox.ChromeVoxUserCommands.commands.readCurrentTitle(), !0;
    case -3:
      return !0;
    case -4:
      return 512 == action ? cvox.ChromeVoxUserCommands.commands.exitShifter() : cvox.ChromeVoxUserCommands.commands.enterShifter(), !0;
    case -5:
      return cvox.SearchWidget.getInstance().toggle(), !0;
  }
  if (-275999999 <= granularity && -275E6 >= granularity) {
    cvox.ChromeVox.tts.speak(cvox.ChromeVox.msgs.getMsg("element_clicked"), cvox.AbstractTts.QUEUE_MODE_FLUSH, cvox.AbstractTts.PERSONALITY_ANNOTATION);
    var navBraille = cvox.ChromeVox.navigationManager.getBraille(), clickIndex = -275E6 - granularity, targetNode = navBraille.text.getSpan(clickIndex);
    if (targetNode) {
      var clickIndexInNode = clickIndex - navBraille.text.getSpanStart(targetNode);
      cvox.AndroidVox.performClickAction(targetNode, clickIndexInNode);
    }
    return !0;
  }
  if (0 > granularity) {
    return !1;
  }
  var ANDROID_TO_CHROMEVOX_GRANULARITY_MAP = [];
  ANDROID_TO_CHROMEVOX_GRANULARITY_MAP[8] = cvox.NavigationShifter.GRANULARITIES.GROUP;
  ANDROID_TO_CHROMEVOX_GRANULARITY_MAP[4] = cvox.NavigationShifter.GRANULARITIES.LINE;
  ANDROID_TO_CHROMEVOX_GRANULARITY_MAP[2] = cvox.NavigationShifter.GRANULARITIES.WORD;
  ANDROID_TO_CHROMEVOX_GRANULARITY_MAP[1] = cvox.NavigationShifter.GRANULARITIES.CHARACTER;
  if (!inSearchMode) {
    var targetNavStrategy;
    targetNavStrategy = granularity ? ANDROID_TO_CHROMEVOX_GRANULARITY_MAP[granularity] : cvox.NavigationShifter.GRANULARITIES.OBJECT;
    cvox.ChromeVox.navigationManager.setGranularity(targetNavStrategy);
  }
  var actionPerformed = !1;
  switch(action) {
    case 16:
      if (inSearchMode) {
        break;
      }
      cvox.ChromeVox.tts.speak(cvox.ChromeVox.msgs.getMsg("element_clicked"), cvox.AbstractTts.QUEUE_MODE_FLUSH, cvox.AbstractTts.PERSONALITY_ANNOTATION);
      (targetNode = cvox.ChromeVox.navigationManager.getCurrentNode()) && cvox.AndroidVox.performClickAction(targetNode);
      actionPerformed = !0;
      break;
    case 1024:
      switch(htmlElementName) {
        case "SECTION":
          actionPerformed = !cvox.ChromeVoxUserCommands.commands.nextSection();
          break;
        case "LIST":
          actionPerformed = !cvox.ChromeVoxUserCommands.commands.nextList();
          break;
        case "CONTROL":
          actionPerformed = !cvox.ChromeVoxUserCommands.commands.nextControl();
      }
      if (actionPerformed) {
        break;
      }
    ;
    case 256:
      inSearchMode ? (cvox.SearchWidget.getInstance().nextResult(!1), actionPerformed = !0) : actionPerformed = !cvox.ChromeVoxUserCommands.commands.forward();
      break;
    case 2048:
      switch(htmlElementName) {
        case "SECTION":
          actionPerformed = !cvox.ChromeVoxUserCommands.commands.previousSection();
          break;
        case "LIST":
          actionPerformed = !cvox.ChromeVoxUserCommands.commands.previousList();
          break;
        case "CONTROL":
          actionPerformed = !cvox.ChromeVoxUserCommands.commands.previousControl();
      }
      if (actionPerformed) {
        break;
      }
    ;
    case 512:
      inSearchMode ? (cvox.SearchWidget.getInstance().nextResult(!0), actionPerformed = !0) : actionPerformed = !cvox.ChromeVoxUserCommands.commands.backward();
  }
  return actionPerformed;
};
goog.exportSymbol("cvox.AndroidVox.performAction", cvox.AndroidVox.performAction);
cvox.AndroidVox.performClickAction = function(node, opt_index) {
  cvox.ChromeVox.navigationManager.getCurrentNode() != node && cvox.ApiImplementation.syncToNode(node, !1);
  cvox.Focuser.setFocus(node);
  var hasSelectionStartAndEnd = cvox.DomUtil.isInputTypeText(node) || node instanceof HTMLTextAreaElement;
  if (goog.isDef(opt_index) && hasSelectionStartAndEnd) {
    var nodeDescription = cvox.BrailleUtil.getTemplated(null, node), valueSpan = nodeDescription.getSpanInstanceOf(cvox.BrailleUtil.ValueSpan), valueStart = nodeDescription.getSpanStart(valueSpan), valueEnd = nodeDescription.getSpanEnd(valueSpan);
    if (valueStart <= opt_index && opt_index <= valueEnd) {
      var cursorPosition = opt_index - valueStart + valueSpan.offset;
      cvox.DomUtil.doesInputSupportSelection(node) && (node.selectionStart = node.selectionEnd = cursorPosition);
      cvox.ChromeVoxEventWatcher.handleTextChanged(!0);
    }
  }
  cvox.DomUtil.clickElem(node, !1, !0);
};
cvox.AndroidHost = function() {
};
goog.inherits(cvox.AndroidHost, cvox.AbstractHost);
cvox.AndroidHost.prototype.init = function() {
  cvox.ChromeVox.version = "AndroidVox";
  var keyBindings = cvox.AndroidKeyMap.getStringifiedKeyMap();
  cvox.ChromeVoxKbHandler.loadKeyToFunctionsTable(keyBindings);
  cvox.ApiImplementation.siteSpecificScriptLoader = "";
  cvox.ApiImplementation.siteSpecificScriptBase = "";
  cvox.ApiImplementation.init();
//  cvox.ChromeVox.earcons.earconsAvailable() && (cvox.ChromeVox.verbosity = cvox.VERBOSITY_BRIEF);
  new cvox.AndroidMathMap;
  cvox.InitialSpeech.speak();
};
cvox.AndroidHost.prototype.reinit = function() {
};
cvox.AndroidHost.prototype.onPageLoad = function() {
  cvox.ChromeVoxEventWatcher.focusFollowsMouse = !0;
  cvox.ChromeVoxEventWatcher.mouseoverDelayMs = 0;
};
cvox.AndroidHost.prototype.ttsLoaded = function() {
  return "undefined" != typeof accessibility;
};
cvox.AndroidHost.prototype.getApiSrc = function() {
  return "";
};
cvox.AndroidHost.prototype.hasTtsCallback = function() {
  return !1;
};
cvox.AndroidHost.prototype.mustRedispatchClickEvent = function() {
  return !0;
};
cvox.AndroidHost.prototype.activateOrDeactivateChromeVox = function(active) {
  cvox.ChromeVox.tts.stop();
  cvox.AndroidHost.superClass_.activateOrDeactivateChromeVox.call(this, active);
  this.onPageLoad();
};
goog.exportProperty(cvox.AndroidHost.prototype, "activateOrDeactivateChromeVox", cvox.AndroidHost.prototype.activateOrDeactivateChromeVox);
cvox.HostFactory.hostConstructor = cvox.AndroidHost;
window.cvox || (window.cvox = {});
cvox.MathJaxExternalUtil = function() {
};
cvox.MathJaxExternalUtil.mmlAttr = function() {
  return "";
};
cvox.MathJaxExternalUtil.mfenced = function(space) {
  null == space && (space = "");
  var mml = [space + '<mrow mfenced="true"' + this.toMathMLattributes() + ">"], mspace = space + "  ";
  this.data.open && mml.push(this.data.open.toMathML(mspace));
  null != this.data[0] && mml.push(this.data[0].toMathML(mspace));
  for (var i = 1, m = this.data.length;i < m;i++) {
    this.data[i] && (this.data["sep" + i] && mml.push(this.data["sep" + i].toMathML(mspace)), mml.push(this.data[i].toMathML(mspace)));
  }
  this.data.close && mml.push(this.data.close.toMathML(mspace));
  mml.push(space + "</mrow>");
  return mml.join("\n");
};
cvox.MathJaxExternalUtil.getMathml = function(jax, callback) {
  var mbaseProt = MathJax.ElementJax.mml.mbase.prototype, mfencedProt = MathJax.ElementJax.mml.mfenced.prototype;
  this.mmlAttr = mbaseProt.toMathMLattributes;
  var mfenced = mfencedProt.toMathML;
  try {
    mbaseProt.toMathMLattributes = cvox.MathJaxExternalUtil.mbase;
    mfencedProt.toMathML = cvox.MathJaxExternalUtil.mfenced;
    var mml = jax.root.toMathML("");
    mbaseProt.toMathMLattributes = this.mmlAttr;
    mfencedProt.toMathML = mfenced;
    MathJax.Callback(callback)(mml);
  } catch (err) {
    mbaseProt.toMathMLattributes = this.mmlAttr;
    mfencedProt.toMathML = mfenced;
    if (!err.restart) {
      throw err;
    }
    return MathJax.Callback.After([cvox.MathJaxExternalUtil.getMathml, jax, callback], err.restart);
  }
};
cvox.MathJaxExternalUtil.mbase = function() {
  var attr = cvox.MathJaxExternalUtil.mmlAttr.call(this);
  if (null != this.spanID) {
    var id = (this.id || "MathJax-Span-" + this.spanID) + MathJax.OutputJax["HTML-CSS"].idPostfix, attr = attr + (' spanID="' + id + '"')
  }
  null != this.texClass && (attr += ' texClass="' + this.texClass + '"');
  return attr;
};
cvox.MathJaxExternalUtil.isActive = function() {
  return "undefined" != typeof MathJax && "undefined" != typeof MathJax.Hub && "undefined" != typeof MathJax.ElementJax && "undefined" != typeof MathJax.InputJax;
};
cvox.MathJaxExternalUtil.getMathjaxCallback_ = function(callback, jax) {
  cvox.MathJaxExternalUtil.getMathml(jax, function(mml) {
    jax.root.inputID && callback(mml, jax.root.inputID);
  });
};
cvox.MathJaxExternalUtil.registerSignal = function(callback, signal) {
  MathJax.Hub.Register.MessageHook(signal, function(signalAndIdPair) {
    var jax = MathJax.Hub.getJaxFor(signalAndIdPair[1]);
    cvox.MathJaxExternalUtil.getMathjaxCallback_(callback, jax);
  });
};
cvox.MathJaxExternalUtil.getAllJax = function(callback) {
  var jaxs = MathJax.Hub.getAllJax();
  jaxs && jaxs.forEach(function(jax) {
    jax.root.spanID && cvox.MathJaxExternalUtil.getMathjaxCallback_(callback, jax);
  });
};
cvox.MathJaxExternalUtil.injectConfigScript = function() {
  var script = document.createElement("script");
  script.setAttribute("type", "text/x-mathjax-config");
  script.textContent = 'MathJax.Hub.Config({\n  jax: ["input/AsciiMath", "input/TeX"],\n  extensions: ["toMathML.js"],\n  skipStartupTypeset: true,\n  messageStyle: "none",\n  TeX: {extensions: ["AMSmath.js","AMSsymbols.js"]}\n});\nMathJax.Hub.Queue(\n  function() {MathJax.Hub.inputJax["math/asciimath"].Process();\n  MathJax.Hub.inputJax["math/tex"].Process()}\n);\n//\n// Prevent these from being loaded\n//\nif (!MathJax.Extension.MathMenu) {MathJax.Extension.MathMenu = {}};\nif (!MathJax.Extension.MathZoom) {MathJax.Extension.MathZoom = {}};';
  document.activeElement.appendChild(script);
};
cvox.MathJaxExternalUtil.injectLoadScript = function() {
  var script = document.createElement("script");
  script.setAttribute("type", "text/javascript");
  script.setAttribute("src", "http://cdn.mathjax.org/mathjax/latest/MathJax.js");
  document.activeElement.appendChild(script);
};
cvox.MathJaxExternalUtil.configMediaWiki = function() {
  mediaWiki && MathJax.Hub.Register.StartupHook("TeX Jax Ready", function() {
    var MML = MathJax.ElementJax.mml;
    MathJax.Hub.Insert(MathJax.InputJax.TeX.Definitions, {mathchar0mi:{thetasym:"03B8", koppa:"03DF", stigma:"03DB", varstigma:"03DB", coppa:"03D9", varcoppa:"03D9", sampi:"03E1", C:["0043", {mathvariant:MML.VARIANT.DOUBLESTRUCK}], cnums:["0043", {mathvariant:MML.VARIANT.DOUBLESTRUCK}], Complex:["0043", {mathvariant:MML.VARIANT.DOUBLESTRUCK}], H:["210D", {mathvariant:MML.VARIANT.DOUBLESTRUCK}], N:["004E", {mathvariant:MML.VARIANT.DOUBLESTRUCK}], natnums:["004E", {mathvariant:MML.VARIANT.DOUBLESTRUCK}], 
    Q:["0051", {mathvariant:MML.VARIANT.DOUBLESTRUCK}], R:["0052", {mathvariant:MML.VARIANT.DOUBLESTRUCK}], reals:["0052", {mathvariant:MML.VARIANT.DOUBLESTRUCK}], Reals:["0052", {mathvariant:MML.VARIANT.DOUBLESTRUCK}], Z:["005A", {mathvariant:MML.VARIANT.DOUBLESTRUCK}], sect:"00A7", P:"00B6", AA:["00C5", {mathvariant:MML.VARIANT.NORMAL}], alef:["2135", {mathvariant:MML.VARIANT.NORMAL}], alefsym:["2135", {mathvariant:MML.VARIANT.NORMAL}], weierp:["2118", {mathvariant:MML.VARIANT.NORMAL}], real:["211C", 
    {mathvariant:MML.VARIANT.NORMAL}], part:["2202", {mathvariant:MML.VARIANT.NORMAL}], infin:["221E", {mathvariant:MML.VARIANT.NORMAL}], empty:["2205", {mathvariant:MML.VARIANT.NORMAL}], O:["2205", {mathvariant:MML.VARIANT.NORMAL}], ang:["2220", {mathvariant:MML.VARIANT.NORMAL}], exist:["2203", {mathvariant:MML.VARIANT.NORMAL}], clubs:["2663", {mathvariant:MML.VARIANT.NORMAL}], diamonds:["2662", {mathvariant:MML.VARIANT.NORMAL}], hearts:["2661", {mathvariant:MML.VARIANT.NORMAL}], spades:["2660", 
    {mathvariant:MML.VARIANT.NORMAL}], textvisiblespace:"2423", geneuro:"20AC", euro:"20AC"}, mathchar0mo:{and:"2227", or:"2228", bull:"2219", plusmn:"00B1", sdot:"22C5", Dagger:"2021", sup:"2283", sub:"2282", supe:"2287", sube:"2286", isin:"2208", hAar:"21D4", hArr:"21D4", Harr:"21D4", Lrarr:"21D4", lrArr:"21D4", lArr:"21D0", Larr:"21D0", rArr:"21D2", Rarr:"21D2", harr:"2194", lrarr:"2194", larr:"2190", gets:"2190", rarr:"2192", oiint:["222F", {texClass:MML.TEXCLASS.OP}], oiiint:["2230", {texClass:MML.TEXCLASS.OP}]}, 
    mathchar7:{Alpha:"0391", Beta:"0392", Epsilon:"0395", Zeta:"0396", Eta:"0397", Iota:"0399", Kappa:"039A", Mu:"039C", Nu:"039D", Omicron:"039F", Rho:"03A1", Tau:"03A4", Chi:"03A7", Koppa:"03DE", Stigma:"03DA", Digamma:"03DC", Coppa:"03D8", Sampi:"03E0"}, delimiter:{"\\uarr":"2191", "\\darr":"2193", "\\Uarr":"21D1", "\\uArr":"21D1", "\\Darr":"21D3", "\\dArr":"21D3", "\\rang":"27E9", "\\lang":"27E8"}, macros:{sgn:"NamedFn", arccot:"NamedFn", arcsec:"NamedFn", arccsc:"NamedFn", sen:"NamedFn", image:["Macro", 
    "\\Im"], bold:["Macro", "\\mathbf{#1}", 1], pagecolor:["Macro", "", 1], emph:["Macro", "\\textit{#1}", 1], textsf:["Macro", "\\mathord{\\sf{\\text{#1}}}", 1], texttt:["Macro", "\\mathord{\\tt{\\text{#1}}}", 1], vline:["Macro", "\\smash{\\large\\lvert}", 0]}});
  });
};
cvox.MathJaxExternalUtil.convertToMml = function(callback, math, typeString, filterString, errorString, parseFunction) {
  var script = MathJax.HTML.Element("script", {type:typeString}, [math]), data = {math:math, script:script};
  MathJax.InputJax[filterString].prefilterHooks.Execute(data);
  var mml;
  try {
    mml = parseFunction(data.math);
  } catch (err) {
    if (err[errorString]) {
      mml = MathJax.ElementJax.mml.merror(err.message.replace(/\n.*/, ""));
    } else {
      if (err.restart) {
        return MathJax.Callback.After([cvox.MathJaxExternalUtil.convertToMml, callback, math, typeString, filterString, errorString, parseFunction], err.restart);
      }
      return "";
    }
  }
  mml = mml.inferred ? MathJax.ElementJax.mml.apply(MathJax.ElementJax, mml.data) : MathJax.ElementJax.mml(mml);
  mml.root.display = "block";
  data.math = mml;
  data.script.MathJax = {};
  MathJax.InputJax[filterString].postfilterHooks.Execute(data);
  return cvox.MathJaxExternalUtil.getMathml(data.math, callback);
};
cvox.MathJaxExternalUtil.texToMml = function(callback, math) {
  cvox.MathJaxExternalUtil.convertToMml(callback, math, "math/tex;mode=display", "TeX", "texError", function(data) {
    return MathJax.InputJax.TeX.Parse(data).mml();
  });
};
cvox.MathJaxExternalUtil.asciiMathToMml = function(callback, math) {
  cvox.MathJaxExternalUtil.convertToMml(callback, math, "math/asciimath", "AsciiMath", "asciimathError", MathJax.InputJax.AsciiMath.AM.parseMath);
};
cvox.AndroidMathJax = function() {
  this.altMathNodeId_ = 0;
};
goog.inherits(cvox.AndroidMathJax, cvox.AbstractMathJax);
cvox.AndroidMathJax.prototype.getMathmlToDomCallback_ = function(callback) {
  return goog.bind(function(mml, id) {
    return this.convertMarkupToDom(callback, mml, id);
  }, this);
};
cvox.AndroidMathJax.prototype.isMathjaxActive = function(callback) {
  var retries = 0, fetch = function() {
    retries++;
    cvox.MathJaxExternalUtil.isActive() ? callback(!0) : 5 > retries && setTimeout(fetch, 1E3);
  };
  fetch();
};
cvox.AndroidMathJax.prototype.getAllJax = function(callback) {
  cvox.MathJaxExternalUtil.getAllJax(this.getMathmlToDomCallback_(callback));
};
cvox.AndroidMathJax.prototype.registerSignal = function(callback, signal) {
  cvox.MathJaxExternalUtil.registerSignal(this.getMathmlToDomCallback_(callback), signal);
};
cvox.AndroidMathJax.prototype.injectScripts = function() {
  cvox.MathJaxExternalUtil.injectConfigScript();
  cvox.MathJaxExternalUtil.injectLoadScript();
};
cvox.AndroidMathJax.prototype.configMediaWiki = function() {
  cvox.MathJaxExternalUtil.configMediaWiki();
};
cvox.AndroidMathJax.prototype.getTex = function(callback, texNode) {
  var altText = texNode.alt || texNode.title;
  if (altText) {
    var newId = "cvoxId-" + this.altMathNodeId_++;
    texNode.setAttribute("cvoxId", newId);
    cvox.MathJaxExternalUtil.texToMml(goog.bind(function(mmlStr) {
      this.convertMarkupToDom(callback, mmlStr, newId);
    }, this), altText);
  }
};
cvox.AndroidMathJax.prototype.getAsciiMath = function(callback, asciiMathNode) {
  var altText = asciiMathNode.alt || asciiMathNode.title;
  if (altText) {
    var newId = "cvoxId-" + this.altMathNodeId_++;
    asciiMathNode.setAttribute("cvoxId", newId);
    cvox.MathJaxExternalUtil.asciiMathToMml(goog.bind(function(mmlStr) {
      this.convertMarkupToDom(callback, mmlStr, newId);
    }, this), altText);
  }
};
cvox.HostFactory.mathJaxConstructor = cvox.AndroidMathJax;
cvox.AndroidTts = function() {
  cvox.AbstractTts.call(this);
  this.ttsProperties.rate = .5;
  this.ttsProperties.pitch = .5;
  this.ttsProperties.volume = 1;
};
goog.inherits(cvox.AndroidTts, cvox.AbstractTts);
cvox.AndroidTts.prototype.speak = function(textString, queueMode, properties) {
  cvox.AndroidTts.superClass_.speak.call(this, textString, queueMode, properties);
  var mergedProperties = this.mergeProperties(properties);
  accessibility.speak(textString, queueMode, mergedProperties);
  return this;
};
cvox.AndroidTts.prototype.isSpeaking = function() {
  cvox.AndroidTts.superClass_.isSpeaking.call(this);
  return accessibility.isSpeaking();
};
cvox.AndroidTts.prototype.stop = function() {
  cvox.AndroidTts.superClass_.stop.call(this);
  accessibility.stop();
};
cvox.HostFactory.ttsConstructor = cvox.AndroidTts;
cvox.TestMessages = {locale:{message:"en"}, chromevox_name:{message:"ChromeVox"}, chromevox_description:{message:"ChromeVox - Giving Voice to Chrome"}, chromevox_stop_speech_key:{message:"Stop speech"}, chromevox_toggle_sticky_mode:{message:"Enable/Disable sticky mode"}, chromevox_prefix_key:{message:"Prefix key"}, chromevox_handle_tab_next:{message:"Jump to next focusable item"}, chromevox_handle_tab_prev:{message:"Jump to previous focusable item"}, chromevox_backward:{message:"Navigate backward"}, 
chromevox_forward:{message:"Navigate forward"}, chromevox_left:{message:"Move left"}, chromevox_right:{message:"Move right"}, chromevox_skip_backward:{message:"Skip backward during continuous reading"}, chromevox_skip_forward:{message:"Skip forward during continuous reading"}, chromevox_previous_granularity:{message:"Decrease navigation granularity"}, chromevox_next_granularity:{message:"Increase navigation granularity"}, chromevox_act_on_current_item:{message:"Take action on current item"}, chromevox_force_click_on_current_item:{message:"Click on current item"}, 
chromevox_read_link_url:{message:"Announce the URL behind a link"}, chromevox_read_current_title:{message:"Announce the title of the current page"}, chromevox_read_current_url:{message:"Announce the URL of the current page"}, chromevox_read_from_here:{message:"Start reading from current location"}, chromevox_show_power_key:{message:"Open ChromeVox keyboard help"}, chromevox_hide_power_key:{message:"Hide ChromeVox help"}, chromevox_power_key_help:{message:"Press up or down to review commands, press enter to activate"}, 
chromevox_help:{message:"Open ChromeVox tutorial"}, chromevox_toggle_search_widget:{message:"Toggle search widget"}, chromevox_show_options_page:{message:"Open options page"}, chromevox_show_kb_explorer_page:{message:"Open keyboard explorer"}, chromevox_decrease_tts_rate:{message:"Decrease rate of speech"}, chromevox_increase_tts_rate:{message:"Increase rate of speech"}, chromevox_decrease_tts_pitch:{message:"Decrease pitch"}, chromevox_increase_tts_pitch:{message:"Increase pitch"}, chromevox_decrease_tts_volume:{message:"Decrease speech volume"}, 
chromevox_increase_tts_volume:{message:"Increase speech volume"}, chromevox_show_forms_list:{message:"Show forms list"}, chromevox_show_headings_list:{message:"Show headings list"}, chromevox_show_links_list:{message:"Show links list"}, chromevox_show_tables_list:{message:"Show tables list"}, chromevox_show_landmarks_list:{message:"Show landmarks list"}, chromevox_previous_row:{message:"Previous table row"}, chromevox_next_row:{message:"Next table row"}, chromevox_previous_col:{message:"Previous table column"}, 
chromevox_next_col:{message:"Next table column"}, chromevox_announce_headers:{message:"Announce the headers of the current cell"}, chromevox_speak_table_location:{message:"Announce current cell coordinates"}, chromevox_guess_row_header:{message:"Make a guess at the row header of the current cell"}, chromevox_guess_col_header:{message:"Make a guess at the column header of the current cell"}, chromevox_skip_to_beginning:{message:"Go to beginning of table"}, chromevox_skip_to_end:{message:"Go to end of table"}, 
chromevox_skip_to_row_beginning:{message:"Go to beginning of the current row"}, chromevox_skip_to_row_end:{message:"Go to end of the current row"}, chromevox_skip_to_col_beginning:{message:"Go to beginning of the current column"}, chromevox_skip_to_col_end:{message:"Go to end of the current column"}, chromevox_next_heading1:{message:"Next level 1 heading"}, chromevox_previous_heading1:{message:"Previous level 1 heading"}, chromevox_next_heading2:{message:"Next level 2 heading"}, chromevox_previous_heading2:{message:"Previous level 2 heading"}, 
chromevox_next_heading3:{message:"Next level 3 heading"}, chromevox_previous_heading3:{message:"Previous level 3 heading"}, chromevox_next_heading4:{message:"Next level 4 heading"}, chromevox_previous_heading4:{message:"Previous level 4 heading"}, chromevox_next_heading5:{message:"Next level 5 heading"}, chromevox_previous_heading5:{message:"Previous level 5 heading"}, chromevox_next_heading6:{message:"Next level 6 heading"}, chromevox_previous_heading6:{message:"Previous level 6 heading"}, chromevox_next_combo_box:{message:"Next combo box"}, 
chromevox_previous_combo_box:{message:"Previous combo box"}, chromevox_next_edit_text:{message:"Next editable text area"}, chromevox_previous_edit_text:{message:"Previous editable text area"}, chromevox_next_form_field:{message:"Next form field"}, chromevox_previous_form_field:{message:"Previous form field"}, chromevox_next_graphic:{message:"Next graphic"}, chromevox_previous_graphic:{message:"Previous graphic"}, chromevox_next_heading:{message:"Next heading"}, chromevox_previous_heading:{message:"Previous heading"}, 
chromevox_next_list_item:{message:"Next list item"}, chromevox_previous_list_item:{message:"Previous list item"}, chromevox_next_jump:{message:"Next jump"}, chromevox_previous_jump:{message:"Previous jump"}, chromevox_next_link:{message:"Next link"}, chromevox_previous_link:{message:"Previous link"}, chromevox_next_list:{message:"Next list"}, chromevox_previous_list:{message:"Previous list"}, chromevox_next_math:{message:"Next math"}, chromevox_previous_math:{message:"Previous math"}, chromevox_next_media:{message:"Next media"}, 
chromevox_previous_media:{message:"Previous media"}, chromevox_next_blockquote:{message:"Next block quote"}, chromevox_previous_blockquote:{message:"Previous block quote"}, chromevox_next_radio:{message:"Next radio button"}, chromevox_previous_radio:{message:"Previous radio button"}, chromevox_next_slider:{message:"Next slider"}, chromevox_previous_slider:{message:"Previous slider"}, chromevox_next_table:{message:"Next table"}, chromevox_next_visited_link:{message:"Next visited link"}, chromevox_previous_table:{message:"Previous table"}, 
chromevox_previous_visited_link:{message:"Previous visited link"}, chromevox_next_button:{message:"Next button"}, chromevox_previous_button:{message:"Previous button"}, chromevox_next_checkbox:{message:"Next checkbox"}, chromevox_previous_checkbox:{message:"Previous checkbox"}, chromevox_next_landmark:{message:"Next landmark"}, chromevox_previous_landmark:{message:"Previous landmark"}, chromevox_benchmark:{message:"Debug benchmark"}, chromevox_announce_position:{message:"Announces a brief description of the current position"}, 
chromevox_fully_describe:{message:"Announces a complete description of the current position"}, chromevox_options_page_title:{message:"ChromeVox Options"}, chromevox_options_page_summary:{message:"Use the options below to customize ChromeVox. Changes take effect immediately."}, chromevox_options_mouse_focus_follows:{message:"Use the mouse to change focus."}, chromevox_options_site_specific_enhancements:{message:"Enhance specific sites (like Google Search)."}, chromevox_options_verbosity_verbose:{message:"Enable verbose descriptions."}, 
chromevox_options_cursor_between_characters:{message:"Place cursor between characters when editing text (like Mac OS X)."}, chromevox_options_magnifier_show_checkbox:{message:"Show a magnified view of the page content."}, chromevox_options_voices:{message:"Voices"}, chromevox_options_voices_description:{message:"Change the current voice by selecting an option from the list below."}, chromevox_options_braille:{message:"Braille"}, chromevox_options_braille_table_type_6:{message:"Switch to 8 dot braille"}, 
chromevox_options_braille_table_type_8:{message:"Switch to 6 dot braille"}, chromevox_options_braille_description_6:{message:"Change the current 6 dot braille table by selecting an option from the list below."}, chromevox_options_braille_locale_grade:{message:"$1, Grade $2", placeholders:{1:{content:"$1"}, 2:{content:"$2"}}}, chromevox_options_braille_description_8:{message:"Change the current 8 dot braille table by selecting an option from the list below."}, chromevox_options_keyboard_shortcuts:{message:"Keyboard shortcuts"}, 
chromevox_options_keymap_description:{message:"Change the current keymap by selecting an option from the list below."}, chromevox_options_select_keys:{message:"Reset current keymap"}, chromevox_options_shortcuts_description:{message:"Customize keyboard shortcuts for frequently used commands by typing them into the corresponding fields below."}, chromevox_options_modifier_keys:{message:"Modifier keys"}, chromevox_options_cvox_modifier_key:{message:"ChromeVox modifier key"}, chromevox_kbexplorer_title:{message:"ChromeOS Keyboard Explorer"}, 
chromevox_kbexplorer_instructions:{message:"Press any key to learn its name. Ctrl+W will close the keyboard explorer."}, chromevox_chrome_system_need_restart:{message:"System was updated.  Restart is recommended."}, chromevox_chrome_brightness_changed:{message:"Brightness $1 percent", placeholders:{1:{content:"$1"}}}, chromevox_chrome_tab_created:{message:"tab created"}, chromevox_chrome_tab_selected:{message:"$1, tab", placeholders:{1:{content:"$1"}}}, chromevox_chrome_normal_window_selected:{message:"window $1 tab", 
placeholders:{1:{content:"$1"}}}, chromevox_chrome_incognito_window_selected:{message:"incognito window $1 tab", placeholders:{1:{content:"$1"}}}, chromevox_chrome_menu_opened:{message:"$1 menu opened", placeholders:{1:{content:"$1"}}}, chromevox_describe_checkbox_checked:{message:"$1 checkbox checked", placeholders:{1:{content:"$1"}}}, chromevox_checkbox_checked_state:{message:"checked"}, chromevox_checkbox_checked_state_brl:{message:"x"}, chromevox_describe_checkbox_unchecked:{message:"$1, checkbox not checked", 
placeholders:{1:{content:"$1"}}}, chromevox_checkbox_unchecked_state:{message:"not checked"}, chromevox_checkbox_unchecked_state_brl:{message:" "}, chromevox_describe_radio_selected:{message:"$1, radio button selected", placeholders:{1:{content:"$1"}}}, chromevox_radio_selected_state:{message:"selected"}, chromevox_radio_selected_state_brl:{message:"x"}, chromevox_describe_radio_unselected:{message:"$1, radio button unselected", placeholders:{1:{content:"$1"}}}, chromevox_radio_unselected_state:{message:"unselected"}, 
chromevox_radio_unselected_state_brl:{message:" "}, chromevox_describe_menu:{message:"$1, menu", placeholders:{1:{content:"$1"}}}, chromevox_describe_menu_item:{message:"$1, menu item", placeholders:{1:{content:"$1"}}}, chromevox_describe_menu_item_with_submenu:{message:"$1, menu item, with submenu", placeholders:{1:{content:"$1"}}}, chromevox_describe_window:{message:"$1, window", placeholders:{1:{content:"$1"}}}, chromevox_describe_textbox:{message:"$1, $2, text box", placeholders:{1:{content:"$1"}, 
2:{content:"$2"}}}, chromevox_describe_unnamed_textbox:{message:"$1, text box", placeholders:{1:{content:"$1"}}}, chromevox_describe_password:{message:"$1, $2, password text box", placeholders:{1:{content:"$1"}, 2:{content:"$2"}}}, chromevox_describe_unnamed_password:{message:"$1, password text box", placeholders:{1:{content:"$1"}}}, chromevox_describe_button:{message:"$1, button", placeholders:{1:{content:"$1"}}}, chromevox_describe_combobox:{message:"$1, $2, combo box", placeholders:{1:{content:"$1"}, 
2:{content:"$2"}}}, chromevox_describe_unnamed_combobox:{message:"$1, combo box", placeholders:{1:{content:"$1"}}}, chromevox_describe_listbox:{message:"$1, $2, list box", placeholders:{1:{content:"$1"}, 2:{content:"$2"}}}, chromevox_describe_unnamed_listbox:{message:"$1, list box", placeholders:{1:{content:"$1"}}}, chromevox_describe_link:{message:"$1, link", placeholders:{1:{content:"$1"}}}, chromevox_describe_tab:{message:"$1, tab", placeholders:{1:{content:"$1"}}}, chromevox_describe_slider:{message:"$1, $2, slider", 
placeholders:{1:{content:"$1"}, 2:{content:"$2"}}}, chromevox_describe_selected:{message:", selected"}, chromevox_describe_unselected:{message:", unselected"}, chromevox_describe_index:{message:" $1 of $2 ", placeholders:{1:{content:"$1"}, 2:{content:"$2"}}}, chromevox_describe_depth:{message:" level $1 ", placeholders:{1:{content:"$1"}}}, chromevox_announce_rate:{message:"Rate $1 percent", placeholders:{1:{content:"$1"}}}, chromevox_announce_pitch:{message:"Pitch $1 percent", placeholders:{1:{content:"$1"}}}, 
chromevox_announce_volume:{message:"Volume $1 percent", placeholders:{1:{content:"$1"}}}, chromevox_exiting_dialog:{message:"Exited dialog."}, chromevox_exited_container:{message:"Exited $1.", placeholders:{1:{content:"$1"}}}, chromevox_entering_dialog:{message:"Entered dialog"}, chromevox_live_regions_removed:{message:"removed:"}, chromevox_sticky_mode_enabled:{message:"Sticky mode enabled"}, chromevox_sticky_mode_disabled:{message:"Sticky mode disabled"}, chromevox_keyboard_help_intro:{message:"Keyboard Help"}, 
chromevox_context_menu_intro:{message:"Context Menu"}, chromevox_choice_widget_name:{message:"$1 list.", placeholders:{1:{content:"$1"}}}, chromevox_choice_widget_help:{message:"Use up and down arrow keys to browse, or type to search."}, chromevox_choice_widget_exited:{message:"Exited"}, chromevox_choice_widget_type_generic:{message:" "}, chromevox_end_of_cell:{message:"End of cell."}, chromevox_no_url_found:{message:"No URL found"}, chromevox_leaving_table:{message:"Leaving table."}, chromevox_leaving_grid:{message:"Leaving grid."}, 
chromevox_inside_table:{message:"Inside table"}, chromevox_no_tables:{message:"No table found."}, chromevox_not_inside_table:{message:"Not inside table."}, chromevox_no_cell_below:{message:"No cell below."}, chromevox_no_cell_above:{message:"No cell above."}, chromevox_no_cell_right:{message:"No cell right."}, chromevox_no_cell_left:{message:"No cell left."}, chromevox_empty_cell:{message:"Empty cell."}, chromevox_spanned:{message:"Spanned."}, chromevox_row_header:{message:"Row header:"}, chromevox_empty_row_header:{message:"Empty row header"}, 
chromevox_column_header:{message:"Column header:"}, chromevox_empty_column_header:{message:"Empty column header"}, chromevox_no_headers:{message:"No headers"}, chromevox_empty_headers:{message:"Empty headers"}, chromevox_table_location:{message:"Row $1 of $2, Column $3 of $4", placeholders:{1:{content:"$1"}, 2:{content:"$2"}, 3:{content:"$3"}, 4:{content:"$4"}}}, chromevox_no_next_checkbox:{message:"No next checkbox."}, chromevox_no_previous_checkbox:{message:"No previous checkbox."}, chromevox_no_next_edit_text:{message:"No next editable text field."}, 
chromevox_no_previous_edit_text:{message:"No previous editable text field."}, chromevox_no_next_heading:{message:"No next heading."}, chromevox_no_previous_heading:{message:"No previous heading."}, chromevox_no_next_heading_1:{message:"No next level 1 heading."}, chromevox_no_previous_heading_1:{message:"No previous level 1 heading."}, chromevox_no_next_heading_2:{message:"No next level 2 heading."}, chromevox_no_previous_heading_2:{message:"No previous level 2 heading."}, chromevox_no_next_heading_3:{message:"No next level 3 heading."}, 
chromevox_no_previous_heading_3:{message:"No previous level 3 heading."}, chromevox_no_next_heading_4:{message:"No next level 4 heading."}, chromevox_no_previous_heading_4:{message:"No previous level 4 heading."}, chromevox_no_next_heading_5:{message:"No next level 5 heading."}, chromevox_no_previous_heading_5:{message:"No previous level 5 heading."}, chromevox_no_next_heading_6:{message:"No next level 6 heading."}, chromevox_no_previous_heading_6:{message:"No previous level 6 heading."}, chromevox_no_next_not_link:{message:"No next item that isn't a link."}, 
chromevox_no_previous_not_link:{message:"No previous item that isn't a link."}, chromevox_no_next_anchor:{message:"No next anchor."}, chromevox_no_previous_anchor:{message:"No previous anchor."}, chromevox_no_next_link:{message:"No next link."}, chromevox_no_previous_link:{message:"No previous link."}, chromevox_no_next_table:{message:"No next table."}, chromevox_no_previous_table:{message:"No previous table."}, chromevox_no_next_visited_link:{message:"No next visited link."}, chromevox_no_previous_visited_link:{message:"No previous visited link."}, 
chromevox_no_next_math:{message:"No next math expression."}, chromevox_no_previous_math:{message:"No previous math expression."}, chromevox_no_next_media_widget:{message:"No next media widget."}, chromevox_no_previous_media_widget:{message:"No previous media widget."}, chromevox_no_next_list:{message:"No next list."}, chromevox_no_previous_list:{message:"No previous list."}, chromevox_no_next_list_item:{message:"No next list item."}, chromevox_no_previous_list_item:{message:"No previous list item."}, 
chromevox_no_next_blockquote:{message:"No next blockquote."}, chromevox_no_previous_blockquote:{message:"No previous blockquote."}, chromevox_no_next_form_field:{message:"No next form field."}, chromevox_no_previous_form_field:{message:"No previous form field."}, chromevox_no_next_jump:{message:"No next jump point."}, chromevox_no_previous_jump:{message:"No previous jump point."}, chromevox_no_next_landmark:{message:"No next ARIA landmark."}, chromevox_no_previous_landmark:{message:"No previous ARIA landmark."}, 
chromevox_no_next_combo_box:{message:"No next combo box."}, chromevox_no_previous_combo_box:{message:"No previous combo box."}, chromevox_no_next_button:{message:"No next button."}, chromevox_no_previous_button:{message:"No previous button."}, chromevox_no_next_graphic:{message:"No next graphic."}, chromevox_no_previous_graphic:{message:"No previous graphic."}, chromevox_no_next_slider:{message:"No next slider."}, chromevox_no_previous_slider:{message:"No previous slider."}, chromevox_no_next_radio_button:{message:"No next radio button."}, 
chromevox_no_previous_radio_button:{message:"No previous radio button."}, chromevox_no_next_section:{message:"No next section."}, chromevox_no_previous_section:{message:"No previous section."}, chromevox_no_next_control:{message:"No next control."}, chromevox_no_previous_control:{message:"No previous control."}, chromevox_element_clicked:{message:"Clicked"}, chromevox_element_double_clicked:{message:"double clicked"}, chromevox_powerkey_no_headings:{message:"No headings."}, chromevox_powerkey_no_links:{message:"No links."}, 
chromevox_powerkey_no_forms:{message:"No forms."}, chromevox_powerkey_no_tables:{message:"No tables."}, chromevox_powerkey_no_landmarks:{message:"No ARIA landmarks."}, chromevox_powerkey_no_jumps:{message:"No jumps."}, chromevox_list_position:{message:"$1 of $2", placeholders:{1:{content:"$1"}, 2:{content:"$2"}}}, chromevox_list_position_brl:{message:"$1/$2", placeholders:{1:{content:"$1"}, 2:{content:"$2"}}}, chromevox_aria_has_submenu:{message:"has submenu"}, chromevox_aria_has_submenu_brl:{message:"+submnu"}, 
chromevox_aria_has_popup:{message:"has pop up"}, chromevox_aria_has_popup_brl:{message:"+popup"}, chromevox_aria_value_min:{message:"Min $1", placeholders:{1:{content:"$1"}}}, chromevox_aria_value_min_brl:{message:"min:$1", placeholders:{1:{content:"$1"}}}, chromevox_aria_value_max:{message:"Max $1", placeholders:{1:{content:"$1"}}}, chromevox_aria_value_max_brl:{message:"max:$1", placeholders:{1:{content:"$1"}}}, chromevox_aria_value_now:{message:"$1", placeholders:{1:{content:"$1"}}}, chromevox_aria_value_now_brl:{message:"$1", 
placeholders:{1:{content:"$1"}}}, chromevox_aria_value_text:{message:"$1", placeholders:{1:{content:"$1"}}}, chromevox_aria_value_text_brl:{message:"$1", placeholders:{1:{content:"$1"}}}, chromevox_aria_role_alert:{message:"Alert"}, chromevox_aria_role_alert_brl:{message:"alrt"}, chromevox_aria_role_alertdialog:{message:"Alert dialog"}, chromevox_aria_role_alertdialog_brl:{message:"alrt dlg"}, chromevox_aria_role_button:{message:"Button"}, chromevox_aria_role_button_brl:{message:"btn"}, chromevox_aria_role_checkbox:{message:"Check box"}, 
chromevox_aria_role_checkbox_brl:{message:"chx"}, chromevox_aria_role_combobox:{message:"Combo box"}, chromevox_aria_role_combobox_brl:{message:"cbx"}, chromevox_aria_role_dialog:{message:"Dialog"}, chromevox_aria_role_dialog_brl:{message:"dlg"}, chromevox_aria_role_grid:{message:"Grid"}, chromevox_aria_role_grid_brl:{message:"grd"}, chromevox_aria_role_gridcell:{message:"Cell"}, chromevox_aria_role_gridcell_brl:{message:"cl"}, chromevox_aria_role_gridcell_pos:{message:"row $1 column $2", placeholders:{1:{content:"$1"}, 
2:{content:"$2"}}}, chromevox_aria_role_link:{message:"Link"}, chromevox_aria_role_link_brl:{message:"lnk"}, chromevox_aria_role_link_singular:{message:"1 link"}, chromevox_aria_role_link_plural:{message:"$1 links", placeholders:{1:{content:"$1"}}}, chromevox_aria_role_listbox:{message:"List box"}, chromevox_aria_role_listbox_brl:{message:"lstbx"}, chromevox_aria_role_log:{message:"Log"}, chromevox_aria_role_log_brl:{message:"log"}, chromevox_aria_role_marquee:{message:"Marquee"}, chromevox_aria_role_marquee_brl:{message:"maqe"}, 
chromevox_aria_role_menu:{message:"Menu"}, chromevox_aria_role_menu_brl:{message:"mnu"}, chromevox_aria_role_menubar:{message:"Menu bar"}, chromevox_aria_role_menubar_brl:{message:"mnu br"}, chromevox_aria_role_menuitem:{message:"Menu item"}, chromevox_aria_role_menuitem_brl:{message:"mnu itm"}, chromevox_aria_role_menuitemcheckbox:{message:"Menu item check box"}, chromevox_aria_role_menuitemcheckbox_brl:{message:"mnu itm chx"}, chromevox_aria_role_menuitemradio:{message:"Menu item radio button"}, 
chromevox_aria_role_menuitemradio_brl:{message:"mnu itm rd"}, chromevox_aria_role_option:{message:" "}, chromevox_aria_role_option_brl:{message:" "}, chromevox_aria_role_popup_button:{message:"Pop-up button"}, chromevox_aria_role_popup_button_brl:{message:"pup btn"}, chromevox_aria_role_progressbar:{message:"Progress bar"}, chromevox_aria_role_progressbar_brl:{message:"prog br"}, chromevox_aria_role_radio:{message:"Radio button"}, chromevox_aria_role_radio_brl:{message:"rd"}, chromevox_aria_role_radiogroup:{message:"Radio button group"}, 
chromevox_aria_role_radiogroup_brl:{message:"rd grp"}, chromevox_aria_role_scrollbar:{message:"Scroll bar"}, chromevox_aria_role_scrollbar_brl:{message:"scr br"}, chromevox_aria_role_slider:{message:"Slider"}, chromevox_aria_role_slider_brl:{message:"sldr"}, chromevox_aria_role_spinbutton:{message:"Spin button"}, chromevox_aria_role_spinbutton_brl:{message:"spn btn"}, chromevox_aria_role_status:{message:"Status"}, chromevox_aria_role_status_brl:{message:"sts"}, chromevox_aria_role_tab:{message:"Tab"}, 
chromevox_aria_role_tab_brl:{message:"tab"}, chromevox_aria_role_tablist:{message:"Tab list"}, chromevox_aria_role_tablist_brl:{message:"tab lst"}, chromevox_aria_role_tabpanel:{message:"Tab panel"}, chromevox_aria_role_tabpanel_brl:{message:"tab pnl"}, chromevox_aria_role_textbox:{message:"Text box"}, chromevox_aria_role_textbox_brl:{message:"txtbx"}, chromevox_aria_role_timer:{message:"Timer"}, chromevox_aria_role_timer_brl:{message:"tmr"}, chromevox_aria_role_toolbar:{message:"Tool bar"}, chromevox_aria_role_toolbar_brl:{message:"tl br"}, 
chromevox_aria_role_tooltip:{message:"Tool tip"}, chromevox_aria_role_tooltip_brl:{message:"tl tp"}, chromevox_aria_role_treeitem:{message:"Tree item"}, chromevox_aria_role_treeitem_brl:{message:"tr itm"}, chromevox_aria_role_article:{message:"Article"}, chromevox_aria_role_article_brl:{message:"acl"}, chromevox_aria_role_application:{message:"Application"}, chromevox_aria_role_application_brl:{message:"app"}, chromevox_aria_role_banner:{message:"Banner"}, chromevox_aria_role_banner_brl:{message:"bnr"}, 
chromevox_aria_role_columnheader:{message:"Column header"}, chromevox_aria_role_columnheader_brl:{message:"clm hd"}, chromevox_aria_role_complementary:{message:"Complementary"}, chromevox_aria_role_complementary_brl:{message:"cmpy"}, chromevox_aria_role_contentinfo:{message:"Content info"}, chromevox_aria_role_contentinfo_brl:{message:"cnt in"}, chromevox_aria_role_definition:{message:"Definition"}, chromevox_aria_role_definition_brl:{message:"def"}, chromevox_aria_role_directory:{message:"Directory"}, 
chromevox_aria_role_directory_brl:{message:"dir"}, chromevox_aria_role_document:{message:"Document"}, chromevox_aria_role_document_brl:{message:"doc"}, chromevox_aria_role_form:{message:"Form"}, chromevox_aria_role_form_brl:{message:"frm"}, chromevox_aria_role_form_singular:{message:"1 form"}, chromevox_aria_role_form_plural:{message:"$1 forms", placeholders:{1:{content:"$1"}}}, chromevox_aria_role_group:{message:"Group"}, chromevox_aria_role_group_brl:{message:"grp"}, chromevox_aria_role_heading:{message:"Heading"}, 
chromevox_aria_role_heading_brl:{message:"hd"}, chromevox_aria_role_img:{message:"Image"}, chromevox_aria_role_img_brl:{message:"img"}, chromevox_aria_role_list:{message:"List"}, chromevox_aria_role_list_brl:{message:"lst"}, chromevox_aria_role_listitem:{message:"List item"}, chromevox_aria_role_listitem_brl:{message:"lstitm"}, chromevox_aria_role_main:{message:"Main"}, chromevox_aria_role_main_brl:{message:"main"}, chromevox_aria_role_math:{message:"Math"}, chromevox_aria_role_math_brl:{message:"math"}, 
chromevox_aria_role_navigation:{message:"Navigation"}, chromevox_aria_role_navigation_brl:{message:"nav"}, chromevox_aria_role_note:{message:"Note"}, chromevox_aria_role_note_brl:{message:"note"}, chromevox_aria_role_region:{message:"Region"}, chromevox_aria_role_region_brl:{message:"rgn"}, chromevox_aria_role_rowheader:{message:"Row header"}, chromevox_aria_role_rowheader_brl:{message:"rw hd"}, chromevox_aria_role_search:{message:"Search"}, chromevox_aria_role_search_brl:{message:"srch"}, chromevox_aria_role_separator:{message:"Separator"}, 
chromevox_aria_role_separator_brl:{message:"sprtr"}, chromevox_aria_autocomplete_inline:{message:"Autocompletion inline"}, chromevox_aria_autocomplete_inline_brl:{message:"autocomplete"}, chromevox_aria_autocomplete_list:{message:"Autocompletion list"}, chromevox_aria_autocomplete_list_brl:{message:"autocomplete lst"}, chromevox_aria_autocomplete_both:{message:"Autocompletion inline and list"}, chromevox_aria_autocomplete_both_brl:{message:"autocomplete lst"}, chromevox_aria_checked_true:{message:"Checked"}, 
chromevox_aria_checked_true_brl:{message:"x"}, chromevox_aria_checked_false:{message:"Not checked"}, chromevox_aria_checked_false_brl:{message:" "}, chromevox_aria_checked_mixed:{message:"Partially checked"}, chromevox_aria_checked_mixed_brl:{message:"/x"}, chromevox_aria_disabled_true:{message:"Disabled"}, chromevox_aria_disabled_true_brl:{message:"="}, chromevox_aria_expanded_true:{message:"Expanded"}, chromevox_aria_expanded_true_brl:{message:">"}, chromevox_aria_expanded_false:{message:"Collapsed"}, 
chromevox_aria_expanded_false_brl:{message:"<"}, chromevox_aria_invalid_true:{message:"Invalid input"}, chromevox_aria_invalid_true_brl:{message:"!"}, chromevox_aria_invalid_grammar:{message:"Grammatical mistake detected"}, chromevox_aria_invalid_grammar_brl:{message:"Grammatical mistake detected"}, chromevox_aria_invalid_spelling:{message:"Spelling mistake detected"}, chromevox_aria_invalid_spelling_brl:{message:"misspelled"}, chromevox_aria_multiline_true:{message:"Multi line"}, chromevox_aria_multiline_true_brl:{message:"mult ln"}, 
chromevox_aria_multiselectable_true:{message:"Multi select"}, chromevox_aria_multiselectable_true_brl:{message:"mult sel"}, chromevox_aria_pressed_true:{message:"Pressed"}, chromevox_aria_pressed_true_brl:{message:"x"}, chromevox_aria_pressed_false:{message:"Not pressed"}, chromevox_aria_pressed_false_brl:{message:" "}, chromevox_aria_pressed_mixed:{message:"Partially pressed"}, chromevox_aria_pressed_mixed_brl:{message:"/x"}, chromevox_aria_readonly_true:{message:"Read only"}, chromevox_aria_readonly_true_brl:{message:"rdonly"}, 
chromevox_aria_required_true:{message:"Required"}, chromevox_aria_required_true_brl:{message:"req"}, chromevox_aria_selected_true:{message:"Selected"}, chromevox_aria_selected_true_brl:{message:"x"}, chromevox_aria_selected_false:{message:"Not selected"}, chromevox_aria_selected_false_brl:{message:" "}, chromevox_tag_link:{message:"Link"}, chromevox_tag_link_brl:{message:"lnk"}, chromevox_tag_button:{message:"Button"}, chromevox_tag_button_brl:{message:"btn"}, chromevox_tag_h1:{message:"Heading 1"}, 
chromevox_tag_h1_brl:{message:"h1"}, chromevox_tag_h2:{message:"Heading 2"}, chromevox_tag_h2_brl:{message:"h2"}, chromevox_tag_h3:{message:"Heading 3"}, chromevox_tag_h3_brl:{message:"h3"}, chromevox_tag_h4:{message:"Heading 4"}, chromevox_tag_h4_brl:{message:"h4"}, chromevox_tag_h5:{message:"Heading 5"}, chromevox_tag_h5_brl:{message:"h5"}, chromevox_tag_h6:{message:"Heading 6"}, chromevox_tag_h6_brl:{message:"h6"}, chromevox_tag_li:{message:"List item"}, chromevox_tag_li_brl:{message:"lstitm"}, 
chromevox_tag_ol:{message:"Ordered List"}, chromevox_tag_ol_brl:{message:"lst"}, chromevox_tag_select:{message:"Combo box"}, chromevox_tag_select_brl:{message:"cbx"}, chromevox_tag_textarea:{message:"Text area"}, chromevox_tag_textarea_brl:{message:"txta"}, chromevox_tag_table:{message:"table"}, chromevox_tag_table_brl:{message:"tbl"}, chromevox_tag_ul:{message:"List"}, chromevox_tag_ul_brl:{message:"lst"}, chromevox_tag_section:{message:"Section"}, chromevox_tag_section_brl:{message:"stn"}, chromevox_tag_nav:{message:"Navigation"}, 
chromevox_tag_nav_brl:{message:"nav"}, chromevox_tag_article:{message:"Article"}, chromevox_tag_article_brl:{message:"article"}, chromevox_tag_aside:{message:"Aside"}, chromevox_tag_aside_brl:{message:"aside"}, chromevox_tag_hgroup:{message:"Heading group"}, chromevox_tag_hgroup_brl:{message:"hgrp"}, chromevox_tag_header:{message:"Header"}, chromevox_tag_header_brl:{message:"hdr"}, chromevox_tag_footer:{message:"Footer"}, chromevox_tag_footer_brl:{message:"ftr"}, chromevox_tag_time:{message:"Time"}, 
chromevox_tag_time_brl:{message:" "}, chromevox_tag_mark:{message:"Mark"}, chromevox_tag_mark_brl:{message:"mark"}, chromevox_tag_video:{message:"Video"}, chromevox_tag_video_brl:{message:"video"}, chromevox_tag_audio:{message:"Audio"}, chromevox_tag_audio_brl:{message:"audio"}, chromevox_input_type_button:{message:"Button"}, chromevox_input_type_button_brl:{message:"btn"}, chromevox_input_type_checkbox:{message:"Check box"}, chromevox_input_type_checkbox_brl:{message:"chx"}, chromevox_input_type_color:{message:"Color picker"}, 
chromevox_input_type_color_brl:{message:"color picker"}, chromevox_input_type_datetime:{message:"Date time control"}, chromevox_input_type_datetime_brl:{message:"date time"}, chromevox_input_type_datetime_local:{message:"Date time control"}, chromevox_input_type_datetime_local_brl:{message:"date time"}, chromevox_input_type_date:{message:"Date control"}, chromevox_input_type_date_brl:{message:"date"}, chromevox_input_type_email:{message:"Edit text, email entry"}, chromevox_input_type_email_brl:{message:"edtxt email"}, 
chromevox_input_type_file:{message:"File selection"}, chromevox_input_type_file_brl:{message:"file"}, chromevox_input_type_image:{message:"Button"}, chromevox_input_type_image_brl:{message:"btn"}, chromevox_input_type_month:{message:"Month control"}, chromevox_input_type_month_brl:{message:"month"}, chromevox_input_type_number:{message:"Edit text numeric only"}, chromevox_input_type_number_brl:{message:"edtxt#"}, chromevox_input_type_password:{message:"Password edit text"}, chromevox_input_type_password_brl:{message:"pwd edtxt"}, 
chromevox_input_type_radio:{message:"Radio button"}, chromevox_input_type_radio_brl:{message:"rd btn"}, chromevox_input_type_range:{message:"Slider"}, chromevox_input_type_range_brl:{message:"slr"}, chromevox_input_type_reset:{message:"Reset"}, chromevox_input_type_reset_brl:{message:"reset"}, chromevox_input_type_search:{message:"Edit text, search entry"}, chromevox_input_type_search_brl:{message:"search edtxt"}, chromevox_input_type_submit:{message:"Button"}, chromevox_input_type_submit_brl:{message:"btn"}, 
chromevox_input_type_tel:{message:"Edit text, number entry"}, chromevox_input_type_tel_brl:{message:"tele# edtxt"}, chromevox_input_type_text:{message:"Edit text"}, chromevox_input_type_text_brl:{message:"edtxt"}, chromevox_input_type_url:{message:"Edit text, URL entry"}, chromevox_input_type_url_brl:{message:"url edtxt"}, chromevox_input_type_week:{message:"Week of the year control"}, chromevox_input_type_week_brl:{message:"week"}, chromevox_internal_link:{message:"Internal link"}, chromevox_internal_link_brl:{message:"int lnk"}, 
chromevox_text_box_blank:{message:"Blank"}, chromevox_text_box_whitespace:{message:"Space"}, chromevox_list_with_items:{message:"with $1 items", placeholders:{1:{content:"$1"}}}, chromevox_list_with_items_brl:{message:"+$1", placeholders:{1:{content:"$1"}}}, chromevox_state_percent:{message:"$1%", placeholders:{1:{content:"$1"}}}, chromevox_state_percent_brl:{message:"$1%", placeholders:{1:{content:"$1"}}}, chromevox_has_submenu:{message:"with submenu"}, chromevox_has_submenu_brl:{message:"+submnu"}, 
chromevox_has_popup:{message:"has popup"}, chromevox_has_popup_brl:{message:"has popup"}, chromevox_collection:{message:"$1 collection with $2 items", placeholders:{1:{content:"$1"}, 2:{content:"$2"}}}, chromevox_enter_key:{message:"Enter"}, chromevox_space_key:{message:"Space"}, chromevox_backspace_key:{message:"Backspace"}, chromevox_tab_key:{message:"Tab"}, chromevox_left_key:{message:"Left"}, chromevox_up_key:{message:"Up"}, chromevox_right_key:{message:"Right"}, chromevox_down_key:{message:"Down"}, 
chromevox_unknown_link:{message:"Unknown link"}, chromevox_toggle_chromevox_active:{message:"Toggle ChromeVox active or inactive."}, chromevox_chromevox_inactive:{message:"ChromeVox is now inactive."}, chromevox_pause:{message:", "}, chromevox_end:{message:". "}, chromevox_previous_different_element:{message:"Previous different element."}, chromevox_next_different_element:{message:"Next different element."}, chromevox_previous_similar_element:{message:"Previous similar element."}, chromevox_next_similar_element:{message:"Next similar element."}, 
chromevox_no_more_similar_elements:{message:"No more similar elements."}, chromevox_no_more_different_elements:{message:"No more different elements."}, chromevox_index_total:{message:"$1 of $2", placeholders:{1:{content:"$1"}, 2:{content:"$2"}}}, chromevox_enter_css_space:{message:"Enter group exploration"}, chromevox_enter_group_exploration:{message:"Exploring groups"}, chromevox_pdf_header:{message:'This page contains the text automatically extracted from the PDF file <b>$1</b>. <a href="$2">Click here for the original.</a>', 
placeholders:{1:{content:"$1"}, 2:{content:"$2"}}}, chromevox_object_strategy:{message:"Object"}, chromevox_group_strategy:{message:"Group"}, chromevox_table_strategy:{message:"Table"}, chromevox_row_granularity:{message:"Row"}, chromevox_column_granularity:{message:"Column"}, chromevox_mathml_tree_granularity:{message:"Math ML Tree"}, chromevox_mathml_layout_granularity:{message:"Math ML Layout"}, chromevox_mathml_token_granularity:{message:"Math ML Token"}, chromevox_mathml_leaf_granularity:{message:"Math ML Leaf"}, 
chromevox_visual_strategy:{message:"Visual"}, chromevox_custom_strategy:{message:"Custom"}, chromevox_line_granularity:{message:"Line"}, chromevox_sentence_granularity:{message:"Sentence"}, chromevox_word_granularity:{message:"Word"}, chromevox_character_granularity:{message:"Character"}, chromevox_search_widget_intro:{message:"Find in page."}, chromevox_search_widget_intro_help:{message:"Enter a search query."}, chromevox_search_widget_outro:{message:"Exited find in page."}, chromevox_search_widget_no_results:{message:"No more results."}, 
chromevox_modifier_keys:{message:"Modifier Keys"}, chromevox_navigation:{message:"ChromeVox Navigation"}, chromevox_information:{message:"Information"}, chromevox_help_commands:{message:"Help Commands"}, chromevox_controlling_speech:{message:"Controlling Speech"}, chromevox_overview:{message:"Overview"}, chromevox_tables:{message:"Tables"}, chromevox_jump_commands:{message:"Jump Commands"}, chromevox_braille:{message:"Braille"}, chromevox_developer:{message:"Developer"}, chromevox_keymap_classic:{message:"Classic keymap"}, 
chromevox_keymap_flat:{message:"Flat keymap"}, chromevox_keymap_experimental:{message:"Experimental keymap"}, chromevox_enable_tts_log:{message:"Enable TTS logging"}, chromevox_begin_selection:{message:"Start selection"}, chromevox_end_selection:{message:"End selection"}, chromevox_selection_is:{message:"Selection is "}, chromevox_toggle_selection:{message:"Start or end selection."}, chromevox_copy:{message:"copy."}, chromevox_cut:{message:"cut."}, chromevox_paste:{message:"paste."}, chromevox_selected:{message:"selected"}, 
chromevox_unselected:{message:"unselected"}, chromevox_added_to_selection:{message:"added to selection"}, chromevox_removed_from_selection:{message:"removed from selection"}, chromevox_then:{message:"then"}, chromevox_followed_by:{message:"followed by"}, chromevox_modifier_key:{message:"ChromeVox modifier"}, chromevox_key_conflict:{message:"$1 is already assigned to a command.", placeholders:{1:{content:"$1"}}}, chromevox_math_expr:{message:"Math"}, chromevox_math_expr_brl:{message:"Math"}, chromevox_not_inside_math:{message:"Not inside math"}, 
chromevox_timewidget_ampm:{message:"AM PM"}, chromevox_timewidget_hours:{message:"hours"}, chromevox_timewidget_minutes:{message:"minutes"}, chromevox_timewidget_seconds:{message:"seconds"}, chromevox_timewidget_milliseconds:{message:"milliseconds"}, chromevox_timewidget_am:{message:"AM"}, chromevox_timewidget_pm:{message:"PM"}, chromevox_datewidget_week:{message:"week"}, chromevox_datewidget_january:{message:"January"}, chromevox_datewidget_february:{message:"February"}, chromevox_datewidget_march:{message:"March"}, 
chromevox_datewidget_april:{message:"April"}, chromevox_datewidget_may:{message:"May"}, chromevox_datewidget_june:{message:"June"}, chromevox_datewidget_july:{message:"July"}, chromevox_datewidget_august:{message:"August"}, chromevox_datewidget_september:{message:"September"}, chromevox_datewidget_october:{message:"October"}, chromevox_datewidget_november:{message:"November"}, chromevox_datewidget_december:{message:"December"}, chromevox_no_punctuation:{message:"No punctuation"}, chromevox_some_punctuation:{message:"Some punctuation"}, 
chromevox_all_punctuation:{message:"All punctuation"}, chromevox_search_help_item:{message:"Press enter to accept or escape to cancel, down for next and up for previous."}, chromevox_clickable:{message:"clickable"}, chromevox_clickable_brl:{message:"clickable"}, chromevox_previous_character:{message:"Previous Character"}, chromevox_next_character:{message:"Next Character"}, chromevox_previous_word:{message:"Previous Word"}, chromevox_next_word:{message:"Next Word"}, chromevox_previous_sentence:{message:"Previous Sentence"}, 
chromevox_next_sentence:{message:"Next Sentence"}, chromevox_previous_line:{message:"Previous Line"}, chromevox_next_line:{message:"Next Line"}, chromevox_previous_object:{message:"Previous Object"}, chromevox_next_object:{message:"Next Object"}, chromevox_previous_group:{message:"Previous Group"}, chromevox_next_group:{message:"Next Group"}, chromevox_role_landmark:{message:"Landmark"}, chromevox_modifier_entry_error:{message:"No modifier pressed; please press and hold one or more modifiers; lift your fingers once done and you will hear the keys set. Tab to exit."}, 
chromevox_modifier_entry_set:{message:"$1 is now the new ChromeVox modifier.", placeholders:{1:{content:"$1"}}}, chromevox_keymap_reset:{message:"$1 has been reset.", placeholders:{1:{content:"$1"}}}, chromevox_keymap_switch:{message:"Switched to $1.", placeholders:{1:{content:"$1"}}}, chromevox_jump_to_top:{message:"Jump to the top of the page"}, chromevox_jump_to_bottom:{message:"Jump to the bottom of the page"}, chromevox_wrapped_to_top:{message:"Wrapped to top"}, chromevox_wrapped_to_bottom:{message:"Wrapped to bottom"}, 
chromevox_cycle_punctuation_echo:{message:"Cycle punctuation echo"}, chromevox_cycle_typing_echo:{message:"Cycle typing echo"}, chromevox_pause_all_media:{message:"Pauses all currently playing media widgets"}, chromevox_open_long_desc:{message:"Open long description in a new tab"}, chromevox_no_long_desc:{message:"No long description"}, chromevox_image_with_long_desc:{message:"Image with long description"}, chromevox_selected_options_value:{message:"$1 to $2", placeholders:{1:{content:"$1"}, 2:{content:"$2"}}}, 
chromevox_selected_options_value_brl:{message:"$1-$2", placeholders:{1:{content:"$1"}, 2:{content:"$2"}}}, chromevox_selected_options_state:{message:"selected $1 items", placeholders:{1:{content:"$1"}}}, chromevox_selected_options_state_brl:{message:"sld $1", placeholders:{1:{content:"$1"}}}, chromevox_clear_page_selection:{message:"cleared selection"}, chromevox_character_echo:{message:"character echo"}, chromevox_word_echo:{message:"word echo"}, chromevox_character_and_word_echo:{message:"character and word echo"}, 
chromevox_none_echo:{message:"no typing echo"}, chromevox_enter_content:{message:"enter structured content, such as tables"}, chromevox_exit_content:{message:"exit structured content, such as tables"}, chromevox_enter_content_say:{message:"entered $1", placeholders:{1:{content:"$1"}}}, chromevox_structural_line:{message:"structural line"}, chromevox_layout_line:{message:"line"}, chromevox_toggle_line_type:{message:"Toggle line type between structural or layout"}, chromevox_table_shifter:{message:"table"}, 
chromevox_navigation_shifter:{message:"default navigation"}, chromevox_math_shifter:{message:"math"}, chromevox_toggle_semantics:{message:"Toggle interpretation of math expressions between structural and semantic"}, chromevox_semantics_on:{message:"Semantics on"}, chromevox_semantics_off:{message:"Semantics off"}, chromevox_phonetic_map:{message:'{"a": "alpha", "b": "bravo", "c": "charlie", "d": "delta", "e": "echo", "f": "foxtrot", "g": "golf", "h": "hotel", "i": "india", "j": "juliet","k": "kilo", "l": "lima", "m": "mike", "n": "november", "o": "oscar","p": "papa", "q": "quebec", "r": "romeo", "s": "sierra", "t": "tango", "u": "uniform", "v": "victor", "w": "whiskey","x": "xray", "y": "yankee", "z": "zulu"}'}, 
chromevox_page_has_one_alert_singular:{message:"This page has 1 alert"}, chromevox_page_has_alerts_plural:{message:"This page has $1 alerts", placeholders:{1:{content:"$1"}}}, chromevox_review_alerts:{message:"Press Alt+Shift+A to review alerts"}, chromevox_no_next_article:{message:"No next article."}, chromevox_no_previous_article:{message:"No previous article."}, chromevox_chromevox_intro:{message:"ChromeVox spoken feedback is ready"}, chromevox_intro_brl:{message:"ChromeVox ready"}, chromevox_earcons_on:{message:"Earcons on"}, 
chromevox_earcons_off:{message:"Earcons off"}, chromevox_toggle_earcons:{message:"Turn sound feedback (earcons) on or off."}, chromevox_speak_time_and_date:{message:"Speak the current time and date."}, chromevox_mark_as_search_result_brl:{message:"S:$1", placeholders:{1:{content:"$1"}}}, chromevox_text_deleted:{message:"Deleted"}, chromevox_perform_default_action:{message:"Perform default action"}, chromevox_visited_url:{message:"visited"}, chromevox_visited_url_brl:{message:"visited"}, chromevox_exclamation:{message:"{COUNT, plural, =1 {exclamation point}other {# exclamation points}}"}, 
chromevox_space:{message:"{COUNT, plural, =1 {space}other {# spaces}}"}, chromevox_backtick:{message:"{COUNT, plural, =1 {backtick}other {# backticks}}"}, chromevox_tilde:{message:"{COUNT, plural, =1 {TILDE}other {# tildes}}"}, chromevox_at:{message:"{COUNT, plural, =1 {at}other {# at signs}}"}, chromevox_pound:{message:"{COUNT, plural, =1 {pound}other {# pound signs}}"}, chromevox_dollar:{message:"{COUNT, plural, =1 {dollar}other {# dollar signs}}"}, chromevox_percent:{message:"{COUNT, plural, =1 {percent}other {# percent signs}}"}, 
chromevox_caret:{message:"{COUNT, plural, =1 {caret}other {# carets}}"}, chromevox_ampersand:{message:"{COUNT, plural, =1 {ampersand}other {# ampersands}}"}, chromevox_asterisk:{message:"{COUNT, plural, =1 {asterisk}other {# asterisks}}"}, chromevox_open_paren:{message:"{COUNT, plural, =1 {open paren}other {# open parens}}"}, chromevox_close_paren:{message:"{COUNT, plural, =1 {close paren}other {# close parens}}"}, chromevox_dash:{message:"{COUNT, plural, =1 {dash}other {# dashes}}"}, chromevox_underscore:{message:"{COUNT, plural, =1 {underscore}other {# underscores}}"}, 
chromevox_equals:{message:"{COUNT, plural, =1 {equal}other {# equal signs}}"}, chromevox_plus:{message:"{COUNT, plural, =1 {plus}other {# plus signs}}"}, chromevox_left_bracket:{message:"{COUNT, plural, =1 {left bracket}other {# left brackets}}"}, chromevox_right_bracket:{message:"{COUNT, plural, =1 {right bracket}other {# right brackets}}"}, chromevox_left_brace:{message:"{COUNT, plural, =1 {left brace}other {# left braces}}"}, chromevox_right_brace:{message:"{COUNT, plural, =1 {right brace}other {# right braces}}"}, 
chromevox_pipe:{message:"{COUNT, plural, =1 {pipe}other {# vertical pipes}}"}, chromevox_semicolon:{message:"{COUNT, plural, =1 {semicolon}other {# semicolons}}"}, chromevox_colon:{message:"{COUNT, plural, =1 {colon}other {# colons}}"}, chromevox_comma:{message:"{COUNT, plural, =1 {comma}other {# commas}}"}, chromevox_dot:{message:"{COUNT, plural, =1 {dot}=3 {ellipsis}other {# dots}}"}, chromevox_less_than:{message:"{COUNT, plural, =1 {less than}other {# less than signs}}"}, chromevox_greater_than:{message:"{COUNT, plural, =1 {greater than}other {# greater than signs}}"}, 
chromevox_slash:{message:"{COUNT, plural, =1 {slash}other {# slashes}}"}, chromevox_question_mark:{message:"{COUNT, plural, =1 {question mark}other {# question marks}}"}, chromevox_quote:{message:"{COUNT, plural, =1 {quote}other {# quotes}}"}, chromevox_apostrophe:{message:"{COUNT, plural, =1 {apostrophe}other {# apostrophes}}"}, chromevox_tab:{message:"{COUNT, plural, =1 {tab}other {# tabs}}"}, chromevox_backslash:{message:"{COUNT, plural, =1 {backslash}other {# backslashes}}"}, chromevox_braille_routing:{message:"Click the item under a routing key"}, 
chromevox_braille_pan_left:{message:"Pan backward"}, chromevox_braille_pan_right:{message:"Pan forward"}, chromevox_braille_line_up:{message:"Braille previous Line"}, chromevox_braille_line_down:{message:"Braille next Line"}, chromevox_braille_top:{message:"Move braille display to top of page"}, chromevox_braille_bottom:{message:"Move braille display to bottom of page"}, chromevox_access_key:{message:"has access key, $1", placeholders:{1:{content:"$1"}}}, chromevox_access_key_brl:{message:"access key:$1", 
placeholders:{1:{content:"$1"}}}, chromevox_locale_dict:{message:'{"ar": "Arabic","bg": "Bulgarian","ca": "Catalan","hr": "Croatian","cs": "Czech","da": "Danish","nl": "Dutch","en_CA": "English (Canada)","en_GB": "English (United Kingdom)","en_US": "English (United States)","et": "Estonian","fr": "French","fr_CA": "French (Canada)","fr_FR": "French (France)","fi": "Finnish","de": "German","de_CH": "German (Switzerland)","de_DE": "German (Germany)","el": "Greek","hi": "Hindi","hu": "Hungarian","is": "Icelandic","it": "Italian","lv": "Latvian","lt": "Lithuanian","nb": "Norwegian Bokm\u00e5l","pl": "Polish","pt": "Portuguese","ro": "Romanian","ru": "Russian","sr": "Serbian","sk": "Slovak","sl": "Slovenian","es": "Spanish","sv": "Swedish","tr": "Turkish","vi": "Vietnamese","zh": "Chinese","zh_TW": "Chinese (Traditional Han)"}'}, 
chromevox_end_of_text_verbose:{message:"End of text"}, chromevox_end_of_text_brief:{message:"End"}, chromevox_new_line:{message:"new line"}, chromevox_return:{message:"return"}, chromevox_pass_through_key:{message:"Ignoring next key press"}, chromevox_pass_through_key_description:{message:"Pass through key"}, chromevox_braille_captions:{message:"Toggle braille captions"}, chromevox_braille_captions_enabled:{message:"Braille captions enabled."}, chromevox_braille_captions_disabled:{message:"Braille captions disabled."}};
cvox.TestMsgs = function() {
};
goog.inherits(cvox.TestMsgs, cvox.AbstractMsgs);
cvox.TestMsgs.prototype.getMsg = function(message_id, opt_subs) {
  if (!message_id) {
    var e = Error();
    e.message = "Message id required";
    return "";
  }
  var message = cvox.TestMessages["chromevox_" + message_id];
  if (void 0 == message) {
    var e = Error();
    e.message = "missing-msg: " + message_id;
    return "";
  }
  var messageString = message.message;
  if (opt_subs) {
    for (var i = 0;i < opt_subs.length;i++) {
      var placeholderObject = message.placeholders[i + 1];
      if (!placeholderObject) {
        var e = Error();
        e.message = "Bad placeholder " + i + " for message id " + message_id;
        return "";
      }
      var placeholder = message.placeholders[i + 1].content, messageString = messageString.replace(placeholder, opt_subs[i]);
    }
  }
  return messageString;
};
cvox.TestMsgs.prototype.getNumber = function(num) {
  return "" + num;
};
cvox.HostFactory.msgsConstructor = cvox.TestMsgs;
cvox.ChromeVox.initDocument();

